{
    "1":{
        "ID":43815,
        "MESSAGE_ID":"CAL7CpJx7sSVZR+idVmdv03kH+tc_Sj3L1awgDGX5DOD31L=+fw@mail.gmail.com",
        "PARENT_ID":43810.0,
        "SUBJECT":"Re: HADOOP-18198. Release Hadoop 3.3.3: hadoop-3.3.2 with CVE fixes",
        "SENT_FROM":"Steve Loughran <stevel@cloudera.com.INVALID>",
        "TAGS":"existence, technology",
        "BODY":"add cf question minor unless running hadoop window given compile native binary something know anyone actually production reloadj fix mean get classpath logj vulnerability never reached hadoop code audit tool would flag would also like update shaded protobuf library"
    },
    "5":{
        "ID":43810,
        "MESSAGE_ID":"CAL7CpJydXGTxkgzV9fSw7Qa-F=c2HR2yQgXpacs_iJa7MirKJQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"HADOOP-18198. Release Hadoop 3.3.3: hadoop-3.3.2 with CVE fixes",
        "SENT_FROM":"Steve Loughran <stevel@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"created new jira assigned hadoop release hadoop hadoop cve fix url hadoop minor followup release hadoop cve fix hadoop source cve fix dependency replacement logj reloadj change shipped hadoop consistency release branch fork change next release branch numbered hadoop updating maven version jira fix version part release process get fix fast avoid regression putting anything else fix shipped non cve related fix consult process url try arm binary going make commitment laptop arm cpu fact cutting release involves actually building different machine previous laptop work remote server usual help testing would wonderful would like start planning feature release think nominate release engineer help colleague especially mehakmeet mukund steve"
    },
    "16":{
        "ID":43799,
        "MESSAGE_ID":"pony-6a4cce44-bfc8-49f0-a60b-eb3b8cd1bb09-dev@cassandra.apache.org",
        "PARENT_ID":43796.0,
        "SUBJECT":"Re: Performance Engineering Track at ApacheCon NA?",
        "SENT_FROM":"Sharan Foga <sharan@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi dinesh thanks volunteering help review submission performance engineering track one thing currently asking track reviewer planning make submission track reviewing ok please let know contact getting setup thanks sharan"
    },
    "19":{
        "ID":43796,
        "MESSAGE_ID":"4B6A40E7-D893-4FE4-8D71-DCD1CD77CBA7@apache.org",
        "PARENT_ID":43791.0,
        "SUBJECT":"Re: Performance Engineering Track at ApacheCon NA?",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"great hear would also available help review submission"
    },
    "20":{
        "ID":43795,
        "MESSAGE_ID":"CAB=riaDRyR4jcFe2MEbWyb1z6+P1-R9ms4mGwAyMunN07s-LgA@mail.gmail.com",
        "PARENT_ID":43793.0,
        "SUBJECT":"Re: JMX exposing non-standard java classes, to fix requires a breaking change",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"property",
        "BODY":"noticed databasedescriptor setter leaking jmx since cassandra sure whether change illegalargumentexception also thrown startup configurationexceptions beforemy concern maintenance fix break feel need general solution open input looking nodetool two error code catch java airlift exception error guess aim throw exception lead exit code sure good point nodetool also client jmx fully know api whatever solution need careful nodetool assumption looking classpath execute look like error jmx related nodetool related airlift cli parser used nodetool illegalargumentexception illegalstateexception could caused jmx call runtimeexception thrown cassandra would result status many setter actually check startup consider bug agree bypass guard via jmx sound like bug"
    },
    "22":{
        "ID":43793,
        "MESSAGE_ID":"CAN+t3-gOPXx0qWwPavbP=gYJVvgnbrcQ33vYj5rj7-goSEMOgA@mail.gmail.com",
        "PARENT_ID":43782.0,
        "SUBJECT":"Re: JMX exposing non-standard java classes, to fix requires a breaking change",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"would say keep old one add new one compatible addition catch led thinking think throwing configurationexception deserves attention noticed databasedescriptor setter leaking jmx since cassandra sure whether change illegalargumentexception also thrown startup configurationexceptions sure right course action fix thing without considered breaking change see different people different thing codebase looking nodetool two error code catch java airlift exception error guess aim throw exception lead exit code sure getcolumnindexsize added trunk see throw configurationexception acknowledged test considering setter always guess normal addition seems actually bug change throw illegalargumentexception looking code think different people probably different understanding want align ensure break tool fixing stuff many setter actually check startup consider bug"
    },
    "23":{
        "ID":43792,
        "MESSAGE_ID":"CAGGeVA_5nYNjrPJCQtsrd9f3o=DtHu1GxAUGCt_eDGdXh-VRcQ@mail.gmail.com",
        "PARENT_ID":43790.0,
        "SUBJECT":"Re: Podcast Interviews for Feathercast",
        "SENT_FROM":"Aaron Ploetz <aaronploetz@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sharan fwiw patrick also working putting together cassandra podcast near future perhaps could work together drop message aaron ploetz datastax com happy set time discus thanks aaron"
    },
    "24":{
        "ID":43791,
        "MESSAGE_ID":"pony-4cee3d99-c990-4ec0-af47-85107d90b3ae-dev@cassandra.apache.org",
        "PARENT_ID":43627.0,
        "SUBJECT":"Re: Performance Engineering Track at ApacheCon NA?",
        "SENT_FROM":"Sharan Foga <sharan@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi paulo great news performance engineering track accepted looking encourage promote cfp submission also looking reviewer help rate submission still interested thanks sharan"
    },
    "25":{
        "ID":43790,
        "MESSAGE_ID":"pony-30e0d1eb-4cf1-441f-b23c-fb1bfe6f981e-dev@cassandra.apache.org",
        "PARENT_ID":43750.0,
        "SUBJECT":"Re: Podcast Interviews for Feathercast",
        "SENT_FROM":"Sharan Foga <sharan@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi quick update working someone potential first cassandra related podcast looking question interview format etc see could work thanks sharan"
    },
    "32":{
        "ID":43783,
        "MESSAGE_ID":"CAN+t3-j2ByQs4-3dQYWBX43LyGRw8T=RceL3Ha9+H0dt1CWn=g@mail.gmail.com",
        "PARENT_ID":43781.0,
        "SUBJECT":"Re: PLEASE READ ME! IMPORTANT!",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank stefan remember touched worked mentioned parameter elaborated comment sure mean parameter affected duration data rate data storage post new parameter migrated new type prohibit negative etc matter use old new yaml new release probably since beginning cassandra"
    },
    "33":{
        "ID":43782,
        "MESSAGE_ID":"CAB=riaAmuEkuLGcPWxcxozdg7LyEwmaD1y25AG5=DMTAgSXjPw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"JMX exposing non-standard java classes, to fix requires a breaking change",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"place expose non standard java class jmx work jmx client also cassandra jar else fail example classpath enableauditlog throw classpath removing exception break binary compatibility break source javac say catching allowed throw call method without cassandra jar method work properly configurationexception thrown case classnotfoundexception thrown hiding error message classpath forcecompactionfortokenrange take collection classpath since operation people could call jar path given property require setting value jmx get object break impact limited caller method option address live allow case keep block new case popping live expose new version break jmx remove configurationexception storageservicembean enableauditlog accept source compatibility issue remove fix columnfamilystorembean forcecompactionfortokenrange others think cassandra adding test detect case block also fixing jmx issue trunk released thread limited case actually released thanks"
    },
    "34":{
        "ID":43781,
        "MESSAGE_ID":"CAPw+qV50=NQqX7bdCj8V2u84N88FoYRGGk34+qra8yqnObW+sQ@mail.gmail.com",
        "PARENT_ID":43780.0,
        "SUBJECT":"Re: PLEASE READ ME! IMPORTANT!",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"checked ekaterina ok asked take look remember touched worked mentioned parameter elaborated comment"
    },
    "35":{
        "ID":43780,
        "MESSAGE_ID":"CAN+t3-gj9AbOhed77POyCh-mdBW-goauehArs2W0_7nJEE2Z0Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"PLEASE READ ME! IMPORTANT!",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"attention please email long believe agree deserves attention good reason thank advance time consideration hi everyone working last batch config parameter transferred new type cassandra landed led question concern raise awareness one time confirm thing community ensure regression main decision taken implemented two year ago even beta would like ensure everyone aware cassandra backward compatibility transfer old format value opportunity change unit new format value unit fall back new type end feature flag disabled migrated parameter new type config class cassandra yaml also explicitly say support negative value old new yaml config case never advertised usage negative value also prohibit one improvement cassandra add explicit note news txt sure one expecting keep using negative value old yaml unknown reason old new prohibit trunk negative value except special case part documentation mentioned converter class serf conversion old value new value load old value new config type special case want highlight case someone know behavior caught ci might changed broken change better safe sorry new type dataratespec durationspec dataratespec accept non negative value affect old new config thus part converter following special case millis double duration commitlog sync group window already commitlog sync group window cover double even think bug casted later int someone might using double nan disallow le already said type new config type parameter stored long millis custom duration permission update interval role update interval credential update interval cassandra updated old value translated null setter anything prohibited considered bug old new config adding negative second duration part handle validation preview purge head start anyone using old yaml value translated second new yaml format prohibits value le smallest unit parameter second byte custom data storage translates null prohibits anything le old yaml le new one native transport max concurrent request byte per ip native transport max concurrent request byte also separate mail two concern version also decided leave parameter phi convict threshold memtable cleanup threshold block peer timeout sec alone migrate new config type various reason explained ticket please let know particular suggestion concern thought around dataratespec requested support mebibyte kibibyte byte made thing complicated internally two parameter introduced megabit keep old behavior able still support megabit old format conversion megabit mebibyte really whole number store dataratespec double long type order ensure accurate precision etc considered fine ratelimiter us double still allow whole number provided user please let know see problem quick unit test validate work setgetinterdcstreamthroughputtest important mention people move new format assign anything le mib regarding dataratespec two new parameter entire sstable stream throughput outbound megabit per sec entire sstable inter dc stream throughput outbound megabit per sec still release changed mib checked francisoco slack fine would also like ask stefan paulo check agree anything latest version durationspec introduced initial version duration codebase evolved durationspec please let know anything else aside test introduced might missing change intention already sent message slack case miss email also discussed ticket wanted add consideration virtual table currently show old name format new name format three parameter change type name listed new format value considered enough reason bump breaking change wanted one time everyone aware agreement addition add one note news txt people raise awareness check carefully config upgrade breaking change already mention new option backward compatibility think hurt stress part prohibit negative value considering bug special case around convert please check matching pattern use accept config value durationspec dataratespec datastoragespec let know think special case missed anything one topic want mention change public class name change jmx work seen change even patch release know give promise change interface still want mention ensure aligned said config change type parameter use annotation mentioned converter backward compatibility yaml file new jmx method added old one still work converting base unit specific parameter base mean internally used one agreement future virtual table handle new format add update option settingstable order run precision issue introduced smallest possible unit certain parameter type duration datastorage changed decide migrate time smallest possible unit internally also adding int equivalent improve former int parameter handling find parameter suffix mb kb internally mean kibi mebi kilo mega default value new format detail please refer write doc shared url important note ticket around parameter overloading turned undocumented behavior project people use last least want remind new parameter added new type user set new format whoever want use old yaml want update default value new parameter new format email came rather long truly believe important want ask parameter think might affected double check raise flag sure worried something done done url ekaterina dimitrova"
    },
    "37":{
        "ID":43778,
        "MESSAGE_ID":"50dd8491-0fc0-49d5-8f6e-ed5a954c1112@www.fastmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2022-04-05",
        "SENT_FROM":"\"Josh McKenzie\" <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"day late thankfully nothing earth shattering happened yesterday missed newsletter coming today new contributor getting started welcome cassandra couple good place new contributor get started failing test also starter ticket label lhf low hanging fruit either category great place get started learning codebase project specific process general open source apache way couple query reference two category unassigned failing test currently unassigned url unassigned starter ticket unassigned url swim lane latest stable ga release swim lane cover upcoming release freezing may dev list conversation url looking volunteer taking build lead role url mick pointed another email thread yet achieved goal green asf infra ci trunk build lead role instrumental mapping current ci situation helping build maintain momentum cleaning ci however seems like load change going trunk accelerated well increased effort cleaning ci see build lead confluence wiki detail role url need committer pmc member help look like agree fork freeze branch may url reminder agreed block release green ci today trunk mean test failure need clean releasing url conversation going oldest version python support cqlsh script url different platform supporting different version interpreter perspective quite welcome erick reached morning set idea around guide ask good question url gdoc draft guide found url trend butler dashboard url week worth historical data front line dashboard trend ci failure trunk sum expect see number failure drop hit freeze early may clear yet point always releasable trunk mick brought bit freeze email chain think would valuable discus freeze burning test failure pursuit ga release progress url issue closed past week one big highlight cassandra fix regression timestamp formatting parsing another big one cassandra failed repair synctasks chain casting exception handling end causing fsreaderrors node situation larger impact bugfixes seen since released closed issue past two week cassandra added ability track repair state via virtual table nodetool verify guarded behind newly required force option cassandra talked year cassandra take care new regression introduced cassandra isolated unreleased trunk branch streaming session took longer minute message passed control channel minute would time terminate great see thing like caught release many thing list see link detail week go freeze let see keep trunk ci failure current snapshot failure lag branch release least ci perspective contained thanks hard work everyone josh"
    },
    "65":{
        "ID":43750,
        "MESSAGE_ID":"CACvH57KvWgKWXJCgwvfcCyFO-T+5eHseBVC4vEvFagxL7ehpWA@mail.gmail.com",
        "PARENT_ID":43681.0,
        "SUBJECT":"Re: Podcast Interviews for Feathercast",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"familiar feathercast asf podcast channel generally use help promote project looking list published content see interview cassandra year old anyone interested interviewed please let know set something awesome opportunity recommend committers take advantage chris melissa inside cassandra interview website offer contributor opportunity follow one podcasts"
    },
    "71":{
        "ID":43744,
        "MESSAGE_ID":"CAP+3qq6TZ4WR7y5pbVjwhw7jbEPoJthD-5GAq-uFR3ii5-HNRQ@mail.gmail.com",
        "PARENT_ID":43740.0,
        "SUBJECT":"Re: [E] [NOTICE] Attaching patches in JIRA issue no longer works",
        "SENT_FROM":"Akira Ajisaka <aajisaka@apache.org>",
        "TAGS":"process",
        "BODY":"hi eric jira issue contain useful information field leveraging development release process information two different place agreed ideal information one place pre commit job jira limitation url want maintain job anymore yes developer seem look jira issue read discussion thread sent notice mail really hadoop developer currently use github pr code review support consensus without vote thread background reduce workload maintaining precommit job improve process think needed vote anyway change way door decision okay revert change start discussion vote akira"
    },
    "75":{
        "ID":43740,
        "MESSAGE_ID":"CAAaVJWWQJ6XYQnxsny7CbFD9_UmNov5bmx12cbfcYA0S24_Yhg@mail.gmail.com",
        "PARENT_ID":43695.0,
        "SUBJECT":"Re: [E] [NOTICE] Attaching patches in JIRA issue no longer works",
        "SENT_FROM":"Eric Badger <ebadger@yahooinc.com.INVALID>",
        "TAGS":"process",
        "BODY":"think deserves attention question jira github issue little concerned completely changed way post code change without vote thread even discussion thread clear outcome previous thread discus tip improving productivity workflow hadoop project many committers giving opinion matter never came conclusion sat traffic month way read previous thread committers proposing clean stale pr turn jira patch precommit build necessarily saying go patch github pr concerned decision made without community support consensus without vote thread sure necessary type change eric"
    },
    "79":{
        "ID":43736,
        "MESSAGE_ID":"07db740b-ff3c-0ee4-b82b-674ec020c816@gmail.com",
        "PARENT_ID":43735.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi thanks input idea reading correctly seems first step direction want also able extend easily unless sbdy object miss anything would like start working early next week regard"
    },
    "80":{
        "ID":43735,
        "MESSAGE_ID":"MA0PR01MB7753A89B2AE44177048C7B4BFEE19@MA0PR01MB7753.INDPRD01.PROD.OUTLOOK.COM",
        "PARENT_ID":43731.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"sathyanarayanan s <sathya.kplm@outlook.com>",
        "TAGS":"not-ak",
        "BODY":"hi extension man rule would like propose self evolving policy based approval mechanism policy defining following policy illustration purpose practical implementation implement complex policy super user add policy number approval required add another super user super user remove policy number approval required remove existing super user user role assignment policy number approval required add role assignment user user role removal policy number approval required remove role assignment user bootstrapping administrator boot cassandra defines set super user super user approval policy case development instance instance self managed one super user policy instance like following superusers policy superuseraddpolicy superuserremovepolicy userroleassignmentpolicy userroleremovelpolicy case production instance policy strong enough prevent ad hoc operation also good set super user aware change policy something similar following superusers policy superuseraddpolicy superuserremovepolicy userroleassignmentpolicy majority userroleremovelpolicy one policy mean following add another super user let say need approval existing super usersto remove existing super user let say need approval existing super user except oneto add role assignment user majority super user approveto remove role assignment user approval one super user good enough let assume user requires database reader role new role assignment proposed one super user let assume proposes new role assignment since proposes implicitly approves according policy need two approval reach majority two super user say approve user role assignment role assignment becomes effective show flexibility policy based approval flow evolvability let assume change policy need approval super user dev instance user super user need upgraded prod instance mean evolve policy prod instance initial policy like superusers policy superuseraddpolicy"
    },
    "84":{
        "ID":43731,
        "MESSAGE_ID":"9EC3C037-8331-4DE0-BD4D-C0877398DCA6@anzix.org",
        "PARENT_ID":43728.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Tibor R\u00e9p\u00e1si <tibor.repasi@anzix.org>",
        "TAGS":"not-ak",
        "BODY":"think idea worth discussion opened cassandra summarise idea man rule"
    },
    "86":{
        "ID":43729,
        "MESSAGE_ID":"d2a9bfa9-06d5-df96-77ed-9d4951eb8950@gmail.com",
        "PARENT_ID":43728.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi also think valuable idea iiuc think nothing incompatible also seems like sensible self contained first step improvement right direction regard"
    },
    "87":{
        "ID":43728,
        "MESSAGE_ID":"6E10F8E9-FCEF-4D21-8637-F4B57ECC9FA4@gmail.com",
        "PARENT_ID":43727.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"\"J. D. Jordan\" <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think interesting idea another new feature would one like write jira start new thread discus detail think would good keep thread simpler proposal cassandra unless implementing without new ability proposing requires grant idea seems orthogonal original ticket"
    },
    "88":{
        "ID":43727,
        "MESSAGE_ID":"CAPw+qV6KbVi4fV9FkVMRUBm+tcd445ErWKTjxCRWu1uttTD-tA@mail.gmail.com",
        "PARENT_ID":43726.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"way also opposite problem two guy two grant access one available went holiday might wise say three five admins grant access enough would implement"
    },
    "89":{
        "ID":43726,
        "MESSAGE_ID":"CAPw+qV713TW+-U09SCKA4pc-8p23EkAPo0MsXe6hrRd7VHLqdA@mail.gmail.com",
        "PARENT_ID":43725.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"guy instead two stop seems arbitrary number start remind shamir shared secret url"
    },
    "90":{
        "ID":43725,
        "MESSAGE_ID":"537A7213-C663-49E5-BE40-7AC87FDCCE35@anzix.org",
        "PARENT_ID":43724.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Tibor R\u00e9p\u00e1si <tibor.repasi@anzix.org>",
        "TAGS":"not-ak",
        "BODY":"two man rule could probably poor naming boolean option flexible enough let change integer option like grantor defaulting could higher defining number grantor needed role become active"
    },
    "91":{
        "ID":43724,
        "MESSAGE_ID":"B21E9AF2-E181-46C9-9706-8CB62FB9822B@anzix.org",
        "PARENT_ID":43721.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Tibor R\u00e9p\u00e1si <tibor.repasi@anzix.org>",
        "TAGS":"not-ak",
        "BODY":"two man rule place authorizing access highly sensitive data uncommon think something like superuser create keyspace patientdata create role patientdata access two man rule true grant select modify patientdata patientdata access create role security admin grant authorize patientdata access security admin grant security admin admin guy grant security admin admin guy admin guy grant patientdata access doctor house point doctor house access patientdata need admin guy grant patientdata access doctor house"
    },
    "92":{
        "ID":43723,
        "MESSAGE_ID":"5c7c418c-258e-1134-ad4a-fefb967bdd1d@gmail.com",
        "PARENT_ID":43722.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi thanks reply iiuc look ticket evil security admin would restrict keyspace would take precedence grant could self auth see data said yes enough people collude audit log still reflect"
    },
    "93":{
        "ID":43722,
        "MESSAGE_ID":"A9098C4E-CD50-4B11-9F1E-35DC9631C8A0@gmail.com",
        "PARENT_ID":43721.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"\"J. D. Jordan\" <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think important step authorization model brings parity many database restriction might make restriction le likely worked around place heard using audit logging user management statement prevent type restriction audit log user management show admin accessed data admin account ability even restrictive mode would nice future add jeremiah"
    },
    "94":{
        "ID":43721,
        "MESSAGE_ID":"CAAy+TbRX=v4R4UJ41viRkh8Nf3TbgfKyqJ0Ro4nv3Rh4ZSHWSQ@mail.gmail.com",
        "PARENT_ID":43720.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"would prevent security admin self authorizing valid point idea mechanism place prevent kind behavior course people might still able collaborate get access data single person able le mer mar tibor repasi tibor repasi anzix org ecrit like idea separation duty would security admin role select modify permission system auth would prevent security admin self authorizing would possible add sort two man rule"
    },
    "95":{
        "ID":43720,
        "MESSAGE_ID":"BD37E5FD-2CD1-469A-A55D-8CC3F1E79DE1@anzix.org",
        "PARENT_ID":43716.0,
        "SUBJECT":"Re: Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Tibor R\u00e9p\u00e1si <tibor.repasi@anzix.org>",
        "TAGS":"not-ak",
        "BODY":"like idea separation duty would security admin role select modify permission system auth would prevent security admin self authorizing would possible add sort two man rule"
    },
    "99":{
        "ID":43716,
        "MESSAGE_ID":"b4a18167-8bcd-5521-a0f8-ac6544b665f2@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Adding a security role to grant\/revoke with no access to the data itself",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi would like propose add support sort security role grant revoke permission user resource table access data resource data may sensitive legal constrains etc separation duty enable think hospital grant revoke permission doctor access data created url detail anybody concern question functionality happy discus thanks advance"
    },
    "120":{
        "ID":43695,
        "MESSAGE_ID":"CAAaVJWXmFF-aq1y5PK+ToUK0+XDQE3nkzsAyCr3WWatfU+m6kg@mail.gmail.com",
        "PARENT_ID":43684.0,
        "SUBJECT":"Re: [E] [NOTICE] Attaching patches in JIRA issue no longer works",
        "SENT_FROM":"Eric Badger <ebadger@yahooinc.com.INVALID>",
        "TAGS":"process",
        "BODY":"using patch jira anymore using jira use github issue using jira redirect github seems unintuitive fracture information two different place conversation happen jira github pr conversation confusing splitting information would rather use jira patch github issue pr think anything split information make hard find eric"
    },
    "128":{
        "ID":43687,
        "MESSAGE_ID":"CA+ts6noQ9M9WaDehkO6CkjaSn2QbeXwp8RxhtDE530=AS=_5zA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"UDF: adding custom jar to classpath",
        "SENT_FROM":"S\u00e9bastien Rebecchi <srebecchi@kameleoon.com>",
        "TAGS":"not-ak",
        "BODY":"hello trying create udf based custom method set enable user defined function true added jar usr share cassandra lib folder every node restarted node see command line jar indeed used classpath cp create udf got error create replace function blobtojson input blob return null null input return text language java return classpath classpath input invalidrequest error server code invalid query message java source compilation failed line classpath resolved typeline classpath resolved typeof course class classpath exist jar jar read right every user chmod find reason version cqlsh cassandra cql spec native protocol help would appreciated thanks sebastien"
    },
    "131":{
        "ID":43684,
        "MESSAGE_ID":"CAP+3qq7pCVdwZcMhC6oMQWG=A+3NT9m17Bn5C5DjpNoPk6DP_A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[NOTICE] Attaching patches in JIRA issue no longer works",
        "SENT_FROM":"Akira Ajisaka <aajisaka@apache.org>",
        "TAGS":"process",
        "BODY":"dear hadoop developer disabled precommit hadoop hdfs mapreduce yarn build job attach patch jira issue jenkins precommit job run please use github pr code review background url url thanks regard akira"
    },
    "151":{
        "ID":43664,
        "MESSAGE_ID":"CAN+t3-izm85B_EeL592MxTHgVKLGjgbynzwtX3ex88v70NLRqw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISSCUSS] Cassandra and Java 17",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everyone looking way java wanted share community finding thought align course action already deprecated scripted udfs remove time switch java java come removed ant script task created custom ant task workaround need nashorn ant also upgraded trunk cassandra trunk compiles warning security manager deprecated security deprecation warning mention awareness pushed personal docker hub account version testing image java installed worked build file script config push testing java circleci start cassandra box java also need least minimum add following already open java add open java base sun nio ch unnamed add open java base java io unnamed add open java base java util concurrent unnamed add open java base java util unnamed add open java base java util concurrent atomic unnamed add open java base java nio unnamed add open java base java lang unnamed add export java base sun nio ch unnamed add export java base java io unnamed add export java base java util concurrent unnamed add export java base java util unnamed add export java base java util concurrent atomic unnamed add export java base java nio unnamed add export java base java lang unnamedthis quick run jdeps jdkinternals multi release apache cassandra snapshot jar apache cassandra snapshot jar java rmi apache cassandra snapshot jar jdk unsupported classpath sun misc unsafe jdk internal api jdk unsupported classpath unsafeoperations sun misc unsafe jdk internal api jdk unsupported classpath unsafeoperations sun misc unsafe jdk internal api jdk unsupported classpath jmxregistry sun rmi registry registryimpl jdk internal api java rmi classpath sun misc unsafe jdk internal api jdk unsupported warning jdk internal apis unsupported private jdk implementation aresubject removed changed incompatibly could break application please modify code eliminate dependence jdk internal apis recent update jdk internal api replacement please check url quick workaround applied test purpose order able run jvm test seen assume something like also needed simulator place went ahead changed order unblock preliminary testing get full picture revised later issue hitting java lang runtimeexception java lang nosuchfieldexception modifier classpath startup instance java classpath call futuretask java classpath futuretask java classpath futuretask java java base java util concurrent threadpoolexecutor runworker threadpoolexecutor java java base java util concurrent threadpoolexecutor worker run threadpoolexecutor java io netty util concurrent fastthreadlocalrunnable run fastthreadlocalrunnable java java base java lang thread run thread java caused java lang nosuchfieldexception modifier java base java lang classpath classpath classpath verb java classpath startup instance java fire testing used config suggested jonathan shook used testing java time ago need tune used preliminary work initial investigation one important topic want bring community attention dependency management discussion long time ago joined project correct say java update anything immediate need considers trunk course branch updated bytebuddy asm chronicle queue byteman mockito jacoco ecj sjk far based feedback cassandra tried update netty run test java ran java lang classcastexception class classpath chunk cast class sun nio ch directbuffer chance investigate table good mentioned even update chronicle queue still add fqltool auditlogging add open java base java lang reflect unnamed add export java base jdk internal ref unnamed add export java base sun nio ch unnamed add export jdk unsupported sun misc unnamed add export jdk compiler classpath unnamed add open jdk compiler classpath unnamed add open java base java lang unnamed add open java base java lang reflect unnamed add open java base java io unnamed add open java base java util unnamed saw one type failure related tool investigated fixed directly internals opening also updated jolokia dtest repo seemed solve jolokia related problem least test failing due jolokia related problem saw far officially see jolokia build running jdk find info around java jolokia far thing hit wanted mention order give idea direction thing going interested hear comment particularly approach dependency update project also much willing extend usage add open add export moment java community recommendation last option dependency still officially support java even fully tested java work box need internals opened maybe action taken still know answer failure see sometimes fix one another one appears moving part also go ahead update dependency based previous discussion also saw java introduced update dependency able bring ci stable condition java starting point get idea needed also guess soon join openjdk quality outreach program suggested get detail already discussed go ahead one contact dev mailing list guess url dimitrova"
    },
    "153":{
        "ID":43662,
        "MESSAGE_ID":"CACvH57KAN-LhBzxQrVXVMrshg9U9g5anFG+d0UMmmWXNdG0ipA@mail.gmail.com",
        "PARENT_ID":43660.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"look like doc already specified behaviour ternary operator line wrapping proposal also added following usually preferable carry operator multiline expression exception multiline string literal work usually least leaf wiggle room ultimately would prefer decision made author even general norm carrying operator preferable concerned start leaning towards specific though open question like whether also specifying spacing loop guard condition cast etc yes good thanks"
    },
    "154":{
        "ID":43661,
        "MESSAGE_ID":"5e64950e-772f-4bbb-8265-456e9024b70d@www.fastmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2022-03-21",
        "SENT_FROM":"\"Josh McKenzie\" <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"congrats aleksandr sorokoumov raised committer project pleasure working year project honor well deserved new contributor getting started first welcome new contributor recommend starting one two place failing test starter ticket label lhf low hanging fruit either category great place get started learning codebase also process community query failing test currently unassigned url unassigned starter ticket unassigned url see lot around dev list conversation url past two week stefan miklosovic took herculean perhaps masochistic task cleaning github pr url given pr formally tied merge process documented right way perform house cleaning something probably discus project regress state future thanks stefan pretty grueling discussion continues multiple community group linkedin informal formally endorsed pmc url opened discussion right next step usage deprecated airlift airline framework used cli tool url reminder might know restrict api breaking change major qualify cli output change api breaking expect operational tooling depend format functionality back forth rumbling apachecon cfp performance engineering track nothing announce status email expect something soon pmc front ci trend butler dashboard url rough spot time change go jenkinsfile temporarily broke reporting python dtest result butler bot running manually mean practice increased failure showing accurately branch past week trunk take total increase freeze coming may blocking release green run asf infra failure trunk staring right face release progress url closed issue past week highlight fix exception update row using contains cassandra better support snapshot character nodetool snapshot cassandra fixing snapshot true size calculation cassandra cleaning unshared heap size calculation cassandra validating existence dc repairing cassandra lot fixing line past couple week good see closed issue line past couple week many closed prior time window highlight include gossipinfo available virtual table cassandra refactor schema management allow schema source cassandra pave way optional consistent schema management implementation paxos improvement cep cassandra large body work congrats benedict blake getting across line andres keep grinding away adding new guardrail fevered pace cassandra improvement messaging guardrail cassandra variety test environment config environment change cleanup really many mention check link curious week go freeze thing trucking along manage hold test failure trunk steady level branch freeze give week hammer failure week josh"
    },
    "155":{
        "ID":43660,
        "MESSAGE_ID":"LO2P265MB4454D851CE3571455E81DFE9A7169@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43658.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"look like doc already specified behaviour ternary operator line wrapping proposal also added following usually preferable carry operator multiline expression exception multiline string literal work usually least leaf wiggle room ultimately would prefer decision made author even general norm carrying operator preferable concerned start leaning towards specific though open question like whether also specifying spacing loop guard condition cast etc"
    },
    "157":{
        "ID":43658,
        "MESSAGE_ID":"LO2P265MB4454079E4706271EB4CB6B6BA7159@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43657.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"talking one extra line dozen think confused context case discussing often mean additional line call site code get real faster read difference great example line wrapping multiple parameter assigning computation clearly named local variable passing result constructor amongst thing perhaps highlight style guide also produce multi line computation context constructing variable ambiguity much easier parse parameter first without concatenation operator preceding point simply legislating kind detail waste time probably counter productive want enumerate possible way might construct multi line computation ternary operator pretty clear maybe agree define leave rest judgement author"
    },
    "158":{
        "ID":43657,
        "MESSAGE_ID":"CACvH57KYSmB5GNbu8tHCF5dfEW862Xqc3d2F+1b+Shxn_-6zAQ@mail.gmail.com",
        "PARENT_ID":43656.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"support lead noise le readability patch readability patch harmed modern tooling whitespace highlighted differently content change legibility code patch always preferred going aid code comprehension aim density useful information reader wasting dozen line zero information density solely solve problem already handled modern different tool false economy talking one extra line dozen also improves readability code imho would also like suggest operator always carry line wrap ternary operator agree however le convinced case string concatenation probably cleaner opposite norm string literal aligned imho work string concatenation example come mind isa method aaaaaaaaaaaaa bbbbbbbbbbbbb ccccccccccccc method aaaaaaaaaaaaa bbbbbbbbbbbbb ccccccccccccc method aaaaaaaaaaaaa bbbbbbbbbbbbb ccccccccccccc code get real faster read difference"
    },
    "159":{
        "ID":43656,
        "MESSAGE_ID":"LO2P265MB4454920DFADC35115082EA7BA7159@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43654.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"support lead noise le readability patch readability patch harmed modern tooling whitespace highlighted differently content change legibility code patch always preferred going aid code comprehension aim density useful information reader wasting dozen line zero information density solely solve problem already handled modern different tool false economy also agree several argument one line avoided many method parameter problem method parameter problem strongly typed parameter cleanly grouped call site utilise approximately behaviour alternative builder mutability latter broadly avoid builder make code navigation clunkier creating indirection navigate searching caller well potentially creating additional heap pressure code pollution call site builder builder helpful lot different way configure object common case simply propagating relevant subset existing parameter plus perhaps couple new required parameter handful equivalent call site going unhelpful note also builder exact legibility concern parameter per line significant amount screen real estate taken scaffolding noise useful builder call site communicate unique configuration detail particular call site would also like suggest operator always carry line wrap ternary operator agree however le convinced case string concatenation probably cleaner opposite norm string literal aligned"
    },
    "160":{
        "ID":43655,
        "MESSAGE_ID":"CAOyUaq-9XjssPwy3v=Hyo7K3uLV_AsvGFZg2hF5uWDqQN-12kg@mail.gmail.com",
        "PARENT_ID":43654.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Jacek Lewandowski <lewandowski.jacek@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"regarding instance method instance field clarify point usually use many place quite easy access method rather field beginning regardless need mock immediately would much bigger change term line conflict decide change later suggestion make testable world full singleton without mass refactoring obviously formulate requirement different word coverage unit test jvm dtests new changed code thanks jacek lewandowski"
    },
    "167":{
        "ID":43648,
        "MESSAGE_ID":"66BCD2DC-FEB1-4A67-B51B-E2CA0ED9EBDE@apache.org",
        "PARENT_ID":43646.0,
        "SUBJECT":"Re: [Discuss] replacement of airlift\/airline framework in CLI tools",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"technology",
        "BODY":"airline airlift deprecated suspect security issue would fixed project recommends moving airline picocli share stefan concern stability cli output formatting avoid breakage resulting migration lot automation depends interface stable"
    },
    "169":{
        "ID":43646,
        "MESSAGE_ID":"CAPw+qV6zJ8qWbTH+k_GEgxkntr1x3_znzVTiOEXbz09awXT=Sw@mail.gmail.com",
        "PARENT_ID":43623.0,
        "SUBJECT":"Re: [Discuss] replacement of airlift\/airline framework in CLI tools",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"technology",
        "BODY":"hi tibor thanks raising see important issue would like address switching newer airline updating former version supported anymore much miss new airline library older library prevent achieving something newer one able deliver specific used picocli handy library one class actually however afraid switching anything else would quite shock user used good old stable stuff people parsing output tooling script delicate matter output matter might probably something think breaking user facing change would appropriate introduce point release regard"
    },
    "181":{
        "ID":43634,
        "MESSAGE_ID":"CALCpdnPPz8b-JJG-mQRSc7kS0xUVYZLKir1u3k5LT__iWuF0Pw@mail.gmail.com",
        "PARENT_ID":43601.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Yifan Cai <yc25code@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"guideline instance getinstance method know additional effort hand many advantage replace singleton testing necessary think public instance fine recommendation private us prescribed used explicit benefit regarding testability mock desired getter method instead public final otherwise public final preferred simplicity tricky term singleton though feel good use private singleton ugly make referencing code difficult test probably singleton want declare instance method good guideline rigid think good idea prohibit discourage use final tool guard immutability ruslan proposed prohibit discourage use final within method body think le useful mark variable reference immutable within scope scenario class member field final used reference primitive immutability desired yifan"
    },
    "188":{
        "ID":43627,
        "MESSAGE_ID":"pony-dac361b2-3204-417a-bb8c-60d87c135c46-dev@cassandra.apache.org",
        "PARENT_ID":43588.0,
        "SUBJECT":"Re: Performance Engineering Track at ApacheCon NA?",
        "SENT_FROM":"Sharan Foga <sharan@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi paulo thanks feedback get track accepted definitely needing help reviewing submission may take offer thanks sharan"
    },
    "192":{
        "ID":43623,
        "MESSAGE_ID":"D72EEF95-8BB5-467A-9C56-A02ABF968342@anzix.org",
        "PARENT_ID":null,
        "SUBJECT":"[Discuss] replacement of airlift\/airline framework in CLI tools",
        "SENT_FROM":"Tibor R\u00e9p\u00e1si <tibor.repasi@anzix.org>",
        "TAGS":"existence",
        "BODY":"cassandra started discussing option replacing deprecated airlift airline framework used cli tool considering amount command framework used impact might cause future possibility operational aspect cassandra could leverage first comment slack revealed depth discussion would desirable kind request comment"
    },
    "214":{
        "ID":43601,
        "MESSAGE_ID":"ABD082A4-D0EF-4879-9EB4-AD07CA4865BF@gmail.com",
        "PARENT_ID":43600.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Ruslan Fomkin <ruslan.fomkin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi hope ok jump discussion find important automate code formatting build check verify otherwise many example project formatting followed make formatting painful contributor good setup git commit hook require command line formatting tool addition ide support case main task formatting ci build check fail environment yet set example cassandra dtest already ci formatting check place python code run pr python formatting command line tool easily run locally mistake easy setup git commit hook also work setup formatting vscode think good idea prohibit discourage use final tool guard immutability mentioned unfortunately java designed safe default thus make code noisy requiring use keyword noticed issue current formatting indentation assignment statement split multiple line without using parenthesis example immutablemap builder string immutablemultimap string inetaddressandport dcrackbuilder immutablemap builder would nice next line intended understand part previous line support jaceks request argument separate line many need placed multiple line take le effort grasp argument separate line several argument combined line imho root many argument common issue non oop language best regard ruslan fomkin"
    },
    "215":{
        "ID":43600,
        "MESSAGE_ID":"CAPw+qV7ZEeVTLCMptysb9=SD53Wv6VqmzuC==Ehm1QxD9M1CRg@mail.gmail.com",
        "PARENT_ID":43598.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"agree single commit approach fix honest javadocs little bit messy well warning generating incomplete lot case obsolete reflect code anymore etc"
    },
    "217":{
        "ID":43598,
        "MESSAGE_ID":"LO2P265MB44546D3B8221F634CE20EB68A7109@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43597.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"id fine though think want start enforcing import probably want mass correct first like style requirement unintended consequence single huge commit standardise order introduce build time check would fine going also really think important"
    },
    "218":{
        "ID":43597,
        "MESSAGE_ID":"CAOyUaq9q7g9OJhEeVctGnQE-Yb=jaXi8XAiZDEmKV462q_icTA@mail.gmail.com",
        "PARENT_ID":43596.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Jacek Lewandowski <lewandowski.jacek@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think least enforce import order complete mess cause lot conflict rebasing merging perhaps could start enforcing rule modified file way could gradually go towards consistency wdyt jacek lewandowski"
    },
    "219":{
        "ID":43596,
        "MESSAGE_ID":"3A6E23EB-DE47-4157-8B69-1E3AB8640052@apache.org",
        "PARENT_ID":43595.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"benedict agree rigid applying style stylechecks meant bring uniformity codebase assure proposing neither rigid curb ability apply rule flexibly"
    },
    "220":{
        "ID":43595,
        "MESSAGE_ID":"LO2P265MB44542FF959990AAC08790B7BA70F9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43594.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"strong strictly enforcing style guide help shape contribution review feedback responding said feedback also used setup intellijs code formatter configure default behaviour meant turned linter plenty rule stated flexible manner permit breach overall legibility aesthetic improved"
    },
    "221":{
        "ID":43594,
        "MESSAGE_ID":"1B8F6036-09B5-40C6-A9E1-28F77F2AB76F@apache.org",
        "PARENT_ID":43568.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"also favor updating style guide ideally custom checkstyle configuration ensure adherence style guide also think contended topic want explicitly codify current practice new contributor easier time writing code also important note current codebase consistent since written long period time tends confuse folk working different part codebase style guide would helpful"
    },
    "225":{
        "ID":43590,
        "MESSAGE_ID":"LO2P265MB44544FBF8055229541C3FDE4A70F9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43589.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think fine count generated implementation interface interface even defined would like explicitly mention fine though perfectly honest find mocking improves testing many case instead making tightly coupled brittle separate discussion interface encourages better unit test imho unnecessary unused interface encourages messier code imho premature abstraction bad introduce interface method indeed concept need testing otherwise instance getinstance method know additional effort hand many advantage replace singleton testing necessary think public instance fine recommendation private us prescribed used explicit benefit continuation indent currently intellij configured provided formatting setup get something like ah thought meant lambda sure best specify continuation indent context applies indentation conversely following work quite nicely typically try ensure start line succinct possible permit clean indentation follow method aaaaaaaaaaaaa bbbbbbbbbbbbb ccccccccccccc endpointstate removedstate endpointstatemap stream endpoint map"
    },
    "226":{
        "ID":43589,
        "MESSAGE_ID":"CAOyUaq86=fZOYc3jokJ0YegZLS2+6TWRK26hjR+_4UDGQcTn=Q@mail.gmail.com",
        "PARENT_ID":43586.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Jacek Lewandowski <lewandowski.jacek@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"regarding interface mock created mockito really implementation also predict test written future interface encourages better unit test imho addendum exception handling guideline sound like good idea instance getinstance method know additional effort hand many advantage replace singleton testing replace newly created instance certain test caseand continuation indent currently intellij configured provided formatting setup get something like method aaaaaaaaaaaaa bbbbbbbbbbbbb ccccccccccccc orendpointstate removedstate endpointstatemap remove endpoint know preferred move previous line sometimes make line much long due nested call something else"
    },
    "227":{
        "ID":43588,
        "MESSAGE_ID":"CAKaZCX6zu2CxgOavkA12UB-0JY0fJYjrYVqCNbjdV7d_kLwVLw@mail.gmail.com",
        "PARENT_ID":43562.0,
        "SUBJECT":"Re: Performance Engineering Track at ApacheCon NA?",
        "SENT_FROM":"Paulo Motta <paulo@apache.org>",
        "TAGS":"not-ak",
        "BODY":"apachecon track sound fun hope someone cassandra community step help track would happy help review organize event per se likely attend event sex de march de sharanf sharan apache org escreveu hi call track apachecon na open suggestion try run performance engineering track apachecon year end message included detail including definition mean reasoning could good run list project something performance engineering take look see project list need feedback whether community think could interesting track topic run apachecon importantly would community willing submit talk attend apachecon see like say idea stage performance engineering track get approval included apachecon volunteer willing help managing promoting track behalf project thanks sharan performance engineering science practice engineering software required performance scalability characteristic many apache project focus solving hard big data performance scalability challenge others provide tool performance engineering project care aspect software performance track enable apache project member share experience performance engineering best practice tool technique result community benefit cross fertilization project performance engineering wider open source community pervasive includes method tool including automation agile approach performance architecting design benchmarking monitoring tracing analysis prediction modeling simulation testing reporting regression testing source code analysis instrumentation technique performance engineering also wider applicability devops operation cloud platform managed service provider hence overlap sre site reliability engineering customer application performance tuning track would therefore applicable wider open source community supporting detail google search google open source performance engineering result google site apache org url performance result apache project may interest focus performance top result jmeter cassandra storm spark samza pulsar kafka logj systemml drill http server cayenne activemq impala geode flink ignite impala lucene tvm tika yunikorn solr iceberg dubbo hudi accumulo xerces mxnet zookeeper incubator project may interest focus performance top result crail eagle nemo skywalking mxnet hawq mnemonic carbondata drill shenyu tephra sedona reference randomly selected show range open source performance engineering topic available rather quality article performance engineering apache spark databricks runtime ethz big data url real time insight linkedin performance using apache samza url day life open source performance engineering team url locating performance regression root cause field operation url system experience report published ieee transaction software engineering early access url detect performance change software history performance analysis software system version url performance regression pitfall every project avoid url benchmark website open source apache bench tool url benchmarking pulsar kafka accurate perspective pulsar performance url performance analyse apache cassandra release url logj performance page compare performance number logging framework url systemml performance testing url"
    },
    "229":{
        "ID":43586,
        "MESSAGE_ID":"LO2P265MB4454C01B599C68785B3836CEA70F9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43585.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi jacek sometimes although would single implementation interface make sense testing purpose mocking particular would surely mean two implementation one test tree think therefore already covered exception handling perhaps explicitly mention guideline always handle exception throwable frequently catched code method throwables would properly deal interruptedexception think properly handle interruptedexception interruptedexception handled directly really handled propagating uncheckedinterruptedexception different catching throwable many case interruptedexception handled explicitly however think catching exception throwable correct solution case either ideally top level want broad unforeseen problem handled need take specific action handle exception case ideally always rethrow throwable unmolested see benefit explicitly outlining case trivial handle exception cleanly correctly could perhaps create exception handling addendum perhaps separate page go greater detail found useful access singleton getinstance method rather directly beneficial public use case private use case oftentimes unhelpful pollute code also note document explicitly proposes avoiding getx would instead method called instance happy add section line wrap inside method call try group natural parameter together single line generally ok approach putting argument new line make easier git review automatic merge personally prefer optimise readability line single short parameter badly pollutes page code going consensus put indicative vote import mix classpath import logj google etc know order used always curious would happy revisit consistent import codebase know define continuation indent currently character opening brace introduces necessary indentation start line perfect legibility somewhat inlined declare brace must used lambda fit declaring line"
    },
    "230":{
        "ID":43585,
        "MESSAGE_ID":"CAOyUaq_bg0fTe0ZVE0oTvDQmJPGoACU91YOMj8SJd-DcWS_gDg@mail.gmail.com",
        "PARENT_ID":43578.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Jacek Lewandowski <lewandowski.jacek@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi looking document thought sometimes although would single implementation interface make sense testing purpose mocking particular exception handling perhaps explicitly mention guideline always handle exception throwable frequently catched code method throwables would properly deal interruptedexception found useful access singleton getinstance method rather directly public final static field use getinstance method may go make getinstance return instance provider would default return value final field however test could return value mutable static field custom provider way would able easily switch singleton impossible without reloading class moment line wrap inside method call try group natural parameter together single line generally ok approach putting argument new line make easier git review automatic merge import mix classpath import logj google etc know order used always curious format configuration ides seems like intellij import eclipse formatter configuration maybe one configuration could enough define continuation indent currently character unit test assertion prefer assertj assertion standard junit hamcrest maybe forbid assertj much better description failing assertionsi hope enforce rule using checkstyle otherwise effort may little effect transition perhaps checkstyle could run circleci modified file thanks jacek jacek lewandowski"
    },
    "234":{
        "ID":43581,
        "MESSAGE_ID":"CANSRBLDp4qEarir+8ZVGZ+sZrQRoyOF48oEQetgTa8s7AcS-3w@mail.gmail.com",
        "PARENT_ID":43580.0,
        "SUBJECT":"Re: [DISCUSS] Should we deprecate \/ freeze python dtests",
        "SENT_FROM":"Andr\u00e9s de la Pe\u00f1a <adelapena@apache.org>",
        "TAGS":"not-ak",
        "BODY":"last time checked support vnodes jvm dtests seems important limitation"
    },
    "235":{
        "ID":43580,
        "MESSAGE_ID":"LO2P265MB4454C3EAB6D7E2153EE47DA7A70F9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43579.0,
        "SUBJECT":"Re: [DISCUSS] Should we deprecate \/ freeze python dtests",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"strongly favour deprecating python dtests case currently superseded jvm dtests environmentally challenging work causing many problem local remote machine harder debug slower flakier mostly le sophisticated focus getting jvm framework robust enough cover edge case would great collect gap think vnodes mean fundamental limitation may also stuff startup shutdown environmental script may niche retain something like python dtests people familiar would interested hear folk understand concern problem using jvm dtests cohort holding reason going require documentation work original author think collection template like test point people would cheap initial effort cutting pasting existing test required functionality editing suit get people quick start familiar labor process around revving new release jvm dtest api think need revisit currently broken consider either using asf snapshot cut new release else using git subprojects also become problem accord integration time perhaps subprojects future worth better solving think made worse necessary moving many implementation detail shared api project retained within tree api primarily serving shared api ensure cross version compatibility however far complete explanation solution problem"
    },
    "236":{
        "ID":43579,
        "MESSAGE_ID":"85347b73-42da-424c-b626-c387656cefef@www.fastmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Should we deprecate \/ freeze python dtests",
        "SENT_FROM":"\"Josh McKenzie\" <jmckenzie@apache.org>",
        "TAGS":"process, technology",
        "BODY":"wrestling python dtests recently led discussion contributor whether project writing new test python dtest framework jvm framework discussion come tangentially topic including lack documentation expertise jvm framework dis incentivizing folk authoring new test difficulty debugging maintaining timer based sleep based non deterministic python dtests etc know place formally discussed made project wide call expect new distributed test written missed email someone please link thread stop reading time specify preference write new multi node distributed test development testing portion site documentation url primary tradeoff understand moving python based multi node testing jdk based pro better debugging functionality breakpoints ide integration etc integration simulatormore deterministic runtime anecdotally python dtests deterministic practice prove prone environmental disruption test time visibility internals cassandracons framework mature python dtest framework functionality missing labor process around revving new release jvm dtest apipeople familiar yet learning curveso bid personally think project freeze writing new test python dtest framework focus getting jvm framework robust enough cover edge case might still causing new test written python framework going require documentation work original author jvm framework well folk currently familiar effort yet intimately familiar api get know however believe long term benefit project well worth could institute pre commit check warns commit increasing raw count python dtests help provide process based visibility change direction project testing think"
    },
    "237":{
        "ID":43578,
        "MESSAGE_ID":"5bcf6757-446f-4905-aa77-dbb5e6d98212@www.fastmail.com",
        "PARENT_ID":43575.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"Josh McKenzie\" <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"add python code style guide itstrongly agree hurting treating python nd class citizen avoid making method parameter local variable final inconsistent code base would prefer method large enough might mistakenly reuse parameter variable probably refactor metwhy use final possible refactor length much benefit immutability generally well recognized benefit keeping method reasonable length complexity"
    },
    "238":{
        "ID":43577,
        "MESSAGE_ID":"LO2P265MB4454856B504ECE7D4BE73F19A70F9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43575.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"agreed section like variable mutability general norm parameter variable treated immutable used possible variable mutated within loop declared loop guard body sometimes necessary clarity declare mutable variable outside context scoped narrowest reasonable code block explicit code block utilised necessary clarity result norm use final keyword within method body prohibited could instead say discouraged aware context helpful today"
    },
    "239":{
        "ID":43576,
        "MESSAGE_ID":"CAPw+qV7GdiunDmX4XeT1FCv2XGNokFYE+LLZ60VgL1H5MvoL7g@mail.gmail.com",
        "PARENT_ID":43575.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"agree using final suggested marcus using could sometimes sake final consistent code gladly drop habit bad java like scala matter var val"
    },
    "240":{
        "ID":43575,
        "MESSAGE_ID":"20220314115956.txqleze3iahsjdns@garageserver",
        "PARENT_ID":43568.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Marcus Eriksson <marcuse@apache.org>",
        "TAGS":"not-ak",
        "BODY":"look good one thing might missing direction avoid making method parameter local variable final inconsistent code base would prefer method large enough might mistakenly reuse parameter variable probably refactor method marcus"
    },
    "241":{
        "ID":43574,
        "MESSAGE_ID":"dc96caa2-f390-70c8-c4d2-e6eb868791c6@bso.ng",
        "PARENT_ID":43573.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Bowen Song <bowen@bso.ng>",
        "TAGS":"not-ak",
        "BODY":"oh certainly mean block purposed update sorry sounded way saying add python code style guide follow addendum surely job"
    },
    "242":{
        "ID":43573,
        "MESSAGE_ID":"dfa2a184-84de-4a2d-bfc4-200d78e20530@www.fastmail.com",
        "PARENT_ID":43571.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"Josh McKenzie\" <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"doc written good portion also applies python code style structure clarity naming etc perhaps python specific addendum follow might make sense bowen"
    },
    "243":{
        "ID":43572,
        "MESSAGE_ID":"9f588d7e-f50c-c4d5-c551-169ead378723@bso.ng",
        "PARENT_ID":43570.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Bowen Song <bowen@bso.ng>",
        "TAGS":"not-ak",
        "BODY":"think two separate issue style guide python code fixing existing code style opinion style guide come first follow fix existing code style way see change made cassandra already merged trunk however latest code trunk still issue mentioned previous email issue purely code styling visual indentation white space around operator little unused import slightly impact performance memory usage think two valid approach address issue could create style guide first fix one go split issue two category pure style issue fixed code style guide published issue fixed personally prefer former involves le amount work need spend time triage issue reported tool flake"
    },
    "244":{
        "ID":43571,
        "MESSAGE_ID":"LO2P265MB445419554C63F438EEB13226A70F9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43569.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think community would happy introduce python style guide well placed chosen throughout career limit exposure python probably parallel effort would best perhaps could work stefan others produce proposal"
    },
    "245":{
        "ID":43570,
        "MESSAGE_ID":"CAPw+qV6KCKcYR+Ry7KnTkJUTGNVdODpKZJbJPv9WSySdV2nECg@mail.gmail.com",
        "PARENT_ID":43569.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"hi bowen working recently like cassandra lot improvement around python stuff coming identify place improvement definitely interested regard"
    },
    "246":{
        "ID":43569,
        "MESSAGE_ID":"c87124ca-ba14-db94-ddf3-095de606a756@bso.ng",
        "PARENT_ID":43568.0,
        "SUBJECT":"Re: Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"Bowen Song <bowen@bso.ng>",
        "TAGS":"not-ak",
        "BODY":"found mentioning python code style going update style guide addressed fyi quick flake style check show many existing issue python code including library imported unused redefinition unused import invalid escape sequence string"
    },
    "247":{
        "ID":43568,
        "MESSAGE_ID":"LO2P265MB445445D7E8EB55E02FAEE9C8A70F9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":null,
        "SUBJECT":"Updating our Code Contribution\/Style Guide",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"style guide updated decade think overdue improvement address shortcoming well modern facility stream lambda put together effort dinesh started year ago languished since part project always seemed priority figure never good time raise contended topic suggested update contributor guideline url many suggestion codify norm already widely employed sometimes spite style guide likely remain contentious potentially contentious thing draw attention deemphasis getx nomenclature favour richer set prefix succinct simple retrieve clearavoid implementing method incl equal hashcode tostring unless actually usedmodified new line rule multi line function callsexternal dependency rule require discus thread introducing"
    },
    "253":{
        "ID":43562,
        "MESSAGE_ID":"ca747a17-efb7-ba81-ae0f-135697e98db8@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Performance Engineering Track at ApacheCon NA?",
        "SENT_FROM":"sharanf <sharan@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi call track apachecon na open suggestion try run performance engineering track apachecon year end message included detail including definitiona mean reasoning could good run list project something performance engineering take look see project list need feedback whether community think could interesting track topic run apachecon importantly would community willing submit talk attend apachecon see like say idea stage performance engineering track get approval included apachecona volunteer willing help witha managing promoting track behalf project thanks sharan performance engineering science practice engineering software required performance scalability characteristic many apache project focus solving hard big data performance scalability challenge others provide tool performance engineering project donat care aspect software performance track enable apache project member share experience performance engineering best practice tool technique result community benefit cross fertilization project performance engineering wider open source community pervasive includes method tool including automation agile approach performance architecting design benchmarking monitoring tracing analysis prediction modeling simulation testing reporting regression testing source code analysis instrumentation technique performance engineering also wider applicability devops operation cloud platform managed service provider hence overlap sre site reliability engineering customer application performance tuning track would therefore applicable wider open source community supporting detail google search google aopen source performance engineeringa result google asite apache org performancea result apache project may interest focus performance top result jmeter cassandra storm spark samza pulsar kafka logj systemml drill http server cayenne activemq impala geode flink ignite impala lucene tvm tika yunikorn solr iceberg dubbo hudi accumulo xerces mxnet zookeeper incubator project may interest focus performance top result crail eagle nemo skywalking mxnet hawq mnemonic carbondata drill shenyu tephra sedona reference randomly selected show range open source performance engineering topic available rather quality article performance engineering apache spark databricks runtime ethz big data real time insight linkedin performance using apache samza day life open source performance engineering team locating performance regression root cause field operation ofweb based system experience report published ieee transaction software engineering early access detect performance change software history performance analysis software system version performance regression pitfall every project avoid benchmark website open source apache bench tool benchmarking pulsar kafka accurate perspective pulsaras performance performance analyse apache cassandra release logj performance page compare performance number logging framework systemml performance testing"
    },
    "255":{
        "ID":43560,
        "MESSAGE_ID":"CAN+t3-gNODt6EKZT66C1kmCu2-MaPOTsJ8x4jL=7k9u0CgbpgA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"CI broken",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everyone first pushed ninja fix trunk patch cassandra removed empty line end cassandra yaml break unit test please double check latest jenkins ci run completed something addressed pushed fix whatever noticed quick fix amount failure huge url unit test patch applying ninja fix url test currently breaking due environmental issue need remove future package trunk started breaking unrelated change today precommit workaround branch understand environment started complaining ccm command missing even successfully installed per log info url anyone want help welcome reopened cassandra investigate circleci show workaround fix problem run url pushed jenkins run one confirmation url url url url already late evening ci run take hour please someone europe check morning push commit review people fine applying intermediate solution best regard ekaterina dimitrova"
    },
    "297":{
        "ID":43518,
        "MESSAGE_ID":"add2766c-c320-4dc2-b5e0-ac17656ad9a2@www.fastmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2022-03-07",
        "SENT_FROM":"\"Josh McKenzie\" <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hello welcome fresh edition going dev cassandra new contributor getting started new contributor recommend starting one two place failing test starter ticket label lhf low hanging fruit new build lead role creating ticket failing test lot good fodder worked want get know area codebase get feel cassandra project work test great way get involved almost always complex enough interesting rarely coupled multiple system require familiarizing one section code query failing test unassigned url unassigned starter ticket unassigned url list conversation url past couple week seen vote cep storage attached index pas well cep trie memtable implementation congrats involved getting early consensus large body work like incredibly encouraging see seeing cutting edge algorithm data structure coming cassandra ecosystem really looking forward seeing implementation take shape integrated discussion yaml configuration continues evolve url work discussion largely moved associated jira ticket url reached looking volunteer participate contributor interview program contributor would like participate please chime url looking volunteer take build lead role wiki article explains responsibility role well sign accessed url hour dedicate given week helping track new test failure via butler well getting know helping optimize build environment please sign test first line defense regression code system record scale huge portion critical infrastructure world mean test quite important pressure last thing call benjamin took initiative create contributor group linkedin ml thread url linkedin group accessed url trend butler dashboard url bit ci past couple week struggling disk space build server got upgrade gig space gig morning buy time taking second build lead rotation week setting primary goal making progress disk space usage problem inability run test blocking ability automate jira bot update ticket test run status enlightened self interest always lovely motivator term successful run however following test failure branch newest oldest trunk total healthy drop past couple month great see progress front look forward reaching point test run stable green procedurally institute block merges without green ci like discussed think make big difference confidence diffs well general time commitment context switching required everyone project release progress url issue closed past week highlight include test fix deprecation javascript based udf cassandra fix race condition bug local session repair cassandra fix unshared heap size calculation cassandra issue closed highlight include exposing streaming status vtable cassandra nice operation test fix always important guardrail work around number partition key query cassandra also quite welcome folk operating cassandra cleanup unit test failure warning cassandra got couple month left freeze date let keep burning test failure trunk go painless transition release qualification cycle thanks always everything project everyone josh"
    },
    "351":{
        "ID":43464,
        "MESSAGE_ID":"76d21741-471f-4e7b-8cc3-efe8ddb351b0@www.fastmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2022-02-21",
        "SENT_FROM":"\"Josh McKenzie\" <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"first congratulation anthony grasso erick ramirez lorina poland raised committers project great see hard work recognized also big milestone project branch core database code contributor committers start recognizing elevating part ecosystem congrats new contributor welcome cassandra community couple place tend good starting point new contribution test failure kanban board filtered show test failure link showing unassigned ticket url low hanging fruit starter ticket release kanban board ticket determined would make good launching point someone new codebase url url cassandra dev cassandra mentor alias setup ping volunteered help newcomer project dev mailing list conversation url busy two week released new version supported version cassandra address cve url long short running cassandra following non default configuration enable user defined function true enable scripted user defined function true enable user defined function thread falseit possible attacker execute arbitrary code host attacker also need permission create user defined function well along configuration arrangement discussed hotfix release procedure bit release url discussion appears headed future hotfixes based branch previous released tag different given hotfix includes change hotfix nothing else probably going lazy consensus wiki update notification thread week discussion closed storage attached index moved vote url looking positive far vote also ongoing trie memtable inclusion url looking positive chris thornett opened topic apache cassandra content process wiki discussion url please take look chime experience interest area link post confluence wiki url contributor merged support property based fuzz testing let project know url approach already surfaced number bug complex system subtle temporal relationship great see getting merged project topic come rewriting existing old test use new framework would great benefit project long run beating head dtests personally week two attest allure rewriting strong also pretty big climb caleb continues push config boulder metaphorical hill url familiar discussing restructure config yaml manner discoverable maintainable operator pretty big ramification people wild administering many large cluster one people please take minute ramp topic get involved discussion check link top section different thread active last two week high water mark far recall exciting time development velocity url line close last week past period cve perf node restart lcs disk space checking remains slow good sign testament much verification work went community issue closed issue highlight merging fuzz testing framework cassandra collection test fix looking better removal nose support dtests cassandra long time coming limiting max size hint per host cassandra variety change fix good velocity branch ci status thing looking lot better ci side decent chance related extensive effort going situation also due smoothing speed bump asf jenkins test running infra snapshot per branch failure today trending trending recently trending trunk trending downall great sign definitely moving direction want expect see ci result comment showing roll jenkins jira integration tie asf ci result jira ticket within next day hopefully make easier keep test failure count moving forward thanks always everyone see slack josh"
    },
    "357":{
        "ID":43458,
        "MESSAGE_ID":"CAN95ov_igHW9iT6hXLcitAoiqLa0WZUcN6JhGdOjswiEvHYWfQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Hadoop on Windows",
        "SENT_FROM":"Gautham Banasandra <gaurava@apache.org>",
        "TAGS":"existence, property, technology",
        "BODY":"hi working getting hadoop build window quite time stage parallelize effort complete sooner outlined part remaining please get touch anyone wish join hand realizing goal need hadoop run window window large user base modern alternative software hadoop like kubernetes cross platform design acknowledge fact easy get hadoop running window reason seen much adoption hadoop window probably issue like compilation requiring work arounds every step way etc nail issue believe would tremendously expand usage hadoop plan complete phase phase building hadoop window hadoop compile hadoop window natively asf jira apache org hadoop build window currently broken posix api call made hdfs native client libhdfspp mingw cygwin provide posix implementation window possible use compiler compiling hadoop visual visual runtime native runtime window provides much capability like core dump etc alternative thus essential get hadoop compile visual studio window using visual studio hdfs libhdfs make write cross platform asf jira apache org recently hadoop built upgraded compiler version level support access std filesystem modern apis however case apis suffice thus wrote xplatform library collection system call apis implemented cross platform friendly manner cmake build system choose appropriate platform implementation building away ifdefs based platform code summary ever come across need use system call please put xplatform library use apis hdfs make hdfs tail tool cross platform asf jira apache org hdfs make hdfs stat tool cross platform asf jira apache org hdfs make hdfs setrep tool cross platform asf jira apache org hdfs make hdfs tool cross platform asf jira apache org hdfs make hdfs find tool cross platform asf jira apache org hdfs native client tool use getopt api parse command line argument getopt available window one follow pr make tool cross platform compatible hdfs make hdfs ownership tool cross platform gauthambanasandra pull request apache hadoop github com hdfs make dirent cross platform compatible asf jira apache org hdfs make usage string cross platform compatible asf jira apache org jiras header file window thus need inspect apis used header implement hdfs create libhdfspp static library window asf jira apache org issue producing hadoop dlls window let plan deliver static library phase hdfs implement linux permission flag window asf jira apache org hdfs ensure protobuf generated header included first asf jira apache org hdfs define ssize window asf jira apache org hdfs locate protoc gen hrpc exe window asf jira apache org yarn set env var cross platform compatible way asf jira apache org phase setup ci hadoop window hadoop add dockerfile window asf jira apache org hadoop run ci window asf jira apache org really must setup ci hadoop window ensure never break phase resolving systemic issue hadoop winutils exe bug nexus killed axe asf jira apache org hadoop environment modeled closer linux window thus see lot functional gap running hadoop linux window become source bug come running hadoop window one issue winutils exe aim address issue like phase plan provide jni implementation platform unify common file system interface get stack trace exception thrown layer mostly disparity platform phase produce window distribution hadoop hadoop produce window binary hadoop asf jira apache org public able download install hadoop window computer thanks gautham"
    },
    "360":{
        "ID":43455,
        "MESSAGE_ID":"LO2P265MB44540AD35087673AF30B8BC2A7379@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43454.0,
        "SUBJECT":"Re: Apache Cassandra fuzz testing",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"many test currently purely manual hard maintain whenever add support say udts overnight get udts existing test yes something worth really highlighting many test flaky many test many low quality determinism reliability costly deliver fewer test able cover functionality investment reliability determinism easily pay also moving framework done heavy lifting anyway easier achieve agree area codebase might quite ripe kind work particularly complex cql feature one invested today near future mv seem obvious example part work move experimental status uncertain sai suitable use harry could explored"
    },
    "361":{
        "ID":43454,
        "MESSAGE_ID":"5149db8c-32f2-4c41-8079-94842f1063b5@www.fastmail.com",
        "PARENT_ID":43450.0,
        "SUBJECT":"Re: Apache Cassandra fuzz testing",
        "SENT_FROM":"\"Alex Petrov\" <alexp@coffeenco.de>",
        "TAGS":"existence",
        "BODY":"intend imply migrate test specific pick one harry make sense manual test cover ground group come mind perfect example current test suite rather limited fuzzing yield lot useful thing little risk flakiness completely replace existing test suite test many case another example selecttest many test like manual way go bunch case leaving many potential edge case ttl test would next example range tombstone yet another read repair test would also good expand many python dtests use stress load data another potential candidate many test currently purely manual hard maintain many good candidate switching property based benedict mentioned much bandwidth migrate test anyways could skeptical since much experience harry yet many feature still missing still powerful many existing manually written test whenever add support say udts overnight get udts existing test followed collection thing moreover able see test pas failure condition test different set parameter maybe reframe say add fuzz test mentioned area code point future decide manually written test redundant consider deprecating"
    },
    "363":{
        "ID":43452,
        "MESSAGE_ID":"LO2P265MB445454A804A0641CB9E46270A7379@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43451.0,
        "SUBJECT":"Re: Apache Cassandra fuzz testing",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sure lot bandwidth upgrading existing test anyway however source flakiness existing test primarily either environmental poor test design relying timing major culprit harry produce flakiness would higher likelihood real problem would reproducible test deterministic simulator hand might helpful flaky test deterministic might want develop junitrunner backed simulator easily switch help diagnose flaky test also improved testing concurrent code unit test probably would want use test however might well slow execution"
    },
    "364":{
        "ID":43451,
        "MESSAGE_ID":"CAPw+qV6ebW4iMC4fgRNcb6OBM23_ir8uz25Q_X2J4bYz1k=8Hg@mail.gmail.com",
        "PARENT_ID":43450.0,
        "SUBJECT":"Re: Apache Cassandra fuzz testing",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"benjamin email could written fully agree"
    },
    "365":{
        "ID":43450,
        "MESSAGE_ID":"CAAy+TbSxN6FLSyv5hBY3Ug9zyX_KF1GDvV-0GAJSBSoQBq=Bew@mail.gmail.com",
        "PARENT_ID":43422.0,
        "SUBJECT":"Re: Apache Cassandra fuzz testing",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks lot raising topic alex chance use harry yet guess case starting use new test make total sense concerned starting migrate update existing test took time build reliable non flaky test guarantee correctness codebase far see harry documentation feature still missing people lack experience tool take bit time build knowledge along way might also discover issue harry need addressed starting use new test build knowledge harry regarding migration existing test would wait bit choosing go path le mer fevr benedict apache org benedict apache org ecrit simulator hopefully going another powerful tool kind work encouraging use large complex piece work"
    },
    "374":{
        "ID":43441,
        "MESSAGE_ID":"CAHvM0uecJ46vP_qiaAR0j_p2xZd2TSm6DaRe-0dMMumiShhh6g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CASSANDRA-17292 Move cassandra.yaml toward a nested structure around major database concepts",
        "SENT_FROM":"Caleb Rackliffe <calebrackliffe@gmail.com>",
        "TAGS":"existence",
        "BODY":"hey everyone already slack discussion around anyone follow closely like lobby widely proposal cassandra eventually move cassandra yaml toward nested structure proposal already inline discussion feel free drop feedback jira depending comfortable given lead intention pushing adopt existing config release however think would nice could come rough consensus time inform work new parameter like planning add cassandra thanks"
    },
    "382":{
        "ID":43433,
        "MESSAGE_ID":"CACvH57+YsrLXSZjriJSn3=pozvymEKVLJX4MR0S88brceNFqHA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 4.0.3 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "393":{
        "ID":43422,
        "MESSAGE_ID":"LO2P265MB4454EE95EFFA07DC1A6936ACA7359@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43411.0,
        "SUBJECT":"Re: Apache Cassandra fuzz testing",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"simulator hopefully going another powerful tool kind work encouraging use large complex piece work"
    },
    "404":{
        "ID":43411,
        "MESSAGE_ID":"ebb50e9a-919b-47ce-8d00-089e393a1eee@www.fastmail.com",
        "PARENT_ID":43410.0,
        "SUBJECT":"Re: Apache Cassandra fuzz testing",
        "SENT_FROM":"\"Alex Petrov\" <alexp@coffeenco.de>",
        "TAGS":"existence",
        "BODY":"apology sending incomplete email hi everyone may know actively working fuzz testing apache cassandra past several year made quite large progress front cut release harry fuzz testing tool apache cassandra merged cassandra id recommend community take next logical step demand fuzz property based test marjor patch start migrating updating existing test property based rather using hardoced value harry used generate data check sequence event corresponds cassandra resolution rule continue expanding harry coverage writing new model checker would like learn harry refer recent blog post also happy answer question may harry assist writing test helping extend harry case feature may need accomplish thank alex github apache cassandra harry apache cassandra harry url cassandra quality coordination replication fuzz testing asf jira url apache cassandra apache cassandra documentation url"
    },
    "405":{
        "ID":43410,
        "MESSAGE_ID":"200e502d-0598-4a54-ba76-53318f0fb45f@www.fastmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Apache Cassandra fuzz testing",
        "SENT_FROM":"\"Alex Petrov\" <alexp@coffeenco.de>",
        "TAGS":"not-ak",
        "BODY":"hi everyone may know actively working fuzz testing apache cassandra past several year made quite large progress front"
    },
    "463":{
        "ID":43352,
        "MESSAGE_ID":"CAEyL1EH18wwkK5TYsWNrgFq4fkRmO2a45yydU=5AF3o93LPxtg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [RELEASE] Apache Cassandra 4.0.2 released",
        "SENT_FROM":"Erick Ramirez <erick.ramirez@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"moved dev bcc look like otc coalescing strategy config key longer supported cassandra yaml despite mentioned anywhere change txt news txt james right removed cassandra agree change txt entry clearer improve plus add detailed info news txt get done soon cassandra thanks feedback cheer"
    },
    "464":{
        "ID":43351,
        "MESSAGE_ID":"CA+Emchk+FF70sYc4mKyr-tiWzUXQjacXt=XEbNvfkanHwDkNCA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [RELEASE] Apache Cassandra 4.0.2 released",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"accidentally dropped dev adding back dev list hope someone dev list help address"
    },
    "473":{
        "ID":43342,
        "MESSAGE_ID":"c1dc20ba-debb-f295-b7e1-0f73eee30c90@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"CVE-2021-44521: Apache Cassandra: Remote code execution for scripted UDFs ",
        "SENT_FROM":"Marcus Eriksson <marcuse@apache.org>",
        "TAGS":"not-ak",
        "BODY":"severity high description running apache cassandra following configuration enable user defined function true enable scripted user defined function true enable user defined function thread false possible attacker execute arbitrary code host attacker would need enough permission create user defined function cluster able exploit note configuration documented unsafe continue considered unsafe cve issue tracked cassandra mitigation set enable user defined function thread true default user upgrade user upgrade user upgrade credit issue discovered omer kaspi jfrog security vulnerability research team"
    },
    "474":{
        "ID":43341,
        "MESSAGE_ID":"CACvH57LaS-bSzEybqJsbdZOCqRSFQNMSVYSuuLcgcHxp==_2Ag@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 4.0.2 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "476":{
        "ID":43339,
        "MESSAGE_ID":"CACvH57JJqgzJoPBy35Nb6dz=LYkro_RfkKe0jfe6NCE8pZA2bQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.26 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "484":{
        "ID":43331,
        "MESSAGE_ID":"CABY-Ywxx6bFfC1Ya0SKeT89ZAE7PTVYX8j1K8x_Bvwh26LaDHA@mail.gmail.com",
        "PARENT_ID":43320.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Branimir Lambov <blambov@apache.org>",
        "TAGS":"not-ak",
        "BODY":"let continue configuration discussion cep jira url comment alternate memtable ready vote regard branimir"
    },
    "495":{
        "ID":43320,
        "MESSAGE_ID":"fc50e8e7-b3be-5f3f-9153-6a032db73a6d@bso.ng",
        "PARENT_ID":43319.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Bowen Song <bowen@bso.ng>",
        "TAGS":"not-ak",
        "BODY":"honest opinion configuration want say end decide configuration yaml override table schema would like recommend specifying list whitelisted blacklisted template yaml file template chosen table schema used enabled otherwise fallback default template could first element whitelist used separate configuration entry blacklist used list optional yaml empty list absent mean everything enabled advantage require operator configure empty absent list default enables template work fine case allows operator whitelist blacklist template ever needed due bug also allow choose fallback option table schema priority long chosen template explicitly disabled yaml allows operator selectively disable template without forcing table use template specified yaml"
    },
    "496":{
        "ID":43319,
        "MESSAGE_ID":"LO2P265MB4454407652E8E8E8C7BDA86AA72E9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43318.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"default template specified schema without touching yaml overridden yaml necessary"
    },
    "497":{
        "ID":43318,
        "MESSAGE_ID":"CABY-YwxOZUWwi1BDpLJqd3OaHsG005aDyKJjcNc0Y_zmCT1sDw@mail.gmail.com",
        "PARENT_ID":43310.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Branimir Lambov <blambov@apache.org>",
        "TAGS":"existence",
        "BODY":"understand correctly prefer option give configuration explicitly schema force configuration template current term specified yaml allow table specify one use among sound least good happily change api regard branimir"
    },
    "505":{
        "ID":43310,
        "MESSAGE_ID":"DF52D14A-F9DF-4DE0-B150-FD4D0DEBA740@apache.org",
        "PARENT_ID":43309.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"quick reading code suggests schema override operator default preference yaml event bug new implementation could situation operator might need override via yaml"
    },
    "506":{
        "ID":43309,
        "MESSAGE_ID":"13524D41-A26A-4D3A-9A6D-81231FC3CE0D@gmail.com",
        "PARENT_ID":43305.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"really see user touching default implementation would expect main reason someone would change would run bug one implementation persistent memory want use url doubt people touch think good give advanced operator ability control switching thing new performance characteristic like idea proposed configuration approach allows someone change new implementation one node time specific table"
    },
    "507":{
        "ID":43308,
        "MESSAGE_ID":"LO2P265MB4454B9A13A82625BFC0EE6E7A72D9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43305.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"fwiw think proposed approach configuration fine think selecting choice user done simply deterministically probably default trie based memtables user fresh config file consider changing default later release old config file specify implementation"
    },
    "510":{
        "ID":43305,
        "MESSAGE_ID":"B2098E42-6261-4FCC-BE28-EA6226456A54@apache.org",
        "PARENT_ID":43279.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thank sharing perf test result going back schema yaml configuration concerned user may pick wrong implementation use case chance automatically pick memtable implementation based heuristic foresee user ever picking existing skiplist implementation trie given performance test seems trie implementation clear winner clear suggesting remove existing implementation maintaining pluggable api various component dinesh"
    },
    "532":{
        "ID":43283,
        "MESSAGE_ID":"A5320DF2-0B23-42FA-8F87-89F7D460E6F4@paradoxica.net",
        "PARENT_ID":43279.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"\"C. Scott Andreas\" <scott@paradoxica.net>",
        "TAGS":"not-ak",
        "BODY":"branimir thank sharing result number exciting particularly ucs test compaction keep note mentioning larger flush due compact memory representation great work scott"
    },
    "535":{
        "ID":43280,
        "MESSAGE_ID":"CAHyRp2TKmuq255aYRannOC9hyatkw1o5oZNhSyE-QP=H8ODO=Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2021-02-07",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"special need talk edition something interesting changed past two week first couple rotation build lead url need talk well brandon created lot test failure ticket lot mean url take look going butler see test failure rate either increasing holding steady current total test failure three version assume failure duplicate generous still leaf consistent test failure branch number test failure effectively leaf holding nose merging current non test fixing change slowly worsening already messy situation worth include trunk thing get differently murky plus side failure today whereas downside today test run trunk seem make mind ranging low failure high well active contributor undershooting illustrate point took test failure week next week enough drive failure across important keep clean test board thing like security cve data loss defect come along need able cut quick hotfix release without worrying whether introducing new regression critical production system running ga release line hard overstate critical project short outstanding question project tackled yet going resource fixing test wired butler jira identified new contributor know fixing failing test great way get know cassandra codebase actually seriousness jest due test tricky interesting quite educational opening area codebase worked always hit cassandra mentor cassandra dev channel asf slack server url convenience link kanban board currently identified failing test jira assigned yet url veritable cornucopia interesting work test failure bag ticket unassigned solid starter ticket line line could tackle url mailing list conversation url last two week seen momentum pick bit dev list highlight get engaged trie memtable thread got interesting updating today branimir attached performance number implementation compared current skip list url landed cassandra standardise config jvm parameter significant achievement ton work get across line congrats ekaterina email thread url thing aware around follow ekaterina sent list test suite misbehaving url ever lurking zombie conversation ant maven gradle risen dead url never really put bow past traditionally conversation fizzle outstanding request several today clear enumeration pro con value cost different build system either make decision project agree put rest revisit set amount time whomever decides take torch know horde people ready share opinion favored build system sure encouraging sharanf opened interesting much needed editorializing alert thread non java code contributing committers project url overloading term mean someone commit bit commits code someone committed project something stumbled upon past would love hear people think topic reference community apache org article committers url last least like call attention interesting discussion going around storage attached index sai including support initial cep url velocity closed issue line url highlight include broad fix intermittent jvm dtest failure cleaning bit passwordobfuscator packaging documentation kind minor polishing change love see low ordinal ga release issue closed line highlight significant increase vintcoding speed standardizing config jvm parameter mentioned removal window specific class clean vestigial bit codebase bittersweet one general tidying around old python version test fix ci status see rough nothing fix put mind cover today thanks everyone reading contribution project josh"
    },
    "536":{
        "ID":43279,
        "MESSAGE_ID":"CABY-YwwikmiLoZ3Th8UbEo9gsqXwsW56XUzYXQbG1kE5OHS7uw@mail.gmail.com",
        "PARENT_ID":43265.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Branimir Lambov <blambov@apache.org>",
        "TAGS":"not-ak",
        "BODY":"added performance result ticket url"
    },
    "548":{
        "ID":43267,
        "MESSAGE_ID":"D0B1D47A-71BD-4F9D-81B8-81FF2F1BCDAA@apache.org",
        "PARENT_ID":43262.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"spent lot time discussing topic actually trying arrive decision everyone strong opinion build tool project use tool strength weakness today gradle best tool java based project experience perfect tool weakness learning curve however use case add change existing dependency producing artifact triggering test run build tool fine tiny learning curve activity rest going complicated require research matter tool end picking true ant well anybody want drive forward enumerate tool associated pro con dinesh"
    },
    "550":{
        "ID":43265,
        "MESSAGE_ID":"007CFC73-1961-4EE5-B280-F19D4239EE99@apache.org",
        "PARENT_ID":43130.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"excellent thanks opening cep would great get stats around gc allocation rate memory pressure read write latency etc compared existing implementation dinesh"
    },
    "553":{
        "ID":43262,
        "MESSAGE_ID":"CACvH57+3iuw-4RJfhD_nNfz3hbDhBW-JihPp6e6dixL1_qno-g@mail.gmail.com",
        "PARENT_ID":43243.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think build tool lot scripting involved build script well jenkins pipeline seconding rewriting build system easy bit ecosystem ci release ccm etc involved versioned expects branch work way impossible even challenging def involved"
    },
    "563":{
        "ID":43252,
        "MESSAGE_ID":"LO2P265MB4454599BE780100A681FB284A7289@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43251.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"get pro con list ranked choice vote move forward maybe agree revisit year least"
    },
    "564":{
        "ID":43251,
        "MESSAGE_ID":"CAHyRp2QseaxbUetgCn4yo6A5iT+K07usW0ktd+gCO0HECSoZPQ@mail.gmail.com",
        "PARENT_ID":43250.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"could someone take clearly enumerating pro con ant maven without clarity going keep stagnating war unsubstantiated opinion fizzle like many time past like see either change topic put rest"
    },
    "566":{
        "ID":43249,
        "MESSAGE_ID":"LO2P265MB44541B51278EDAA1D805E372A7289@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43248.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"gut build xml probably lot realise pretend maven dependency management small part job build file"
    },
    "568":{
        "ID":43247,
        "MESSAGE_ID":"LO2P265MB4454B2C7E74A1F9478A73B77A7289@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43246.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"took massive productivity hit jvm dtests landed codebase introduced new capability well understood outcome time proposing replacing something work fine something work equivalently build file consumed user also edited everyone project familiar navigate edit lost migration sure like migration justified benefit see anything specific besides ant old people surprised use work sometimes thing might painful folk true new build system"
    },
    "569":{
        "ID":43246,
        "MESSAGE_ID":"CAKaZCX7zsZDg5eS8ucctDuq7c0=6S2eUyN4GPsjnLtCfm+N5TA@mail.gmail.com",
        "PARENT_ID":43245.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"technology",
        "BODY":"productive today ant almost certainly take productivity hit sometime migration maven others took massive productivity hit jvm dtests landed codebase consideration framework added perceived net gain project long term case productivity hit definitely worth think case personally think productivity hit adopting new build tool noticeable nothing catch couple week order block effort feeling perhaps make reducing productivity hit explicit goal undertaking ie enumerate potential productivity hit make ux look close possible current could helpful come concrete list benefit downside adopting new build tool allow community decide whether change worth pursuing qui de fev de benedict apache org benedict apache org escreveu aleksei proven able deliver work quality push thing forward willing try tackle work questioning ability deliver questioning value burdening project migration productive today ant almost certainly take productivity hit sometime migration maven others"
    },
    "570":{
        "ID":43245,
        "MESSAGE_ID":"LO2P265MB4454EB4C78ACDD6EF7FBC8FBA7289@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43244.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"aleksei proven able deliver work quality push thing forward willing try tackle work questioning ability deliver questioning value burdening project migration productive today ant almost certainly take productivity hit sometime migration maven others"
    },
    "571":{
        "ID":43244,
        "MESSAGE_ID":"CAAy+TbQw4yP4hvTZnQYBx60K00Muup4abTWVs5x8WHHQ7g5PBQ@mail.gmail.com",
        "PARENT_ID":43242.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"super strong desire stay ant desire unduly burden project unnecessary churn tooling change quite painful aleksei proven able deliver work quality push thing forward willing try tackle work favor giving chance fully agree simple task also convinced people might interested joining effort regard contribution often brought reality project always struggled bring new ongoing contributor large part due barrier entry complex project grown expectation patch quality gone struggle believe ant rounding error efficacy since always struggled think found way around barrier entry trigger another discussion le jeu fevr benedict apache org benedict apache org ecrit super strong desire stay ant desire unduly burden project unnecessary churn tooling change quite painful regard contribution often brought reality project always struggled bring new ongoing contributor large part due barrier entry complex project grown expectation patch quality gone struggle believe ant rounding error efficacy since always struggled struggling actually use ant want another matter easy forget much work ant forget thing pain adopting new build system frustration gradle month ant decade sure maven better doubt without issue"
    },
    "572":{
        "ID":43243,
        "MESSAGE_ID":"CAPw+qV7wSDaObdXgHdCZ_XPPE_s4zXYZztvXBGEy18qPZ6cQZQ@mail.gmail.com",
        "PARENT_ID":43242.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"think build tool lot scripting involved build script well jenkins pipeline sure make transition like testing people developing time problem like parallelisation test among multiple jenkins worker need tried see make sense quite challenge one guy accomplish aleksei one"
    },
    "573":{
        "ID":43242,
        "MESSAGE_ID":"LO2P265MB445458C71EE01A8C4C675B35A7289@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43241.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"super strong desire stay ant desire unduly burden project unnecessary churn tooling change quite painful regard contribution often brought reality project always struggled bring new ongoing contributor large part due barrier entry complex project grown expectation patch quality gone struggle believe ant rounding error efficacy since always struggled struggling actually use ant want another matter easy forget much work ant forget thing pain adopting new build system frustration gradle month ant decade sure maven better doubt without issue"
    },
    "574":{
        "ID":43241,
        "MESSAGE_ID":"CAAy+TbTxkSUWLLz6_O4DoiAkjuy0M=2kJZCtYBPN4ScgGJR0+w@mail.gmail.com",
        "PARENT_ID":43238.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"technology",
        "BODY":"think main issue aleksei correct ant pretty old lot newcomer unfamiliar surprised consequence might slow boarding newcomer want make smooth possible aleksei working migrating test junit faced multiple issue ant provided five new feature ant project fix problem encountered got rejected totally agree feeling current solution work staying also valid choice like ant question really ant make sense future cassandra feedback got start doubt case le jeu fevr benedict apache org benedict apache org ecrit going killjoy query value changing build system brings outweighs disruption current long term contributor easily get thing done today least ranked choice vote includes today build system"
    },
    "575":{
        "ID":43240,
        "MESSAGE_ID":"CAAy+TbQz5+LqCz5ZcSOpy1uF7WZPfcL+1DXUoCWgosdHWEZhOg@mail.gmail.com",
        "PARENT_ID":43239.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks opening discussion aleksei also favor maven previous experience graddle great le jeu fevr berenguer blasi berenguerblasi gmail com ecrit hi similar experience gradle super powerful suddenly becomes one thing plate demanding attention every maven forget unless need actual change build strong opinion happy happy maven regard"
    },
    "576":{
        "ID":43239,
        "MESSAGE_ID":"7fdabb25-d270-1177-b2b5-68d49a8d1542@gmail.com",
        "PARENT_ID":43237.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi similar experience gradle super powerful suddenly becomes one thing plate demanding attention every maven forget unless need actual change build strong opinion happy happy maven regard"
    },
    "577":{
        "ID":43238,
        "MESSAGE_ID":"LO2P265MB4454B4642908F3605A16281CA7289@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43237.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"going killjoy query value changing build system brings outweighs disruption current long term contributor easily get thing done today least ranked choice vote includes today build system"
    },
    "578":{
        "ID":43237,
        "MESSAGE_ID":"CADLdS1ocxwR0ZViFcNuptDZHd6+eXSKGLRrD1UKzk6KhX717cg@mail.gmail.com",
        "PARENT_ID":43236.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Maulin Vasavada <maulin.vasavada@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi alekseii thinking build tool used maven gradle experience gradle rich dsl corresponding power constant change gradle across version difficult focus actual product like cassandra case development maven learning change much one focus actual product better course imho using maven would like participate migration build tool need hand thanksmaulin"
    },
    "579":{
        "ID":43236,
        "MESSAGE_ID":"pony-4eb07cb8-6b64-4814-accd-3cc27dd3e89b-dev@cassandra.apache.org",
        "PARENT_ID":39089.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Aleksei Zotov <azotcsit@apache.org>",
        "TAGS":"technology",
        "BODY":"hi time ago created url migrate ant maven gradle originally going implement compare pick best term project need however feel would significant overhead try therefore would like make collective decision build tool starting actual work saw slack url many people prefer maven leaning towards maven well guess need formal poll build tool since significant part project please suggest best way proceed raise vote maven see someone favor gradle please bear mind robert already made progress gradle migration know much done whether willing get completed"
    },
    "656":{
        "ID":43159,
        "MESSAGE_ID":"CAHyRp2RDA5=Mb_8hUOBmQpnFWO9ckP-k5_dkU47o+WyPwLwQaQ@mail.gmail.com",
        "PARENT_ID":43129.0,
        "SUBJECT":"Re: [DICSUSS] Marketing contributions",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"particularly influenced mental model thinking open source contribution past url article url lot article focus quite bit vendor monetization open source somewhat distasteful topic many community historically find model image pretty compelling fairly github central proposes following tier least engaged invested watcher aware active star gh user downloading using project dnloads docker pull etc revision project contributor opening jira issue gh issue bugfixes engaging ml slack addition code contributor submitting pr reviewing code committers maintainerseach group different metric engagement project could measure gauge whether action good job encouraging engagement participation group also different need crawl walk run figured mental model may useful others going strong encouraging understanding engaging group barrier entry pretty high due fixed complexity system think decently well improving status update better curated lhf advent calendar mentoring etc josh"
    },
    "685":{
        "ID":43130,
        "MESSAGE_ID":"CABY-YwxO1wzt5F2R8nVkR5ZL9cBjZ8n9g7UEGTc4A1DznARbrA@mail.gmail.com",
        "PARENT_ID":43127.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Branimir Lambov <blambov@apache.org>",
        "TAGS":"existence",
        "BODY":"memtable pluggability api cep per table enable memtable selection suit specific workflow also make full sense permit per node configuration able modify configuration suit heterogeneous deployment better well test change improvement one recognizing patch come modification api defines memtable template cassandra yaml per node allows schema select template addition able specify full memtable configuration one could use adding memtable template trie class triememtable shard skiplist class skiplistmemtablememtable template skiplist defines two template specifies default memtable implementation use cassandra yaml specifying memtable template trie table schema intend commit modification memtable api cassandra cep performance comparison published soon regard branimir"
    },
    "686":{
        "ID":43129,
        "MESSAGE_ID":"CAAVvJT-5mRFVqwfUQFXeqLq5yaL8G_5z06bvZEAqBZdBPpdEAA@mail.gmail.com",
        "PARENT_ID":43125.0,
        "SUBJECT":"Re: [DICSUSS] Marketing contributions",
        "SENT_FROM":"Melissa Logan <loganloganlogan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks benjamin regarding contributor say make sense discus way highlight monthly changelog interview site etc user beyond case study page changelog blog discus way thank interact erick thanks comment deck others please share input plan idea recommendation section best support thanks"
    },
    "688":{
        "ID":43127,
        "MESSAGE_ID":"C48A9EB7-081C-4178-B9E2-CF74CE84EF0F@gmail.com",
        "PARENT_ID":43065.0,
        "SUBJECT":"Re: [DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sound like great additioncan share detail around gc latency improvement observed list specific reason confirmation schema yaml presumably user test per table change every host cluster impact bug regression much higher"
    },
    "690":{
        "ID":43125,
        "MESSAGE_ID":"CAAy+TbQSCdA6q0_+ZRe8vxGq-f1ZFDu5AmfTP1cX05miciLoMg@mail.gmail.com",
        "PARENT_ID":43123.0,
        "SUBJECT":"Re: [DICSUSS] Marketing contributions",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sound great community mean build use folk dev list number way showcase general goal growing number contributor committers worked ekaterina last year get piece published could url see circle community user contributor committers pmc member officially recognize transition committer status pmc member status email pmc member public announcement anything contributor area believe improve contributing requires effort officially recognize effort let people know noticed thankful simple thing like mentioning first contribution monthly update tweeting thanking people constant effort time see people keep answering question user mailing list never really talk even amazing job see important contributor important officially recognize contributor circle regarding user feel need thank trust often open door many exchange possible le jeu janv melissa logan loganloganlogan gmail com ecrit thanks benjamin one critical part try put forward community"
    },
    "692":{
        "ID":43123,
        "MESSAGE_ID":"CAAVvJT-LiPi1R-hi=M5Gwj4LaS-GuMfnCV=JH6x5vqrLsU_-wA@mail.gmail.com",
        "PARENT_ID":43121.0,
        "SUBJECT":"Re: [DICSUSS] Marketing contributions",
        "SENT_FROM":"Melissa Logan <loganloganlogan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks benjamin one critical part try put forward community"
    },
    "694":{
        "ID":43121,
        "MESSAGE_ID":"CAAy+TbS3L3ZD+GnCRG-uuPw=LeNd0orQRJHK91rEH+P94i7Jdw@mail.gmail.com",
        "PARENT_ID":43118.0,
        "SUBJECT":"Re: [DICSUSS] Marketing contributions",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"melissa chris diogenese thanks lot everything propose sound great one critical part try put forward community twitter people quite responsive great community make sure people feel belong know pushing content website frustrating issue understanding problem fact due tooling ongoing work documentation availability committers believe situation improve future one question would possible blog hosted real blog platform manage find discussion le jeu janv melissa logan loganloganlogan gmail com ecrit chris thornett diogenese topper compiled recap marketing work contributed cassandra also developed recommended approach aim resource advance community interest would greatly appreciate input deck url recommended approach aligned community want achieve year would modify community thought item idea recommendation section idea represented could help generally speaking working appreciate feedback best support one key challenge getting website pull request blog homepage update etc committed timely manner thousand daily visitor see current info grateful ongoing support mick erick et al wonder others could pitch ongoing typically one commit per week discussed cassandra website channel appreciate consideration looking forward input melissa"
    },
    "697":{
        "ID":43118,
        "MESSAGE_ID":"CAAVvJT9a1AQS_EjHH_R3a3ZDbxyG7CL3qooZ9u4EJSXm0cChLg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DICSUSS] Marketing contributions",
        "SENT_FROM":"Melissa Logan <loganloganlogan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"chris thornett diogenese topper compiled recap marketing work contributed cassandra also developed recommended approach aim resource advance community interest would greatly appreciate input deck url recommended approach aligned community want achieve year would modify community thought item idea recommendation section idea represented could help generally speaking working appreciate feedback best support one key challenge getting website pull request blog homepage update etc committed timely manner thousand daily visitor see current info grateful ongoing support mick erick et al wonder others could pitch ongoing typically one commit per week discussed cassandra website channel appreciate consideration looking forward input melissa"
    },
    "734":{
        "ID":43081,
        "MESSAGE_ID":"CAN+t3-jqX-+ZPTOy0RsZVoOFg5imSG-mrB8zR4DMrn=mSgbk2A@mail.gmail.com",
        "PARENT_ID":43068.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi anthony great news thanks everyone work time invested imho doc important well written code would reopen fix problem would open new ticket project guideline around would think scenario new ticket would created sure particular guideline written somewhere normally open new ticket link old one organizing work think idea splitting area doc opening ticket per package maybe sound reasonable cover case ticket time area code reworking time doc suggest still labeling mentioned sound like good idea also benjamin idea"
    },
    "746":{
        "ID":43069,
        "MESSAGE_ID":"CAHyRp2SdO3v37kOhN5Z1SR_ruh2C3-QLkgbqWc6BJwFehB7_wQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Formalizing our CI process",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"wiki draft article url vote open hour short early indication discussion consensus committer pmc vote binding simple majority pass reference background original ml thread url governance guideline url"
    },
    "747":{
        "ID":43068,
        "MESSAGE_ID":"CAAy+TbQj=rJW+wtL1AA=Z0PiBoAk2jrE5BaN1JP6FAbYT7d6Qg@mail.gmail.com",
        "PARENT_ID":43064.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"seems could use work attract new contributor provide clear process divide work small chunk advertise work twitter get volunteer le lun janv anthony grasso anthony grasso gmail com ecrit hi stefan ekaterina first point note cassandra closed big thank lorina poland converting cassandra documentation restructuredtext asciidoc mick semb wever working holiday period get ticket line point start documentation back porting work thanks effort like stefan idea tagging ticket documentation change label like need doc backported ekaterina point reopen old ticket would get confusing people unfamiliar documentation work going alternative create new ticket old ticket practical perspective think labelling reopening old ticket lesser two evil however approach point view piece work project consider case ticket cassandra xyz committed patch resolved later found issue due implementation feature later added would reopen fix problem would open new ticket project guideline around would think scenario new ticket would created anycase feel need resolve issue track work first figure divide kind regard anthony"
    },
    "750":{
        "ID":43065,
        "MESSAGE_ID":"CABY-Ywxw3NLZ1XQpb72rxAkpBOLUvjYwxautjOja3M9jQH3CTQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CEP-19: Trie memtable implementation",
        "SENT_FROM":"Branimir Lambov <blambov@apache.org>",
        "TAGS":"existence, property",
        "BODY":"would like contribute triememtable cassandra url new memtable solution aimed replace legacy implementation developed following objective lowering heap complexity ability store memtable indexing structure heap leveraging byte order trie structure lower memory footprint improve mutation lookup performance new memtable relies cassandra translate byte ordered representation type cassandra cep plug cassandra memtable built multiple shard custom memory single writer multiple reader try whose implementation us combination state art novel feature greater efficiency cep jira ticket url contains initial version implementation current form achieves much better garbage collection latency significantly bigger data size flush memory allocation well drastically increased write throughput expect memory garbage collection improvement go much upcoming improvement solution interested hearing thought proposal regard branimir"
    },
    "751":{
        "ID":43064,
        "MESSAGE_ID":"CAGbQL+W0vP0eLMu9GpnbEWuwv67HB+Ti+Cs2np5mfz6SYE=oMw@mail.gmail.com",
        "PARENT_ID":42448.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Anthony Grasso <anthony.grasso@gmail.com>",
        "TAGS":"process",
        "BODY":"hi stefan ekaterina first point note cassandra closed big thank lorina poland converting cassandra documentation restructuredtext asciidoc mick semb wever working holiday period get ticket line point start documentation back porting work thanks effort like stefan idea tagging ticket documentation change label like need doc backported ekaterina point reopen old ticket would get confusing people unfamiliar documentation work going alternative create new ticket old ticket practical perspective think labelling reopening old ticket lesser two evil however approach point view piece work project consider case ticket cassandra xyz committed patch resolved later found issue due implementation feature later added would reopen fix problem would open new ticket project guideline around would think scenario new ticket would created anycase feel need resolve issue track work first figure divide kind regard anthony"
    },
    "760":{
        "ID":43055,
        "MESSAGE_ID":"CAHyRp2QOsnnpLo6herqH5YKeOBZghq4WKc77ejemOAG0nv11_g@mail.gmail.com",
        "PARENT_ID":43054.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"see merge commit history normal presume contain additional change branch parent commit getting merged noodling bit think question degree see merge commit intuitive expectation take context application different move claim taken context actually take symbolically change manually applied separate motion applying hand crafted patch branch merge honest case merge branch think status quo largely fine trivial change merge commit branch also find trivial patch application uninteresting simple enough either merge strategy fine said definitively advocating different merge strategy based size patch whether necessitates trying explore nuance behind reaction status quo"
    },
    "761":{
        "ID":43054,
        "MESSAGE_ID":"LO2P265MB44542F81D3215D0264C1D1FDA74C9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43046.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"one advantage merge commits review branch potentially easier merge commit help direct reviewer attention however experience focus review main branch anyway separate ticket track backports permitting occur band could improve quality review also likely synthesise merge commits purpose review using something like git checkout patch git checkout patch review git merge patch git merge commit patch git checkout patch git commit"
    },
    "768":{
        "ID":43047,
        "MESSAGE_ID":"LO2P265MB44544B062FE8ADC0DF4B3FAEA74B9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43042.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think simple consistent reliable unavoidable killer feature qa feature give take industry standard approach using ci hook gate pr merge"
    },
    "769":{
        "ID":43046,
        "MESSAGE_ID":"LO2P265MB44549BE78D6E7D7B592165A9A74B9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43045.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"see merge commit history normal presume contain additional change branch parent commit getting merged sure exceptionally non trivial treat work single different standard ux practice becomes diffs none tell whole story bleed legacy detail earlier branch genuine significant pain point archaeology something others quite frequently large part want see gone folk forget pull rebase go push realise one patch branch need rebasing rework rework may make reconsider patch going branch conversely exceptionally painful maintaining branch fork attest pain maintaining branch may committed atomically wasted literal person week time project recall experiencing significant benefit return start text searching git history yes simple non issue surely must search git log semi regularly frequent part job developing project experience developing patch hardest branch first working softer branch know important found useful practice encourages smaller precise patch overall think strategy determines branch first developed however would seem clear mark current system incentivises fully developing oldest version forward porting entirety developing primarily recent branch incentivises back porting minimal version work scope work fully understood"
    },
    "770":{
        "ID":43045,
        "MESSAGE_ID":"CACvH57+j_==HVJO4yBvi-Mf5xioFU9KJbkLNsKoQgDUXH+O=pw@mail.gmail.com",
        "PARENT_ID":43042.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hide change inside merge committhis merge commits see merge commit history normal presume contain additional change branch parent commit getting merged exposed race committers across multiple branch requiring atomicthis positive imho folk forget pull rebase go push realise one patch branch need rebasing rework rework may make reconsider patch going branch devil know bi directional relationship patch showing branch applied original commit merge commits see branch original commit applied see mongo example henrik see branch trunk commit committed start text searching git history going ticket system developing patch hardest branch first working softer branch know important found useful practice encourages smaller precise patch overall agree want defined end goal experimenting testing simpler cleaner approach"
    },
    "771":{
        "ID":43044,
        "MESSAGE_ID":"CAHyRp2RLgeoVJOJbZCjmiXovnoh_YA18brgQLtcUdEh9jJJUsQ@mail.gmail.com",
        "PARENT_ID":43037.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"could note wiki comment section ekaterina url"
    },
    "772":{
        "ID":43043,
        "MESSAGE_ID":"CAHyRp2Qpi++bG6+nsWof+1fhdwjFSWeN6cOHe8mR4CiyFMm-Fw@mail.gmail.com",
        "PARENT_ID":43042.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"wise man said simple feature unfamiliar reference sentiment jonathan expressed year strongly agree url"
    },
    "773":{
        "ID":43042,
        "MESSAGE_ID":"CAHyRp2Qijord7aP=5gz63Q=4UUkNGG2V4nfdHaTm5jX1zs54sQ@mail.gmail.com",
        "PARENT_ID":43041.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"wise man said simple feature current process commit oldest merge merge amend confusing new contributor understand hide change inside merge commit mask future ability see thing git attribute commits exposed race committers across multiple branch requiring atomic non automatable requiring human intervention prone error prevents using industry standard tooling workflow around ci thus contributing ci degrading time help enforce forget apply something branch devil knowthat lot negative fixable single positive fud"
    },
    "774":{
        "ID":43041,
        "MESSAGE_ID":"LO2P265MB4454366D2555E2818C619F11A74A9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43040.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"answer point anything ideologically temporary divergence treatment clear unified endpoint aiming would hate discussion end without clear answer endpoint though even get immediately personally dislike idea relying script enforce least long run uniformity environment uniformity process thing go wrong due diverging system creating additional work people ci headache enough go wrong"
    },
    "775":{
        "ID":43040,
        "MESSAGE_ID":"LO2P265MB4454BCC4A89CCF8370F6D6D7A74A9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":43039.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sound terribly complicated view switch branch strategy outlined henrik happen prefer anyway move github integration control merge branch independently simple"
    },
    "776":{
        "ID":43039,
        "MESSAGE_ID":"74411545-AF03-4A12-93A3-766151B9F70D@apple.com",
        "PARENT_ID":43036.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"David Capwell <dcapwell@apple.com>",
        "TAGS":"not-ak",
        "BODY":"think anyway strongly bifurcated commit process decide uniform commit process whole project patch whatever may making process stable handle random thing need handle take lot time reason strongly feel start trunk look expand branch handle multi branch commits agree branch different process feel ok evolving process merge commit thing automate think josh want os script current process blocker automation thing hate found tool able understand history force go cli figure merge actually changed thing smallest version displayed properly favor removing think dependency automating merge process"
    },
    "778":{
        "ID":43037,
        "MESSAGE_ID":"CAN+t3-gs-oXCvxp=uxMV5JRsAeE3xc1bh3wSC3x9RPLz3jNHNQ@mail.gmail.com",
        "PARENT_ID":43035.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hey josh thank leading discussion organizing wiki page also mail wanted mention point pending work draft version circleci usage also andres updated rst document around running test loop etc pending merge ascii doc convert work add correct link change happened since wrote last year saying awareness anyone decides make write knowing draft already exists thanks ekaterina"
    },
    "779":{
        "ID":43036,
        "MESSAGE_ID":"CAHyRp2RCYVagRtNO4VE-=RnwWFsYibrSTC4sfZ639WQ+aL_oDA@mail.gmail.com",
        "PARENT_ID":42990.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"put together draft confluence wiki page login required build lead role covering discussed thread link url potentially controversial thing text consistent test failure introduced different trunk consistent git revert sha introduced failure open original jira ticket leave note original assignee breakage introduced would apply patch trunk introduce consistent failure test clearly attributable patch deferring topic merge strategy lot progress make without considering controversial topic yet"
    },
    "780":{
        "ID":43035,
        "MESSAGE_ID":"CAHyRp2StooF0FR781LCYawRYAAG+yWNgcoC8O0NUjrCMVESkqg@mail.gmail.com",
        "PARENT_ID":42986.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"link draft article confluence wiki covering discussed thread url article accurately capture discussed well outstanding work get published integrated confluence wiki get remainder work jira epic tracked"
    },
    "781":{
        "ID":43034,
        "MESSAGE_ID":"CAHyRp2QLcZzfDtm9ztez_kh=QFCzSoV-ZKY3sRf+h+G=KOyFBw@mail.gmail.com",
        "PARENT_ID":43033.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"follow chris slack looking couple update site well complement workflow nicely"
    },
    "782":{
        "ID":43033,
        "MESSAGE_ID":"CALBD=Z0myN1=-ifP9SzKP0e0-rVpjLUiasF4PnF4VsxN+xEi6g@mail.gmail.com",
        "PARENT_ID":43032.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Melissa Logan <melissa@constantia.io>",
        "TAGS":"not-ak",
        "BODY":"josh shall add detail monthly changelog blog chris draft us recap basis shared cassandra website channel example url"
    },
    "783":{
        "ID":43032,
        "MESSAGE_ID":"CAHyRp2R3S614pzKDibT6cLgRkDqQsGdMUdNRUv5vrMthG8-0qA@mail.gmail.com",
        "PARENT_ID":43030.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"could post blog well always wanted blogger sound like chance seriousness think great idea find need know make happen make"
    },
    "785":{
        "ID":43030,
        "MESSAGE_ID":"CAGY8e-68Zga0UAx_OJViX+nuJZW-RM+GmrCOSnTXSWtNVdohkQ@mail.gmail.com",
        "PARENT_ID":43029.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"elli said"
    },
    "786":{
        "ID":43029,
        "MESSAGE_ID":"CALdd-zhyCsxCtFiXHpPkggwPTog+Mz716n4-29r2h5vRqn1sQQ@mail.gmail.com",
        "PARENT_ID":43028.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"could post blog well reach wider audience"
    },
    "787":{
        "ID":43028,
        "MESSAGE_ID":"CACvH57LDN6W2_GinC7Mob0j6nUgZoLVqouYZTTCxD_5-YCO5VA@mail.gmail.com",
        "PARENT_ID":43025.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"wave happy everyone incredibly encouraging see active project look forward seeing thing evolve upcoming significant cep feature year thanks everyone update really awesome josh also big part project new activity thanks keeping"
    },
    "788":{
        "ID":43027,
        "MESSAGE_ID":"CAHyRp2QMFzXfGixOM8LmQMSn3d2QzXpgC+0HFYDPz19S1oFuWA@mail.gmail.com",
        "PARENT_ID":43026.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"assuming talking list ticket mentor empty jira url loosely related list ticket sent one flagged appropriate newcomer project may may yet mentor associated likely unassigned per filter expect workflow look something like individual find ticket topic interest ping cassandra dev cassandra mentor handle find mentor assist ticket question add mentor ticket move forwardi add biweekly email going forward first saw slack handle action seven day ago fresh help clarify josh"
    },
    "789":{
        "ID":43026,
        "MESSAGE_ID":"CAOFd6igzf_-EJXP2fdtJrNgbf6sqs6E=4Zq3bf75mMe8HZ-GGQ@mail.gmail.com",
        "PARENT_ID":43025.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Manish G <manish.c.ghildiyal@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"already list ticket mentor associated lhfs also fall category"
    },
    "790":{
        "ID":43025,
        "MESSAGE_ID":"CAHyRp2TxK+AF+GojDdNEjjB53Vegf5=oOHGfHqY3hvkvuzF3+A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2022-01-03",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"wave happy everyone new contributor getting started two curated option getting started new project looking get oriented failing test starter ticket label lhf low hanging fruit let either fool almost always interesting work depth expected first glance yay mature distributed infrastructure software query failing test url unassigned starter ticket url bumped bit open test failure ticket unassigned choose good starter ticket evenly split next minor release next major feel free self select list reach slack want guidance get involved good year start getting involved coding think dev list discussion past day url slightly le chatty usual past couple week expected still interesting thing discus cut next major release early sign consensus url version release snapshot early sign much consensus url various sundry mostly around irritated failing test try merge thing trying figure kill problem fire grand well established tradition project stretching back year ticket closed past day url surprisingly thing slow close front total minimal thing plus side mean picking patch back work flight jan require minimal rebasing ticket need attention need reviewer url needing review holding steady going get little bit active trying track provide review thing list patch rotting people drag thing forward via repeated rebasing due lack review personal favorite test failure trendlines butler url branch holding steady trending slightly expect lifecycle holiday season trunk varied discussing cassandra dev slack workflow way make butler jira relationship bit turnkey introduction build lead role draft wikis review shortly incredibly encouraging see active project look forward seeing thing evolve upcoming significant cep feature year thanks everyone josh"
    },
    "824":{
        "ID":42991,
        "MESSAGE_ID":"CAFvGCn=KYV7N=C=1np8fo91cdfU9gVHbcVM+Ldvp6CE7B7zTwQ@mail.gmail.com",
        "PARENT_ID":42955.0,
        "SUBJECT":"Re: [DISCUSS] Periodic snapshot publishing with minor version bumps",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"observation proposal reading thread arguing one particular always increase first digit real releasesthe potential confusion version stable release avoided following mick proposal always increasing first number actual major release maybe exactly semver though seems would work project want example major release bug fix quarterly snapshot next major release note would also leave opportunity someone wish release fix one snapshot release use alpha snapshotsthe project could choose use alpha alpha alpha snapshot note prevent also releasing traditional alpha release prior major release would alpha alpha henrik"
    },
    "825":{
        "ID":42990,
        "MESSAGE_ID":"CAFvGCn=PTJmcTws6mEHksAag-MBnriErdUDE1_6FBDZRfNL-KA@mail.gmail.com",
        "PARENT_ID":42947.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"fwiw thought could link example mongodb commit url fix start trunk whatever highest version includes bug cherry picked stable version need fix link example cherry pick original sha referenced commit message found make sense always cherry pick immediate higher version since make change previous commit probably need next one well merge commits everything always cherry picked rebased top branch since mentioned mongodb indeed track cherry picking process explicitly original server ticket closed fix committed trunk branch however new backport ticket created linked server ticket one per stable version need cherry pick way backporting fix never forgotten team track open backprt ticket work close henrik"
    },
    "829":{
        "ID":42986,
        "MESSAGE_ID":"CAHyRp2RDqK7f6-KohcEu--UtEarFz9LEYjA+fZCp+O-Jhm3jow@mail.gmail.com",
        "PARENT_ID":42985.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"get draft article wiki collab outstanding tbd without cluttering dev list"
    },
    "830":{
        "ID":42985,
        "MESSAGE_ID":"CAN+t3-gqu08P2H6WS4D=7L_1Vfgc+Jhv47cbAH-nEvWAmSN91Q@mail.gmail.com",
        "PARENT_ID":42984.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"indeed good call thought addressed separate document discus required test suite run pre commit guess add thing"
    },
    "831":{
        "ID":42984,
        "MESSAGE_ID":"CAHyRp2R9t64hiN4zMF6o3ZPbi6-YG8JBYX+9tkm3Q0z0v3JEXg@mail.gmail.com",
        "PARENT_ID":42983.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"good call thanks reminder maybe add run new modified test either local remote multiplexer tbd time link instruction etc non regressing defined merging ticket"
    },
    "832":{
        "ID":42983,
        "MESSAGE_ID":"CAAafH9RVyFtC94MPJDQgZmiKZB9q54ZqM+PPRkviCcgi+F51Bw@mail.gmail.com",
        "PARENT_ID":42982.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"could also add something running new test multiplexer"
    },
    "833":{
        "ID":42982,
        "MESSAGE_ID":"CAHyRp2TcCeobuPseSuntvBabjNLCbaAzkqEWEj5yC0q-fXVhpw@mail.gmail.com",
        "PARENT_ID":42981.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"clarify one place proposed new ci process test consensus canonical ci release ci cassandra optionally practice run circle well codify blocking new release unless get fully green run merge need either non regressing new failure run circleci specific suite test tbd ci cassandra non regressing defined introduce new test failure new failure ci clearly attributable different new merging ticket ci cassandra run sha author get advisory update related jira new error ci author ticket take point triaging new failure either fixing clearly reproducible related work opening jira intermittent failure linking butler url new build lead role butler catch document failure anything slip procedural crack resourcing fixing flakey test tbd two tbd tackle separately consensus suite test circle required considered ready merge resource fixing flakey test functionally impossible attribute without essentially fixing flake"
    },
    "834":{
        "ID":42981,
        "MESSAGE_ID":"CAN+t3-g57MnthnkLoA49_4L2jQ_870QqhNF85Ri2Yt1-9x_29g@mail.gmail.com",
        "PARENT_ID":42980.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"nb end second mick thanks putting together josh"
    },
    "835":{
        "ID":42980,
        "MESSAGE_ID":"CACvH57+0qOC0Y8pz=-eS4OJWcNQ5vq5hv5VoXgL6wYU_9ckrKg@mail.gmail.com",
        "PARENT_ID":42979.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yup important missing piece also would mind word responsibility author post commit fault involved leading fix incentivises people properly push onto build role"
    },
    "836":{
        "ID":42979,
        "MESSAGE_ID":"CAHyRp2QdP_BpiS1_s3=akMG1RmSXOiU6SLkPGpg_4KVr5aSr_A@mail.gmail.com",
        "PARENT_ID":42970.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"tried following canonical ci release ci cassandra optionally practice run circle well codify blocking new release unless get fully green run merge need either non regressing new failure run circleci ci cassandra non regressing defined introduce new test failure new failure ci clearly attributable different new build lead role butler catch document new intermittent failure unspecified resource fixing collectively time raise specter flaky test unique apache infra greatly delaying release think option help keep regressing ci cassandra numbered indicate fit replace flow new merging ticket block clean run ci cassandra need something like merge train could automate merging hard impossible merge commits new merging ticket run ci cassandra get advisory update related jira extra ci runtime burden long delay ci test infra optimization new merging ticket run ci cassandra already get advisory update related jira new error run sha strongly prefer amend process pretty sure could get granular enough compute new test failure highlight jira ticket link run previous run believe would greatly tighten loop delta failure variety test would provide fail safe catch address flake far earlier current model josh"
    },
    "845":{
        "ID":42970,
        "MESSAGE_ID":"CACvH57+NEJaobVXU6kYAnECRmG+pLUpWsxvt-xWnyP=frTQAng@mail.gmail.com",
        "PARENT_ID":42967.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"day laid bed cold go gold think contradictory require circle green taking twisting context bit let explain first mean free tier usable afaik could updated constrained could run stable complete limited value imho plugging github action basic build test would hit larger newcomer audience second mean one run like post commit catch thing long breakage come around accept involvement whole community need help author reproduce debug failure limited premium circleci le flakies previous release happy go damn hope next major release statement preference lean pragmatic side know north star keep moving towards"
    },
    "848":{
        "ID":42967,
        "MESSAGE_ID":"CAHyRp2RUicLE_ZrQp3zXbNsSP14CxBjY8Cy+Bm8Tr+j2w2Tp_g@mail.gmail.com",
        "PARENT_ID":42958.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"one fully usable volunteer based green count green think today might day annoy mick sorry think contradictory require circle green release free tier usage pas test requires license incompatible contributor effectively would make circle asf ci canonical ci right le flakies previous release statement make wary test failure josh"
    },
    "856":{
        "ID":42959,
        "MESSAGE_ID":"CAHyRp2SG9ua1HQQZq5tsUL4DOCgX8+Jt=YCuLAiFeFhENwksUg@mail.gmail.com",
        "PARENT_ID":42955.0,
        "SUBJECT":"Re: [DISCUSS] Periodic snapshot publishing with minor version bumps",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"curious hear match intuition experience running system also lot opinion world leap frogged benedict response favor something like snapshot snapshot keep lexicographical comparison also embeds intent release hit one bundle blow minor lead confusion josh"
    },
    "857":{
        "ID":42958,
        "MESSAGE_ID":"CACvH57+fiNKWK9-xC5mgwcTZc1KenSPrb+TBeEZ283xsOA+V9w@mail.gmail.com",
        "PARENT_ID":42952.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"yup ci cassandra need canonical ci reason state one fully usable volunteer based pmc community donated hardware controlled asf need proprietary licence think making post commit pipeline comprehensive possible also really appreciate circleci apart benefit particularly speed pre commit provides valuable double accounting ci result time broken one system properly catch error frustrating get green one system break embrace strengthening tactic green count green end better place let continue make post commit ci comprehensive possible figure go efficient pre commit gate accept break post commit still broke release think hard failure le flakies previous release using butler easily visualise failure flakies ci infra instability ensure ticket created dev broke assigned accordingly prioritise fix non critical work project unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "858":{
        "ID":42957,
        "MESSAGE_ID":"LO2P265MB445408B9B76F38799C764CF3A7779@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42955.0,
        "SUBJECT":"Re: [DISCUSS] Periodic snapshot publishing with minor version bumps",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"really see advantage snapshot"
    },
    "860":{
        "ID":42955,
        "MESSAGE_ID":"CACvH57KipuxWNGWjOo2n5hmZc260FEd8Aqukw47d_RErstnFig@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Periodic snapshot publishing with minor version bumps",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"back january agreed periodic snapshot publishing move yearly major minor release come light clear would url url following proposal snapshot publishing bumping minor version number idea every quarter trunk bump minor version build xml release branch would cut last sha previous snapshot version git tagged need happen every quarter make call go depending much landed trunk idea approach provides structured way reference periodic published snapshot semantic versioning release abide extends periodic snapshot helpful codebase driver like funky version like putting pre release vendor label want inclusive ecosystem negative reaction approach released version jump minor version example next year release could user might ask happened cosmetic concern general feedback seems user care long version number going use semantic versioning major version increment mean something would never jump major version valid question would impact supported upgrade path per semantic versioning always safe major upgrade like safe last minor nonetheless document make clear explicit work adhering semver url people thought objection bumping trunk base version try trunk evaluate next annual release unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "863":{
        "ID":42952,
        "MESSAGE_ID":"CAN+t3-hz94jBh3WJzTVLyn=0ypAK5ae4_K+u2N2A4KUK9kJ2Bg@mail.gmail.com",
        "PARENT_ID":42951.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"process",
        "BODY":"far aware jenkins official ci running apache infra preserve historical data every committer pmc member access run test pre commit project build every commit understanding circleci free tier available everyone test executed free account lack enough resource everyone willing pay premium account project account run suite post commit project build history pre used jenkins confirm ci situation also opinion actually circleci sometimes reveals issue jenkins people run different configuration thing pop regard build lead role butler get info jenkins history available everyone contributor committer pmc also bunch using circle execution get cadence checking regularly post commit jenkins hope happen mick miss anything"
    },
    "864":{
        "ID":42951,
        "MESSAGE_ID":"5519c0a3-8d88-e4a0-265f-760f06671364@gmail.com",
        "PARENT_ID":42950.0,
        "SUBJECT":"Re: Clarifying CI release criteria",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"process",
        "BODY":"iirc settled jenkins official ci hence need green jenkins find reference green test pas except flakies already defeated committers like connection test last time looked almost pending solving early process termination failure"
    },
    "865":{
        "ID":42950,
        "MESSAGE_ID":"CAHyRp2TFmUw4PtASg+0_tQQRdoatjjeD6Cg1ittJDiwbXCpt=g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Clarifying CI release criteria",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"ci criterion using gate minor major release example test suite configuration subset test suite column following page url test suite combination jdks circle ci particularly relevant craft build lead role regard triaging also bunch using circle pre commit seeing test flake unique asf jenkins execution environment going naturally accumulate debt lead release block asf jenkins green notably find clarified documentation testing release process clarified confluence wiki article release lifecycle thanks josh"
    },
    "867":{
        "ID":42948,
        "MESSAGE_ID":"CWXP265MB4459E11199683A4BB68CB0CBA7759@CWXP265MB4459.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42947.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yeah positively dislike merge commits patch preparation perspective trying piece together class history actively obfuscate impact branch looked well make much harder skim git log id vote modify merge strategy irregardless benefit ci think anyway strongly bifurcated commit process decide uniform commit process whole project patch whatever may"
    },
    "868":{
        "ID":42947,
        "MESSAGE_ID":"CAHyRp2RaJ2mvS99Bd0Erzo5eOM3TBHm_dpYdXD2ybATRysaBgA@mail.gmail.com",
        "PARENT_ID":42946.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"exact opposite experience right though may shortcoming env workflow showing annotation intellij see wall merge commits commit message bounce terminal open git panel figure actual commit different branch contains minimal commit message pointing jira go pr actually finally find thing dig around see changed impl inside merge commit sha original base impl well favorite ear cleaner way archaeology"
    },
    "869":{
        "ID":42946,
        "MESSAGE_ID":"CAPw+qV7+9m0i_OnaDA=5Y5mb0W+NEY=qs2MD5LVnMNHw_6ZTdA@mail.gmail.com",
        "PARENT_ID":42945.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"somebody else use git workflow apache universe quite unique share opinion mick last response also see disadvantage commit history polluted merges genuinely curious apache project thing past changed one way plus reason behind"
    },
    "870":{
        "ID":42945,
        "MESSAGE_ID":"CACvH57+bAO+ssK2HUQWq3nU5DdPzo0ZkY+tq9-hbs-2v9UviDg@mail.gmail.com",
        "PARENT_ID":42936.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"come read git history example appreciating change centric view branch isolated development like change originating one commit tracking visible across branch give immediate information change applied without go jira ticket relying accurate connecting commits different branch developed separately merge tracking complicated yeah see value merge commits trying something new would appreciate bit exposure making project wide change hence let rush start first trunk"
    },
    "871":{
        "ID":42944,
        "MESSAGE_ID":"CAPw+qV40LjW4BbXunjm0qD28sR8wQDsj26p8b8HembHXbV4CLA@mail.gmail.com",
        "PARENT_ID":42943.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"hi fyi planning put together discussed sstable encryption thread kind cep distil everything said hope put together foreseeable future taking longer break till february sure enough time implement eventually vote rather hypothetical point would appreciate something solid elaborate regard"
    },
    "872":{
        "ID":42943,
        "MESSAGE_ID":"CAAy+TbRfbn3Zq2EWD-oSc5DF9H6-tkOD69XEqT5v2pUfiKKM_Q@mail.gmail.com",
        "PARENT_ID":42942.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sure make separate section le march december scott andreas ecrit"
    },
    "873":{
        "ID":42942,
        "MESSAGE_ID":"d8b33540-620e-4008-a5c3-1ae8033bf8e6@me.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"\"C. Scott Andreas\" <scott@paradoxica.net>",
        "TAGS":"process",
        "BODY":"thanks benjamin see roadmap doc confluence contains several feature large scope published cep discussion mailing list user treat roadmap doc indicative project direction intent item moved section indicating interest potential feature pending proposal discussion think good idea list feature discussed user visible roadmap page would object idea separate section scott"
    },
    "878":{
        "ID":42937,
        "MESSAGE_ID":"CAHyRp2QLeO=mk7pzt16=A8ROeJ-q9U6e8+Cmzo4PzNMuuqmAVw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2021-12-14",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"happy tuesday morning afternoon almost monday benjamin took time put together roadmap awesome next cassandra release check url new contributor getting started seasonally calibrated set new ticket get started advent calender url new project hand curated ticket dive reach cassandra dev channel asf slack com asking assistance designated cassandra mentor help two option getting started none catch fancy failing test starter ticket label lhf low hanging fruit query failing test url query unassigned starter ticket url holding steady jira ticket unassigned test failure unassigned lhf patch release minor release likely overlapping selected ticket advent calendar feel free self select list reach slack want guidance get involved time like present dev list discussion past day url highlight dev list past couple week reiterate cassandra cassandra us logback logging vulnerable recently disclosed logj vulnerability everyone maintains system well cassandra working unprecedented vulnerability thank everything working keep everyone information safe secure claude warren open question building secondary index anyone expertise area spare cycle please reach url discussion indicated consensus backporting change line major improvement behavior contention inserting collection benjamin carrying torch reviewing porting change url change fairly extensive well exercised area codebase expected fairly safe needed change line last thing come mind would love get feedback topic keeping releasable trunk quality project lot valuable thing come discussion thus far working pr script simplify various circle ci operation config change change web site around testing documentation change wiki build lead role however implication merge strategy discussion ci integration proved point without clear initial consensus curious hear people think url ticket closed past day url test fix doc change low drama nothing major ticket count closed misleading often case yifan introduced new mechanism cdc allow rolling hard link based hitting cap rather pushing exception back client hit saturation cdc segment benedict merged cep simulator change expect see interesting thing showing distant future regarding correctness system new testing paradigm enables another big merge past two week guardrail cep andres got lot movement guardrail related ticket well going actively exciting see make project last list repeated leak message show resource often histogram fragile prone overflow hopefully plugged cassandra consequence leak message far lower historical resource leakage stefania benedict introduced mechanism appropriately harvested gc possibility resource handle held extended duration edge condition see leak detected message show log worth noting time grab handle resource eventually cleaned transactional like lifecycletransaction non try resource approach extra cautious time grab handle register entity clean ran remains risk future modification defensive ticket need reviewer need reviewer url ticket needing review trending right direction test failure trendlines butler url holding steady quite failure trunk state ci led open thread releasable trunk quality hope idea came least hold steady number failure regress without individual heroic jira url real appreciable change number open jira ticket test failure may change start spinning build lead role next year jenkins ci url redundant butler report drop future email round wishing happy safe holiday everyone going taking time family next couple week unless someone else want pick special christmas edition email see everyone feel weird type wave josh"
    },
    "879":{
        "ID":42936,
        "MESSAGE_ID":"CAHyRp2QVPpFUduDiJNa9mx3kBXHhgqeXSKgHN1Gv_8gMmCC3=w@mail.gmail.com",
        "PARENT_ID":42930.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"keep coming back arguably benefit offer procedurally forcing miss bugfix branch given much amend many thing presently anyway dilutes benefit rd commit history noise thing masking change harm good going"
    },
    "884":{
        "ID":42931,
        "MESSAGE_ID":"CAAy+TbRsYNNBSANsLjZaeY9kL+UjmCz683L+x1ikKWTeSJKTQQ@mail.gmail.com",
        "PARENT_ID":41388.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"finally wrote roadmap wiki updated reflect current situation url sorry delay le lun mai ekaterina dimitrova ecrit"
    },
    "885":{
        "ID":42930,
        "MESSAGE_ID":"LO2P265MB445424756D6E1BC15A5A132EA7749@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42926.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"proposing separating work entirely merge trunk op merge often thing done differently trunk intervening branch combination reason including landscape changed earlier approach inapplicable either way proposing sound like introducing unnecessary additional work get concise history cherry pick approach since merge commits prior branch today merge commit accumulate four merge commits way trunk view merge commits useful bad idea different ci pipeline multi version development particularly worth countenancing solely retain limited utility merge commits"
    },
    "889":{
        "ID":42926,
        "MESSAGE_ID":"CACvH57+5MOK9RywN75_k8JkjgTDv7LDWq0ZLTEfGmTeO5touwQ@mail.gmail.com",
        "PARENT_ID":42920.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"patch significantly different across branch inavertible one original commit versus individual commits branch trade cleaner git history github fancy direct commits taking patch release branch minimal possible make sense bug ticket incentivised minimal smarter way improvement trunk separate follow ticket patch willing say like merge shas connection original singular shas hardest branch concise git history one third merge commits sure atomic manual adherence history record"
    },
    "894":{
        "ID":42921,
        "MESSAGE_ID":"CAHyRp2QGV-DcDynqM7z+=O=ATPzhAqvyEDayKLj=GDf0TOOFbQ@mail.gmail.com",
        "PARENT_ID":42919.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"definitely weaker guarantee"
    },
    "895":{
        "ID":42920,
        "MESSAGE_ID":"CAHyRp2Rsa0aAkAX+sMAkW02r5b1_oLcCgGN=ybjppve232-Acg@mail.gmail.com",
        "PARENT_ID":42918.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"good reasonable argument except understand amend merge commits thing straddle stuff like rewrite simulator guardrail etc multiple sha impl thing took place count newer branch oldest applies hidden inside merge commit right also nothing keeping treating ci holistically pushing atomic across multiple branch even merge commits procedural question could agree adhere"
    },
    "896":{
        "ID":42919,
        "MESSAGE_ID":"LO2P265MB445429274525626AAAB76844A7709@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42918.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"work trunk patch involve branch well id imagine problem proposing limiting feature trunk patch seems rather weak"
    },
    "898":{
        "ID":42917,
        "MESSAGE_ID":"CAN+t3-g5RxOk5ZDd+M-+v70FwzS37T7KsrP0Sq+BKpWeMW-G=g@mail.gmail.com",
        "PARENT_ID":42916.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"mick suggestion nb"
    },
    "899":{
        "ID":42916,
        "MESSAGE_ID":"CACvH57JhFr+HPYq0eUcumkaGnCdLsr4kh1ELrNkCkozxnF6cnw@mail.gmail.com",
        "PARENT_ID":42903.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"favour current merge strategy find cleaner work found associated one sha hardest branch treat ci holistically across branch appreciate github make thing easier suspect make thing messier consequence understanding would first introduce github fancy commits intended trunk favour taking approach changing merge strategy happen later ironed github ci stable trunk working best think would also help understand impact changing merge strategy also impression aiming committing le release branch mean changing merge strategy le importance benefit keeping certainly commits past branch seems low moment considering many user trend want continue opinion let take two step try stuff trunk first"
    },
    "910":{
        "ID":42905,
        "MESSAGE_ID":"CAHyRp2QteBA3qxdH+AUNxZmSQs=pAqnY3D7B4MTeja7DSRTjDg@mail.gmail.com",
        "PARENT_ID":42904.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"would frame reasoning differently current merge strategy vestigial rely many case patch rarely merge cleanly across major requiring amend change per branch effectively clutter git history hide multi branch change behind merge commits make ide annotation le effective make barrier reverting bad patch higher also happens make effectively impossible use github action block merge green ci"
    },
    "912":{
        "ID":42903,
        "MESSAGE_ID":"CAHyRp2T0koOqByaoOgFTtWff6+w2vrjnTP8+==hdYHnXjuEKaw@mail.gmail.com",
        "PARENT_ID":42902.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"honestly agree took conservative approach refine standardize reduce friction long believer intentionally setting incentive disincentive shape behavior let pose question list anyone would like advocate current merge strategy apply oldest lts merge often new patch applied amend instead apply trunk cherry pick back lts make change able integrate github action block merge green ci integrate git revert process"
    },
    "913":{
        "ID":42902,
        "MESSAGE_ID":"LO2P265MB445407829D17E0F7D1969EA7A76E9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42901.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"technology",
        "BODY":"cherry pick lts release branch agreed primary outcome discussion need external pressure maintain build quality best solution proposed mind use github action integrate various ci service refuse pr clean test run fully resolve flakiness provide necessary pressure maintain test quality consistent way determining lot project maintain correctness think many fork cassandra maintained outside project well"
    },
    "914":{
        "ID":42901,
        "MESSAGE_ID":"CAHyRp2QCOdoJJ0nRB8p3Om0du5Z+CZo0CFkmVozhfwgarhvdQA@mail.gmail.com",
        "PARENT_ID":42900.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"using circleci get lot benefit script rewrite clean circle profile based use case shared consistent environment scripting approach give flexibility support different workflow minimal friction build run every push click trigger example reason discounted modifying merge strategy took stab enumerating current best class could find url personal opinion would well served trunk based development cherry pick mean basically applying bugfixes back lts release branch perhaps bugfix oldest lts applying tomato tomahto away merge commits using git revert liberally commit break ci introduces instability said somewhat orthogonal perhaps complementary primary thing discussion surfaced standardization guidance across test jdk config etc run commits today thinking get clarity everyone front reduce friction encourage behavior visit merge strategy discussion independently josh"
    },
    "915":{
        "ID":42900,
        "MESSAGE_ID":"3a3b59f7-f3aa-96b4-56f5-3761237b41dc@gmail.com",
        "PARENT_ID":42896.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would add post commit step check jenkins ci run merge see sthg broke regardless"
    },
    "916":{
        "ID":42899,
        "MESSAGE_ID":"CAN+t3-hF_-so11K9rsvhwRsRW3J7CgJrO0BNa1uvMByod8KX9g@mail.gmail.com",
        "PARENT_ID":42897.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ok seems wrong messed mail mailbox please ignore previous email"
    },
    "918":{
        "ID":42897,
        "MESSAGE_ID":"CAN+t3-jCUL-+zRrZoFm96+R5c99Ex--U3n+8_1Hfn7cc4wd+nQ@mail.gmail.com",
        "PARENT_ID":42895.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think script discussion different thread attached document also address soon"
    },
    "919":{
        "ID":42896,
        "MESSAGE_ID":"CAN+t3-j3KOZs5Vu-zSP2-MdGhGziZdW23_uq=JziDbSFOic2Bg@mail.gmail.com",
        "PARENT_ID":42894.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi josh good question thank raising topic best knowledge documented put note tribal knowledge know personally follow pre commit test suite jdk officially supported include python test jvm ever test test fix probably run upgrade test heard definitive guideline preferably every time tiny change guess decided skipped would advocate le test also failing reference root trunk cassandra etc check ticket exists already open one least even plan work least acknowledge issue add info know know broke ping author check test fails intermittently open ticket investigation use circleci job running test loop find fails verify test fixed already draft circleci document yet released pending document migration hope help ekaterina"
    },
    "920":{
        "ID":42895,
        "MESSAGE_ID":"LO2P265MB4454E5D35905D403587A77F2A76D9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42894.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"reason discounted modifying merge strategy little wary relying script consistency behaviour environment differ would far preferable consistency behaviour rely shared infrastructure possible would probably mandating script least"
    },
    "921":{
        "ID":42894,
        "MESSAGE_ID":"CAHyRp2SR9pWdL++Y4OC6LGzCkBRZaFJKp_mMEgZFETW2k+Ykvg@mail.gmail.com",
        "PARENT_ID":42876.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"work scripting know documented clarified following see url pre commit test suite jdk include python test jvm ever run upgrade test test also failing reference root trunk cassandra etc test fails intermittently also update linked documentation hammer try bake scripting flow much possible well goal make easy right thing hard wrong thing thing written rather tribal knowledge varies lot across project josh"
    },
    "939":{
        "ID":42876,
        "MESSAGE_ID":"CAHyRp2SH=Zz97D+FvHAGtCiA_=r6CQoP0MNvY87n7P-7ABKw-A@mail.gmail.com",
        "PARENT_ID":42774.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"offline collab thread landed proposal change process incrementally improve process hopefully stabilize state ci longer term link url hopefully mail server butcher formatting hit gdoc leave comment open phase document merge criterion update circle job simple pre merge job one jdk profile donate document formalize usage circleci enable py asf repo need new commit script dev tooling section rewrite circle config job simple clear flow ability toggle run push click run variety functionality see document site help readme md automate via scripting relationship dev release process around jvm dtest dtest ccm integrate document usage script build ci repeat test run circleci enable py repeat unit classpath document add change test introduce build lead role weekly rotation volunteer make sure jiras exist test failure attempt triage new test failure root assign coordinate drive green board trunk change automate process trunk patch block green ci merge criterion ci potentially stricter definition clean trunk ci consider using github pr merge todo determine handle circle change see automate process multi branch merges harden contribute document dcapwell script one following rebases branch latest rebase cassandra check compiles remove change circle opt circleci patch remove change change txt leverage jira content check code still compiles change circle run ci push temp branch git run ci circle jenkins branch clean waiting step manual todo define clean new test failure compared reference test failure merge change actual branch merge change rewriting different push atomic transition phase item phase complete test board supported branch green phase add harry recurring run trunk add harry release pipeline suite perf test trunk recurring"
    },
    "957":{
        "ID":42858,
        "MESSAGE_ID":"LO2P265MB445492761FF229EDF8022D6BA7669@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41933.0,
        "SUBJECT":"Re: [RESULT] [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"fyi cassandra main element cep ready merge case anybody still plan take look otherwise land day two"
    },
    "984":{
        "ID":42831,
        "MESSAGE_ID":"CAFvGCnkd35-71JSgJkRSsZcoYJnjVErhRUt-RAEzvVx-dBc1AQ@mail.gmail.com",
        "PARENT_ID":42804.0,
        "SUBJECT":"Re: [DISCUSS] Nested YAML configs for new features",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"grepping important use case worked another database nest configs offer tip survived good old grep help use option grep track warning grep warn threshold would find track warning enabled true coordinator read size warn threshold kb would require magic expert knowledge guess right number many case could use large number like work case frequent use want install yq aka yaml query url henrik"
    },
    "1008":{
        "ID":42807,
        "MESSAGE_ID":"CAHvM0ucSrWepgSw+JR62ue-jX=y2qdie1bj9=7VjmxvgpF6Q9g@mail.gmail.com",
        "PARENT_ID":42804.0,
        "SUBJECT":"Re: [DISCUSS] Nested YAML configs for new features",
        "SENT_FROM":"Caleb Rackliffe <calebrackliffe@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"nested track warning would still work grepping around vim le would concede point grep output although tool like url could probably bent want"
    },
    "1009":{
        "ID":42806,
        "MESSAGE_ID":"9e91a22f-e917-f975-5034-433eb0376083@bso.ng",
        "PARENT_ID":42804.0,
        "SUBJECT":"Re: [DISCUSS] Nested YAML configs for new features",
        "SENT_FROM":"Bowen Song <bowen@bso.ng.INVALID>",
        "TAGS":"property",
        "BODY":"stefan prefer flat yaml file easily use grep check confirm setting large number server parallel ssh hard nested config yaml file addition also use grep cassandra source code locate relevant file based config name flat config name long unique help efficiently navigate within source code imagine going work well work nested config name java developer take much longer find relevant code grep work source code also going harder understand nested config turned java object class"
    },
    "1010":{
        "ID":42805,
        "MESSAGE_ID":"58765C5C-2C38-413D-A5C9-8CF441E3BDDE@apple.com",
        "PARENT_ID":42804.0,
        "SUBJECT":"Re: [DISCUSS] Nested YAML configs for new features",
        "SENT_FROM":"David Capwell <dcapwell@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"classpath anything working translation configs flat structure detect pattern recursively get field similar walking directory main change would classpath getproperty property class act like lens url logically andthen build property example set config track warning row index size abort threshold gb get converted set get get config track warning row index size abort thresold gb implementation detail anything working configs yaml vtable jmx etc consistent way dealing nested flat configs"
    },
    "1011":{
        "ID":42804,
        "MESSAGE_ID":"CAPw+qV4BPM2YFYogV5-FXhvC_7LV0638x4imLOc+eTuo0kBr6g@mail.gmail.com",
        "PARENT_ID":42803.0,
        "SUBJECT":"Re: [DISCUSS] Nested YAML configs for new features",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"property",
        "BODY":"hi david oppose nested structure really handy grep cassandra yaml config key know value instantly possible nested easily fastly two line maybe grepping advanced enough cover case flat grep track warning elaborate last bullet point parsing layer mean specifically thanks"
    },
    "1012":{
        "ID":42803,
        "MESSAGE_ID":"CAB=riaBSHELHh7uiuENefGZCBOtgwwQ-j+tD_GBU2CdojHSguQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Nested YAML configs for new features",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"property",
        "BODY":"brought ticket pushing dev list cassandra standardise config jvm parameter cassandra hard soft limit query cassandra guardrail prototype short project wish move new feature nested yaml feature enough justify nesting would really like focus discussion new feature rather retroactively grouping leaving cassandra already place talk get thing started let start track warning feature hard soft limit query currently configs look follows assuming track warning enabled true coordinator read size warn threshold kb abort threshold mb local read size warn threshold kb abort threshold mb row index size warn threshold mb abort threshold gb flat track warning enabled true track warning coordinator read size warn threshold kb track warning coordinator read size abort threshold mb track warning local read size warn threshold kb track warning local read size abort threshold mb track warning row index size warn threshold mb track warning row index size abort threshold gb prefer nested reason easier enforce consistency configs use shared type track warning patch mismatch cross configs warn warns fail abort etc going nested everything reuses type even though longer thing clear related parsing layer add support mixed purely flat depending user preference example track warning row index size abort threshold using notation represent nested structure thought unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1041":{
        "ID":42774,
        "MESSAGE_ID":"CAHyRp2SzoZYng-wE_R1_sC0ivAEkSQu5e5wtzgH=_-n7Mh5HPQ@mail.gmail.com",
        "PARENT_ID":42773.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sorry catching benedict absolutely right long using merge commits branch think auto merging via train blocking green ci option via tooling multi branch reverts something document clearly even choose go route lot room make mistake may huge issue expect disruptive change potentially destabilizing happening trunk perhaps get away slightly different workflow policy based whether multi branch bugfix feature trunk bear thinking deeply would also game revisiting merge strategy see much difference labor merging branch preparing separate patch individual developer however sure maintenance integration implication thinking right"
    },
    "1042":{
        "ID":42773,
        "MESSAGE_ID":"LO2P265MB4454CB5EF2C9D61AACF42346A79A9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42772.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"raised highlight approach interface merge strategy might rebase several dependent merge commits want merge atomically far know tool work fantastically scenario wrong fantastic given important thing consider revisiting merge strategy"
    },
    "1043":{
        "ID":42772,
        "MESSAGE_ID":"CAHyRp2RhFEkLT7YjPVXKj6wZYMAfbcUQ=nsu2RZq43MHNaUWwA@mail.gmail.com",
        "PARENT_ID":42770.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"thanks feedback insight henrik valuable hear large complex infra project tackled problem set attempt summarize got email phase one build baron rotation always someone active tying failure change adding failure ticketing system best effort process test breaker assigned ticket fix thing work broke moving culture regularly revert commits break test running test merge change phase two suite performance test regular cadence trunk hunter otherwise integration github merge train pipeline cover highlight agree point useful place invest project work getting gdoc align discus week josh"
    },
    "1045":{
        "ID":42770,
        "MESSAGE_ID":"CAFvGCnme5Ow5=LR6riYO7RWAX83uNzocOR7=LOR7jFHaYvxk7g@mail.gmail.com",
        "PARENT_ID":42577.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"process",
        "BODY":"old joke many people read slashdot answer rest write comment without reading spirit wanted share thought response question even know said thread already basically want share worked well past project visualization butler running already see decline failing test trunk show contributor want right thing need right tool process achieve success process confident soon back seeing failure trunk however keeping state requires constant vigilance mongodb role called build baron aka build cop etc weekly rotating role person build baron least per day go butler dashboard catch new regression early used process also datastax guard downstream fork cassandra responsibility build baron file jira ticket new failure determine commit responsible introducing regression sometimes obvious sometimes requires bisecting running build two nightly build assign jira ticket author commit introduced regression given cassandra community includes part time volunteer developer may want try variation pairing build baron week reverting policy commit causing regression automatically reverted scary take courage junior test engineer reverts yesterday commit founder cto give example yet efficient way keep build green turn much additional work original author fix issue merge patch merge train project commit per day inevitably happen need rebase pr merging even passed test rebase downstream cassandra fork previously mentioned tried enable github rule requires test passed merging pr head branch merged test run rebase unfortunately lead infinite loop large pr may never able commit rebased smaller pr merge faster solution problem automated process rebase test merge cycle gitlab support feature call merge trean url merge train considered advanced feature return later point sufficient keep reasonably green trunk guess major area improve daily test coverage would performance test end recently open sourced nice tool algorithmically detects performance regression timeseries history benchmark result url like correctness testing experience catching regression day happened much better trying beta rc time piotr also blogged hunter released url henrik"
    },
    "1159":{
        "ID":42656,
        "MESSAGE_ID":"CAGY8e-51Zqv-mJSRDrMs-9uK=oi3MwNaw76kJyfW8MCEPixTOQ@mail.gmail.com",
        "PARENT_ID":42654.0,
        "SUBJECT":"Re: Cassandra project biweekly status update 2021-11-08",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"since playing ghost tsushima felt haiku would appropriate cluster failing jconsole rescue failing"
    },
    "1161":{
        "ID":42654,
        "MESSAGE_ID":"CAHyRp2TZ=VxtJ6sKpLpiG40-dO3yMrXUza4E85fUPO4_+7dDvw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2021-11-08",
        "SENT_FROM":"Joshua McKenzie <joshua.mckenzie@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"first congrats sumanth pasupuleti becoming committer project well deserved looking forward working look like ponymail got upgrade even realize possible point caveat emptor link put individual email thread different past appear working new contributor getting started discussion whether cassandra dev channel people best place new contributor get involved publicly ask beginner question whether start new channel somewhat limited scope please chime dev mailing list thread opinion url new contributor recommend starting one two place failing test starter ticket label lhf low hanging fruit query failing test url query unassigned starter ticket url unassigned test failure past couple week david capwell berenguer blasi ekaterina dimitrova others great work surfacing failure well fixing thing thank unassigned lhf next minor release next major release feel free self select list hit email thread list want guidance get involved ping cassandra dev slack channel asf slack com server email message directly want help dev list discussion past day url ongoing discussion mean releasable trunk step would take get given scale complexity project testing infrastructure curious hear experience people applying select ci cd principle ecosystem like url mentioned ongoing discussion make cassandra dev community welcoming newcomer url andres surfaced cep guardrail professed continued love jmx especially patrick would great see operator chime experience running cluster scale type anti pattern usage destabilize cluster since guardrail would great way expose protection frequently occurring pattern scale poorly among thing tombstone heavy workload thousand table anyone cep improving modularity going deprecated favor module specific refactors optional implementation cep sstable format api evolving nicely url highlight ticket past day front closed ticket compared prior week look like permission timeouts replica failure website update etc closed issue stability schema pull commit log stability testing slew test fix new feature allow denying access configured partition key read writes range read based config cql jmx ticket need attention need reviewer url tidied created new quick filter ticket progress blocked patch available lacking reviewer slightly opinionated implies reviewer thing work rather along written bias towards early inclusion nd pair eye sounding board see anything list qualified review know area code base cycle please take look help workload wise ticket need reviewer definition going refrain linking stalled ticket inactive load high probably approach little differently want tidy prune backlog simple fixversion flag really indicate much worry test failure trendlines first good number test project helpful keep mind talk even test failure relative total corpus unfortunately database like compiler rather unforgiving even failure rate test failure trend trendlines interest documented jira ticket created test failure project url see got feisty creating test failure ticket trying merge denylist patch week ago general volume open ticket known test failure growing url said could due variety factor failure increased discipline around tracking even poor hygiene closing ticket fix related test metric think bit cleaner informative test failure history jenkins build server assuming ever get load groan url general pretty clean meaning single digit failure since release discussed another thread recent spate failure caused dtest api dependency change addressed cassandra silver lining situation surfaced need discussion improvement around work dependent project release dependency cassandra one ide subprojects separate project release dependency etc expect see discus thread soon broader failure going python dtests bit need get bottom wrap folk call one calm storm cep indicator always thanks everyone time effort collaboration project josh"
    },
    "1174":{
        "ID":42641,
        "MESSAGE_ID":"CAN+t3-hBOe3YPkXdqAcb-uxy1MOfC7eo8zvOdsND8N3LDOxVSw@mail.gmail.com",
        "PARENT_ID":42625.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank josh think would helpful always ran repeated test job circleci add new test modify existing one running job applicable could requirement committing would help change affect many different test able identify test affected change think could prevented many recently fixed flakies think would love also see verification running new test loop adding code happening often mentioned discussion good method already use successfully wanted mention slip list happy weekend everyone best regard ekaterina"
    },
    "1190":{
        "ID":42625,
        "MESSAGE_ID":"CAHyRp2TCie1vzc3qOHmdiy5J75gr01ACXp7svXQak5ekFe7c9Q@mail.gmail.com",
        "PARENT_ID":42622.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"checkpoint conversation keep going idea see thread light editorializing blocking pr merge ci green viable single branch commits le multiple change expected culture see something fix something come test failure branch requires stable green test board viable clearer merge criterion potentially update circle config committers term test suite need run notably including upgrade test integration model property based fuzz testing release qualification pipeline least improvement project dependency management notably jvm dtest api release process around missing anything getting anything wrong summary"
    },
    "1193":{
        "ID":42622,
        "MESSAGE_ID":"CANSRBLAKYXmTD_2KnEFDaBZEL4exXq33DdTms0Mnmv-20Msqmg@mail.gmail.com",
        "PARENT_ID":42621.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Andr\u00e9s de la Pe\u00f1a <adelapena@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi already way confirm flakiness circle running test think would helpful always ran repeated test job circleci add new test modify existing one running job applicable could requirement committing would help change affect many different test able identify test affected change think could prevented many recently fixed flakies"
    },
    "1194":{
        "ID":42621,
        "MESSAGE_ID":"CAHyRp2RaLQwS1j-RhS-cvbCjnJtJtAs9pjCuEuVsfKQq+W5g9Q@mail.gmail.com",
        "PARENT_ID":42618.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"observation tooling technology widely use help prevent ever getting state benedict point blocking merge ci failure nightly test reverting regression commits etc think significant time energy saving using automation proactive quality test board rather reactive agree heartening see quality codebase improving discipline attentiveness collective culture said believe still pretty fragile system come test failure accumulation"
    },
    "1197":{
        "ID":42618,
        "MESSAGE_ID":"5e79e208-7af6-ae5c-4ea9-8566699fdef8@gmail.com",
        "PARENT_ID":42611.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"agree david ci pretty reliable besides random jenkins going timeout test flaky one jenkins circle green bisected couple failure legit code error david fixing others well etc good news going getting learn ci post reliable need start treating paying attention report perfect reliable enough would prevented bug getting merged fact conversation noticed ci going steady ish failure many getting fixed moving right direction going"
    },
    "1204":{
        "ID":42611,
        "MESSAGE_ID":"975B245D-C9C5-45B2-B593-0716122A646E@apple.com",
        "PARENT_ID":42610.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"David Capwell <dcapwell@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"agree also much effort done release remove much possible month ago really flaky test issue outside sporadic timeout issue circle ci run green constantly flaky test see actual bug root causing reported flakyness triggered recent change past month right people believe failing test caused patch attribute flakiness cause build start flaky lead different author coming fix issue behavior would love see go away find flaky test following already reported working fix block patch test fixed flaky test due timing issue normally resolved quickly real bug take longer reported first see issue good chance patch caused issue root first see others report tend good even point brandon mark new ticket dups committed flakiness caused flakiness saying perfect saying moved model could start relying ci biggest impact stability people actually root causing flaky test curious system know timeout actual failure bug time serialization message would cause message get dropped presented timeout remember properly jon meredith yifan cai fixed bug believe unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1206":{
        "ID":42609,
        "MESSAGE_ID":"LO2P265MB4454748F727373EFE4D2CE6EA78C9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42608.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"largest number test failure turn pointed david due arcane trigger full test suite hopefully get top think significant remaining issue lack trust output ci hard gate commit clean ci run flaky test take much misattribute one failing test existing flakiness tend compare run trunk baseline comparison burdensome still error prone flaky test likely opinion real cost flaky test probably worth trying crack hard possible simulator may help finally finish port flaky test run simulator failing seed explored deterministically well"
    },
    "1208":{
        "ID":42607,
        "MESSAGE_ID":"CAHyRp2TSm6RUx7EDFGNA2DZyumY8WXTQ+=dYUGZKfihHDfyhKw@mail.gmail.com",
        "PARENT_ID":42605.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"going go yes please"
    },
    "1209":{
        "ID":42606,
        "MESSAGE_ID":"DB3225DA-BA46-40A4-BED9-C46DC8908629@gmail.com",
        "PARENT_ID":42558.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"seems like many people thread would rather make grouping cep idea rather consider one individually close cep thread discussion continue individual ticket think got nice discussion thread people would like see type refactoring ticket good information take forward work individual ticket thanks discussion everyone jeremiah jordan unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1210":{
        "ID":42605,
        "MESSAGE_ID":"CAA1qPbb-K_7oMyp06ePDVsuUctpkNTar+ZOqEOTOkNLYUqfm-g@mail.gmail.com",
        "PARENT_ID":42602.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"merge harry blog post accompanies shortly merged significantly reduce amount resistance one overcome order write fuzz test course cover short small unit test like test longer running test guess rely folk hopefully running long fuzz test reporting issue eventually would great enough automation around anyone could test result public regard long running test currently harry run three kind long running test stress like concurrent write workload followed period quiescence validation writes injected fault followed repair validation stress like concurrent read write workload fault injection without validation finding rare edge condition triggering possible exception mean quorum read write path kind schema including possible kind read write query compaction repair read repair hint covered fairly well however thing like bootstrap kind range movement would great expand somewhat difficult since last time bootstrap test attempted immediately uncovered enough issue keep busy fixing quite time maybe time try short test think harry tool save time allow focusing higher level test meaning rather creating schema coming specific value insert select thanks alex"
    },
    "1213":{
        "ID":42602,
        "MESSAGE_ID":"CAN+t3-gh1Q3AR_KmXSLQW5EBrQBWU4qYym+ERY3h2aGfEZgEcg@mail.gmail.com",
        "PARENT_ID":42600.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"process",
        "BODY":"hear name sorry josh wrong two month real bug discovered pflaky test one hard hit think report sent back come topic cleared follow mail benjamin lot sweat kept promised standard back topic green ci without enough test coverage nothing green ci unfortunately know elephant sleep well tonight mention believe looping test mentioned berenguer help verifying new weird flakiness introduced new test added course help lot fixing flaky test think clear think would great test probably bad idea preliminary analysis need get cadence regular checking ci divide conquer regular basis mention way easier follow recently introduced issue people worked stuff trying find happened year ago rush release agree number stay behind requiring test run pre every merge easily add circle many people access high resource able run absolutely everything end everything diligence reviewer committers plus official ci jenkins know different infra related failure different ci easy topic indeed support running test mind related issue complication would say mind upgrade test particularly important green release seems tool time organize rhythm efficient manner best regard ekaterina"
    },
    "1215":{
        "ID":42600,
        "MESSAGE_ID":"CAHyRp2Th4=QnWFPHVwLsiroRs5-ErmAowmeCx4RiZnjTEonsmw@mail.gmail.com",
        "PARENT_ID":42597.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"point jacek believe run ekaterina analysis something like correct wrong test failure considering flaky test actual product defect database mind uncomfortable cutting release test failure since every likelihood one surfaced bug ensuring best practice followed every merge totally agree also think codified unless completely missing something possible seems like different circle configs different set job run harry hunter maybe run commits branch manual performance testing specific release nothing surfaced formally project reproducible suite like used year ago primitive though time covered clarified right think significant value enumerating least documenting agreed upon best practice start holding accountable bar given incredible sweeping work coming pike strike thing need proactive vigilant regress josh"
    },
    "1218":{
        "ID":42597,
        "MESSAGE_ID":"CAOyUaq8YzVc4SOCOHtNg_qPkv+dfoc9tYYbFSTiPg36Pvz6AKA@mail.gmail.com",
        "PARENT_ID":42596.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Jacek Lewandowski <lewandowski.jacek@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"prove test flakiness still bug code occurs intermittently rare condition jacek lewandowski"
    },
    "1219":{
        "ID":42596,
        "MESSAGE_ID":"1f5225f4-e714-17d3-0789-1c7a5fa278f8@gmail.com",
        "PARENT_ID":42595.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi already way confirm flakiness circle running test repeatedly time like proven work well far least collaborating justfyi"
    },
    "1220":{
        "ID":42595,
        "MESSAGE_ID":"CAOyUaq8XeX6RHrdnrGUiWg7h9pvvzpZFtC_Df_cygQ5Ya5vu7Q@mail.gmail.com",
        "PARENT_ID":42578.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Jacek Lewandowski <lewandowski.jacek@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"test sometimes considered flaky fail intermittently may related insufficiently consistent test implementation reveal real problem production code saw various codebases think would great test test group guaranteed ticket preliminary analysis done confirm test problem releasing new version historically also significant pressure backport feature precise requirement supported upgrade downgrade path thanks jacek lewandowski"
    },
    "1221":{
        "ID":42594,
        "MESSAGE_ID":"19DDDBEE-F957-4BC7-B937-F48BC7E5AC33@apple.com",
        "PARENT_ID":42593.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"David Capwell <dcapwell@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"double checked circleci run trunk branch problem resolve dependency problem lie ci complex natively support multi branch commits right need opt build run single jvm dtest upgrade test build missed ci opt see previous comment really approval single build enabling upgrade test run upgrade test need approve build run full set upgrade test see problem see build ran upgrade test touch python dtest upgrade test lastly need hack circleci configuration support multi branch ci run already committed multi branch commits normal project ci properly case way hard multi branch test jenkins url support run branch"
    },
    "1222":{
        "ID":42593,
        "MESSAGE_ID":"E258AEC1-2BB2-4FB8-80EB-9B99B3F1C78F@apple.com",
        "PARENT_ID":42578.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"David Capwell <dcapwell@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"one thing would love adopt run test needed release commit mentality link successful run jira closing talked slack look circleci currently run test needed sign test disabled pre commit workflow see url start utests long start utests compression start utests stress start utests fqltool start utests system keyspace directory start jvm upgrade dtest start upgrade test given configuration right opt upgrade test release broken compression fqltool cdc covered circle unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1225":{
        "ID":42590,
        "MESSAGE_ID":"CAGY8e-5_vh5etw4KrLQFBhR04qUA6AjsxJ=2MMgkPXrfuxQJ0w@mail.gmail.com",
        "PARENT_ID":42589.0,
        "SUBJECT":"Re: [DISCUSS] CEP-3: Guardrails",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"important guardrail modified via jmx well think know feel jmx maybe something go straight virtual table"
    },
    "1226":{
        "ID":42589,
        "MESSAGE_ID":"d99b8056-f2b2-4de4-8faf-f0b199732606@me.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [DISCUSS] CEP-3: Guardrails",
        "SENT_FROM":"\"C. Scott Andreas\" <scott@paradoxica.net>",
        "TAGS":"property, technology",
        "BODY":"thank starting discussion cep andres scope section doc filled currently read tbd better understanding scope work would help focus discussion url configuration via yaml important guardrail modified via jmx well case user running limit needing path unblocked require yaml change rolling restart david mention raising visibility soft limit warning help user avoid caught guard enabling logging wire protocol warning received cql response driver default would help related jira ticket project considered"
    },
    "1237":{
        "ID":42578,
        "MESSAGE_ID":"LO2P265MB44540BC3280B5FD7AB1F7B01A7889@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42577.0,
        "SUBJECT":"Re: [DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"major criterion ensuring work merged known require follow work could reasonably known require follow work better qa practice followed big part ensuring continue exceed target improved qa mean trying weave tool like harry simulator development workflow early well see well tool gain broader adoption also mean focus general possible negative effect change think could producing guidance documentation approach qa record best practice evolve discover flaw pitfall either ergonomics bug discovery want hope meeting reasonable release cadence high project quality expect today think shippable trunk policy absolute necessity think mean guaranteeing failing test though ideally would also happen ensuring best practice followed every merge took long release amount hidden work created merging work meet standard release historically also significant pressure backport feature earlier version due cost risk upgrading maintain broader version compatibility upgrade reduce risk adopting newer version pressure also reduced significantly though perhaps stick gun anyway seems renewed pressure limit work ga release bug fix exclusively remains seen hold think cost quite low perhaps even negative hidden work produced merges break thing much costly getting work right first time attribution much challenging one cost created however version compatibility say well minor version bump need support downgrade think investing anyway operator simplicity confidence actually see benefit well apologise circleci uncover problem apparently due way resolve dependency responsible significant number quite sick since think push eliminate flaky test probably help future though perhaps project need low threshold flaky failing test point block merges force correction"
    },
    "1238":{
        "ID":42577,
        "MESSAGE_ID":"CAHyRp2R_XdNCPi5zVjbyQ0vZ68mPBS8O0R9gYAcUBu-RKE3N8g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Releasable trunk and quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"project gone back forth topic quality notion releasable trunk quite year people interested would like rekindle discussion bit see happy project think step take change quality bar going forward following question rattling around awhile define releasable trunk mean reviewed committers passing test passing test plus metric manual testing raising number reviewer test coverage usage dev qa environment etc something else entirely definition settled upon step need take get keeping releasable trunk anything codify benefit releasable trunk defined cost worth pursuing alternative instance freeze release stabilization focus community push tock tick tock given large volume work coming pike cep seems like good time least check topic community full disclosure running face first failing test trunk going commit process denylisting week brought topic back reminds went merge cdc back test failure riled sense pattern looking forward hearing people think josh"
    },
    "1257":{
        "ID":42558,
        "MESSAGE_ID":"8743C207-FB9E-487A-8B0C-A444100EF025@apache.org",
        "PARENT_ID":42544.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"great project encourage improved test code coverage welcome change personal preference would see work appear individual ceps even jira ticket discussion definitely one giant cep pulling together lot different change really like idea building pluggable modular component however concerned thing performance regression breaking backward compatibility user tool interface single implementation would like ensure mindful concern making big refactors thanks dinesh"
    },
    "1259":{
        "ID":42556,
        "MESSAGE_ID":"LO2P265MB44545D78FEE6857631A12A13A7849@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42553.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"agreed lot codebase spring clean past couple year lot area long tooth could heavy pruning"
    },
    "1260":{
        "ID":42555,
        "MESSAGE_ID":"821A9334-C407-48AF-BF5C-146844FDC392@gmail.com",
        "PARENT_ID":42554.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ok remove one cep discus separately unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1261":{
        "ID":42554,
        "MESSAGE_ID":"LO2P265MB4454FCB2CF3DF8257BFC88DBA7849@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42551.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"getting abstract rebuttal even tied strongly particularly discussion express point clearly abstract everything codebase fact general least try keep thing concrete long reason abstract usually easier reason lower overhead modify true even single class level course happens module level ide refactoring cognitive burden reasoning simultaneously concrete class abstraction relate problem premature abstraction particularly multiple implementation start appearing start formalising abstraction way permit reason abstraction necessarily mean eschewing knowledge concrete implementation work may prevent useful simplification interact specific concrete implementation code api may prevent optimisation may also introduce additional complexity either implementing abstraction reasoning action performing often may entirely ignore concrete implementation due imperfect ambiguous api specification must consider compatible abstraction known concrete implementation additional burden often pay cost perceived benefit seems though discussion conflating modularisation pluggability decoupling benefit might gain return additional cost distinct problem however quite possible modularise yet tightly couple though usually break tight coupling breaking tight coupling require modularisation certainly require pluggability bring back discussion intent piece work always drive outcome opinion best always consider work actual context primary purpose work pluggability inform api modification straightforward goal reducing tight coupling codebase would likely approach problem differently none bad thing opinion nature development said broadly happy see work go ahead would prefer split conversation driving project aforementioned reason would veto proposal basis would nice see others opinion sub proposal particularly unsure seem increase modularity look kind plugin hook going definitely addressed separately perhaps simple discus thread jira suffice"
    },
    "1262":{
        "ID":42553,
        "MESSAGE_ID":"CAPw+qV4UJa90hjhzDOvG-jBW3TZBtAEhU83cmXPANjQ9WvRHiQ@mail.gmail.com",
        "PARENT_ID":42551.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"process",
        "BODY":"good extensibility interface however afraid might actually break lot thing enough attention paid example year community around cassandra tooling somehow used mess placing one fat jar class path somehow work cherry pick want reasonably happy find reflection need private final field public non final reason developer thinking actually good idea like even ceps modularity build system level cassandra would logically consist different jar understand correctly change introduced tooling expects work point release might accommodate release quite bummer always bandwidth support individual version tool maybe one want stress fact user integrator perspective smooth transition yes extend break please big refactoring would actually spend time removing necessary one dig deeper cassandra living lot legacy code example removing support window taking away lot stuff believe many place taking lot baggage snapshot subsystem looking together paulo motta another example weirdly wired subsystem might place quite discouraging implement something new without cleaning first make sense add top anymore way see working extensibility interface work probably also focus getting rid obsolete simplify unify codebase smell pretty confident extending interfacing would way easier side effect ceps"
    },
    "1264":{
        "ID":42551,
        "MESSAGE_ID":"CAHyRp2Q3-5mfj40MaQUzVQLpYsncwLrd5GgRbHJgDbqbHXsd=w@mail.gmail.com",
        "PARENT_ID":42544.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"property",
        "BODY":"long opinion benefit outweigh cost clear interface point major subsystem codebase particularly sympathetic concern friction making change internal api since modern ide tooling make trivial exercise however quite sympathetic concern introducing friction deeper integration subsystem said history project somewhat hot cold come approach performance testing think low hanging fruit project revolves around discipline reproducibility knowing performance today making change eye rather keeping open flexibility tightly coupling subsystem implementation modern runtime environment shifting much toward containerization help think smaller clearly modularized component resilient rapidly evolving runtime environment sympathetic constrained resource environment run well classically optimizable right air contribute perspective discussion said think refactoring apis pure reflection db today risk ossifying something grew organically probably going favor use case better yet implementation deriving interface targeting testable mockable structure plus introducing test give guidance improve route go josh"
    },
    "1271":{
        "ID":42544,
        "MESSAGE_ID":"FAAB9EA1-9325-446C-AED5-DA26C239AA30@datastax.com",
        "PARENT_ID":42540.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"henrik said refactoring access different internal apis part larger work cep pulled together bunch smaller one one place similar refactoring proposed cep felt many small ceps one per module would le productive support project general trying standardize access different section code start creating defined internal api consensus would better propose change cep even single ticket without cep internal refactors well cep process evolving go trying figure best way forward currently proposed change cep include improved test coverage module question developing requirement change least code coverage sonar cloud jacoco report also found fixed bug existing code development work defined interface interacting different section code huge boon improving developer productivity going forward project every place reduce amount code reaching inside another module get random internal class positive prevents unknown side effect changing module person developing new feature realize part code depending current internal behavior clearing part module interface question changing internal interface seen venue think creating interface prevent changing needed future work think interface actually improves ability without breaking part code suggestion would try make change patch release possible would let hold anything back people feel propose multiple ceps ticket people prefer discussion vote idea improving modularity code base general jeremiah"
    },
    "1272":{
        "ID":42543,
        "MESSAGE_ID":"CAHyRp2RcHzG5VEzZHL++PyNtCe8N70ZPmteRUKZEwXbUOjfeWg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra project biweekly status update 2021-10-25",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"believe two week already new contributor getting started new contributor recommend starting one two place failing test call lhf low hanging fruit query failing test url query unassigned lhf url cassandra failing test often turn incredibly interesting tricky get bottom right unassigned failing test ticket unassigned lhf pick please feel free ping directly want help get started raise flag cassandra dev slack anyone happy help dev list discussion past day url busy two week probably felt like time flown ekaterina got good close regarding configuration cassandra jacek looked get little clarification qualifies cep cassandra paging byte general opening discus thread dev list asking community think cep non fail safe way get clarity sure little friction around change circleci config cassandra look like maybe closed thing committed fully consensus topic good actor definitely two way door style change let keep working best balance scripting support multiple workflow run every commit require trigger manually etc cep around sstable format api cassandra came forth last friday expect see interesting input one thought please chime something history different storage engine perspective project cep pretty large ongoing discussion around modularization whether bundle cep modularization artifact prompt creation keep api change separate much like testing maybe little like vim emacs one topic multiple school thought opinion project year working case case basis probably going continue best bet please chime experience domain genericizing api support multiple implementation mature project etc wisdom offer opinion topic general last certainly least back forth vote cep general purpose transaction passed stipulation api distributed transaction modular pluggable along work allow experimentation future algorithm thanks everyone involved working think safely speak say excited see project evolves space ticket past day front closed ticket mostly relatively modest bugfixes look like want see line testament quality closed issue modest improvement adjustment nodetool option see stored hint consistency output ticket need attention work blocked committers time ticket need reviewer anyone experience area spare cycle please take look url repeat entrant two week ago anyone idea best way link reviewer outstanding work please chime thread say personally rebasing something waiting review cep merge educational experience great way get know code change general faster go patch available merged efficient project term rebasing cost large number ticket stalled meaning touched day please check filter assigned status reflect current state backburner back backlog etc please update ticket needed url fun two week everyone thanks professionalism effort debate discussion challenging evolve software project major external industry evolution see vibrant alive cassandra dev community remains many year inception truly remarkable josh"
    },
    "1273":{
        "ID":42542,
        "MESSAGE_ID":"CAB=riaAGw6Y7q1x9wuL9HnH9F-kVTY=+UhOKBUs_oBsaU9LPkw@mail.gmail.com",
        "PARENT_ID":42540.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"goal support entirely external feature decide similar topic brought index good way knowing internal java apis must supported break adding new one need figure"
    },
    "1275":{
        "ID":42540,
        "MESSAGE_ID":"LO2P265MB4454B33A73D8E328B43DB76CA7839@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42537.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"thanks henrik additional context personally fan modularity modularitys sake everything software balancing act competing priority pluggability support certain use case slow development prevent deeper integration preventing assumption system operate clear fully favour helping enable use case think important make decision refactor based merit goal question justification improved testing testing core goal cep enabling feature upstreamed later personally would prefer tie refactors feature hope find broad support inclusion certainly heard eager see arrive cassandra goal support entirely external feature decide kind support offer apis probably need discussed per api basis justification pluggability weighed constraint imposes development obvious example membership schema think primarily support external dependency expect area codebase significantly revised coming month"
    },
    "1277":{
        "ID":42538,
        "MESSAGE_ID":"CAB=riaDq1NL-Zhy5D2imtGygh4tt217aN0EwMcLajzZ22BKu0A@mail.gmail.com",
        "PARENT_ID":42536.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"process",
        "BODY":"cool pluggability making thing easier test main comment work must also define semantics around apis create interface simple example cassandra linked cep made interface explain interface membership void addmember addressandport address interface extremely problematic expectation clearly defined right membership change atomic depend propagation delay even jvm one implementation may atomic test atomic much simpler testing actually implementation ship aka test using mock matter also work want move thread per core architecture future concurrency defined simple way think pluggability interface clearly define expectation around write test interface swap implementation make sure comply massive effort interface good long term benefit"
    },
    "1278":{
        "ID":42537,
        "MESSAGE_ID":"CAFvGCnn7hsp-rpZ1B=tYEPifYg_YDQuN-XY+Hxf4nNrZ8i7FTw@mail.gmail.com",
        "PARENT_ID":42536.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"existence, property",
        "BODY":"hi benedict cep bundle apis arising recent work architect cassandra cloud native architecture product marketing chosen call serverless variant cassandra separated compute storage coordinator data node used like storage made various improvement better support multi tenancy single cassandra serverless cluster whitepaper explains work detail interested learn apology requires registration first page may time sound bit marketingy really detailed report published far url work implemented way default user continue run cassandra familiar classic way apis introduced cep hand allow alternate additional functionality provided case used create serverless way deploying cassandra cluster logic behind proposing bundle apis separately roughly reason apis touch existing code functionality minimize risk next cassandra release would make sense try complete merging work early possible development cycle reason keeping new implementation cep allows focus review cep eventual pull request apis whereas related implementation plug in would add scope quite significantly"
    },
    "1279":{
        "ID":42536,
        "MESSAGE_ID":"LO2P265MB4454EA43B80EC6EF681DF167A7839@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42535.0,
        "SUBJECT":"Re: [DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi jeremiah personal view work modularise codebase tied specific use case improved testing purpose work think would help include improved test plan support goal cep hand work primarily intended enable certain feature personally think would preferable tie feature perhaps cep"
    },
    "1280":{
        "ID":42535,
        "MESSAGE_ID":"CAJV9gyfCanOatqJeFoekPw-QDV_qXJHL8TFSUkhZtvn-D474iA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CEP-18: Improving Modularity",
        "SENT_FROM":"Jeremiah Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"property",
        "BODY":"hi seen work already started cep increasing modularity subsystem improve testability also ability try new implementation without breaking thing team working cep created propose adding modularity different subsystem url cassandra already created schema storage change related work jiras pr follow subsystem proposed cep thanks jeremiah jordan"
    },
    "1367":{
        "ID":42448,
        "MESSAGE_ID":"CAN+t3-izDBazVy06j684sM6X4rCGjDBKu7AWojPAvrNyhQ03QQ@mail.gmail.com",
        "PARENT_ID":42434.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"process",
        "BODY":"hey stefan thank support spending time think understand correctly suggest reopening old ticket finish doc two concern might work time one doc bring latest state instead getting doc latest state think anthony trying take care approach save time reopening old ticket primary goal doc brings confusion opinion otherwise think required field testing doc splitting two diligent around might good idea thanks ekaterina"
    },
    "1368":{
        "ID":42447,
        "MESSAGE_ID":"LO2P265MB4454F13A1E1CC15D0E986E8CA7B79@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42446.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"track per key timestamps able perform stale read assemble transaction validate commit likely lead much faster transaction approach interactive part remains local instead perform accord operation every read operation within transaction believe would safe use initiating timestamp though might also result additional abort would unnecessary later read encounter write newer initiating timestamp might well serializable strict serializable perform local read use initiating timestamp certain miss earlier write timestamp replicated key read initial operation"
    },
    "1372":{
        "ID":42443,
        "MESSAGE_ID":"LO2P265MB445410B7C0935A4A9A3330B3A7B79@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42440.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"yes though likely apply kind compression timestamp global timestamps may fit single long would prefer burden storage system complexity probably multiple transaction agreed wall clock different global timestamps likely increment timestamp applied local node say storage timestamp derived transaction timestamp transaction timestamps dependency reality come play rarely course think blurring line system however think point alex making correct wrong transaction system need track transaction timestamps witnessed read key order verify remain valid commit might fetched storage system round might accord non interactive transaction bookkeeping interactive transaction bookkeeping need maintain value separately part interactive transaction state perhaps client transaction previously committed one still applied yes something envisage desirable even without complex transaction prevent do problem likely want prevent new transaction started dependency set would adopt large think relatively straightforward"
    },
    "1381":{
        "ID":42434,
        "MESSAGE_ID":"CAPw+qV5oPDej1pC80=+g-OQ4zE8MR9xqBQSLqnUxPvTfm40gbw@mail.gmail.com",
        "PARENT_ID":42385.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"process",
        "BODY":"hey got idea might simplified every commit cassandra repository belongs ticket except ninja irrelevant look commits looking jira ticket belong information commit message go jira label need doc backported something like idea filter ticket like fix backport jira ticket number remove label work done ticket label anymore hence create additional ticket may even reopen ticket resolved regard"
    },
    "1389":{
        "ID":42426,
        "MESSAGE_ID":"CAKh0AsDRCiYaT5kstgtXDxAXeOxsCk-qcA74PoX7QAJ+9Ltyvw@mail.gmail.com",
        "PARENT_ID":42407.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Alex Miller <millerdevel@gmail.com>",
        "TAGS":"technology",
        "BODY":"purely laziness engaging topic asf slack opposed dev benedict overly generous answering question considering future optimization mean inadvertently forked conversation topic bring highlight conversation back dev list url reduced conflict tracking accord whitepaper specifies transaction conflict commutative either response database state would differ execution order reversed mean conflict protocol subsequently tracking full set read write write write write read conflict superset required correctness write read conflict may ignored underlying storage multi version told plan accord would implemented top multiversioned storage read submitted multi versioned database unaffected writes occur later write read conflict need tracked write write conflict may ignored accord assigns single write timestamp writes writes appear atomically single consistent version mean accord implement write snapshot thus impossible cause cycle transaction conflict writes need recorded conflict thus accord need track read write conflict nice reduction metadata overhead involved tracking propagating transaction conflict maysam yabandeh daniel gomez ferro critique snapshot isolation proceeding th acm european conference computer system eurosys association computing machinery new york ny usa doi url read transaction optimization previously mentioned list calvin derived design end uncomfortable situation strictly serializable read need committed disk part batch assigned serialization order wait previously scheduled transaction finish performing read brings sadness two different way strictly serializable read high latency read transaction involve writes disk stale read snapshot offered way avoid downside require able tolerate staleness accord whitepaper specifies journaling read transaction disk part preaccept record existence transaction conflict read transaction affect database state okay durable consensus committed read transaction side effect definition one may rely client retry read transaction failed thus preaccept need durably record existence read transaction need track dependency conflict reason information would needed track write read conflict may omit discussed additionally read transaction always aborted recovery may treat majority quorum fastpath quorum never need proceed second round order commit interactive transaction across sub thread slack thread think worked detail enough clarity agreeing belief reasonable interactive transaction protocol hiding within accord obtain consistent read snapshot client either pick timestamp wait wan rtt epsilon concurrent transaction committed aborted contact quorum partition client wish read take amount time might preferable unless epsilon large client clock untrustworthy client issue arbitrary number read replica version fully applied replica may used commit client contact quorum replica partition read written provides set read writes partition part preaccept replica quorum verify writes accepted read timestamp proposed commit timestamp intersect read set replica vote abort retry transaction likely detail missing benedict leap correction caution incompleteness enough feeling reasonably confident better version actually work particular protocol would mean transaction encounter conflict logged disk case minority quorum still might unlike commit execute design log transaction disk every execution attempt mean highly skewed interactive transaction workload much limited impact database skimming across paper discovered vcorfu corfudb interactive transaction top shared distributed log somewhat conceptually similar way also bit discussion implementation constraint conflict checking without supporting optimistic transaction accord need keep track read write set transaction still flight support optimistic transaction accord would need bookkeep recent timestamp key modified every key database cockroachdb foundationdb similar need use similar data structure could copied michael wei amy tai christopher rossbach ittai abraham maithem munshed medhavi dhawan jim stabile udi wieder scott fritchie steven swanson michael freedman dahlia malkhi vcorfu cloud scale object store shared log theth usenix symposium networked system design implementation nsdi pp usenix association tradeoff number advantage disadvantage accord take number inherited class commit execute protocol accord relies synchronized clock exceedingly poorly synchronized clock result correctness violation though perceived unavailability client replica avoids ire pitfall clock based design enjoy clickbait title newsql database system failing guarantee consistency blame spanner also mean one set much aggressive bound clock skew database rarely exceeding clock skew bound perceived message drop one would also hope existing cassandra user already warned last writer win poorly synchronized clock would already checked ntp setup committing transaction execution mean database committed performing deferred work transaction execution fashion expressiveness complexity query language need constrained place limitation execution time resource fauna invented fql specific set limitation presumable reason cql seems already reasonably limited query language easily lend succinctly expressing incredulous amount work would make already reasonably suited query language accord query pre declare read write set must attempt pre execute enough query determine submit transaction optimistic value read partial execution still untouched notably workload utilize secondary index affected degrade guaranteed commit optimistic potentially requiring retries transformed calvin optimistic protocol one significantly le efficient classic execute commit design accord similarly affected though window optimism would likely smaller however seems like common way end situation already discouraged prevented cql restriction prevent many form query result unclear read write set highly limited cassandra experience generally seen secondary index cautioned already url conclusion thought accord cassandra seemed remarkably well matched accord weakness already forbidden anti pattern cassandra accord suffers downside commit execute database le alternative design seems optimization available remove weakness entirely make favorable towards design general limitation one would desire query language already present cql leaderless consensus prioritizes availability way cassandra would similarly make raft like design seem awkward path towards efficient interactive transaction later mean commit execute design feel like placing strong limitation higher level workload could supported future work seems general purpose interesting transaction protocol also thought benedict nice enough could trick discussing transaction processing"
    },
    "1391":{
        "ID":42424,
        "MESSAGE_ID":"CAFvGCnn1GzmF_Gye-ZAh8CnO+0GLfZ_7nndAC_Ri8zfunQW8pA@mail.gmail.com",
        "PARENT_ID":42382.0,
        "SUBJECT":"Re: Tradeoffs for Cassandra transaction management",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hi expecting stay way vote cep seemed imminent discussing tradeoff thread jonathan encouraged say point word"
    },
    "1408":{
        "ID":42407,
        "MESSAGE_ID":"19DF9EBD-26CC-43A9-989B-4272C958C01B@apache.org",
        "PARENT_ID":42401.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"not-ak",
        "BODY":"lacking basic support multi partition transaction serious handicap cep offer concrete solution possible solve multi partition transaction myriad way sure cep offer cassandra moment seeing alternative ceps folk lined implement cep clear meaningful improvement status quo engineer behind committed implementation work trusted stick around maintenance month please let get going unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1411":{
        "ID":42404,
        "MESSAGE_ID":"CAA1qPbaVj9rGMdXBDGmpT6UUz7ugjvt1BtDMPkcOEB7DbcKLCg@mail.gmail.com",
        "PARENT_ID":42380.0,
        "SUBJECT":"Re: Tradeoffs for Cassandra transaction management",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"realise contributing discussion email difficult read seems like something happened formatting get displayed single paragraph line break seems overlap image uploaded imgur email thing present email image"
    },
    "1414":{
        "ID":42401,
        "MESSAGE_ID":"LO2P265MB445487D20564DEE6C2BEE518A7B59@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42392.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"missed talk discussing cep apachecon available view url"
    },
    "1423":{
        "ID":42392,
        "MESSAGE_ID":"CAA1qPbY7c=1e02GctZSigpkfn3_-+v7fWDJH3rcLY+Pync4fNA@mail.gmail.com",
        "PARENT_ID":42379.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"towards building block need correctly deliver often requested feature cassandra also support proposal believe open many new opportunity limiting narrowing future option help implement feature wanted implemented year make significant improvement subsystem source issue long time think also good start ca batch great way make feature available work incrementally land people able use accord mpt different subsystem get busy implementing sort feature improvement top"
    },
    "1430":{
        "ID":42385,
        "MESSAGE_ID":"CAGbQL+UjM4LZZXn-uE5O9SeLgHLHCmEiji2hzyEnGmGecSNdQQ@mail.gmail.com",
        "PARENT_ID":42377.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Anthony Grasso <anthony.grasso@gmail.com>",
        "TAGS":"process",
        "BODY":"hi stefan agree thought around grouping together change touching subsystem exactly started backporting work week ago example started looking change doc source architecture folder rst doc back ported propose every subsection child folder doc source architecture configuration cql rst doc change dating back june ticket ticket would list commit hash need backported commit hash span multiple subsection pick single ticket hash done allow divide work fairly easily minimal conflict merging process would need done cassandra trunk use cassandra umbrella ticket change epic opened capture work related migrating old website rts doc new website asciidoc ideal location ticket capture backporting work kind regard anthony"
    },
    "1434":{
        "ID":42381,
        "MESSAGE_ID":"CA+Emchmvzs97jqkhVREYw6zv7XnvzE-kUMufedBHzH6fjDR5bw@mail.gmail.com",
        "PARENT_ID":42380.0,
        "SUBJECT":"Re: Tradeoffs for Cassandra transaction management",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"read bit want make sure fully digest commenting rest block deserves word"
    },
    "1435":{
        "ID":42380,
        "MESSAGE_ID":"CALdd-zjZuVX0bHWMQ6oYzAYkMBXkF05CD7qFER-=izMw+m3iJg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Tradeoffs for Cassandra transaction management",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi calling several time broader discussion goal tradeoff around transaction management cep thread put together short analysis kick table summarizes state art distributed transaction offer serializability superset get lwt interesting option eliminates ramp since sure render outside gmail also uploaded url spannercockroachcalvin faunaslog see write latencyglobal paxos plus pc multi partition intercontinental replication cloud spanner allow truly global deployment reason single region paxos plus pc clear work result non strict serializability find actual number cr single az typical scenario global raft fauna post actual number production assume corresponds multi region deployment region usa slog paper say true global calvin single region paxos common case fallback multi region paxos scalability bottleneckslocks held cross region replicationsame spannerollp approach required pks known advance mostly indexed query result retries contentionsame calvinread latency serial consistencytimestamp paxos leader may cross region read local replica spanner thinksame writessame writesmaximum serializability flavorstrictun strictstrictstrictsupport isolation level snapshotnosnapshot fauna paper mention dropping strict serializable serializable probably could also support snapshot like fauna interactive transaction support reqd sql yesyesnonopotential grafting onto nightmarenightmarereasonable calvin relatively simple storage assumption make minimali thought enough slog may require versioned storage see comment included accord sufficiently clear create full transaction manager accord protocol analyze many property system would obvious solution would calvin accord instead raft since accord already calvin like thing seems like would result suboptimal redundancy putting together seems two main area tradeoff worth giving local latency get full global consistency lwt use case use local serial efficient design lwt still true global serialization require general case due physical transmission latency design allows local serialization ec region design like slog automatically infers home region local consensus common case without giving global serializability desirable worth giving possibility sql support get benefit deterministic transaction design clear benefit include significant one around simplicity design higher write throughput slog lower read write latency ill doubleclick asserted cep thread accord could support sql applying known technique top mistaken deterministic system like calvin slog accord support query row affected known advance using technique abadi call ollp optimistic lock location prediction help transaction logic known advance daniel abadis explanation ollp overview deterministic database system practice deterministic database system use ordered locking wait runtime transaction determine access set instead use technique called ollp transaction know access set advance inserted input log instead run trial mode write database state determines would read written actually processed annotated access set determined trial run submitted input log actual processing actual run every replica process transaction deterministically acquiring lock transaction based estimate trial run case database state may changed way access set estimate incorrect since transaction read write data lock must abort soon realizes acquired wrong set lock since transaction processed deterministically point every replica independently come conclusion wrong set lock acquired independently decide abort transaction transaction get resubmitted input log new access set estimate annotated clearly work server visible logic change run instance consider simple interactive transaction cursor execute begin transaction count cursor execute select count inventory id result count cursor execute update inventory set count count id cursor execute commit transaction first problem far clear trial run transaction server know piece time even worse server know got either select select followed update know anything logic would drive change statement value read change trial run execution possibility transparently retrying screwed report failure abadi concludes recent deterministic database implementation limited support interactive transaction thereby preventing use many existing deployment advantage deterministic database system realized coming year one two thing must occur either database user must accept stored procedure interface system instead client side sql additional research must performed order enable improved support interactive transaction tldr need decide want give user local transaction latency either approach inspired slog tuneable serializability like lwt trading away global consistency think answer clearly yes abundant evidence lwt people care great deal latency specifically willing live cross datacenter eventual consistency get low local latency also need decide eventually want support full sql think one le clear strong argument way slog deserves attention link paper abadis writeup murat demirbass reading group compare slog something called ocean vista never heard reminds accord jonathan elli co founder url spyced"
    },
    "1436":{
        "ID":42379,
        "MESSAGE_ID":"CALShVHc6YU2AaeFj9EpGifAvYFzsM-1Mu-BQg1wKH8Xgz=TBjQ@mail.gmail.com",
        "PARENT_ID":42375.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"existence",
        "BODY":"support proposal understand proposal move towards building block need correctly deliver often requested feature cassandra example seems unlock batch actually work register offer fast compare swap global secondary index correctly maintained therefore given benefit community support working towards foundation allow build solution cassandra pay consensus closer mutation instead lazily read repair time think feedback thread around interface statement facilitate library integrate cassandra performance fast transaction offer bounded stale read etc implementation compare contrast consensus approach informative point think make sense start trying make incremental progress towards functional integration discover remaining area improvement cheer thank joey"
    },
    "1437":{
        "ID":42378,
        "MESSAGE_ID":"CALdd-ziy1362af=7ynSGtnyYU0hpNknxvakDb9iEJRPAPxiMMA@mail.gmail.com",
        "PARENT_ID":42375.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"scott thanks summary apparently still successful communicating kind discussion around tradeoff want maybe come like asking homework put time start new thread hopefully tomorrow"
    },
    "1438":{
        "ID":42377,
        "MESSAGE_ID":"CAN+t3-gb4PRKdUdbcNShQMun=8UvCjGKOHOu_QY893LDR32jsw@mail.gmail.com",
        "PARENT_ID":42373.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"process",
        "BODY":"hey stefan thank response feasible gather related change touching subsystem one umbrella ticket would nice know make sense point view workflow decide would efficient way move forward community idea appreciated think anthony similar idea said probably share detail best regard ekaterina"
    },
    "1440":{
        "ID":42375,
        "MESSAGE_ID":"1dfbd500-7898-4491-8a12-4568bb62c8e5@me.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"C. Scott Andreas\" <scott@paradoxica.net>",
        "TAGS":"not-ak",
        "BODY":"hi jonathan following message yesterday look like reply may crossed en route thanks bumping message earlier discussion believe addressed question thread addition offering presentation related work apachecon discussion hosted following presentation apachecon asf slack contributor offered opportuntity discus specific question via videoconference help speak live would happy well since original message discussion covered lot ground related database mentioned henrik shared expertise related mongodb implementation shared overview calvin alex miller helped review work relative paxos algorithm identified great enhancement incorporate paper discus related approach foundationdb cockroachdb yugabyte subsequent discussion contrasted implementation dynamodb google cloud bigtable google cloud spanner noting specifically protocol achieves spanner round trip without requiring specialized hardware reply yesterday attempted crystallize becomes possible via cql one shot multi partition transaction first implementation latency reduction writes latency reduction read relative today along ability build upon work enable interactive transaction future believe exercised question raised grateful ground covered question difficult exercise via email please let know would like arrange call open invite would happy discus live well proposal hitting one month mark contributor interested gauging developer community response proposal warrant ability focus durably project execute development asf jira collaboration contributor engage member developer user community feedback enhancement bug intend deliver completion standard readiness suitable production transactional system record thanks scott"
    },
    "1442":{
        "ID":42373,
        "MESSAGE_ID":"CAPw+qV4u3LL8X1wqfVROyyJ_uZ1f7b5yQbxfYvMAQcDODtodUQ@mail.gmail.com",
        "PARENT_ID":42371.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"process",
        "BODY":"hi lorina ekaterina general approach sound good also creating many ticket see easy get lost feasible gather related change touching subsystem one umbrella ticket would nice know make sense point view workflow regard"
    },
    "1444":{
        "ID":42371,
        "MESSAGE_ID":"CAN+t3-jz0MwJ5XCvBm5wAHg_4TgoSj2PbMSHx2PJZLgckQQzaQ@mail.gmail.com",
        "PARENT_ID":42357.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"process",
        "BODY":"hey lorina first thank much work done rest people website doc front door project proposal understanding need everything else able roll people able join effort knock seems biggest work get correct comment ticket open suggest ticket every small backport ticket change bigger body work many see combine smaller change deal many ticket sound reasonable different suggestion plan thank one time happy help order bring finish line sure others even ticket two os every single contribution matter right best regard ekaterina"
    },
    "1445":{
        "ID":42370,
        "MESSAGE_ID":"18cfbd73-9d88-41b6-9e7c-5d87f74e2709@me.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"C. Scott Andreas\" <scott@paradoxica.net>",
        "TAGS":"existence",
        "BODY":"hi folk thanks discussion proposal also benedict fielding question list id like restate goal problem statement captured proposal frame context today lightweight transaction limit user transacting single partition unit atomicity low upper limit term amount data casd lead many design contorted data model cram different type data one partition purpose able ca propose cassandra extended remove limit enabling user issue one shot transaction ca multiple key including ca batch may modify multiple key enable cep author designed novel leaderless paxos based protocol unique cassandra offered proof correctness whitepaper outlining detail along prototype implementation incubate development integrated maelstrom jepsen io validate linearizability specific test infrastructure developed rigor remarkable thrilled see degree investment area even user require capability transact across partition boundary benefit protocol reduces message wan round trip writes read common case today baseline latency improvement coupled enhanced flexibility transacted cassandra enable new class application use database particular xrtt read write transaction across partition enable cassandra thought strongly consistent database even transactional database mode many may even prefer use default given capability apache cassandra opportunity become one perhaps database industry store multiple petabyte data single database replicate across many region allow user transact subset capability met system aware market dynamo transaction single dc google cloud bigtable support transaction spanner aurora cloudsql rds far lower scalability limit require specialized hardware etc incredible opportunity apache cassandra surpass scalability transactional capability advanced system industry open source anyone download deploy software achieve without cost student researcher learn build upon well team ut austin already reached effect benedict blake noted scope captured proposal also terminal first implementation may extend today ca semantics multiple partition lower latency foundation suitable build interactive transaction well would remarkable something considered onset project end cep proposes protocol offer validated implementation initial capability extending today single partition transaction multi partition providing flexibility build upon work simple example becomes possible work land integrated might begin batchupdate tbl set value newvalue partitionkey kupdate tbl set value newvalue partitionkey conditionvalue someconditionapply batch understand query present cep intent recommend folk reread given careful reading already think important elaborate upon becomes possible query issued user cassandra designed data model cram many type data single partition purpose atomicity longer need design application appropriate schema would leave codd holding nose longer pushed antipatterns result partition becoming huge potentially unreadable cassandra become fully relational cep becomes possible even easy design application transact across table mimic large amount relational functionality user content transact single table find transaction become faster today due protocol reduction round trip library loose coupling apache cassandra ability incubated tree also enables application take advantage protocol nice step toward bringing modularity project lot good thing happening know listed author figured go record say support cep thanks scott"
    },
    "1458":{
        "ID":42357,
        "MESSAGE_ID":"CAAy+TbTH=NHKM4O7AKGDE=K-WybCVikwex-n4h9VSCRujaHsRQ@mail.gmail.com",
        "PARENT_ID":42350.0,
        "SUBJECT":"Re: [DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks lorina work proposal make sense le mer october lorina poland ecrit"
    },
    "1465":{
        "ID":42350,
        "MESSAGE_ID":"CAGQ2nxowXLR=kJQ2pXyMTe02G5GOhAy7YKGXMCG8KQ09R90PbQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Cleaning up docs, completing CASSANDRA-16763",
        "SENT_FROM":"Lorina Poland <lorina@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"discussion tackle getting doc fixed many know started month ago convert apache cassandra tree doc restructedtext rst asciidoc conversion required doc source file converted also cassandra website source updated build doc asciidoc seen result conversion beautiful new design work accomplished apache cassandra ready ga used private repo polandll cassandra build doc publication new cassandra website procedure allows repo used build due series interference virtually people project anthony grasso mick semb wever paul lau time leading ga right never gotten repo work committed merged official source apache cassandra proposal plan action anthony lorina get trunk branch lorina worked last month ready merge polandll cassandra apache cassandra change made last month doc current rst doc need backported new adoc doc use commit history hunt change make ticket ticket listed umbrella ticket ticket already exist asked people wait merging conversion ticket also need completed ticket pr people submitted private repo oh completed official repo write contribute doc give people rundown write asciidoc would like merge doc current state step make backports rather make backports merge apache cassandra repo main reason order least doc website could built official repos done adoc conversion merged doc website built personal repo sad situation lastly clarify work want merge modified trunk made change required file rather modify branch wrote trunk removed new folder called new unimaginatively planned go back incorporate new material appropriate place doc short order change longer new url url"
    },
    "1494":{
        "ID":42321,
        "MESSAGE_ID":"LO2P265MB44547648261E138CDDBDFFABA7AB9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42320.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"actually thinking simple optimistic protocol would fact guarantee system forward progress independent transaction formulation"
    },
    "1495":{
        "ID":42320,
        "MESSAGE_ID":"CWXP265MB4459F7229836E98082524EEBA7AB9@CWXP265MB4459.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42318.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"hi jonathan would great could achieve bandwidth higher short email per week remains unclear goal would help could make statement like want cassandra able respond directly also available another call back forth please feel free propose london compatible time within next week suitable opinion risk veering topic though cep deliver interactive transaction knowledge nobody proposing cep interactive transaction cep hand salient question seems cep prevent implementing interactive transaction property future answer almost certainly however continue discussion respond directly query believe agree definition interactive transaction two protocol loosely outlined first using timestamps optimistic concurrency control would indeed involve possibility abort would however inherently adopt issue lwts transaction able make progress whether progress guaranteed livelock free sense would depend structure transaction interfering approach advantage simple implement could realistically support interactive transaction quite quickly additional advantage transaction would execute quickly avoiding wan construction result may practice experience fewer abort protocol guarantee livelock freedom second protocol proposed using read write intent would able support almost behaviour want could even utilise pessimistic concurrency control anything huge design space discussion approach trade offs could made opinion entirely scope cep"
    },
    "1497":{
        "ID":42318,
        "MESSAGE_ID":"CALdd-zhUxw-ZY=M1Fu2tthfgL=76bhV_n+yaeY2Z+qud-ZGMPA@mail.gmail.com",
        "PARENT_ID":42316.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence",
        "BODY":"obstacle provided protocol fully fleshed architecture hard fill blank look like optimistic concurrency control interactive transaction applied accord would leave lwt like situation fairly light contention nobody actually make progress due retries make sure talking thing henrik pointed interactive transaction mean multiple round trip client within transaction example simple implementation tpc new order transaction high level logic via get record describing warehouse customer district update district increment next available order number insert record order new order table item get item record get update stock record insert order line record see requires lot client side logic mixed actual sql command"
    },
    "1499":{
        "ID":42316,
        "MESSAGE_ID":"LO2P265MB4454C1C7EEF6265AF64C3294A7AA9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42314.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"essentially although think practice need track partition timestamp separately optionally reduced conflict row datum make part conditional application transaction least strict serializability alternative insert read write intent transaction step confirm still valid commit approach would require wan round trip step interactive transaction whereas timestamp validating approach use lan round trip step besides final one also much simpler implement"
    },
    "1501":{
        "ID":42314,
        "MESSAGE_ID":"0262021A-32F5-4797-B581-B7AA9B24DD52@apple.com",
        "PARENT_ID":42313.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com.INVALID>",
        "TAGS":"existence",
        "BODY":"could establish lower timestamp bound buffer transaction state coordinator make commit operation applies partition involved changed recent timestamp could also implement mvcc either storage layer period time buffering commits replica applying unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1527":{
        "ID":42288,
        "MESSAGE_ID":"CAFvGCnnkhcfCzj6jAxu0egzyS7SV4qjeYTF49=3wXxaQfNQJMQ@mail.gmail.com",
        "PARENT_ID":42277.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"technology",
        "BODY":"feel like volunteer write mongodb transaction tl dr snapshot isolation causal consistency using raft ish lamport clock pc lead age old discussion whether user really want serializability"
    },
    "1532":{
        "ID":42283,
        "MESSAGE_ID":"LO2P265MB4454F71B7513F696F568E10AA7A29@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42282.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"technology",
        "BODY":"could explain believe trade necessary support full sql fine accord hope eventually domain incredibly complex easy reach wrong conclusion would invite propose system discussion think offer something accord unable consider desirable work pre empt possible discussion aware anything accord could either calvin spanner interactive transaction possible top accord transaction unknown read write set case cost would use optimistic concurrency control worse spanner derivative anyway assume benchmark regard expect deliver either functionality initially accord take way"
    },
    "1533":{
        "ID":42282,
        "MESSAGE_ID":"CALdd-zgTx=7tyhoQeWNYXiuOpQmHem=drgLzowjJMmo_YS_d0Q@mail.gmail.com",
        "PARENT_ID":42278.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"property",
        "BODY":"right looking exactly discussion high level goal instead saying goal ruled start discussion around approach allows approach allows decide together goal willing trade get goal willing give global strict serializability get ability support full sql nice"
    },
    "1535":{
        "ID":42280,
        "MESSAGE_ID":"LO2P265MB4454CA2C992D7ECE4FA98C7DA7A29@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42279.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"technology",
        "BODY":"oh finally address question fauna achieves low cost read default serializable isolation doubt ensure transaction log replicated order read dc local transaction log serializable accord similarly able offer cheap serializable read additionally able offer strict serializable read without performing write consensus nod alex miller pointing advantage calvin"
    },
    "1536":{
        "ID":42279,
        "MESSAGE_ID":"LO2P265MB445401BF6B6C068BCBAB04B3A7A29@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42278.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"technology",
        "BODY":"demonstrating subtle complex difficult pin topic fauna recent blog post implies may migrated leaderless sequencing protocol earlier blog post made clear used leader process however calvin still assumes global sequencing shard modifies latency client goal whether also removed calvin single shard linearization transaction unclear public information suggest met goal protocol would essence begin look lot like accord perhaps moving towards similar approach"
    },
    "1537":{
        "ID":42278,
        "MESSAGE_ID":"LO2P265MB4454D161EF09B73AD6305788A7A29@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42277.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"property, technology",
        "BODY":"hi jonathan system incompatible goal cep discus besides pc whitepaper cep summarise discussion true accurate comparison system essentially intractable complex subtlety flavour interested would better served performing research think productive focus want achieve community believe goal cep wrong project let focus want compare contrast specific facet alternative system consider preferable dimension let proposed joey relevant goal guarantee strict serializable isolation commodity hardware scale cluster size achieve optimal latency approach taken spanner derivative rejected guarantee serializable isolation additionally fail watching talk yugabyte inferring cockroach panic cluster death clock skew clearly considered everyone undesirable necessary achieve scalability approach taken faunadb calvin rejected sequencing layer requires global leader process cluster incompatible cassandra scalability requirement additionally fails global client two phase commit fails aside afaict dynamodb today spanner clone multi key transaction functionality pc system ramp even weaker isolation considered simple reason even claim meet want additionally offer weaker isolation level serializable provided recent ramp tao paper cassandra likely able support multiple distinct transaction layer operate independently would encourage file cep explore meet distinct use case consider niche expect majority user base desire strict serializable isolation certainly le serializable isolation augment existing weaker isolation offered quorum read writes would tangentially note ap database normal recommended operation minority network partition reach quorum recommended usage high availability leaderless cp database"
    },
    "1538":{
        "ID":42277,
        "MESSAGE_ID":"CALdd-zjFFfvroyLMx5WS1AtsY_s_-W4stBX=vnDfyR6LXZP0QA@mail.gmail.com",
        "PARENT_ID":42155.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"technology",
        "BODY":"benedict thanks taking lead putting together since cassandra relevant database today designed around leaderless architecture quite likely better served custom transaction design instead trying retrofit one cp system whitepaper good description consensus algorithm well robustness stability characteristic comparison state art consensus algorithm useful context cassandra consensus algorithm part implemented would like see complete evaluation transactional side thing well including performance characteristic well type transaction supported least general idea would look like applied cassandra allow pmc make informed decision tradeoff best entire long term project first supplementing ultimately replacing lwt allowing user mix lwt ap cassandra operation row probably mistake contrast lwt looking something fast enough occasional use rather something within reasonable factor ap operation appropriate way interact table declared besides accord cover calvin faunadb spanner derivative opinion whether cockroach yugabyte think necessary cover pc implementation accord paper mention dynamodb suspect public information mongodb ramp example mean calvin approach global consensus paxos calvin raft faunadb order transaction replica execute transaction independently coordination spof transaction batched sequencer keep becoming bottleneck performance calvin paper published report linear scaling tpc new order transaction machine ec xl machine gb ram virtual core note tpc new order composed four read four writes effectively read writes normally measure calvin support mixed read write transaction transaction execution logic requires knowing partition key advance ensure replica reproduce result coordination read non pk predicate must done ahead time transparently server determine set key must retried set row affected updated actual transaction executes batching global consensus add latency calvin paper apparently faunadb glass half full transaction including multi partition update equally performant calvin since coordination handled front sequencing step glass half empty even single row read writes pay full coordination cost fauna optimized away read aware description changed design allow functionality limitation since entire transaction must known advance allow coordination le execution replica calvin support interactive transaction faunadb mitigates allowing server side logic included calvin approach never able offer sql compatibility guarantee calvin transaction strictly serializable additional complexity performance hit generalizing multiple region apart speed light since calvin already paying batching latency penalty le painful system application cassandra distributed transaction handled sequencing scheduling layer leaderless calvin requirement storage layer easily met calvin also requires global consensus protocol lwt almost certainly sufficiently performant would require zk etcd reasonable library approach replacing lwt implementation accord believe calvin would require additional table level metadata cassandra"
    },
    "1564":{
        "ID":42251,
        "MESSAGE_ID":"CABNXB2C4HWZbXm1g84GAS-ny4XONfjgE6_pJFd87-ECakZbm9w@mail.gmail.com",
        "PARENT_ID":42249.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"good new mike row based indexing available major lacking sasi time le jeu sept mike adamson ecrit"
    },
    "1566":{
        "ID":42249,
        "MESSAGE_ID":"30A8901A-9628-4679-84A3-4F94532744D5@datastax.com",
        "PARENT_ID":42246.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Mike Adamson <madamson@datastax.com>",
        "TAGS":"existence",
        "BODY":"hi keep thread date development progress adding row aware support sai next week currently going final stage review testing feature also add disk versioning sai allows sai support multiple disk format upgrade mentioning cep mention partition based iteration initial feature change row based iteration feature merged mikea"
    },
    "1568":{
        "ID":42247,
        "MESSAGE_ID":"CAFvGCnmTukQHGkjQPN6xfb1DL4bHnK6n8uzv-=do4PqPum9dQg@mail.gmail.com",
        "PARENT_ID":42246.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"thanks caleb observation valid factual statement good clear limitation would like add usefulness fan broadcast secondary index query depends cluster size noticed everything cassandra tends designed extremely large scale hundred node mind case sai index however case useful smaller cluster read amplification fan moderate cassandra userbase probably different experience mongodb world le user even need use sharding hence apps get full benefit good secondary index implementation including using query without partition key similarly end someone large cluster could benefit ability execute infrequent query need broadcast across cluster long query insignificant total workload cluster like per day per hour henrik"
    },
    "1569":{
        "ID":42246,
        "MESSAGE_ID":"CAHvM0udpYLgN6JnQ15jZiZsyzcyxQ0kRRiEJOm96h0EWDH0nBQ@mail.gmail.com",
        "PARENT_ID":42195.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Caleb Rackliffe <calebrackliffe@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hey spirit trying get many possible objection successful vote way added challenge section cep url familiar think need open candid possible potential risk pose sai broader usability described point view intractable anyone think let hash disagreement thanks"
    },
    "1576":{
        "ID":42239,
        "MESSAGE_ID":"LO2P265MB4454CFD3710AEE9F8AC18FC4A7DB9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42238.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"ok act typing example actually really good reminder limited functionality today even single partition operation want distract discussion around underlying protocol could kick separate conversation evolve cql sooner later appetite concrete proposal discus would brainstorming people also generally agree work warrant distinct cep would people prefer see developed umbrella"
    },
    "1577":{
        "ID":42238,
        "MESSAGE_ID":"LO2P265MB44548A00F4C05B64FCBDDCC3A7DB9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42237.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"grammatically correct cql query today executed work naturally remove restriction certainly happy specify one cep help reader want exclude new cql command enhancement grammar scope cep however work enable range improvement ux think work separate long term project evolution deserves ceps likely involve input wider range contributor user nobody else start ceps due course much line assuming significant dissent point update cep reflect non goal"
    },
    "1578":{
        "ID":42237,
        "MESSAGE_ID":"8f13a8c6-a82e-48ba-ad24-f4178424bc3f@me.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"C. Scott Andreas\" <scott@paradoxica.net>",
        "TAGS":"existence, process",
        "BODY":"adding note perspective well ux question thanks asking agree offering set example query use case may help make specific use case understandable perhaps prepare example included cep think potential ux direction begin specification protocol underly expressed may superset immediately exposed cql minimum great sense query one might able issue focus reading whitepaper start using external dependency later evaluate necessary bring project even incubate another apache project think would valuable project work incubated separate repository part apache cassandra project much like jvm dtest api harry pattern worked well project incubated allowed evolve outside primary codebase subject project governance set pmc member committers like library also make sense cassandra project first time known intended consumer library though may future proposal accepted time horizon envisioned work completion month standard production readiness contributor see value work donated governed contribution practice foundation ensures developed openly full opportunity review contribution others also solidifying contribution ip project spinning separate asf incubation project interesting idea feel would introduce far greater overhead process governance suitable governance set committers pmc member apache cassandra project"
    },
    "1600":{
        "ID":42215,
        "MESSAGE_ID":"1B2E120E-72A9-490B-924F-D8C907FDB9A3@gmail.com",
        "PARENT_ID":42213.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would good clean config code yaml thing required changed commented file everything else commented default last checked many field commented would use sensible value would result npes code level default jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1602":{
        "ID":42213,
        "MESSAGE_ID":"56FDBCC7-9B12-4E56-AA01-533BC5E7BE6E@apple.com",
        "PARENT_ID":42150.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"David Capwell <dcapwell@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"would hope human maintaining maintain commented one something like compile burden maintain exist remove comment empty line egrep space space conf cassandra yaml doc conf cassandra yaml right conf hotspot compiler long build maintains file also run command see actually lot thing show line would nice clean small subset required shown normal user care unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1620":{
        "ID":42195,
        "MESSAGE_ID":"CAGY8e-7jtHeuVALEWZyq8NrpqONWwqZkN-vrPeQ=h1O-ZmwLFA@mail.gmail.com",
        "PARENT_ID":42170.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"introducing incremental manner reading cassandra seems like perfect place start see work jira stopped direction cep voted say start vote let get really valuable developer feature underway patrick"
    },
    "1643":{
        "ID":42172,
        "MESSAGE_ID":"836F2FC8-CCD6-4CAA-AEF0-390E31181FD9@beobal.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 4.0.1 released ",
        "SENT_FROM":"Sam Tunnicliffe <sam@beobal.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1645":{
        "ID":42170,
        "MESSAGE_ID":"CAHvM0ufcZezT3ZPX9=b4WDqaOA62RY_JNF0s6R=3fHvoFjzS2A@mail.gmail.com",
        "PARENT_ID":40125.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Caleb Rackliffe <calebrackliffe@gmail.com>",
        "TAGS":"process",
        "BODY":"thread stalled almost year ago wow time fly trying release synthesis conversation point open question testing methodology definition done choice particular disk data structure neither serious obstacle moving forward vote said anything left around cep feel prevent moving vote term would proceed point vote pass seems like enough concern around proposed necessary breaking change api start development introducing component incrementally possible long running feature branch trunk work would likely start cassandra could resolve sub task sai epic without interfering trunk development likely destined minor etc"
    },
    "1647":{
        "ID":42168,
        "MESSAGE_ID":"702E92C5-BBC7-4470-B2D0-BBCF99C7838A@apple.com",
        "PARENT_ID":42167.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi jake likely require cl specified schema level table using multi partition transaction id expect available table required interface need implemented support library find current interface accord api package written support initial testing intended integration thing pretty fluid right rewritten refactored multiple time next month thanks blake unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1648":{
        "ID":42167,
        "MESSAGE_ID":"CALamAD+Mtbd5CDPidVmgo_jGEFXH=2z2Eo-G+PwrJrK5+Le+WQ@mail.gmail.com",
        "PARENT_ID":42155.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Jake Luciani <jakers@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi benedict gone deeply proposal exciting see kind innovation basic question tangentially related effort see covered cep effort eventually replace consistency level ask one shortcoming paxos today easily mixed non serialized consistency therefore user commonly break consistency example reading cl one also using lwts structural change planned support external dependency project like high level interface expect project adhere thanks jake"
    },
    "1650":{
        "ID":42165,
        "MESSAGE_ID":"LO2P265MB4454F914B528C6E0FE3E7FE6A7D39@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42164.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sure aspect system referring unless misunderstood consider strictly inferior approach particularly cassandra require global leader process result scalability limit user simply shift sharding problem cluster level rather node level fundamental problem remains may acceptable many user contrary goal cep would estimate long running query easier deliver least order magnitude unrelated still quite distinct opinion case lost noise work simply assembly prior work introduces entirely novel approach permit work exceed capability prior research production system worth properly highlighting deliver cassandra sophisticated transaction system full stop knowledge database offering distributed transaction strict serializable scalability bottleneck every database today clearly aim combination accepts trade either guaranteeing serializable isolation requiring special time keeping hardware guarantee strict serializability using global leader process us two phase commit quite niche"
    },
    "1652":{
        "ID":42163,
        "MESSAGE_ID":"LO2P265MB44540FD2985011E3A242020EA7D39@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42162.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"problem happy talk suggestion vein probably best subject everyone else discussion fair question perhaps something pinpoint directly reader cep stipulate non interactive transaction one shot limitation partition key must known upfront however expect follow soon weaker semantics build top probably using optimistic concurrency control support transaction partition key known upfront may support global secondary index proper isolation consistency lwt concept cassandra one agreed upon definition understanding core feature limitation lwts operate single partition result many operation impossible even multiple round without complex distributed state machine core improvement besides improved performance able operate set key facility evolved user facing capability open ended question initially course least support syntax remove restriction operating single partition thought much cep primarily enabling work think want expand syntax two way support complex condition simple condition across partition seem likely restrictive though might make sense single partition case support inserting data one row another potentially transformation applied including via udfs relatively manageable improvement might want land major release transaction core facility expanded quite broadly though would possible instance support interpreted language part query arbitrary work applied transaction perhaps community would rather build atop feature support interactive transaction client predict resourcing though might community effort think would quite tractable work land however two side without paging long running read transaction taking second quite likely fine probably support mvcc within transaction system may may part hard predict certainty going large undertaking paged query wed talking snapshot isolation likely something community want support long anyway probably hard might think probably outside scope work though two would dovetail nicely"
    },
    "1654":{
        "ID":42161,
        "MESSAGE_ID":"LO2P265MB44547B1B84C762822D047DA5A7D29@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42160.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi henrik welcome thanks feedback course may selective back forth always take discussion list keep manageable expect much like lwts facility user provided timestamps transaction yes anticipate many knock improvement table managed transaction facility thanks consider might make clearer portion algorithm execute receipt message may received replica indeed executed replica yes perhaps may made clearer previous draft additional upsilon variable likely clarified location consistency hard use would replace tau already bound wider context consistency tried ensure gamma tau upsilon throughout paper nope single important digit difference think protocol easily made natively support interactive transaction even discounting problem highlight thought much goal interactive transaction certainly built top publishable result intention publish fairly rough implementation jepsen io maelstrom txn append workload may run leisure prototype repository tree strict serializability verifier honesty probably useful today think functionally equivalent welcome browse run thing progress towards completion kyle interested funding found id love discus possibility depth jepsen analysis could published totally separate conversation think premature think reasonably well specified protocol since unclear found confusing know would productive try explain list look prototype java easier parse course fully specified ambiguity discus list perhaps community slack channel"
    },
    "1655":{
        "ID":42160,
        "MESSAGE_ID":"CAFvGCnm72KO7cYgfYNH-fQmub2=b6bK=POOyYb8if7s=7xRHMA@mail.gmail.com",
        "PARENT_ID":42155.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Henrik Ingo <henrik.ingo@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hi start briefly introducing worked year plus datastax manager role expectation near term actually contribute code doc cassandra rather hope work indirectly enable others also expect vocal list today seemed like perfect day make one exception hope ok joining cassandra world worked mongodb several company mysql ecosystem read raft mailing list met since focus always high availability performance felt much home working cassandra ecosystem author white paper want say inspiring work agree time bring general purpose transaction cassandra introducing way build upon cassandra existing dynamo protocol natural timestamps learning cassandra month ago similar thought presenting hope ok use list comment whitepaper introduction agree cross shard transaction recently becoming mainstream academic level accuracy paper may want reference ndb also known mysql ndb cluster url url thesis mysql acquired technology dollar since shortly year widespread use mobile phone network early commerce olap ml type use secondary use case short ndb provides cross shard transaction simply via pc curious detail design actually replication cross shard via pc two participant happen replica timestamp reorder buffer probably case obvious omitted required accord wanted add addition deadline also impose upper bound maximum allowed timestamp make issue tombstone future go away since creating ordered commit log also avoid keep tombstone day simplify anti entropy failed node etc consensus algorithm hard read since omit role participant executed coordinator sentence correct probably limit understanding note transitive dependency another deps committed may pruned deps durably transitive dependency safety proof theorem appear identical end ok read discussed briefly leaving reader guess quite lot interactive transaction possible appears could even algorithm allows one pas read understand correctly essentially start end time transaction serializability provided fact later transaction gamma even start execute read earlier transaction tau committed interactive transaction possible seems client denial service row never committing keeping lock open forever guess question read happen precisely possible consensus protocol executed first already know dependency even execution protocol aka read writes executed similarly expect apply writes read returned client even proposing calvin like single shot transaction still begs question mechanism consume read result based impact writes reading cep result jepsen testing available henrik"
    },
    "1657":{
        "ID":42158,
        "MESSAGE_ID":"A957B0B6-511E-4BA4-A822-4838CBEE675B@icloud.com",
        "PARENT_ID":42157.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Dinesh Joshi <djoshi3@icloud.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"one major advantage separate library would modularity dinesh unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1658":{
        "ID":42157,
        "MESSAGE_ID":"LO2P265MB4454013E5DB7B2534B14CB0DA7D19@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42156.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"yep correct fact goal maintain standalone library long term primary goal integration cassandra think value maintaining distinct library core functionality long burden remains manageable"
    },
    "1659":{
        "ID":42156,
        "MESSAGE_ID":"CABsaHTPPX9ZWZLL6gTTmQdhPRtPiihBHDoPL8Of4yddyQXsy7Q@mail.gmail.com",
        "PARENT_ID":42155.0,
        "SUBJECT":"Re: [DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi benedict parsing correctly want include stand alone library project separate repo begin correct otherwise intrigued paper proposal look excellent thanks benedict et putting together nate"
    },
    "1660":{
        "ID":42155,
        "MESSAGE_ID":"LO2P265MB44545CC6CB2109AD93B04A0AA7D19@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CEP-15: General Purpose Transactions",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"property",
        "BODY":"wiki url whitepaper url prototype url hi everyone id like propose cep adoption community cassandra benefitted lwts many year application developer want ensure consistency complex operation must either accept scalability bottleneck serializing related state single partition layer complex state machine top database sophisticated costly activity user expected undertake since distributed database beginning offer distributed transaction fewer caveat past time cassandra well cep proposes use several novel technique build upon research followed epaxos deliver non interactive general purpose distributed transaction approach outlined wikipage detail linked whitepaper importantly adopting approach distributed database offer global scalable strict serializable transaction one wide area round trip would represent significant improvement state art academic literature commercial open source offering work partially realised prototype partial prototype verified jepsen io maelstrom library dedicated tree strict serializability verification tool much work remains work production capable integrated cassandra propose including prototype project new source repository developed standalone library integration cassandra hope community see important value proposition proposal adopt cep discussion library integration cassandra developed parallel involvement wider community"
    },
    "1664":{
        "ID":42151,
        "MESSAGE_ID":"CAHyRp2TEJx6TUNexFBhjWb2hPF-5Rsr=ohp6k9A_efeMROQ93g@mail.gmail.com",
        "PARENT_ID":42149.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"ah misunderstanding assumed relying local context grouping provide insight functionality parameter removed comment end point stand multiple option yaml file update multiple yaml template file addition new feature params another spot human error simple build time checking ensure file stay sync"
    },
    "1665":{
        "ID":42150,
        "MESSAGE_ID":"LO2P265MB44540C5AE6626E704309E9A1A7CF9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42149.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"actual doc version unfortunately well think grouped format lends much briefer comment group related parameter getting overall description even developer understands toggle found old file hard navigate also see heavily commented version uncommented lightly commented version personally see multiple different config template would confusing suitably labelled directory even settle one default might even nice pared config property expect normal user need particularly easy navigate"
    },
    "1666":{
        "ID":42149,
        "MESSAGE_ID":"CAN+t3-jkbWZURVJAMQMjBe_KFeg33+1M0Q13pBL+Dm_kEAY3vg@mail.gmail.com",
        "PARENT_ID":42148.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"process",
        "BODY":"sure concern three version yaml could bring confusion backward compatibility current one time might open feedback well ticket first version one raised concern definitely update doc whatever else came agreement user contributor valid point believe one reason delayed ticket order get feedback really interested hear concern people might tuning simplification make user life easier point comparing length file think comment stripped poc guess many get back actual doc version unfortunately thank ekaterina"
    },
    "1667":{
        "ID":42148,
        "MESSAGE_ID":"CAHyRp2TjPF9-LU4kCiqewXoycGSGVKiTJ8Kr22xnf4N3N4FW6g@mail.gmail.com",
        "PARENT_ID":42147.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"reading two grouping approach seems like lot friendly newcomer well providing context specific cue relationship params editing showing telling opening line yaml file daunting even comment blame folk overwhelmed prospect tuning cassandra operator config api josh"
    },
    "1668":{
        "ID":42147,
        "MESSAGE_ID":"65E43713-48C5-4F74-85EF-A0192F4A7F56@apple.com",
        "PARENT_ID":42146.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"David Capwell <dcapwell@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"thanks bringing back caleb talking lack clarity regard cassandra fleshing would make configs nicer document would great stuff like enabled inconsistent sure properly really hate local read size threshold kb would love local read size threshold kb infrastructure place believe patch tool would love switch yep triggered caleb talk thread group group question personally like grouping organization point view favor though agree hard tool bash templating feel always find common ground unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1669":{
        "ID":42146,
        "MESSAGE_ID":"LO2P265MB445457AD2A206D53C44FA317A7CE9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42145.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"thanks bringing list ekaterina worth noting two conflict could offer two template yaml parameter grouped differently user decide proposal primarily define parameter name differently proposal going kind place proposal maintaining mostly existing name form bit like place kind example yaml group kind convert nested definition dot form limit concurrency read use different grouping one advantage grouping parameter together aid maintaining coherency naming system also potentially permit succinct config file better discovery far silver bullet value judgement made grouping line sure anything settle huge improvement status quo however"
    },
    "1670":{
        "ID":42145,
        "MESSAGE_ID":"CAN+t3-jdYEa8HXeZLUywU8a7-X5Nx5Qx9gvCPUFsf4SEd=Vhxg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CASSANDRA-15234",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi team would like bring attention community cassandra standardise config jvm parameter work discussed back summer first beta release discussion figured one option job enough time get user feedback finish delayed post bringing back table work goal standardize naming agreeing form noun verb provision value unit maintaining backward compatibility two part le already done interesting third part reorganizing cassandra yaml file personal approach split section done another proposal done benedict grouping config parameter make clearer created yaml comment mostly stripped version basic setting network disk etc grouped together followed operator tuneables mostly limit within throughput concurrency capacity lead setting feature kept separate notably caching help operator understand play controlling resource consumption interested hear people think two option anyone another idea share open discussion thank ekaterina"
    },
    "1682":{
        "ID":42133,
        "MESSAGE_ID":"CACvH57JwYfEH0Ha_EpM5hWic+sNksiHC=+LdcQcBndddWNw-2w@mail.gmail.com",
        "PARENT_ID":42128.0,
        "SUBJECT":"Re: Defining which code changes target which release types",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yes thanks josh think lot ambiguity discussion around constitutes major change stress think easy look solely code accuracy perspective would valuable take user centric wiifm approach pragmatic possible let take discussion whether certain interface apis user facing enough signal major change user index trigger etc come mind bearing mind mix version upgrade ability deal lot planned work raised deal easily rolling back started upgrade news txt small api stuff often changing minor version anyway would move deprecating functionality minor version something could deprecated removed"
    },
    "1687":{
        "ID":42128,
        "MESSAGE_ID":"CAHyRp2Ti-TnAxncx26zVkkYQP=u2dPo_XdtHx=JQB_BVSZxf5Q@mail.gmail.com",
        "PARENT_ID":42082.0,
        "SUBJECT":"Re: Defining which code changes target which release types",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"attempt distill set heuristic discussion patch release goal maintain improve stability non disruptive non api changing bug fine consensus bug change default interface require consensus improvement kind require consensus must small safe area non default changing minor release goal stable introduction new feature new feature always feature flag added happy drop controversial api breaking change additive api change sane default acceptable major release goal provide avenue make breaking non backwards compatible evolutionary change api breaking change deprecating functionality changing default behavior destructive removing change params feature etc major well tested well documented component refactors added happy drop controversial structure may go major patch major without minor go minor patch awhile minor destructive change consistent saying mick others think josh"
    },
    "1729":{
        "ID":42086,
        "MESSAGE_ID":"CAAy+TbQMAwuYRZ_yGOqwbHS91EtB49X3JVNgs10FY1QnO1vgvw@mail.gmail.com",
        "PARENT_ID":42064.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"wanted mention super eager see proposal implemented benedict thanks pushing forward le mer aout benedict apache org ecrit"
    },
    "1733":{
        "ID":42082,
        "MESSAGE_ID":"CACvH57Lhjht3iktahvo6CSRxi52mw3JDgq6rpXNwYaR-5eQC5Q@mail.gmail.com",
        "PARENT_ID":42078.0,
        "SUBJECT":"Re: Defining which code changes target which release types",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"throwing two cent keen better adhere semver rule said specifically defining difference major minor version defining difference minor patch version turn address question josh rather tricky big complex codebase technology one focus availability time easiest way far think eye user benefit give example benefit come mind major version used demarcate upgrade path jump major upgrading clearer expectation deprecated feature apis removed removal deprecated feature api happen major version building previous give user structure follow helping build intuition might news txt change txt safety upgrade stricter go patch version easy think knock benefit dev community clarity version may contain degree testing involved upgrade encourage user upgrade often help worth noting something already asking user annual release supported year get tricky really define jira issue type improvement bug api change incur significant behavioural change come mind improvement feature also clean addition onto existing spis marked alpha beta applied safely past version spi exists improvement quite often operational fix quick scan chnages txt patch release show easier formulate better define project component work stuff like tool client side stuff packaging test spi implementation dealt quite differently component list also help ensure get adequate review patch touch half baked started url struggling find time progress help would appreciated detailed component list already jira used well doubt helping guide guideline ultimately defined user centric criterion lieu guideline place favour following restricting go patch version bug non disruptive non api breaking go without discussion bug impact existing behaviour interface require consensus minor improvement particularly safe part code essence operational fix make sense include require consensus consensus according code contribution voting described project governance part discussion ticket also raised ml doubt exist light enforcement rule allowing common sense prevail letting encouragement discussion help organically define guideline time make trunk bump major version already current release cycle starting basic like patch break upgrade previous major significant underlying change subsystem encouraging discussion figure finally topic stable trunk feature flag feature flag absolutely used new feature come disabled default also commonality spi implementation accepted code"
    },
    "1737":{
        "ID":42078,
        "MESSAGE_ID":"CAHyRp2SvWoQU-6sbz1kJxiCAO25rPzuPfUBeYTDLJokx_QGXAA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Defining which code changes target which release types",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"discussion came url concerning land different different type clear conversation come ml outcome codified future useful pre reading release lifecycle wiki url context clear wiki article three release type currently patch minor major currently wiki articulates following general availability incremental fix post ga issue identified included patchlevel release new branch created release new major version limiting new feature addition new release branch new feature development continue happen trunk question came discussing qualifies incremental fix purpose inclusion patch release bug qualify bugfix break api land small improvement api mutating qualify improvement decides lazy consensus committers personally pretty neutral cost benefit clear optimal answer face value lastly also advocate clear definition expectation release wiki something like major api change feature deprecation protocol change minor new feature change default behavior patch whatever decide thread think josh"
    },
    "1750":{
        "ID":42065,
        "MESSAGE_ID":"811C18C4-584C-4FE5-BC09-06EDD7BE6092@datastax.com",
        "PARENT_ID":42057.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Miles Garnsey <miles.garnsey@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"jeff benedict taken thought board probably plan repair scaling point speculative retry get thinking many thanks tip explanation"
    },
    "1751":{
        "ID":42064,
        "MESSAGE_ID":"LO2P265MB44549F78B1F416C84959280CA7C69@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42057.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"ill move vote day assuming discussion"
    },
    "1758":{
        "ID":42057,
        "MESSAGE_ID":"B68A0E10-3314-43F9-B6D7-83A698570689@gmail.com",
        "PARENT_ID":42056.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"see best chance snitch game guarantee correctness single replica gc pause force speculative retry unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1759":{
        "ID":42056,
        "MESSAGE_ID":"65FCD5F8-684A-4AD4-B316-B6E6289150A5@datastax.com",
        "PARENT_ID":42051.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Miles Garnsey <miles.garnsey@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"think way using certain setting java driver agree point"
    },
    "1761":{
        "ID":42054,
        "MESSAGE_ID":"CAHyRp2R9CdGtC5zYwiKQbgMmqo8DJtN-QDtxKr5fHdDqa_tMxw@mail.gmail.com",
        "PARENT_ID":42051.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"stood strong le client know powerful complex distributed database still gain benefit better josh"
    },
    "1764":{
        "ID":42051,
        "MESSAGE_ID":"LO2P265MB44544B805060E7F61E403F4BA7C19@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42050.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"problem today way reliably exclude new dc serving read know yes would need ensure repair run prior activating read dc think unlikely particularly start consider thing like consensus least time soon quorum quite intricately woven implementation would quite hard fully generalise practice probably accommodate simple vote threshold quorum electorate vote vote equal weight reach consensus threshold crossed support least one level nesting dc may logically vote block based quorum within dc topology without plugin system suspect enough system foreseeable future practicality probably prohibit eliminating user provided cl would like see phased far possible hard verify support flexibility generally id prefer see table offer potentially multiple consensus scheme potentially different quality perhaps even named user case instance fast inconsistent read still permit property vetted database offering flexibility user declare operator level meeting concept requires also mean database maintain property topology change well probably people using legacy cl another decade going support people querying cl might want encourage people disable cluster migrate safer setup"
    },
    "1765":{
        "ID":42050,
        "MESSAGE_ID":"07378B73-48C0-4CD6-AD81-21C39DB58C1E@datastax.com",
        "PARENT_ID":42049.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Miles Garnsey <miles.garnsey@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"many thanks detailed response benedict look forward seeing forthcoming proposal relation schema change safety lwts use following almost scale one workaround described grateful additional validation divergence advising repair node addition initial testing suggestedit required new dc serving read aware issue arise scale id love hear experience still planning phase project regarding cl topic agree point id add geographical location dc relevant perhaps cl mechanism could pluggable way authn experiment area higher velocity appreciate invasive change colleague considering whether might able look quorum idea shorter term share bandwidth undertake work also agree cl defined table worthy enhancement wonder default cl additionally overridden query event feel hijacked thread enough thank warm welcome interesting discussion"
    },
    "1766":{
        "ID":42049,
        "MESSAGE_ID":"LO2P265MB44549DC3A3F38488EADDA482A7C19@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42044.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"hello welcome really complicated topic unfortunately simple answer currently formulated work address particular case slightly longer answer problem thing past soon either way work incoming address every possible category kind problem might take little longer full answer membership keyspace cassandra mess derived intersection two thing schema gossip electorate verification address gossip inconsistency inconsistency node perceived member ring schema generates issue discussing particular lack state machine transition one topology another new schema implies new topology distinct problem others work plan file cep coming week month meantime correct way painful though might add one node time instead adding dc rf add dc rf wait settle run repair bump rf etc respond mick could introduce serial would permit done one go super complicated piece work id happy help review contribution however view reconsidering quorum decided comprehensively topic sensible quorum multi region setup quorum quorum also wide range useful quorum support particularly heterogenous one supporting lower write failure tolerance read failure tolerance instance today support extreme version quorum must mixed manually client error prone opinion moving towards specifying quorum per table basis read writes client specify consistency level way database configure arbitrary quorum also guarantee quorum provide desired consistency"
    },
    "1769":{
        "ID":42046,
        "MESSAGE_ID":"CACvH57JbM73bi39nNenmAShN3BAt-w_aNFT-qVr3xABf9XF5bA@mail.gmail.com",
        "PARENT_ID":42043.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"benedict possibly topic plan thought around adding serial number user enquired deal edge case changing replication two dc example migrating decommissioning dc"
    },
    "1771":{
        "ID":42044,
        "MESSAGE_ID":"7D13BD6C-6C60-45E0-96F5-A586C5227502@datastax.com",
        "PARENT_ID":42030.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Miles Garnsey <miles.garnsey@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"long time listener first time caller hello interested part better safety among range movement electorate verification range movement provides stronger assertion linearizability via assurance set instance voting transaction seen issue wild people want add remove dc think may risk consistency violation due transaction circumventing lock held progress transaction electorate verification help scenario query running serial writing quorum dc rf dc added node un schema adjusted dc rf new schema propagates transitional state potential coordinator new schema others operating old schema state form consensus node coordinator form consensus node query issued coordinator form valid consensus circumvent lock held coordinator thinking proposing quorum serial cl electorate verification solves problem may better solution mile"
    },
    "1772":{
        "ID":42043,
        "MESSAGE_ID":"LO2P265MB44544CE2A778E64118AC7F18A7C09@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42042.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"essentially reporting mechanism operation encounter state impossible left behind prior operation damage already done reason throw exception fail current one also make clear isnt guarantee spotting violation quite sensitive much better nothing real system likely kind impossible state would mixing serial local serial safe unless perform really intricate dance distinguish case real bug"
    },
    "1773":{
        "ID":42042,
        "MESSAGE_ID":"CAGY8e-6+6rAFRfOoHz-8cT2oOW2pH6NHiDDVyDUUyuno-6MZow@mail.gmail.com",
        "PARENT_ID":42032.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"curious introduce mechanism spot log linearizability violation user file bug report throw exception maybe quite see detected think interesting though also way sell next discussion benedict patrick"
    },
    "1783":{
        "ID":42032,
        "MESSAGE_ID":"LO2P265MB4454661DF43053F9D465C544A7C09@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":42031.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"hi jeremy great question answer compare two conflict goal work improve existing paxos implementation characteristic identical besides faster simple safe upgrade route user short medium term watch space follow discussion soon modernise transaction cassandra generally might mean perform consensus comparative discussion epaxos related work well suited topic opinion"
    },
    "1784":{
        "ID":42031,
        "MESSAGE_ID":"E3CCE6F1-8726-4A84-85C7-2E1BF759BDCB@gmail.com",
        "PARENT_ID":42030.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sound like great improvement followed development epaxos blake others worked never committed would nice briefly compare two url"
    },
    "1785":{
        "ID":42030,
        "MESSAGE_ID":"BYAPR12MB3320E7E8BEC9E2260BE01133CEFF9@BYAPR12MB3320.namprd12.prod.outlook.com",
        "PARENT_ID":42029.0,
        "SUBJECT":"Re: [DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"existence",
        "BODY":"benedict thank sharing cep adding note support proposal reducing common case round trip writes read huge improvement latency reduction may sufficient allow many user cassandra operate single datacenter availability zone region migrate multi region topology cluster simulation work described cep provides toolchain probabilistically exhaustive validation simulation transactional correctness allowing assertion linearizability presence adversarial thread scheduling message ordering unbounded number simulated cluster transaction use case may see superlinear increase lwt performance due reduction contention afforded fewer message round trip halving latency shortens interval competing transaction may conflict reducing contention improving throughput beyond level would afforded latency reduction alone better safety among range movement electorate verification range movement provides stronger assertion linearizability via assurance set instance voting transaction scott benedict apache org sent wednesday august pm dev cassandra apache org subject discus cep paxos improvement url proposing cep approval project goal improve performance lwts ensure correctness across range scenario like range movement work build upon simulator cep recently adopted patch follow coming week concern question please raise discussion unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1786":{
        "ID":42029,
        "MESSAGE_ID":"LO2P265MB445414BC9E3EC412F8E2081BA7FF9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CEP 14: Paxos Improvements",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"url proposing cep approval project goal improve performance lwts ensure correctness across range scenario like range movement work build upon simulator cep recently adopted patch follow coming week concern question please raise discussion"
    },
    "1800":{
        "ID":42015,
        "MESSAGE_ID":"CAAy+TbT8bnprYJF5G9w1rZQhh9sYN4U_h5iXLzT8amGTyQAZpg@mail.gmail.com",
        "PARENT_ID":41860.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"still concern cep start vote le ven juil branimir lambov ecrit"
    },
    "1835":{
        "ID":41980,
        "MESSAGE_ID":"CAFWLm0SnXhpq6gixjHe2fBjy6BiDLU+bEttOu-X3HzbKZZLwQg@mail.gmail.com",
        "PARENT_ID":41959.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Scott Carey <scott.carey@gmail.com>",
        "TAGS":"process",
        "BODY":"random thought outsider trying look thread month fact could missed detail along way might quite understand final proposal"
    },
    "1850":{
        "ID":41965,
        "MESSAGE_ID":"CAHyRp2R=OnkZe_Hg6xevStOVYRni6uLJMoac===Wn0QT32i63Q@mail.gmail.com",
        "PARENT_ID":41963.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"awesome thanks benjamin story eol critical worth stated critical seems sustainable community better user given heavy lift updating many user"
    },
    "1852":{
        "ID":41963,
        "MESSAGE_ID":"CACvH57KkkZTvw2iV_oDfqPC_3TDOD1XYOknsZ2BaFyGxxVQSWg@mail.gmail.com",
        "PARENT_ID":41962.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"rationale lock date next release branch created release branch determine next release ga actually pas vote stated month matter stable trunk would put feature freeze create release branch"
    },
    "1853":{
        "ID":41962,
        "MESSAGE_ID":"CACvH57LpS=7giBkFv3y1iKvHbUqDb7_tEyr_+02fQTjZWgb07Q@mail.gmail.com",
        "PARENT_ID":41961.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"would make sense adjust date feature freeze trunk lifted branched done st may also thinking may also better july regarding summer holiday"
    },
    "1854":{
        "ID":41961,
        "MESSAGE_ID":"CAAy+TbRgk2UY4GWoEhyoyUb+ORHhZmWmY7=+h7tUpXkotma=qg@mail.gmail.com",
        "PARENT_ID":41959.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"updated website thought would reach ga april updating website complicated decided wait actual ga answer question josh yes need update date july also promised put roadmap website soon somebody else want fine le lun aout joshua mckenzie ecrit"
    },
    "1856":{
        "ID":41959,
        "MESSAGE_ID":"CAHyRp2T5s30AHgyT5zAT=KReRhGUvrsXHRLHKTbWLMLuDL3tNA@mail.gmail.com",
        "PARENT_ID":41095.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"land joey statement look like match site url apache cassandra also need revise date april july reflect ga hit"
    },
    "1882":{
        "ID":41933,
        "MESSAGE_ID":"LO2P265MB4454A83B7049BD26347A46BCA7EC9@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41929.0,
        "SUBJECT":"[RESULT] [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"vote pass"
    },
    "1886":{
        "ID":41929,
        "MESSAGE_ID":"614FD623-B53C-4AA5-941C-0AAE52DB2FAF@apple.com",
        "PARENT_ID":41922.0,
        "SUBJECT":"Re: [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1887":{
        "ID":41928,
        "MESSAGE_ID":"CAAafH9QMGFhqg5e2Rn3uK51HoOBTY_-jneQ9KLx6oqeoqQMQgw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.11 released",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1889":{
        "ID":41926,
        "MESSAGE_ID":"CAAafH9REymZuyN=KJxSWr2+L=dmHVpwD351akva+gzPgbo-nvQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.25 released",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1893":{
        "ID":41922,
        "MESSAGE_ID":"BYAPR12MB3320BD96FBBFBBE85DB2AF22CEEA9@BYAPR12MB3320.namprd12.prod.outlook.com",
        "PARENT_ID":41918.0,
        "SUBJECT":"Re: [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"not-ak",
        "BODY":"nb sam tunnicliffe sent tuesday july dev cassandra apache org subject vote cep cluster code simulation unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1897":{
        "ID":41918,
        "MESSAGE_ID":"997698E3-CB97-4850-86AE-F9B0A8C2CCA5@beobal.com",
        "PARENT_ID":41892.0,
        "SUBJECT":"Re: [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Sam Tunnicliffe <sam@beobal.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1904":{
        "ID":41911,
        "MESSAGE_ID":"CAAafH9S385ViUR-7jomKxeaaTHgQ-ej+yc3ODy+w28Km4axEfQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 4.0.0 released",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution available download section url version initial release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1915":{
        "ID":41900,
        "MESSAGE_ID":"CAAy+TbR+VVyAH1VAKVKp9VZHka3Nrp70gtvGgBYVJugOOBiqKw@mail.gmail.com",
        "PARENT_ID":41899.0,
        "SUBJECT":"Re: [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"got issue paulo le lun juil paulo motta ecrit"
    },
    "1916":{
        "ID":41899,
        "MESSAGE_ID":"CAKaZCX6HoDV=sJ2fkEWpEDAKRzSFtq6FNACFnjdxE-6noY7JDA@mail.gmail.com",
        "PARENT_ID":41898.0,
        "SUBJECT":"Re: [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sorry mail client appended discus thread seg de july de brandon williams escreveu"
    },
    "1917":{
        "ID":41898,
        "MESSAGE_ID":"CAAafH9SvkL_g1KmQK_Zuyti_-nJKgzxz=vDw=Fg3C6dsoMvpKQ@mail.gmail.com",
        "PARENT_ID":41897.0,
        "SUBJECT":"Re: [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"subject changed include vote"
    },
    "1918":{
        "ID":41897,
        "MESSAGE_ID":"CAKaZCX73TNWUBO5Cm78Cr4vy+WBTdRxopgpOwMqPR_jH-tCjoA@mail.gmail.com",
        "PARENT_ID":41892.0,
        "SUBJECT":"Re: [VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"procedural question open vote thread fine go discussion thread though may easier compute vote separate thread seg de july de benedict apache org benedict apache org escreveu"
    },
    "1923":{
        "ID":41892,
        "MESSAGE_ID":"LO2P265MB4454F07DCA1F0C432C7194B6A7E89@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41833.0,
        "SUBJECT":"[VOTE] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"proposing cep cluster code simulation adoption proposal url discussion url vote open hour vote pmc member considered binding vote pass least three binding binding veto"
    },
    "1955":{
        "ID":41860,
        "MESSAGE_ID":"CABY-YwyHks+SKZKJ4Jjzc3qKqUoeF+sy0jdCuDTT5JaDrdrotg@mail.gmail.com",
        "PARENT_ID":41848.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Branimir Lambov <branimir.lambov@datastax.com>",
        "TAGS":"existence",
        "BODY":"implementation level rather configurable table level specific thing change proposal flush supplied reason memory full schema change prepare stream memtable reject flush request logic initiate memory full period expired flush move memtable conceptually belongs latter worry reusability current logic extracted base class skiplist trie implementation derive shouldwrite etc also wonder case point time restore required one could achieve without commit log persistent memory memtable rolled back exactly reason two flag separate use pitr use commit log make sure treat segment covered persistent memtable dirty writesaredurable writesshouldskipcommitlog commit log segment written archived pitr restores memtable snapshot applies mutation misunderstanding question complex persistent memtables reason drove functionality think also easy way pluggable storage engine may date consensus community see investing effort fully fledged pluggable storage engine cassandra type time soon make memtable storage engine need two thing opt flushing memtable component serf read opt commit log memtable component serf writes plus solution secondary us sstables streaming commit log pitr cdc proposal give little control opt work pmem opt rocksdb opt flushing use case also useful experiment memtable includes version commit log opt commit log"
    },
    "1972":{
        "ID":41843,
        "MESSAGE_ID":"CABY-Ywx+LnAh_nLxnc1faPEoA6_cdbAbsHZHtG5UaNCGiM7DQQ@mail.gmail.com",
        "PARENT_ID":41842.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Branimir Lambov <branimir.lambov@datastax.com>",
        "TAGS":"existence",
        "BODY":"memtable wonder would understand something take away control instead giving cf configurable cep memtables configurable table level entirely possible implement memtable wrapper provides example functionality mention would fully configurable example one could well select time series optimized flush wrapper skip list memtable memtables another question proposal leaf memtable implementation wrapper make sense make sure interface provide necessary support sharding providing suitable shard boundary split owned space note already sstable compaction per range functionality multiple data directory make sense ensure provided split agreement data directory boundary setting instead asks memtable setting table reason memtables primary reason commit log need preserve data question whether ot memtable need content present retained commit log flush writesaredurable question memtable answer writesshouldskipcommitlog result scope reduction call laziness part could find way tell commit log data may required point time restore feature existing method turning commit log right granularity open suggestion disabling automated flushing yes zero copy streaming enabled exactly method make sure sstables copied whole flush done end regard branimir"
    },
    "1973":{
        "ID":41842,
        "MESSAGE_ID":"LO2P265MB4454B7C7525A34F504FE5508A7E39@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41841.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"would love help way fyi definitely one impactful performance improvement codebase given benefit compaction memory behaviour"
    },
    "1974":{
        "ID":41841,
        "MESSAGE_ID":"LO2P265MB4454753439005B80938B5DADA7E39@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41840.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"heh based yeah idea actually paper long time ago could nice benefit reducing heap utilisation think requires modelled concept however memtable must able receive address commit log entry adopt partial ownership entry lifecycle"
    },
    "1975":{
        "ID":41840,
        "MESSAGE_ID":"CABY-Ywwt5H66XsmdAgs__6P5FAiKfWLbhkrW0dr+ELDuod8TWg@mail.gmail.com",
        "PARENT_ID":41838.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Branimir Lambov <branimir.lambov@datastax.com>",
        "TAGS":"existence",
        "BODY":"consider memtable commitlog one logical entity whether want untangle two component architectural perspective started road pluggable storage engine work cep intentionally attempting answer question fwiw see separable evidence fact codebase valid secondary us commit log served well enough current architecture important however let memtable implementation opt permit provide solution data persistence revisit future especially benedict shared log facility plan memtable commitlog index evolve regard branimir"
    },
    "1977":{
        "ID":41838,
        "MESSAGE_ID":"CAMp0+8FWCAZjCCTPmnjG3htwVxZVk26465rGs4LnX8tdvQmarw@mail.gmail.com",
        "PARENT_ID":41836.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Michael Burman <yak@iki.fi>",
        "TAGS":"existence",
        "BODY":"hi nice see going forward great use cep thanks proposal reservation regarding linking memtable commitlog flushing leak abstraction one another see reasoning seem add anything else tight coupling component reducing reuse making thing unnecessarily complicated also streaming notion seem weird related memtable memtable care behavior outside memtable responsibility misc thought split duplicated different part quote comment functionality extracted controlling memtable memory period expiration handled memtable flushing control bad cf better memtable outside memtable would allow control flushing regardless actual memtable implemented example let say someone would want implement hbase accordion cassandra matter implementation memtable compaction different memtables could beneficial implementation flushing would push memtable proper caching instead disk per table caching structure could control flushing memtables cache structure separately data benefit lru mrw recently written caching strategy could benefit memtable implementation data used could control flushing work example time series data behaves quite differently term data access something random even total memory control would check table need memory writes memory grow boundary need manually maintain much dedicated caching much memtables waiting flushed delay flushing disk keep etc implemented cep pushing strategy memtable would prevent many feature intentionally left unspecified like could see use case single thread implementation could actually outperform concurrent data structure also provides question proposal going take angle towards per range memtables certainly benefit splitting memtables would reduce operation thus providing le overhead lookup writes although taking one step backwards could see benefit commitlog per range also would allow higher utilization nvme drive larger queue depth per range sstables faster scale out bit outside scope cep ensure implementation block improvement interface placement inside memtable implementation method feel incredibly wrong writing pipeline configured could differ table even memtable implementation let take example memory memtable use case never written sstable could one table simply memory cached storage another one redis style persistence aof writes would written commitlog fast recovery data otherwise always kept memtable instead writing sstable performance reason implementation memtable still would write process table ask table setting instead asks memtable setting table seems counterintuitive even persistent memory case bit questionable simply disable commitlog writing process ask memtable feel like memtable going write pipeline feel like correct architectural decision would rather see decision done outside memtable even persistent memory memtable user might want commitlog enabled data capture shipping log layer persistence speed whole persistent memory without commercially known future bit weird moment even optane known manufacturing anymore last factory dismantled based public information one understand streaming memtable smell like scope creep something else explanation would indicate wanted behavior disabling automated flushing question came mind reading want sound negative feature really something would like see perhaps misunderstood motivation stuff brought memtable instead implemented outside memtable perhaps something else write pipeline arch need fixing masqueraded inside cep definitely interested hear micke"
    },
    "1979":{
        "ID":41836,
        "MESSAGE_ID":"af55dd27-f15e-1bba-05dd-b73f48da5b28@gmail.com",
        "PARENT_ID":41835.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Berenguer Blasi <berenguerblasi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"de tangling going modular clean interface sgtm"
    },
    "1980":{
        "ID":41835,
        "MESSAGE_ID":"CABsaHTPFQjEsYK7V0DhmMq1hXT7+XgdyWVRwLhvSGJGnak3b1A@mail.gmail.com",
        "PARENT_ID":41829.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"yay pluggable memtables gone detail yet personally always thought integrating something like arrow would cool sharing data far gotten anything make kind experimentation easier would also help mocking test plumbing thanks putting together nate"
    },
    "1981":{
        "ID":41834,
        "MESSAGE_ID":"F8E3E69B-4FD3-4D3C-B035-1A33178B6C7E@gmail.com",
        "PARENT_ID":41832.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"like direction many proposal going clean add internal interface along new feature proposed jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "1982":{
        "ID":41833,
        "MESSAGE_ID":"706C502B-0566-44B3-A0E6-1A0B310F458B@gmail.com",
        "PARENT_ID":41782.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"technology",
        "BODY":"proposal ignoring go think refactors proposed make sense matter simulation ability provide much needed testability improvement particular replacing file path something looking planning bring cep coming month give much better ability plugin alternate file system access code someone poc internally one point showing could fun thing like access file google cloud bucket directly sstableloader change url jeremiah"
    },
    "1983":{
        "ID":41832,
        "MESSAGE_ID":"LO2P265MB4454C92AA541BA469FCD7EA6A7E29@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41831.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"think would mistake combine memtable commitlog several system use commitlog like functionality medium term think would benefit unified system memtables may opt register might make sense give memtable choice whether memtable write persisted shared facility different merging two conceptually may look producing cep evolution sometime next month head thought topic reach plan evolution stuff"
    },
    "1984":{
        "ID":41831,
        "MESSAGE_ID":"CAHyRp2TvLe36w1FUcH6cDn+oXXxAybRFT9dz-m6rxCGT1WL4vQ@mail.gmail.com",
        "PARENT_ID":41830.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"existence",
        "BODY":"idea general think need make mind whether consider memtable commitlog one logical entity stated cep conceptually two piece storage engine form one component lsm buffer cassandra make lot sense bundle together whether want untangle two component architectural perspective started road pluggable storage engine work interface drafted codifies idea memtable opinion commitlog business default boolean writesshouldskipcommitlog make sense design goal keep two thing interdependent advocate separating suspect debate better jira slack cep thread figured would bring since yet clear whether pre post cep discussion specific detail interface etc lot quality work obviously went bunch folk thanks branimir josh"
    },
    "1985":{
        "ID":41830,
        "MESSAGE_ID":"LO2P265MB445423627FC7E4C15F134689A7E29@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41829.0,
        "SUBJECT":"Re: [DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"looked detail api proposed much favour work support introduction newly proposed implementation particular really happy see somebody finally finish look forward seeing different approach compare"
    },
    "1986":{
        "ID":41829,
        "MESSAGE_ID":"CABY-YwxxrmXAvc_JDUOATzNJeUvk5imk9wLRQuaWON_s=8oFPA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CEP-11: Pluggable memtable implementations",
        "SENT_FROM":"Branimir Lambov <branimir.lambov@datastax.com>",
        "TAGS":"existence",
        "BODY":"proposal mechanism plugging memtable implementation url proposal support using custom memtable implementation support development testing improved alternative also enables broader definition memtable better support advanced use case like persistent memory end memtable implementation given control flushing storing data commit log enabling solution implement durability mechanism live much longer classical counterpart taken extreme also enables memtables never flush word alternative storage engine minimally invasive manner curious hear thought proposal regard branimir"
    },
    "1991":{
        "ID":41824,
        "MESSAGE_ID":"CACvH57Kjp1P1tJS41x=tdrfZ1BwJRtS_cB4eEHtdki+vxrpKcg@mail.gmail.com",
        "PARENT_ID":41759.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yes tie compatibility documentation approach define semver category previously said would work propose least strawman eta unfortunately looking autumn forgotten"
    },
    "2033":{
        "ID":41782,
        "MESSAGE_ID":"CAAy+TbQ3+X6mdp=nDAMNm=SY7VX8TCQ5yzSh1vfT7rrLDiixNQ@mail.gmail.com",
        "PARENT_ID":41776.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"anybody concern target date believe start vote tomorrow le mer juil nate mccall ecrit"
    },
    "2039":{
        "ID":41776,
        "MESSAGE_ID":"CABsaHTM47TN-n0U7_w7f0tr4RUsTbpNmTM6D=T148m-2Lsr6KQ@mail.gmail.com",
        "PARENT_ID":41763.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"focusing think need going could keep target version template allow decided tbd could useful larger effort specific feature want bikeshed though complain field go away appreciate debate refocusing though"
    },
    "2046":{
        "ID":41769,
        "MESSAGE_ID":"CAAafH9SFRP5YT=bcjHHgFuQ2Q1C+UwxpDpqj_wiOY5PSNpZw0g@mail.gmail.com",
        "PARENT_ID":41763.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"removal template need"
    },
    "2052":{
        "ID":41763,
        "MESSAGE_ID":"CAHyRp2RMXbFQL62FRWhv_Q=9n8wYcnxYmvthJn86beDo664NuQ@mail.gmail.com",
        "PARENT_ID":41759.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"strong remove template got sucked mistake conflating implementation detail implication land instead staying high level agree need agree need"
    },
    "2056":{
        "ID":41759,
        "MESSAGE_ID":"LO2P265MB4454A4AC8A37B7040A26A823A7139@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41755.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"stability impact rather trying tie version regardless context specific version provides yes perhaps remove target version template introduce guidance describing stability impact etc regarding waiver sure really agreed community criterion determining work go patch release sure would right call waiver agree scheduling release contain work mixture project roadmap planning distinct cep jira dev list discussion near point merge question still value cep page maintaining endeavour goal work ready perhaps communicated normal date format used inform project roadmap planning"
    },
    "2060":{
        "ID":41755,
        "MESSAGE_ID":"CACvH57KN-GxQn3V0puU8zsQVET0-MvSXxQripPHFUaU4Es91=g@mail.gmail.com",
        "PARENT_ID":41734.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"totally agree remove target version cep vote based thought think ceps would benefit describing compatibility stability impact rather trying tie version regardless context specific version provides rather subsequent vote cep trying get request waiver jira ticket ready land suspect much work see easier agree waiver position stand currently category defined semver lot people really keen see practice patch patch version also tie back request see rough timeline plan proposed change defined jiras ordered worth noting code divergence happen two branch matter next april really far away really problem lwt fix also pushed back though understand bigger discussion sake driving home project serious stability betting discussion lot productive see work involved impact month two better witnessed stability gone"
    },
    "2081":{
        "ID":41734,
        "MESSAGE_ID":"LO2P265MB44541102C3B550AFA921B17AA7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41733.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"unfortunately often use interface semaphore countdownlatch etc concrete class quite hodge podge concurrent api usage many readily mockable stand majority work cleaning codebase honesty lot ugliness lot inconsistent behaviour use four different future apis think future listenablefuture completablefuture nettys future instance minimise churn implement three four single interface standardise executor breaking change necessary support mocking use case without rewriting application code case use basis future already introduced part internode networking rewrite mock executor introduce factory current hierarchy mess inconsistency even discounting breaking change necessitated introducing new interface hierarchy implement overhauling internals consistency pr land soon people look honestly getting unnecessary tangle target release think would mistake push later release valuable bring pain creating divergence question cep meant answer community want piece work since become explicit point contention perhaps disaggregate vote happen parallel discussion wrap"
    },
    "2082":{
        "ID":41733,
        "MESSAGE_ID":"CAHyRp2QTB+0E6jLf=Moy6+LXf64mv3wY0mBxw2s+vr57gZLzCA@mail.gmail.com",
        "PARENT_ID":41726.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"stepping back feature bug rel cycle debate valuable one original purpose thread existing concurrent class bimorphic call based whether testing low risk change going would expect invasive new possibly bugged change occur introduction simulator package basic interface shimming thing cleaning inconsistency time unit call various concurrent object bugfixing fair game time josh"
    },
    "2089":{
        "ID":41726,
        "MESSAGE_ID":"CAAy+TbRsMzsxana-TPcADTdHiJ+aQXBj-8oOfpRCa12R8SyzVA@mail.gmail.com",
        "PARENT_ID":41725.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sorry really clear comment wondering create minor version address issue also making change branch le march juil benedict apache org ecrit"
    },
    "2090":{
        "ID":41725,
        "MESSAGE_ID":"LO2P265MB445443391070ACFD0FF91D2EA7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41724.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"point different premise working think convince mistaken interpret word feature release lifecycle document voted ambiguous clearly take mean different thing"
    },
    "2091":{
        "ID":41724,
        "MESSAGE_ID":"2B6460F0-BC1E-4E0E-8A7C-7E574CBE6AA4@gmail.com",
        "PARENT_ID":41722.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"process",
        "BODY":"feature user developer mean new feature adding capability adding new functionality developer apache cassandra new feature semver brought lot conversation around go look semver defines thing major version make incompatible api change minor version add functionality backwards compatible manner patch version make backwards compatible bug fix change sound like adding new functionality backwards compatible manner guess issue never actually done minor release project make major release patch release need decide thing semver would go minor version go mind always thing go major seems le safe relax go patch allow jeremiah"
    },
    "2093":{
        "ID":41722,
        "MESSAGE_ID":"LO2P265MB4454A64A1D99F74AEDADC3CBA7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41720.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"understand feature user visible change new functionality basis endorsed release lifecycle document believe improvement stop patch release believe produce highest quality outcome"
    },
    "2094":{
        "ID":41721,
        "MESSAGE_ID":"C1A8C463-74C1-4ED1-915F-A3F6E7D0A3E7@gmail.com",
        "PARENT_ID":41720.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"many nots think fixing new feature unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2096":{
        "ID":41719,
        "MESSAGE_ID":"LO2P265MB4454FF14F77A6E29BC2F3775A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41716.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"nothing discussing constitutes feature discussing stability enhancement important bug fix think disagreement extent founded different premise patch release contain seems fault incompletely specified documentation release lifecycle forbids feature work developed patch release expressly includes bug fix note document even comment author suggesting feature may backported patch release trunk something agree demonstrates ambiguity definition seems conflation size change admissibility wrt release lifecycle think criterion open community case case assessment whatever fix bug question necessarily significant piece work instance interpretation release lifecycle document acceptable include work patch release belief impact would contribute positively stability project release lifecycle improve project velocity respect whether ship fix without validation would strongly opposed certainly would produce patch way would burdensome given divergence codebase would consider acceptably safe given divergence"
    },
    "2098":{
        "ID":41717,
        "MESSAGE_ID":"CAKaZCX5+8Z7BKV70J83RY=zke5qt5=jBatknEfsqhCF8q9TSgw@mail.gmail.com",
        "PARENT_ID":41716.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"fully aware importance testing infra fix cassandra higher confidence benedict ability deliver correct safe patch question whether want repeating old practice including potentially disruptive change minor version committed changing culture matter confident change correct view open precedent change basically saying stick old practice committed providing long term stability user view cep strict blocker cassandra since verify mean add additional verification jeremiah suggested even community worked around limitation lwt several year one year fix limitation really make difference ter de july de jeremiah jordan jeremiah jordan gmail com escreveu"
    },
    "2099":{
        "ID":41716,
        "MESSAGE_ID":"4F0D6C24-4F11-4826-A74B-C85049863203@gmail.com",
        "PARENT_ID":41715.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"tend agree paulo major refactoring internal interface sound like something explicitly avoided patch release thought type change agreed stop letting patch release would attempt release often year change go trunk would get faster really wanting break promise even release think need feature released faster reason put could reason release sooner releasable trunk help decided project change worth new major released early effort release much smaller trunk releasable fix make would merged forward trunk could fully verified probably best would give confidence fix otherwise without adding major change jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2100":{
        "ID":41715,
        "MESSAGE_ID":"CAAy+TbR35h9nTqG4oziTxOuibt9f0zZVwDmvHf4xN4WNsXmw1Q@mail.gmail.com",
        "PARENT_ID":41712.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would like expand bit believe might important people full picture fix cassandra introduced regression increasing number lwt round trip nevertheless patch introduced flag allow user revert previous behavior previous performance consistency issue also patch address paxos consistency issue still issue topologie change may scenario understanding benedict proposal fix paxos without performance regression goal make total sense tricky question le march juil benedict apache org ecrit"
    },
    "2101":{
        "ID":41714,
        "MESSAGE_ID":"LO2P265MB44543F2CDCA9180570485EF3A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41713.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think work contained cep necessary safely solving problem empirical evidence favour assertion"
    },
    "2103":{
        "ID":41712,
        "MESSAGE_ID":"LO2P265MB44544D0459DB9EFC6F842433A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41711.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hmm occurs entirely sure new release process going work releasing build immediately part shippable trunk active line software next year either way bet bottom dollar come regret introduce divergence two active branch maintain early lifecycles invest significant resource improved testing using framework much expect branch compatible benefit likely reducing quality risk backports increase due divergence altogether think would huge mistake shipping release soon fix aforementioned regression campaign"
    },
    "2104":{
        "ID":41711,
        "MESSAGE_ID":"LO2P265MB4454FB9DA3DDF0D0452DD7F2A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41709.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"change without risk introduced serious regression bug fix patch release overall risk release lifecycle reduced significantly opinion reduce likelihood introducing regression use test infrastructure across actively developed release increasing confidence release furthermore introduced significant performance regression line software increasing number lwt round trip unless intend leave regression year without release offering solution need suitable verification mechanism whatever fix deliver view unacceptable leave significant regression unaddressed line software intend release foreseeable future"
    },
    "2105":{
        "ID":41710,
        "MESSAGE_ID":"CAAy+TbQ64kKo4D0toApr7DX5eHhS8AYpGd+S0G6u2KYL5DB8aw@mail.gmail.com",
        "PARENT_ID":41709.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"share paulo concern le march juil paulo motta ecrit"
    },
    "2106":{
        "ID":41709,
        "MESSAGE_ID":"CAKaZCX4mRF2v=UYm+p6O_bX89WjdjpJjAat9PXcaP5CqEn8w3w@mail.gmail.com",
        "PARENT_ID":41704.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"process",
        "BODY":"shippable trunk public api impact work going central achieving shippable trunk either way reason target would burdensome limited view proposal major refactor internal concurrency apis support testing facility potentially risk stability minor release something wanting avoid focus stability would prefer go trunk otherwise create precedence including non bugfix change minor version something think avoid past lenient including seemingly harmless internal change caused client impact careful avoid future prevent think take strict approach accept bug fix minor ie version moving forward would go one step propose ceps generally new feature major api change internal refactorings allowed subsequent major version unless explicit exception granted ter de july de benedict apache org benedict apache org escreveu"
    },
    "2111":{
        "ID":41704,
        "MESSAGE_ID":"LO2P265MB4454C8E5066FA4925B4B27A6A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41702.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence, property",
        "BODY":"perhaps worth looking forward roadmap plan develop consider whether facility would welcome proving safety worry evolving specific api together deploy capability looking ahead major feature would want see exercised approach given choice lwt verifier integration test cover many affected subsystem including sstables memtables repair ability introduce dedicated verification feature system necessarily produce robust code repair great example brittle system would impossible produce adversarial test system query side improvement storage attached index sai cep found url add support predicate cql clause allow aggregate time interval cassandra allow udfs group clause ability read ttl write time element collection cassandra multi partition lwts materialized view hardening addressing different materialized view issue see cassandra work involved security improvement sstables encryption cassandra add support dynamic data masking cep pending allow creation role ability assign arbitrary privilege scoped privilege without also granting role access database object filter row system system schema based user permission cassandra performance improvement trie based index format cep pending trie based memtables cep pending paxos improvement paxos lwt implementation would enable database serve serial writes two round trip serial read one round trip uncontended case safety usability improvement guardrail cep found url add ability track state repair cassandra repair coordinator improvement cassandra make incremental backup configurable per keyspace table cassandra add ability blacklist cql partition request ignored cassandra add default required keyspace replication option cassandra transactional cluster metadata use transaction propagate cluster metadata downgrade ability ability downgrade downgrade event serious issue identified pluggability improvement pluggable schema manager cep pending pluggable filesystem cep pending pluggable authenticator cqlsh cassandra cep draft found url memtable api cep pending goal allow improvement cassandra easily plugged cassandra memtable pluggable implementation enable cassandra persistent memory cassandra"
    },
    "2113":{
        "ID":41702,
        "MESSAGE_ID":"LO2P265MB4454FE80ABEB525753B74F09A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41701.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"ach editing code email editor smart editor different meaning key combination accidentally hit send get idea simulator would intercept thread execution memory access annotated field evaluate case assertion would fail obviously toy example interesting main real example complicated produce snippet demonstrate view long term outcome work likely enablement many unit test little complicated le obvious code headline goal cep lwt verifier demonstrates power utility work believe terribly helpful focus secondary justification like example gave ability prove correctness difficult critical system justification enough whether deliver simple api part cep"
    },
    "2114":{
        "ID":41701,
        "MESSAGE_ID":"LO2P265MB4454BF9AD473B5BE117DBFA8A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41700.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"opinion target reaching shippable trunk public api impact work going central achieving shippable trunk either way reason target would burdensome never heard position would care elaborate quite normal update test alongside change code work enable development test test originally planned arrive alongside fairly sophisticated lwt verifier something sorely needed project serious correctness violation multiple year broad category integrated test verifying correctness main goal work easily condensed example snippet possible simple fluid apis introduced later phase work designed yet share snippet principle however would able something like nemesis volatile int int foo return test void test future executor submit foo future executor submit foo assert asserttrue get get"
    },
    "2115":{
        "ID":41700,
        "MESSAGE_ID":"CACvH57+ULwFbkX+gy4reLX=fCFKCQQuwT2niy=GcrixZcccgKA@mail.gmail.com",
        "PARENT_ID":41488.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"target release would interested seeing rough timeline plan proposed change defined jiras ordered would like hear bit test plan much cep improves testability project example testing required place introduce change cep already exists concern changing code test time risk regression seconding benjamin comment documentation write test simple test example cep allows write would help lot la working backwards unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2116":{
        "ID":41699,
        "MESSAGE_ID":"LO2P265MB4454B7CA8DB5A6BB95A61FC3A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41696.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"hi benjamin concurrency construct listed blocking concurrency primitive put thread sleep wake since goal work pseudorandom execution application trapping thread event central feature ability mock file system ensure execution deterministic otherwise cluster running billion simulation would almost useless would readily able reproduce sequence local machine execution order extremely brittle even different patch release jvm able produce different sequence execution case least doubt many patch release ordering impact best example work lwt linearizability verifier included quite simple test put together simulator simply issue lwt read writes cluster simulator intercept every message thread specific relevant case memory access event executes pseudorandom order run exhibit unique behaviour exploring different edge case system intercept message event would fail explore wide variety potentially erroneous state system including even related message delivery real world response received thread sending completes act instance"
    },
    "2119":{
        "ID":41696,
        "MESSAGE_ID":"CAAy+TbTpKpz0TM_hZrSwHB_WCBJLcTg+MT0ip8rkmfH7XhpBYw@mail.gmail.com",
        "PARENT_ID":41694.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi benedict sam could describe scenario new framework allow test might help understand change required need change around concurrency file access obvious consequence guessing probably fully understand goal proposal thanks advance benjamin le march juil sam tunnicliffe ecrit"
    },
    "2121":{
        "ID":41694,
        "MESSAGE_ID":"4418E545-A807-4D62-869A-658594806CC6@beobal.com",
        "PARENT_ID":41693.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"Sam Tunnicliffe <sam@beobal.com>",
        "TAGS":"not-ak",
        "BODY":"spoiler alert pretty familiar proposal list work done toward perspective qualm putting cep vote seen potential degree realised benefit proposal convinced value thanks sam unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2122":{
        "ID":41693,
        "MESSAGE_ID":"LO2P265MB4454DD086B064810B47B2297A7149@LO2P265MB4454.GBRP265.PROD.OUTLOOK.COM",
        "PARENT_ID":41488.0,
        "SUBJECT":"Re: [DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"anyone thought cep shall bring forward vote also"
    },
    "2177":{
        "ID":41638,
        "MESSAGE_ID":"CALCpdnPT8JzwYuruX-uR7e+ztfWDLHfMkxRGEc5oZ7BcqO-5AQ@mail.gmail.com",
        "PARENT_ID":41611.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-16760 - JMXTimer exposes attributes in inconsistent time units",
        "SENT_FROM":"Yifan Cai <yc25code@gmail.com>",
        "TAGS":"existence",
        "BODY":"look like agree option submitted patch trunk branch unifies duration unit default micros result timer start record time value micros instead nanos please let know concern change yifan"
    },
    "2204":{
        "ID":41611,
        "MESSAGE_ID":"CALCpdnOMCHadbdia+9hRzfCvT-iN2gD-kBx-my_bjOzN5bpX6Q@mail.gmail.com",
        "PARENT_ID":41609.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-16760 - JMXTimer exposes attributes in inconsistent time units",
        "SENT_FROM":"Yifan Cai <yc25code@gmail.com>",
        "TAGS":"existence",
        "BODY":"timer currently backed decayingestimatedhistogramreservoir decayingestimatedhistogramreservoir default allocate bucketoffsets long array length decayingbuckets long array length bucket long array length timer instance consumes byte roughly counting long array main contributor bunch timer per verb per keyspace per table etc although adding might still concern mentioned recording micros halve memory usage significant saving compared component still good nanos necessary major benefit making duration unit consistent url url"
    },
    "2206":{
        "ID":41609,
        "MESSAGE_ID":"CAHyRp2TVRG0xKM78+PaQiXrZOKZDjKsi2dFToo7GvkvVuuVRQA@mail.gmail.com",
        "PARENT_ID":41607.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-16760 - JMXTimer exposes attributes in inconsistent time units",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"existence",
        "BODY":"unifying unit api consistency micros quite fine use case"
    },
    "2209":{
        "ID":41606,
        "MESSAGE_ID":"pony-05cb8398a8be7b5aac8e0d84f4302b52172ba80d-04a5ddcf993e490ca1c5f73b6512bef34b20d3ea@dev.cassandra.apache.org",
        "PARENT_ID":41605.0,
        "SUBJECT":"Re: [DISCUSS] CASSANDRA-16760 - JMXTimer exposes attributes in inconsistent time units",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"change like annual release fine clearly documented news txt curious know rough idea much memory timer currently use timer think still need nano resolution unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2210":{
        "ID":41605,
        "MESSAGE_ID":"CALCpdnObtYsGk3SXy_6E_YUa_Zj_SAR873FGxj3arBt7-GO3eQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CASSANDRA-16760 - JMXTimer exposes attributes in inconsistent time units",
        "SENT_FROM":"Yifan Cai <yc25code@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi current codebase jmxtimer expose attribute inconsistent time unit percentile mean durationunit attribute using micros value recentvalues based nanos since underlying timer collect time value nanos inconsistency lead confusion misinterpretation value end user familiar implementation detail one may consider value recentvalues also micros mentioned durationunit besides confusion given intention record time value micros resolution need allocate bucket decayingestimatedhistogramreservoir bucket necessary nanos micros allocate bucket reduce memory footprint used timer relatively small change unify exposed value unit change exposed metric api would like start discussion thread gather opinion hope avoid breaking tooling several option timer specifically enforce consistency time unit change jmxtimers store value micros reduce bucket size change impact reading statistic long value recentvalues reduced value based micros change jmxtimer store value nanos change make percentile mean value returned nanos impact histogram raw value value recentvalues toggle either keep current inconsistency record micros le invasive option affect monitoring tooling read value histogram raw value nanos resolution would prefer option durationunit attribute correctly annotates attribute jmxtimer timer need nanos resolution recording micros half memory footprint timer timer need nanos resolution duration unit changed nanos external process read attribute correctly interpret value based duration unit thought yifan"
    },
    "2211":{
        "ID":41604,
        "MESSAGE_ID":"CACvH57+ZCindzjgxCR8=r_D5=74w38YN70sqpnpkCjL56=-k+g@mail.gmail.com",
        "PARENT_ID":41590.0,
        "SUBJECT":"Re: Enable running Cassandra 3.11 on Java 11",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"java support cassandra would fantastic something hi thomas backporting probably task taken community focus effort currently say happen leaving java marked experimental discussed url java getting tested equal treatment java using available resource first get ga suspect move experimental supported one early patch version get feedback usage feedback user help regard"
    },
    "2224":{
        "ID":41591,
        "MESSAGE_ID":"CALBD=Z3vAravAmTDbM7+OFMOAJrRrrwOcKr1iJtORo59DS3YVw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Additions to Cassandra ecosystem page?",
        "SENT_FROM":"Melissa Logan <melissa@constantia.io>",
        "TAGS":"not-ak",
        "BODY":"hi cassandra community recently updated website added several new entry ecosystem page url edits know third party cassandra project tool product etc may useful others please get touch add next round site update july thanks melissa apache cassandra contributor"
    },
    "2225":{
        "ID":41590,
        "MESSAGE_ID":"SA1PR13MB497331818E68B0FD7EC0FE049D0A9@SA1PR13MB4973.namprd13.prod.outlook.com",
        "PARENT_ID":41381.0,
        "SUBJECT":"RE: Enable running Cassandra 3.11 on Java 11",
        "SENT_FROM":"\"Steinmaurer, Thomas\" <thomas.steinmaurer@dynatrace.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"java support cassandra would fantastic something cassandra project follow dead end favor cassandra although java marked experimental sure mean production usage thanks thomas"
    },
    "2235":{
        "ID":41580,
        "MESSAGE_ID":"CADiq6=zhf62ub8Bur63Cg8_wBCkT3Yd8WbGs+V4+U2KM_o_aNA@mail.gmail.com",
        "PARENT_ID":41579.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"thanks input released maven artifact earlier today soon able use dependency downstream application official website refreshed include url tarball uploaded verified link good go send announcement user mailing list later"
    },
    "2236":{
        "ID":41579,
        "MESSAGE_ID":"CAF3AjayNC9_Gwe5P3M5f_6SJVb7jSqjjrR_Afjqn9DxJE=5V1g@mail.gmail.com",
        "PARENT_ID":41568.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Xiaoqiao He <hexiaoqiao@apache.org>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "2237":{
        "ID":41578,
        "MESSAGE_ID":"CWXP123MB4486A7C919AE28FE43510136A7309@CWXP123MB4486.GBRP123.PROD.OUTLOOK.COM",
        "PARENT_ID":41577.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think given revised statement around bug discovered flaky test given seem serious bug comfortable two week period post rc"
    },
    "2238":{
        "ID":41577,
        "MESSAGE_ID":"CAAy+TbRdA=3_4RZNwSXL3RdqDFdz68WpqvGXDqJzHx8vLGKUoQ@mail.gmail.com",
        "PARENT_ID":41576.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"disagree would like see precise expectation releasing ga considering already deeply tested code would make sense say let give week test rc blocker show release ga le march juin benedict apache org ecrit"
    },
    "2239":{
        "ID":41576,
        "MESSAGE_ID":"CWXP123MB44861CF33B9C57B8EEC82678A7309@CWXP123MB4486.GBRP123.PROD.OUTLOOK.COM",
        "PARENT_ID":41575.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"popularity line lot stable would expected honestly given huge shift database landscape intervening year though course sure wed rather trending upwards think release likely minimal impact though future project development going determine project success expect plus maybe new logo still disputing need ship ga soon cut another rc given seriousness cassandra though right"
    },
    "2240":{
        "ID":41575,
        "MESSAGE_ID":"CAAy+TbTA3=UK6X+tscxXDxRsokEzs61J7kW1gLbmQ9dDJFPLQg@mail.gmail.com",
        "PARENT_ID":41574.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"list flaky test filtered wanted add information test revealed real issue first mistake issue revealed flaky test one user report cassandra pretty hard hit bug totally agree found real issue cost pretty high month work two issue look morning many user reported bug rc release outside people deeply involved project people reporting true issue issue relatively minor totally understand want deliver high quality product believe draw line point popularity cassandra going year url project might need release bug fix le march juin dinesh joshi ecrit"
    },
    "2241":{
        "ID":41574,
        "MESSAGE_ID":"125D8CE3-B46C-4948-88AD-7EF51E7E5FF7@icloud.com",
        "PARENT_ID":41573.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"Dinesh Joshi <djoshi3@icloud.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"based release lifecycle cut another rc find blocking issue dinesh url"
    },
    "2242":{
        "ID":41573,
        "MESSAGE_ID":"BYAPR12MB33202D87E9CE328F59F798C7CE309@BYAPR12MB3320.namprd12.prod.outlook.com",
        "PARENT_ID":41572.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"not-ak",
        "BODY":"second rc appropriate given revert cassandra necessitated discovery cassandra adding column via alter table generate corrupt sstables ekaterina benedict statement regarding true positive rate flaky test also show value resolving would good pay far reasonably without unnecessarily withholding release think possible rc build candidate nomination ga release think rc phase need drawn believe would build confidence project positive feedback release containing fix work paying remaining flaky test surface similar true positive rate third build might warranted would benefit user think far hope others working deploy beta rc build integrate deploy change trunk release deploying heavy contributor provides best opportunity catch issue user getting close"
    },
    "2243":{
        "ID":41572,
        "MESSAGE_ID":"CWXP123MB4486C6D02C5E072F72D7D838A7319@CWXP123MB4486.GBRP123.PROD.OUTLOOK.COM",
        "PARENT_ID":41571.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"rate rate true bug worry respect promise shipping bug free ga past release ensured flaky test think said time contribute fixing flaky test ill leave decision otherwise strong opinion"
    },
    "2244":{
        "ID":41571,
        "MESSAGE_ID":"CAN+t3-heDU9ZB6Nid5rH-u-FqvqZ9M72bv93z4u7Pg8hp3D4DQ@mail.gmail.com",
        "PARENT_ID":41570.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2245":{
        "ID":41570,
        "MESSAGE_ID":"CALHCZd7B53wwBiPaY7pHPkoZUwYnRSf0G1eFB1oSRWy4dpp-KQ@mail.gmail.com",
        "PARENT_ID":41569.0,
        "SUBJECT":"Re: Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"Adam Holmberg <adam.holmberg@datastax.com>",
        "TAGS":"technology",
        "BODY":"point long term observability flakies mention intend deploy tool called butler developed used internally compliment jenkins present different view test result allowing developer better ascertain test flaky failing new regression already server provisioned public hosting application requires bit work generalize project putting focused getting line getting soon"
    },
    "2246":{
        "ID":41569,
        "MESSAGE_ID":"CACvH57LaYM352USqDofJcOH+BE0BmFR6Jq6L7_7Wp-cskpTPVg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Are we ready for 4.0.0 (GA) ?",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"ready cut ga following ticket land cassandra allow operator disable alter drop compact storage statement cassandra password obfuscation dcl audit log statement cassandra adding column via alter table generate corrupt sstables bit background ga board ticket priority blocker ga release url cassandra website june update cassandra dtest failure offline tool test testofflinetools sstableofflinerelevel test cassandra classpath test flaky cassandra flaky leaveandbootstraptest also said would get green ci run row progress front slow risk delaying ga user base priority lot momentum persisting lot flaky fix committed following discussed keep pushing right direction long term observability flakies jenkins agent observability infra stability past week seen good progress stability ci cassandra introduction cpu docker limit imposed better monitoring agent ensure get saturation load want dockerising cqlshlib test also progress alternative ga release rc release next release ga rc"
    },
    "2247":{
        "ID":41568,
        "MESSAGE_ID":"CAFF2GdmAhxveYgnTHWZ9x6gXjTMbp6AvUujgSe_czdHE3Q_J6g@mail.gmail.com",
        "PARENT_ID":41567.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Takanobu Asanuma <tasanuma@apache.org>",
        "TAGS":"not-ak",
        "BODY":"verified hash confirmed native build centos started kerberized cluster using docker checked nn rbf web ui ran basic erasure coding command thanks great work wei chiu takanobu vinayakumar"
    },
    "2248":{
        "ID":41567,
        "MESSAGE_ID":"CADoWKTCtxd5N9Hi8AKTxjKVn0koyEmLNxSMwUi_CLjknt46fkA@mail.gmail.com",
        "PARENT_ID":41565.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Vinayakumar B <vinayakumarb@apache.org>",
        "TAGS":"not-ak",
        "BODY":"binding built tag successful native build ubuntu verified checksum deployed docker cluster node ran sample mr job vinay"
    },
    "2250":{
        "ID":41565,
        "MESSAGE_ID":"7390783A-7410-4274-828D-F139E4DC2FC7@gmail.com",
        "PARENT_ID":41562.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Ayush Saxena <ayushtkn@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"built source successful native build ubuntu verified checksum ran basic hdfs command ran simple mr job browsed nn dn rm nm ui thanx wei chiu driving release ayush unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "2253":{
        "ID":41562,
        "MESSAGE_ID":"736253663.4486347.1623442513660@mail.yahoo.com",
        "PARENT_ID":41418.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"\"epayne@apache.org\" <epayne@apache.org>",
        "TAGS":"not-ak",
        "BODY":"binding eric"
    },
    "2265":{
        "ID":41550,
        "MESSAGE_ID":"CAF6oT1dYNJRZnX-w0k9APxRtdd3Y0NCoqA9JCHmDwzZ3AByLXw@mail.gmail.com",
        "PARENT_ID":41549.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Chao Sun <sunchao@apache.org>",
        "TAGS":"not-ak",
        "BODY":"non binding verified signature checksum launched single docker based cluster ran simple hdfs command build spark master rc run full spark test suite success tested simple spark command endpoint tested spark yarn simple example job thanks wei chiu great work"
    },
    "2266":{
        "ID":41549,
        "MESSAGE_ID":"fe5c611a-5cec-3afe-dfd2-1c04bc607880@oss.nttdata.co.jp",
        "PARENT_ID":41418.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Masatake Iwasaki <iwasakims@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"thanks great work wei chiu chuang verified signature checksum built site documentation mvn site skimmed content found top level index html updated built centos openjdk mvn install dskiptests pnative pdist launched pseudo cluster security enabled ran sample mr job launched node cluster nn ha rm ha ran sample mr job built centos aarch openjdk mvn install dskiptests pnative pdist built hive patch hive hadoop ran testminillapclidrivera fixed hdfs masatake iwasaki"
    },
    "2267":{
        "ID":41548,
        "MESSAGE_ID":"CAEY0_YonywA70KCq4=N-LJCyyASjNb0rWWmC+L2x+GqdoL_ZDQ@mail.gmail.com",
        "PARENT_ID":41545.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Viraj Jasani <vjasani@apache.org>",
        "TAGS":"not-ak",
        "BODY":"non binding signature ok checksum ok rat check ok mvn clean apache rat check built source ok mvn clean install dskiptests hdfs basic testing pseudo distributed mode ok built hbase hadoop rc tested basic scenario look good"
    },
    "2270":{
        "ID":41545,
        "MESSAGE_ID":"CADcMMgFGK=N8f7tOBZ5mfe+D3XgQPfDR82fUJb82dm4yWnJK-g@mail.gmail.com",
        "PARENT_ID":41418.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Stack <stack@duboce.net>",
        "TAGS":"not-ak",
        "BODY":"signature ok checksum ok rat check ok mvn clean apache rat check built source ok mvn clean install dskiptests ran ten node cluster hbase top running verification loading gentle chaos trouble getting rig running mostly pilot error none could particularly attribute hdfs poking log messed ui nothing untoward wei chiu fixed broke test hbase complete run pretty much classic flakie seems dig thanks"
    },
    "2272":{
        "ID":41543,
        "MESSAGE_ID":"CAL7CpJwnYYBc0AD-y+K1WZVqo-nKxFdLy1Es3QMOCy_BCixxbw@mail.gmail.com",
        "PARENT_ID":41418.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Steve Loughran <stevel@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"binding awesome piece work done three form qualification related azure storage tarball validate cli use build test downstream module maven artifact mine asf one much broken downstream module test discus pr submitted relevant project local rerun hadoop aws hadoop azure test suite regarding issue surfaced wei chiu register private gpg key public keystores gpg client apps let coordinate signing key filed pr test regression url url artifact validation sha checksum good shasum hadoop rc tar gz beabfdddbebadccdedaeeeefebfebfadbebbbaeeeb hadoop rc tar gz gpg trickier wei chiu trusted gpg assuming signed data hadoop rc tar gz gpg signature made tue jun bst gpg using rsa key cddffcfebdbfbecbd gpg requesting key xbecbd hkps server hkps pool sks keyservers net gpg check signature public key wei chiu add public key gpg key server validate key went directory site svn url reinstalling svn go go svn update get key gpg import key file added gpg key xdefea public key brahma reddy battula code signing key imported gpg key xfcdbbff public key sammi chen code signing key sammichen apache org imported gpg key xeecebbd public key masatake iwasaki code signing key imported gpg key xbecbd public key wei chiu chuang imported time import work wei chiu trusted anyone yet gpg verify hadoop rc tar gz asc gpg assuming signed data hadoop rc tar gz gpg signature made tue jun bst gpg using rsa key cddffcfebdbfbecbd gpg good signature wei chiu chuang unknown gpg warning key certified trusted signature gpg indication signature belongs owner primary key fingerprint cd ff cf eb dbf ec bd wei chiu let coordinate signing public key via slack channel need apache web trust second cd hadoop dir cp confs cp somewhere hadoop conf etc hadoop cp hadoop azure dependency share hadoop tool lib share hadoop common lib product built targeting azure put thing run sa qualifying aws sdk update command url run basic abfs operation problem fwiw think consider hadoop aws module dependency aws one hadoop common lib get env var sguard set thing azure fiddly build test cloudstore jar invoke cli cloud storage extension library url always intended put hadoop lot diagnostics quick way put together fix faster du dux url modify hadoop profile use artifact build snapshot enabled would yet built artifact locally fetched maven staging mvn package phadoop pextra psnapshots staging set env var cloudstore point jar bucket sa bucket run various command storediag cloudup example dux command hadoop du parallel scan underneath dir better scaling bin hadoop jar cloudstore dux thread limit verbose sa stevel london output url build unit test google gc two test failure one classpath related new rename contract test needing new setting xml declare rename file file everything covered url classpath assertj coming hadoop common test jar dependency error classpath time elapsed error java lang noclassdeffounderror org assertj core api assertion caused java lang classnotfoundexception classpath happens added test abstractcontractrenametest use assertj assertion assertj declared test scope hadoop common test jar somehow propagating hboss issue classpath assertj core test really understand declared export reviewed nothing see rename test failure new test expected behaviour needing definition error failure error testinmemorygooglecontractrename abstractcontractrenametest testrenamefileoverexistingfile assert fail expected rename fake memory test bucket contract test source txt fake memory test bucket contract test dest txt rejected exception got false fix add contract rename return false dest exists true xml contract build test hboss hbase extension use zk lock file access broken build change internal client factory new client option passed hadoop change moved new build parameter object add future change without breaking signature mehakmeet already hadoop url got initial pr though need also compile test older build url build spark test sa committers build spark ran integration test london test url afternoon frittered away dealing fact spark version move meant scalatest upgrade every single test failed compile scalatest project moved foundational test suite new package upgrade test wip manifest committer mapreduce abfs completely wasted mean module test scala hadoop aws hadoop azure test suite checked branch rebuilt ran test suite hadoop azure hadoop aws module triggered rebuild two module check everything else qualified genuine rc artifact hadoop aws run dparallel test dteststhreadcount dmarkers keep run dparallel test dteststhreadcount dsguard dscale ddynamo azure dparallel test abfs dteststhreadcount dscale error error error itestabfsfilesystemcontractsecuredistcp abstractcontractdistcptest testdistcpwithiterator testtimedout info url overall production code good expansion filesystem test require change downstream change sclient hadoop hboss test using internal interface compiling move parameter object documenting use intended prevent reoccurring"
    },
    "2280":{
        "ID":41535,
        "MESSAGE_ID":"3a96e6ad-ada0-69ae-1f25-260f8095fa0d@oss.nttdata.co.jp",
        "PARENT_ID":41534.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Masatake Iwasaki <iwasakims@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"someone similar issue tested rc resourcemanager failed start due following exception error classpath error starting resourcemanager java lang illegalaccesserror tried access class classpath class classpath classpath unknown source classpath unknown source classpath unknown source classpath proxyca java turned local environment working hadoop order try sm feature installed bcprov ext jdkon jar java home jre lib ext added line security provider classpath java home jre lib security java security based comment hdfs fotgot removing bcprov ext jdkon jar java home jre lib ext fixed issue url masatake iwasaki"
    },
    "2281":{
        "ID":41534,
        "MESSAGE_ID":"2d981dd8-b07c-ff0e-32dd-040dd7101a6c@oss.nttdata.co.jp",
        "PARENT_ID":41418.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Masatake Iwasaki <iwasakims@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"found top page site documentation index html top directory content url think worth sinking rc update page based one url need cut rc thanks masatake iwasaki"
    },
    "2298":{
        "ID":41517,
        "MESSAGE_ID":"CADiq6=zrEOvWUFEtfAfuz0eDdLqdbZMt0rFe6Pr4hAm3h+X0+w@mail.gmail.com",
        "PARENT_ID":41509.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"dropped please check"
    },
    "2306":{
        "ID":41509,
        "MESSAGE_ID":"CAF6oT1d2_dj612rFTGk=doU2mXUaLE72W9BjBhy42bRXR_b8_Q@mail.gmail.com",
        "PARENT_ID":41489.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Chao Sun <sunchao@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi wei chiu seems maven staging repository still pointing rc url probably need drop old rcs apache nexus server could thanks chao"
    },
    "2326":{
        "ID":41489,
        "MESSAGE_ID":"CAL7CpJwwAOzQ-zE2pYTzZizKZJucp8QFQaX+8Bj4o_HOnHC8Uw@mail.gmail.com",
        "PARENT_ID":41479.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Steve Loughran <stevel@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"extend bit last rc take time qualify busy testing packaging cli working abfs cloudstore library call building downstream project validating maven artifact cloudstore spark building downstream downstream project spark cloud io committer test module moving spark cost afternoon incompatible change upgraded scalatest moved foundational funtest class different package name happy team scalatest reviewing doc aws azure module see link together ok far good one troublespot reason hold release table directory marker markdown file render right created url blocker prepare fix change come page look ok"
    },
    "2327":{
        "ID":41488,
        "MESSAGE_ID":"CWXP123MB4486998CEA1F567BD977B5A0A73C9@CWXP123MB4486.GBRP123.PROD.OUTLOOK.COM",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CEP-10: Cluster and Code Simulations",
        "SENT_FROM":"\"benedict@apache.org\" <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"proposal mechanism evaluate whole cluster individual class deterministically pseudorandom ordering thread message event url evaluating correctness distributed system hard sure every developer list appreciates project matured grapple guarantee provide user feature develop semantics promise particularly around edge case two mechanism system work aim dramatically reduce project overhead necessary delivering bug free cassandra premise intercept relevant event could performed different order primarily message delivery thread event executor submission signalling thread lock acquisition release even volatile read writes lesser extent event scheduled pseudo randomly various restriction ensure valid execution case evaluated simulate message lost result repeatable sequential evaluation multi threaded multi actor system permit evaluate much broader range cluster behaviour without additional development work permitting implement broad range property based related randomized acceptance test without significant developer burden work apply readily multi threaded single class whole cluster come linearizability test lwts well unit test existing multi threaded bug otherwise hard exhibit achieve significant modification required codebase mostly cleaning existing abstraction specifically need able mock executor blocking concurrency primitive time filesystem access internode streaming work large part already complete jira pr follow coming week course work subject usual community input review preclude change work even significant one warranted know lot incoming cep likely backed significant list development result focus shippable hopefully temporary growing pain particularly move towards shippable trunk hope work huge value project particularly race catch year limited feature development jira pr follow wanted kick discussion advance"
    },
    "2332":{
        "ID":41483,
        "MESSAGE_ID":"CAF6oT1fqG6TwZJOS94TWY0_4gmBeskGO6nnFyKB9+4f4sko1rA@mail.gmail.com",
        "PARENT_ID":41482.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Chao Sun <sunchao@apache.org>",
        "TAGS":"not-ak",
        "BODY":"extending vote great see support much better far everything look good spark side url plan test next day best chao"
    },
    "2333":{
        "ID":41482,
        "MESSAGE_ID":"CADiq6=yPLHWPHUqLMPwP-86BbBqy_UL6hsBkyyXSHXho6FyDSw@mail.gmail.com",
        "PARENT_ID":41481.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"thinking day tuesday next sunday give everyone whole week validate"
    },
    "2334":{
        "ID":41481,
        "MESSAGE_ID":"D42AB39B-F426-483E-BF40-F4E4BE81B193@apple.com",
        "PARENT_ID":41479.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Sean Busbey <sbusbey@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"sound good would thursday june th right side note concerning double dot maintenance release big release get current state project unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "2336":{
        "ID":41479,
        "MESSAGE_ID":"CADiq6=yY8b14+1jB2k7MZ+59gBQ1Yv37X7U-fC4kjbvxPkDdgQ@mail.gmail.com",
        "PARENT_ID":41418.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hello want extend release vote understand big release like take time validate aware number people testing attila tested ozone hadoop rc stack testing hbase chao tested spark also learned anecdotally spark hadoop faster hadoop library look like may need time test extending week"
    },
    "2397":{
        "ID":41418,
        "MESSAGE_ID":"CADiq6=zKkJEuGjO4uQMrJE==YrcQXGbk7ZFJG6Wo+mszK_+YZA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 3.3.1 RC3",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi community release candidate rc apache hadoop line blocker issue resolved additional issue resolved rc revert mapreduce fix testjobresourceuploader failure hadoop revert hadoop fileutil copy throw ioexception source destination issue resolved rc hadoop update license mapreduce testframeworkuploader testnativeio fails revert hadoop update bouncy castle hadoop use hadoop thirdparty hadoop thirdparty previously mentioned contains two extra fix compared hadoop thirdparty hadoop remove jaeger document site index hadoop add back error prone rc tag release rc url rc artifact url arm artifact url maven artifact hosted url public key available url thing verified blocker issue targeting resolved stable evolving api change compatible license notice file checked releasenotes changelog rat check passed built hbase master branch top hadoop rc ran unit test built ozone master top fo hadoop rc ran unit test extra built open source project top hadoop rc patch due common lang migration hadoop dependency divergence issue identified far nothing blocker hadoop please try release vote vote run day start url url"
    },
    "2399":{
        "ID":41416,
        "MESSAGE_ID":"CADiq6=zOWRiwXUw-C0Sh-qy1ipcJYPP6oud1enrxPQygEHXMSQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 3.3.1 RC2",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi community release candidate rc apache hadoop line blocker issue resolved issue resolved rc hadoop update license mapreduce testframeworkuploader testnativeio fails revert hadoop update bouncy castle hadoop use hadoop thirdparty hadoop thirdparty previously mentioned contains two extra fix compared hadoop thirdparty hadoop remove jaeger document site index hadoop add back error prone rc tag release rc url rc artifact url arm artifact url maven artifact hosted url public key available url thing verified blocker issue targeting resolved stable evolving api change compatible license notice file checked releasenotes changelog rat check passed built hbase master branch top hadoop rc ran unit test built ozone master top fo hadoop rc ran unit test extra built open source project top hadoop rc patch due common lang migration hadoop dependency divergence issue identified far nothing blocker hadoop please try release vote vote run day start url url url status resolved order afixversion asc"
    },
    "2427":{
        "ID":41388,
        "MESSAGE_ID":"CAN+t3-j5vQHn=Sbp-b0g7j2CgESYaho23hQAiq6SqinvyLJ2jg@mail.gmail.com",
        "PARENT_ID":41358.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks paulo patch available github depends availability priority see benedict mentioned ticket probably patch cover already idea proposal happy finish work available time come handover someone else find related ticket one jvm prerequisite needed solved able load custom type"
    },
    "2434":{
        "ID":41381,
        "MESSAGE_ID":"3da1212b-b88d-8b88-9807-46ea210efddb@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Enable running Cassandra 3.11 on Java 11",
        "SENT_FROM":"Kornel Pal <kornelpal@gmail.com>",
        "TAGS":"property",
        "BODY":"hi experiment tried backport part cassandra cassandra needed run cassandra java part quite straightforward result available url minimize scope risk backported code change needed run java change needed compile java also update library version backport script config change might higher risk cassandra administrator able manually replace library binary apply config change java support ant test ant long test result without change java promising atomicbtreepartition somewhat challenging cassandra replaced relevant change made cassandra cassandra specific version changed commitlogreader present use fileutils createtempfile consistency apply ufsecuritytest change failing probably dependent newer library version believe change could enable cassandra run modern java version reasonable effort code change also would bring shared code base closer would reduce risk complexity future code change branch could please comment whether similar change could accepted mainline cassandra source code thank kornel unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2449":{
        "ID":41366,
        "MESSAGE_ID":"tencent_AE4F9311EE1367E79E987BA84DA2217DE807@qq.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [DISCUSS] Change project style guidelines to allow line length 100",
        "SENT_FROM":"\"=?utf-8?B?UWkgWmh1?=\" <821684824@qq.com>",
        "TAGS":"not-ak",
        "BODY":"reasonable original"
    },
    "2457":{
        "ID":41358,
        "MESSAGE_ID":"CAAy+TbQQsSCmmM4hpc4Bij+7ySYh_3=Kk-DAbUeBeTL=wBUV9A@mail.gmail.com",
        "PARENT_ID":41352.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks paulo one definitely fell crack pretty busy lately soon bit time create roadmap page summarize everything proposed far including making sslcontext creation pluggable proposed maulin junit migration proposal aleksei le mer mai paulo motta ecrit"
    },
    "2463":{
        "ID":41352,
        "MESSAGE_ID":"CAKaZCX6nwtnWLAsGskkXViLwyZZimh478_ty__yt=gvWyEFFHQ@mail.gmail.com",
        "PARENT_ID":41210.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would love see ekaterina work cassandra standardize configuration resumed next release thought would worth mentioning since quite productive discussion putting hold focus would great conversation resumed seg de abr de benedict elliott smith benedict apache org escreveu"
    },
    "2540":{
        "ID":41275,
        "MESSAGE_ID":"82C7A92B-9C1E-4F66-A15C-D43F9EF3282E@gmail.com",
        "PARENT_ID":41274.0,
        "SUBJECT":"Re: [DISCUSS] Semantic versioning after 4.0",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"something similar give clarity downstream user compatibility given release jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2541":{
        "ID":41274,
        "MESSAGE_ID":"CACvH57+n4C14sET=cWH8=xFp=PNhGbZdgNYVRwye8C48Nsr4Dg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Semantic versioning after 4.0",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"proposal aligned agreed upon annual cadence supported release let use semantic versioning better ecosystem operatibility promote api awareness compatibility support documentation test background recent dev ml thread release landed annual release cadence promoting always shippable trunk repeated roadmap thread digression occurred thread around use semantic versioning possible role properly using major minor version within annual release cycle proposal attempt take point view build everything else agreed upon far ecosystem operability cassandra codebase ecosystem around downstream project vendor providing support version managed dbaas help semver providing unreleased minor version year unreleased mean formal apache release approval bump version build xml downstream project face overhead either trying keep trunk annual development cycle trying rebase whole year worth development year unreleased version provide safe point ecosystem plug keep vendor also free support provide hot fix back port unreleased version outside community effort concern course semver provides lot value downstream codebases api compatibility awareness idea provide awareness improved documentation apis audience compatibility required personally still struggle getting head around way cassandra break apis think test coding important ensuring availability upgrade mix version cluster important want introduce data safe downgrade stuff get battle tested enough native protocol bump example need better documenting testing involved across ecosystem consequence breaking compatibility range documentation test mixed versioned cluster upgrade rollback operation semantic versioning way foreseeing preparing change practice done using different fixversions jira ticket lazy incrementing major version trunk first breaking change land development cycle example enter next development cycle jira fixversions initial trunk version committer merges first ticket bump trunk version approach incentivises patch aware better document breakage come added benefit ecosystem identifying development cycle compatibility first broke example compatibility area cql native protocol gossip jmx metric virtual table sstable cdc commitlog fql auditing many enough documentation versioned compatibility add pluggability spis need document closer ecosystem increase example illustrating action cadence minor version every quarter today branch cassandra increment trunk commits roll trunk ticket landed yet july increment version release made announced commits continue roll trunk still ticket landed yet october increment version commits continue roll trunk patch land trunk incremented january increment value release made announced commits continue roll trunk april formally release branch cassandra cadence minor version could anything quarterly monthly demand practice force organise automate dealing version change creating release branch organising test upgrade version path gathering process currently cassandra jeremiah originally depth illustrated url concern addressing question concern previously raised problematic history release versioning proposal tick tock known best practice around semver version number add overhead additional release release branch community long development cycle major release every year opposite force effort maintain always shippable trunk semver closer frequent feedback ecosystem better api awareness help maintain always shippable trunk touched benedict quarterly develop release benjamin bleeding edge snapshot guarantee stability individual feature new old still marked maturity state flag experimental unstable stable deprecated aside semver though part feed api awareness deprecating removing individual feature easier lifecycle avoids tied annual release major minor history meaningless distinction proposal attempt fix better api awareness way appease ecosystem getting need sooner believe help better limit put patch release could cut release quarterly minor release maintain general proposition previous thread possible would leave unsupported release easy download location asf left simplicity sake downstreams use minor version easily enough without formal asf compliant release something add future called bandwidth could also possible better stage development build using nexus artifactory etc summary creating cassandra branch bump trunk version discussion land sure concern suggestion also write cep called url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2605":{
        "ID":41210,
        "MESSAGE_ID":"AECE111D-AED6-4918-B3CE-B0B6D200DFC6@apache.org",
        "PARENT_ID":41184.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"existence, property",
        "BODY":"think earlier response vanished moderator queue comment paxos latency correctness improvement think land introduced fairly significant regression work mostly resolve outstanding issue lwts today aim deliver multi partition lwts may likely want pair work reduce latency beyond work contention become significant problem involved delivering multi partition lwts also aiming deliver even lower latency release land support work also aim deliver simulator facility deterministically executing cluster workload adversarial scheduling intercept message thread event evaluates sequentially pseudorandom order alongside linearizability verification built upon work include prerequisite significant clean ups internal functionality like executor use future concurrency primitive mocking time filesystem"
    },
    "2608":{
        "ID":41207,
        "MESSAGE_ID":"0f08139d-3295-8936-8b6a-7c6e337e55dc@gmail.com",
        "PARENT_ID":41107.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Aleksei Zotov <azotcsit@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi benjamin currently us junit seems obsolete think reasonable migrate junit created cassandra ticket good fit next release would volunteer get done would glad hear thought concern thanks aleksei"
    },
    "2630":{
        "ID":41185,
        "MESSAGE_ID":"CAAy+TbT9yGBugjwCDTpcv96+Xjn6eJZyWBE7HzC=2r0cgZS-Kw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSSION] Attracting new contributors",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi everybody apache cassandra project always issue attract retain new contributor think would great change according attract new contributor blog post url good onboarding process critical part contribute obvious contributing easy possible different type contribution code documentation web site help ci infrastructure would love hear idea improve thing new community hesitate share experience suggestion make easier contribute"
    },
    "2631":{
        "ID":41184,
        "MESSAGE_ID":"CAAy+TbRCYO+n0WaPFwnAV4MFmBeZVJyXLKNPHyrL46iRC2oa5A@mail.gmail.com",
        "PARENT_ID":41165.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everybody thanks response went email aggregated proposal give idea stand point included improvement list left side bug fix regarding bug fix wonder discussion every month discus important issue fixed priority feel sometimes tend forget old issue even important new one hesitate tell missed something misinterpreted proposal query side improvement storage attached index sai cep found url add support predicate cql clause allow aggregate time interval cassandra allow udfs group clause ability read ttl write time element collection cassandra multi partition lwts materialized view hardening addressing different materialized view issue see cassandra work involved security improvement sstables encryption cassandra add support dynamic data masking cep pending allow creation role ability assign arbitrary privilege scoped privilege without also granting role access database object filter row system system schema based user permission cassandra performance improvement trie based index format cep pending trie based memtables cep pending paxos improvement paxos lwt implementation would enable database serve serial writes two round trip serial read one round trip uncontended case safety usability improvement guardrail cep found url add ability track state repair cassandra repair coordinator improvement cassandra make incremental backup configurable per keyspace table cassandra add ability blacklist cql partition request ignored cassandra add default required keyspace replication option cassandra transactional cluster metadata use transaction propagate cluster metadata downgrade ability ability downgrade downgrade event serious issue identified pluggability improvement pluggable schema manager cep pending pluggable filesystem cep pending pluggable authenticator cqlsh cassandra cep draft found url memtable api cep pending goal allow improvement cassandra easily plugged cassandra memtable pluggable implementation enable cassandra persistent memory cassandra tool cql compatibility test suite cep pending le jeu avr benjamin lerer ecrit"
    },
    "2650":{
        "ID":41165,
        "MESSAGE_ID":"CAAy+TbScRvR=3PjmnRgw45AFgLjiFpA0bR89MJ+Zgzb3whEzNg@mail.gmail.com",
        "PARENT_ID":41140.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"bringing cassandra state huge effort keeping way help ensure quality release le jeu avr scott andreas ecrit"
    },
    "2675":{
        "ID":41140,
        "MESSAGE_ID":"BYAPR12MB33203DD7967798052D73F324CE4D9@BYAPR12MB3320.namprd12.prod.outlook.com",
        "PARENT_ID":41139.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"existence, property",
        "BODY":"thanks starting discussion benjamin share others enthusiasm thread improvement secondary index trie based partition index guardrail encryption rest post area investment mind transactional cluster metadata migrating optimistic modification propagation cluster metadata via gossip transactional implementation open lot possibility token movement instance replacement get safer faster schema change made atomic enabling user execute ddl rapidly without waiting convergence operation like expansion shrink become easier automate le care feeding paxos improvement discussion benedict expressed interest post improvement made cassandra paxos lwt implementation would enable database serve serial writes two round trip serial read one round trip uncontended case many cross wan serial use case may halve latency ca query multi partition lwts lwt great primitive modeling application constraint single key ca game twister extending paxos improvement discussed enable multi partition ca would enable user apache cassandra perform serial operation across partition boundary downgrade ability also see downgradeability important future new release adoption taking file format change example currently possible downgrade event serious issue identified unless able host replace upgrading one replica revert pre upgrade snapshot accept data loss would excellent possible next continue writing previous sstable commitlog hint etc format switch flipped opt new file format apache hdfs take similar approach enabling downgrade namenode metadata finalized would excellent capability apache cassandra dramatically lower stake new release adoption pluggability disaggregation agree important theme well want bring lot care attention work disaggregation open lot possibility drawback future change restricted defined interface inability optimize across interface boundary probably hit sweet spot though toolchains validate implementation pluggable component become important would bad project user bundled implementation uneven quality supported subset functionality converging common validation toolchain pluggable subsystem help ensure quality minimizing effort required test new implementation finally think important work maintain trunk shippable state might look like major change new feature hiding behind feature flag enable user selectively enable development validation proceeds new code executed regardless flag held higher standard cheer scott url guo maxwell sent wednesday april pm dev cassandra apache org subject discussion next release roadmap brandon williams apple eye unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2676":{
        "ID":41139,
        "MESSAGE_ID":"CAKFErHohf=1=7fy+ZVA70Ot5QLnLsJZ-43ujLQA7r4JkmSGS4w@mail.gmail.com",
        "PARENT_ID":41138.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"guo Maxwell <cclive1601@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"brandon williams apple eye"
    },
    "2677":{
        "ID":41138,
        "MESSAGE_ID":"CAAafH9Tcy=hASYT=DhT5iEqar-vpYhqn_3NCpnQXS_D4B35XXQ@mail.gmail.com",
        "PARENT_ID":41137.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"agreed everyone please keep mind thread roadmap contribution plan make contribution would like see"
    },
    "2678":{
        "ID":41137,
        "MESSAGE_ID":"CABsaHTNy5LaZmhuzdu9UVcw6jPKJdPa0mAjBKmToXLozAbY55w@mail.gmail.com",
        "PARENT_ID":41132.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"property",
        "BODY":"agree stefan need move towards pluggability user asking make sense architecturally people anyway"
    },
    "2679":{
        "ID":41136,
        "MESSAGE_ID":"DM6PR11MB28428A0DB4DB05FC22B5B982F14E9@DM6PR11MB2842.namprd11.prod.outlook.com",
        "PARENT_ID":41132.0,
        "SUBJECT":"RE: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"\"Kokoori, Shylaja\" <shylaja.kokoori@intel.com>",
        "TAGS":"not-ak",
        "BODY":"thanks stefan bringing jira url add ability encrypt sstables working would appreciate feedback would also like add list one url enable direct"
    },
    "2680":{
        "ID":41135,
        "MESSAGE_ID":"DM6PR11MB2842E8DC5E96297F2E8F3DB8F14E9@DM6PR11MB2842.namprd11.prod.outlook.com",
        "PARENT_ID":41109.0,
        "SUBJECT":"RE: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"\"Kokoori, Shylaja\" <shylaja.kokoori@intel.com>",
        "TAGS":"not-ak",
        "BODY":"pluggability improvement great idea good persistent memory support url enable cassandra persistent memory easily refactored pluggable memtable unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2683":{
        "ID":41132,
        "MESSAGE_ID":"CAPw+qV7AAPKYovjenHdu-FK8-bhMQvhTEzOpi=u40_oXYaT6dA@mail.gmail.com",
        "PARENT_ID":41131.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"hi definitely url surprised nobody mentioned previous answer people waiting happen multiple people working seriously wanting feature long come detailed list thing came mind instantly read thread regard"
    },
    "2684":{
        "ID":41131,
        "MESSAGE_ID":"CAKad6UOHCTO2HZFq-k-JHeAQpFMAiam4=YjhyXD2-cpT3wefOg@mail.gmail.com",
        "PARENT_ID":41116.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Sumanth Pasupuleti <sumanth.pasupuleti.is@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"plan work following cassandra blacklisting bad partition rework patch solicit feedback review committed cassandra default required keyspace rf patch available solicit feedback review committed cassandra pending range recalculated keyspace creation patch available work jvm dtests solicit feedback review committed cassandra querying ttl writetime collection cassandra read failure due exception metric core dependency"
    },
    "2699":{
        "ID":41116,
        "MESSAGE_ID":"CAKFErHrRX30LPWSgZNs6vAwJJ4SEDEvL2SqZEKw4VJS0kmz0kQ@mail.gmail.com",
        "PARENT_ID":41111.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"guo Maxwell <cclive1601@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"besides need table level backup restore solution cassandra url"
    },
    "2703":{
        "ID":41112,
        "MESSAGE_ID":"trGs7dVCxCY3wyNaFj7ZPAzJ8KUq5PTQg3HNg2efYvYyuRWj6Hv5InplwWlRKwBR9-3NrNBfcZqjDPeUYfks8j-9wJmirE_6MAGOPWFuU-Q=@protonmail.com",
        "PARENT_ID":41109.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"bhouse99 <bhouse99@protonmail.com.INVALID>",
        "TAGS":"existence, property",
        "BODY":"numerous thing would like contribute next roadmap really think pluggable storage great goal expand cassandra option performance scalability plan helping work also plan work extending cqlsh offer plugin support particularly security plugins see url one idea wanted raise concerning testing many managed tweaked cassandra solution available datastax astra amazon keyspaces scylladb etc would love work suite protocol test isolated testing cql compatibility basically test tool focus cql grammar kind testing pact framework example url would help test cql compatibility offering help improve support would help crisp part cql different kind addition assuming interest plan writing cep cover idea thanks brian sent protonmail secure email original message"
    },
    "2704":{
        "ID":41111,
        "MESSAGE_ID":"CAAy+TbT7rL9eubQYxff1TDg8APF=XH5trjOxa_Wn25SF9Un4+g@mail.gmail.com",
        "PARENT_ID":41110.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"yes thanks pointing le ven avr guo maxwell ecrit"
    },
    "2705":{
        "ID":41110,
        "MESSAGE_ID":"CAKFErHqGH92hchuZxFfgU3D=UYgoPmhVACrAtrjUMtJPjquJYA@mail.gmail.com",
        "PARENT_ID":41109.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"guo Maxwell <cclive1601@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"filter row system system schema based user permission think issue match improvement url david capwell apple eye"
    },
    "2706":{
        "ID":41109,
        "MESSAGE_ID":"0B2D5D9A-5581-476E-BDF6-F332D21C9F1B@apple.com",
        "PARENT_ID":41108.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"David Capwell <dcapwell@apple.com.INVALID>",
        "TAGS":"existence",
        "BODY":"two thing descoped plan pick release url repair coordinator hang case aka repair many case become unresponsive reliant work improve url add ability track state repair rather rely log see repair add apis expose going repair repair done"
    },
    "2707":{
        "ID":41108,
        "MESSAGE_ID":"CAAy+TbRhpJz2jTVqb+KArQYnPq=Sg_xxF6Hge2czRiBudtq41Q@mail.gmail.com",
        "PARENT_ID":41107.0,
        "SUBJECT":"Re: [DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benjamin Lerer <b.lerer@gmail.com>",
        "TAGS":"existence",
        "BODY":"side list improvement plan deliver next release query side improvement storage attached index sai cep found url add support predicate cql clause allow aggregate time interval cassandra allow udfs group clause materialized view hardening addressing different materialized view issue see cassandra work involved security improvement add support dynamic data masking cep pending allow creation role ability assign arbitrary privilege scoped privilege without also granting role access database object filter row system system schema based user permission performance improvement trie based index format cep pending trie based memtables cep pending safety usability improvement guardrail cep found url pluggability improvement pluggable schema manager cep pending pluggable filesystem cep pending memtable api cep pending goal allow improvement cassandra easily plugged cassandra feedback welcome url le jeu avr benjamin lerer ecrit"
    },
    "2708":{
        "ID":41107,
        "MESSAGE_ID":"CAAy+TbTnnfWfkWzzYi_JL-Us5Vyu+fNA9MSNW4vx97uuzAisGw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSSION] Next release roadmap",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"process",
        "BODY":"hi everybody please speak tell plan contribute next year goal discussion allow people present contribution planned next cassandra release discussion several benefit give greater visibility planning contribute contribution would allowing contributor join effort ask question wish also synchronize effort feature impact part code user provide idea expect next release thanks advance input"
    },
    "2720":{
        "ID":41095,
        "MESSAGE_ID":"CAN+t3-gTYVvryd4yKGzwsiraamErCt12EthfTCsZajNU=1aBRA@mail.gmail.com",
        "PARENT_ID":41094.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"end roadmap page start looking future also optimistic assumption april exciting time"
    },
    "2721":{
        "ID":41094,
        "MESSAGE_ID":"46069CCF-D010-4B7E-9511-BFDA02DB198A@apache.org",
        "PARENT_ID":41092.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"make sense looking forward agreeing roadmap think nice project start properly looking future"
    },
    "2723":{
        "ID":41092,
        "MESSAGE_ID":"CABxe4TqPANKHF-3dHn4cTUk-2OfF06WZXjvfzJGKHs=LJEc9wA@mail.gmail.com",
        "PARENT_ID":41062.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <benjamin.lerer@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"thanks everybody opened cassandra update end support date different version assumed manage release ga april otherwise update concerning release cadence seems proper place put information website offline discussion mick raised point would make sense put information roadmap page make sense trigger roadmap discussion next week agree roadmap propose create new page include information release cadence fully open another proposal"
    },
    "2753":{
        "ID":41062,
        "MESSAGE_ID":"DAF63B00-C382-4843-A24C-164A7A175785@beobal.com",
        "PARENT_ID":41039.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Sam Tunnicliffe <sam@beobal.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2760":{
        "ID":41055,
        "MESSAGE_ID":"B4A65C87-6004-4B41-AD87-DB197B292FFA@apple.com",
        "PARENT_ID":41049.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"David Capwell <dcapwell@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2763":{
        "ID":41052,
        "MESSAGE_ID":"CAKaZCX6Smp1djXKkjhrKSMq2dnRv2-RKDqqKVeTQe03VAzeYXg@mail.gmail.com",
        "PARENT_ID":41050.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"coming week awesome thanks coordinating clarified version name precise idea ga released sound good joey addendum proposal end support cycle say april case delay beyond thought think valid point think need prescribe since always discus end support date delay perhaps add short note support page end support date may revised change release schedule seg de march de erick ramirez erick ramirez datastax com escreveu"
    },
    "2765":{
        "ID":41050,
        "MESSAGE_ID":"CAEyL1EH7_hk6aOxWR9s_UToeFV7fjLfdAmdEyEn8nmiHT-Grtw@mail.gmail.com",
        "PARENT_ID":41039.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Erick Ramirez <erick.ramirez@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"excellent proposal make easier community understand plan ahead wanted suggest addendum review support done say april case delay beyond thought"
    },
    "2768":{
        "ID":41047,
        "MESSAGE_ID":"CAA=6J0_yXP7jBg1vZyDuqoV=6Y_x4A8dKxuAfZvQj62O7cD-pA@mail.gmail.com",
        "PARENT_ID":41046.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"good sensible suggestion"
    },
    "2769":{
        "ID":41046,
        "MESSAGE_ID":"CAN+t3-iucd0Vh3_3AqDtR1esFCKx+ruYBvj_B+xE9rp=Brg0fQ@mail.gmail.com",
        "PARENT_ID":41044.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"also like latest suggestion thank"
    },
    "2773":{
        "ID":41042,
        "MESSAGE_ID":"1401DAA7-DFF2-4B44-ACB7-187CEC4F4EC1@gmail.com",
        "PARENT_ID":41041.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"\"J. D. Jordan\" <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"deprecation schedule seems reasonable good thing move unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2774":{
        "ID":41041,
        "MESSAGE_ID":"CAAy+TbRwzZZ=Ur4z6EivY7nPUqciphsO=NgoUwE58=w-9Jz36w@mail.gmail.com",
        "PARENT_ID":41040.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <blerer@apache.org>",
        "TAGS":"not-ak",
        "BODY":"proposal sound good le lun mar brandon williams ecrit"
    },
    "2776":{
        "ID":41039,
        "MESSAGE_ID":"CALShVHes7XMZxyAv4awdHU7GyWTP=wc2+yw1YV7eNykxgY=+gw@mail.gmail.com",
        "PARENT_ID":41033.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"process",
        "BODY":"slightly concerned removing support critical bug fix short time frame year know least major installation including able finish upgrade production due number correctness performance bug introduced release debugged fixed past year like idea year support cycle think since took long stabilize point folk could upgrade reset clock somewhat following assuming april cut fully supported april high severity bug april year full year bugfix fully supported april high severity bug april year full year bugfix supported high severity correctness performance bug april year bugfix eol immediately going forward could nice pattern cut yearly release support year full bugfix fully supported year supported high severity correctness perf bug year full bugfix supported high severity correctness bug year bugfix think joey"
    },
    "2782":{
        "ID":41033,
        "MESSAGE_ID":"CABxe4ToOqS1oPCvL7+jZnW0Bh3x54ZvshK9NWSVhee40n+sO7A@mail.gmail.com",
        "PARENT_ID":40862.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <benjamin.lerer@datastax.com>",
        "TAGS":"process",
        "BODY":"thanks everybody sorry finalizing email thread sooner release cadence agreement one release every year periodic trunc snapshot number release supported agreement every incoming release supported year reach clear agreement several point naming version semver versus another approach name snapshot version long support taking account released year ago make sense support next year planning open follow discussion point coming week agreement document change webpage valid point mind update documentation clarified version name precise idea ga released allow make clear message expect next supported version"
    },
    "2953":{
        "ID":40862,
        "MESSAGE_ID":"CAKaZCX5NgqDB09qw5LTd31rPrP+fVCxq5ABYu2mPSLqGX_kL0Q@mail.gmail.com",
        "PARENT_ID":40859.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"process",
        "BODY":"yearly release cadence periodic trunk snapshot support previous release branch think give nice predictability project agreement document change webpage also highlight part release material important change release cycle lts support sex de fev de brandon williams escreveu"
    },
    "2956":{
        "ID":40859,
        "MESSAGE_ID":"CAAafH9Q+6a-n33oorhmJuxvisHbKno7kJaGfJgSOuP4C04r-hQ@mail.gmail.com",
        "PARENT_ID":40858.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"perhaps third try keep three branch total including next support begin ending next trying convey"
    },
    "2957":{
        "ID":40858,
        "MESSAGE_ID":"CAAafH9RKzvJDt+EQ4RnkD-RvaA164x0yVf_r2DCAC0jnxRSzBg@mail.gmail.com",
        "PARENT_ID":40857.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"err clear keep branch"
    },
    "2958":{
        "ID":40857,
        "MESSAGE_ID":"CAAafH9Qu7AfDRNC8LykdO5F1-UYioTkZCkieFAWOTDap=G=ghw@mail.gmail.com",
        "PARENT_ID":40855.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"branch thus year support transition would aim keep successor released"
    },
    "2960":{
        "ID":40855,
        "MESSAGE_ID":"CABxe4ToM-hgeQ9tBPXHqQWc2sH-dibxR4GMvHQ_L3iSGAX6QRQ@mail.gmail.com",
        "PARENT_ID":40854.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <benjamin.lerer@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"release branch make sense"
    },
    "2961":{
        "ID":40854,
        "MESSAGE_ID":"pony-05cb8398a8be7b5aac8e0d84f4302b52172ba80d-e994fbdce8f6e6867eda3c1c118029db01e626f1@dev.cassandra.apache.org",
        "PARENT_ID":40849.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Michael Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"branching one release branch year also trying reach consensus release branch supported year aiming limit release branch plus trunk flexible date non ga non branched release along way jeremiah nothing add post think fantastic job combining semver would work combination benedict focus cadence reducing community burden also helped highlight different discussion separately thanks benjamin bringing back original question sorry derail unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2962":{
        "ID":40853,
        "MESSAGE_ID":"CAAafH9QZtvRHwJekdi_JXZ0BqaE9c=nArxy10jJakX8X8itMgQ@mail.gmail.com",
        "PARENT_ID":40852.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"yearly release periodic snapshot far timing go would like avoid picking specific date release instead choose something like first wednesday may something"
    },
    "2963":{
        "ID":40852,
        "MESSAGE_ID":"7DB6088A-8B86-4655-8532-CFBB79C3A249@beobal.com",
        "PARENT_ID":40851.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Sam Tunnicliffe <sam@beobal.com>",
        "TAGS":"not-ak",
        "BODY":"yearly cadence periodic publishing bleeding edge snapshot unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "2964":{
        "ID":40851,
        "MESSAGE_ID":"940DF60F-AA9E-44A0-B24F-6841BAA05DA6@apache.org",
        "PARENT_ID":40850.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"also mixing experiment regular releasable without api stability snapshot trunk"
    },
    "2965":{
        "ID":40850,
        "MESSAGE_ID":"CAHyRp2Ta_F+9E6mCfBu8yowR8rCSvXNgjj6=LScMsi__-uBxGg@mail.gmail.com",
        "PARENT_ID":40849.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yearly cadence fwiw space project infra software directly odds many user preferred release cadence preferably never bugfix existing stable project compared fast nosql database ecosystem evolving year seems strike reasonable balance various constituent"
    },
    "2966":{
        "ID":40849,
        "MESSAGE_ID":"CABxe4TpY+hpbKaOoKq74wVqCdHjM-ppvr-mKdC8voHMzX+k1jw@mail.gmail.com",
        "PARENT_ID":40811.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <benjamin.lerer@datastax.com>",
        "TAGS":"process",
        "BODY":"thanks response offline discussion different person gather feedback current discussion people talked appeared favor one supported release every year benedict initially suggested advantage mentioned long enough allow significant amount work done work slip next release delayed one year create much burden term release maintenance provides certainty community believe appetite bleeding edge snapshot guarantee stability semver discussion finished yet would like let discussion go follow thread goal thread reach agreement release cadence version officially support impression people agree one release every year would like propose future release cadence feedback welcome"
    },
    "2979":{
        "ID":40836,
        "MESSAGE_ID":"CAA1qPbb8dO9sjU2k986-KjdrGp6m9UfgKGnqvzncAQ+8bSDLGQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.10 released",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "2980":{
        "ID":40835,
        "MESSAGE_ID":"CAA1qPbbp+69kh14uXmnJwc3d-iG_oviNjRfRkWyN=D1N4J5RPg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.24 released",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3004":{
        "ID":40811,
        "MESSAGE_ID":"A539D073-24EC-4081-A3F5-B642A39A128A@gmail.com",
        "PARENT_ID":40807.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"process",
        "BODY":"think confusing thing minor patch talk branch name think agree following statement release made stable maintenance branch cassandra cassandra cassandra created limit feature added mostly bug fix new feature developed trunk think thing discussion often cut new maintenance branch trunk also long maintain branch would definitely like see project able release binary trunk often year long keep quality goal line post ga think possible want go semver idea minor fit perfectly well server meant make patch release every version ever released way versioning release people understand upgrade semantics release dropped support existing thing need bump major version added something new bump minor version fixed bug user visible change bump patch version thinking something along line might useful well could see process cut new maintenance branch every time year month would fix bug make patch release maintenance branch would also cut release development branch trunk often version number trunk would updated based changed since last release made trunk dropped support something since last release bump major added new feature likely thing bump minor release cut cassandra maintenance branch make future release branch trunk continues development new feature added month release trunk cut cassandra branch development continues along trunk new feature get bump version branch month go release trunk bug fix go trunk new feature version branch bump decide make release trunk fix gone trunk since last release release trunk continue way releasing decide time new maintenance branch cut release also cut cassandra branch branch get patch release made trunk continues point project decides want drop support deprecated feature trunk get bumped release happen trunk development trunk continues time new maintenance branch cassandra get cut kind look like tried tick tock wanted name something would call something like releasable trunk periodic maintenance branching many project release trunk look like jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "3005":{
        "ID":40810,
        "MESSAGE_ID":"CALdd-zj2taUrmGnfc9V-jkOrhGxvO+0f3U=d40qEVvzT7XPrng@mail.gmail.com",
        "PARENT_ID":40809.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sorry got thread crossed"
    },
    "3006":{
        "ID":40809,
        "MESSAGE_ID":"CALdd-zgsZQnwOBXFpwmLu87AwQfjFvj+-_TZHWb7N3BeknD6Rw@mail.gmail.com",
        "PARENT_ID":40807.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cqlsh new feature"
    },
    "3008":{
        "ID":40807,
        "MESSAGE_ID":"59135AC0-09D9-4D74-BDBB-86A6A0CFA006@apache.org",
        "PARENT_ID":40806.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"discussed previously agreed limit feature minor version per release lifecycle continue endorse decision"
    },
    "3009":{
        "ID":40806,
        "MESSAGE_ID":"CACvH57KT8_bPA9YNj9mgqwkRzFRzO5Yo3QHqJDQj1MsLa71cAA@mail.gmail.com",
        "PARENT_ID":40805.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"release break compatibility documented guideline dictate wrt upgrade api cql native protocol etc even new feature introduced without compatibility breakage often possible honouring semver imply release contrary number existing release minor instead major opportunity cost recognise minor release"
    },
    "3010":{
        "ID":40805,
        "MESSAGE_ID":"1BD558EB-CA93-4730-A26C-3DEAC4B0B6BA@apache.org",
        "PARENT_ID":40804.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"envisage delivered release besides bug fix capacity project release dedicated whatever fall two gap would like see three branch life support critical fix stable fix development minor fit well going well could resolved marking feature unstable experimental begun api stability tied feature tightly release actually warming configuration think circling idea similar vicinity suspect none tightly wed specific issue create extra maintenance overhead release manage one advantage cd approach nominate release much le frequently long term support point rollover new major presumably also deprecating across boundary suppose practice would different tick tock better state qa higher bar merge perhaps fixed release cadence realisation make le keen reason"
    },
    "3011":{
        "ID":40804,
        "MESSAGE_ID":"CACvH57KvGRUi6F_gsT4oLu-z1v-KvsymBiF0VOGrVunfeG9uXg@mail.gmail.com",
        "PARENT_ID":40802.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"problematic history release versioning completely agree feel throwing baby bath water think semver minimal amount dev guideline place great benefit user following aspect remain open question feature anything breaking compatibility benefit releasing minor better indicate user upgrade path simplify upgrade path support practice deprecating api one release removing following cql native protocol sstable versioning tie semver especially major also compatibility would thought enough provide set guideline dev community release either major minor missing piece apply branching strategy would suggest branching strategy would suggestion decision release major minor lazy made may practice start every release major suggested would keep minor number semver use see fit practice improve dev guideline place may see release become mostly minor see increase relevance introduce spis codebase bigger dev ecosystem around storage engine compaction index thin coordinator already today know consumer maven artifact dependency hell big part semver value ref url depends much time community contribute changing responsive thing aim objective improve streamline process guideline suggestion keep semver decide whether release major minor agree cut release decision primarily based documented dev guideline"
    },
    "3012":{
        "ID":40803,
        "MESSAGE_ID":"CABxe4Tq2kO3+sf4rNAyrEeC4achA9miARUA2wMSv-Aw5pjexEQ@mail.gmail.com",
        "PARENT_ID":40802.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <benjamin.lerer@datastax.com>",
        "TAGS":"process",
        "BODY":"bit scared continuous delivery approach database due lack guarantee apis protocol mentioned"
    },
    "3013":{
        "ID":40802,
        "MESSAGE_ID":"F4FF1792-88CF-4C8A-A7EE-1A4BB5869A53@apache.org",
        "PARENT_ID":40801.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"problematic history release versioning user probably think number meaningless however new release lifecycle document follow discussion around qualifying release curtail feature release ga also stipulate new major version associated release happens accord preference namely eliminate concept minor release semver term feature release patch release first bug fix release year ship support voiced couple forum including list back perhaps never fully discussed settled need pick point time provide stability patch support annual cadence provides certainty community perhaps would make sense aim true continuous delivery trunk however value flexibility experiment revisit decision committing apis feature behaviour long term providing continuous delivery build guarantee api stability new feature apis user able accept small risk regard development intend use new feature may still benefit access high quality release quickly project get rapid feedback perhaps flexible approach though wherein continuous delivery release candidate arbitrary timeline cut release create api stability point periodically nominate release receive year support"
    },
    "3014":{
        "ID":40801,
        "MESSAGE_ID":"CACvH57+j25md8fk3fCzV+ecEheLsd1AMztqT28Yhz=NoaiK-cw@mail.gmail.com",
        "PARENT_ID":40787.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process, technology",
        "BODY":"shippable trunk snip might get happy reverting commits break thing yes yes work done started undercovered quality testing epic continue ci system also improved folk using circleci ci cassandra think combination brings advantage though still lot circleci cover everything ci cassandra thing still example arm jmh jacoco dtest large novnode putting dtest upgrade pipeline jira ticket exist another issue reliably identifying flaky test test history test result log getting stored nightlies data achieve searching remains overly raw effort continue definitely able avoid repeating feature freeze requirement necessary simple user community developer community support version year raise number question make release fixed time year idea one major release year contradicts practice effort towards stable trunk stable trunk popularly associated continuously delivered cd codebases yearly release quite see stricter merge criterion compensating enough put effort release process encouraged community active release manager need release get one looking cutting patch release often possible many year shall support major version currently maintain three release branch plus one limited security issue oldest supported year think year long current community would suggest bringing year project maturing along effort towards stable trunk would expect upgrade getting easier asking user upgrade least every three year big deal os project history meaningless distinction sure understand point reference agreement releasing minor version mean drop semver still three number version first reply wrote would minor necessary thought minor relabelling patch version release lifecycle guideline defined included discussion compatibility issue good time also define incompatible api change define incompatible api change release simple enough know whether going major minor also come back support window three year support window yearly major version mean asking user perform three upgrade every three year pretty sure would favour defining incompatible api change mean aim one major every three year let pmc make exception go along see fit knowing cost exception come already getting better identifying incompatibility requirement put release lifecycle guideline assume pushing stable trunk effectively implies semver like strategy allowing use identification incompatibility short making better identifying incompatibility release lifecycle would use benefit user"
    },
    "3024":{
        "ID":40791,
        "MESSAGE_ID":"9D3BC547-8F9F-4ABD-8BDD-AD78A9495E25@apache.org",
        "PARENT_ID":40790.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"understood agreed drop semver major minor history meaningless distinction instead go major patch major minor minor patch depending want slice lot discussion past year may misremembering"
    },
    "3025":{
        "ID":40790,
        "MESSAGE_ID":"CABxe4TqXw2aAWS_vPZF=ceoqo8pk3Uh8Sb++wEoo119oTp=DZA@mail.gmail.com",
        "PARENT_ID":40788.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <benjamin.lerer@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"think fully understand proposal define major minor release understanding major release version broke compatibility consequence breaking change introduced possible release minor wait major release similar way breaking change introduced make sense release major"
    },
    "3027":{
        "ID":40788,
        "MESSAGE_ID":"A2D7F3F6-C59F-40E3-9874-84196F5C6534@apache.org",
        "PARENT_ID":40787.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process, property",
        "BODY":"perhaps could also consider quarterly develop release pressure maintain shippable trunk provides opportunity release without incurring project maintenance cost user coordination cost something like feature incomplete mid cycle rc user wanting shiny feature grab providing feedback throughout development cycle"
    },
    "3028":{
        "ID":40787,
        "MESSAGE_ID":"EF570A72-6EE9-4C80-8C29-C7ABA4265F0C@apache.org",
        "PARENT_ID":40786.0,
        "SUBJECT":"Re: [DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process, property",
        "BODY":"preference simple annual major release cadence minor necessary simple user community developer community support version year would like pair stricter merge criterion maintain shippable trunk cut release time every year whatever feature merged might get happy reverting commits break thing think faster cadence impose much burden developer community maintenance user community upgrade making sense going think slower cadence collapse release window begin collect many hope dream hope get point snapshot trunk safe run major contributor ahead release window internal consumption rather behind might also alleviate pressure hitting release window feature"
    },
    "3029":{
        "ID":40786,
        "MESSAGE_ID":"CABxe4TqRft9yn9tSCD0jCS4qXE4vFeEzQQTkBcW16d+3rggBSA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Releases after 4.0",
        "SENT_FROM":"Benjamin Lerer <benjamin.lerer@datastax.com>",
        "TAGS":"process",
        "BODY":"hi everybody seems need discus deal release relatively close rc release make sense start discussing subject especially impact thing like dropping support python main question opinion release cadence want use major minor version plan ensure quality release might make sense try release cadence see work practice revisiting decision feel need one important thing discus cadence amount time want support release supported year might able support release similar time frame release version every month example sure page regarding minor major version naming would minor version improvement feature break compatibility would major version compatibility breakage"
    },
    "3065":{
        "ID":40750,
        "MESSAGE_ID":"CABxe4TqMGRhv55NwRVuXT-S4d1w=SaL_5T7xBG=scsKp-yVuPg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Revisiting the quality testing epic scope",
        "SENT_FROM":"Benjamin Lerer <benjamin.lerer@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hi everybody discussed holiday might make sense revisit scope quality testing ticket ga ensure release held longer necessary current status quality testing task following done cassandra tooling bundled first party cassandra cluster setup maintenance cassandra platform runtimes non blocking goal following ticket reached ga closed marked done cassandra local read write path upgrade different test cassandra tooling external ecosystem understood jordan comment correctly following ticket also blocker cassandra test framework tooling infra automation blocking ga cassandra distributed read write path sub task resolved progress open cassandra repair test scenario ready working integrating circle ci cassandra compaction sub task patch available review progress triage needed cassandra metric sub task resolved patch available open cassandra cluster upgrade sub task resolved progress open cassandra local read write path progress made ticket conclusion far harry best choice uncover issue area clear plan move forward made progress across quality testing ticket nevertheless still significant amount ticket fix time resource limited might make sense focus believe critical relax constraint others example seems metric ticket mainly help discover non critical old issue blocker clear fixed could probably done release fully volunteer could true area code opinion important question would need answer ticket make non blocking cassandra local read write path thanks advance feedback"
    },
    "3089":{
        "ID":40726,
        "MESSAGE_ID":"CACvH57+8494PoR7GJHrX1kh_FSthmqDr6SiNdM5mRJL2=8BiKg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 4.0-beta4 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version beta apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version beta release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3239":{
        "ID":40576,
        "MESSAGE_ID":"CADiq6=yge6FRzJoHnEjRRgykAjkU=ZeeVNV3GzfyDx1gUH9r1g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Fwd: AWS Consistent S3 & Apache Hadoop's S3A connector",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"technology",
        "BODY":"thanks steve forwarded common dev hadoop make sure hadoop developer aware forwarded message steve loughran date fri dec subject aws consistent apache hadoop sa connector missed announcement aws storage strongly consistent url full crud consistency consistent listing caching get rename atomic create overwrite application need know code enabled bucket need change endpoint setting extra cost performance impact biggest change semantics since launched mean hadoop sa connector testing problem surfaced need sguard leave default setting alone using turn restart everything delete ddb table without listing may get bit slower lot work branch speeding listing raw especially code us liststatusiterator listfiles hadoop time get hadoop door people play got fair sa side enhancement people still using sguard need maintained fairly ruthless going get closed wontfix worried anyone using sguard non aws consistent store send email release pr tdoing est run without sguard important added optional backwards incompatible change recently better scalability hadoop sa optionally retain directory marker add marker keep delete test matrix pain though choose two option time manageable apache hbase still need hboss extension front sa connector use zookeeper lock file compaction apache spark workflow chained together read directly writes overwrites file work reliably raw classic fileoutputcommitter commit rename algorithm going fail filenotfoundexception task commit still use copy rename work take data time commit file without atomic dir rename commit algorithm isolate commit operation two task attempt unsafe slow commit slow isolation task attempt commits filesystem different task attempt generating unique filename possibly work around update inconsistency safe turn option sa committers algorithm happy talking directly spark needed fix race condition staging committer magic committer relied consistent store safe fix hadoop staging committer hadoop aws build work safely older spark version format commit work writing file unique name updating reference consistent store iceberg still going work great naming irrelevant commit writing file best story disctp cached ot break uploads even relevant fix stop head request creating file hadoop revert hadoop update inconsistency hadoop distcp version support direct use avoid rename performance penalty distcp version hadoop issue needle delete call big update end throttled badly upgrade people seeing problem issue apache org component hadoop file jiras please tag version hadoop library running thanks steve"
    },
    "3266":{
        "ID":40549,
        "MESSAGE_ID":"CAJ4Ljpd-WkgYHCTvvegG4pugb2bnbz1DUnOvN77FdCr_PU=ZPQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Unable to close file because the last block does not have enough number of replicas.",
        "SENT_FROM":"Aihua Xu <aihuaxu@uber.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi folk hdfs namenode swap name different ip address client need change configuration application seeing unable close file last block enough number replica server side see classpath block committed complete numnodes minimum file thinking datanode need retry one time figure right ip address active namenode default timeout dfs client block write locatefollowingblock retries dfs client block write locatefollowingblock initial delay client side seems sufficient want check anyone seen issue would possible thanks aihua"
    },
    "3333":{
        "ID":40482,
        "MESSAGE_ID":"F5564C30-7EDB-4428-B1D1-A4EACCD80723@gmail.com",
        "PARENT_ID":40477.0,
        "SUBJECT":"Re: [E] Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Fengnan Li <loyallfn@gmail.com>",
        "TAGS":"property",
        "BODY":"hi daryn slightly related question used refreshcallqueue tune config fair call queue instead normal maintenance failover restart performance impact thanks fengnan"
    },
    "3337":{
        "ID":40478,
        "MESSAGE_ID":"B185E16D-A3CE-4576-96FA-50CCAD5E5778@gmail.com",
        "PARENT_ID":40477.0,
        "SUBJECT":"Re: [E] Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Fengnan Li <loyallfn@gmail.com>",
        "TAGS":"property",
        "BODY":"thanks daryn initial config exert penalty heavy user code evaluated actually using feature blacklist feature also another thing direction meaning heavy user call located second queue two evaluating qtime since basically call queue size handler resource compared single simple queue understand qtime different heard lock time metric might one issue notice call taking long fengnan"
    },
    "3338":{
        "ID":40477,
        "MESSAGE_ID":"CAK85xrnFHHe23t=0k+U_zmxq6Gg=QSGXWUzdmvjkhAnwO7F=hQ@mail.gmail.com",
        "PARENT_ID":40475.0,
        "SUBJECT":"Re: [E] Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Daryn Sharp <daryn@verizonmedia.com.INVALID>",
        "TAGS":"existence, property",
        "BODY":"internally running patch submitted hdfs subsequently modified people community possible community flavor may behave differently vaguely remember rpcmetrics timeunit changed micros millis measuring millis meaningless precision weightedtimecostprovider enables feature blacklist different feature twiddling conf caused noticeably latency difference would suggest examining change think going see much benefit queue decay factor would suggest least queue decay user generating heavy load keep popping back priority quickly"
    },
    "3339":{
        "ID":40476,
        "MESSAGE_ID":"CACVBFfR9kC8GsXui_1hU6dKWQ-tXukcgBoq_BzNnOxFc_gP5Yg@mail.gmail.com",
        "PARENT_ID":40475.0,
        "SUBJECT":"Re: [E] Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Jim Brennan <james.brennan@verizonmedia.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"note jira right bug daryn found testing fcq internally sure relevant seeing url jim"
    },
    "3340":{
        "ID":40475,
        "MESSAGE_ID":"782D703D-D0F9-4E34-9B6F-742A3E411588@gmail.com",
        "PARENT_ID":40474.0,
        "SUBJECT":"Re: [E] Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Fengnan Li <loyallfn@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"thanks response daryn agree overall average qtime increase due penalty fcq brings heavy user however environment consideration intentionally turned call selection queue cost calculated usual user stayed first queue avoid overall impact configs red one added internal use turn feature making selected user actually added second queue cost reach threshold two patch cost based fcq url url version using right trying debug one one thanks fengnan ipc callqueue capacity weight ipc callqueue impl classpath ipc cost provider impl classpath ipc decay scheduler blacklisted user enabled true ipc decay scheduler decay factor ipc decay scheduler period ipc decay scheduler threshold ipc faircallqueue multiplexer weight ipc scheduler priority level"
    },
    "3341":{
        "ID":40474,
        "MESSAGE_ID":"CAK85xr=jMPiFvdYcdau+FnwJmG5LW0ss6eMofmKCPjz6+3qfjQ@mail.gmail.com",
        "PARENT_ID":40422.0,
        "SUBJECT":"Re: [E] Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Daryn Sharp <daryn@verizonmedia.com.INVALID>",
        "TAGS":"property",
        "BODY":"submitted original cost based fcq patch thanks community member porting branch running since early cluster multiple cluster run baseline ops sec bursting ops sec looking overall average qtime yes metric expected increase mean working designed de prioritizing write heavy user naturally result increased qtime call within bucket call qtime sum qtime processing prior call appear high congested low priority bucket receiving fraction service rate skew overall average"
    },
    "3342":{
        "ID":40473,
        "MESSAGE_ID":"77152D01-7E00-4D0E-9591-6908B5C14DA0@gmail.com",
        "PARENT_ID":40471.0,
        "SUBJECT":"Re: Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Fengnan Li <loyallfn@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"thanks replying chen lot context probably better set meeting time week interested know circumstance ran queue latency issue context side debugging figure double checked rpc processing time find obvious increase flamegraph profiling catch obvious jstack cost based related area replayed dynamometer able find clear increase environment thanks fengnan"
    },
    "3343":{
        "ID":40472,
        "MESSAGE_ID":"CABsaHTN_bD7yBRxD0NFeY0RNB_xbZ49KkFe4NTuWMY_MTQj4og@mail.gmail.com",
        "PARENT_ID":40417.0,
        "SUBJECT":"Re: Changes to JMX metric names in 4.0 beta",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"make sure good detail present news txt impact needed change someone anticipating metric present"
    },
    "3344":{
        "ID":40471,
        "MESSAGE_ID":"CAO46E6veDMtpjfJEtXumOQ1ZhdyQg7W9odSpoe0GicShhw7Ahw@mail.gmail.com",
        "PARENT_ID":40422.0,
        "SUBJECT":"Re: Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Chen Liang <vagarychen@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"hi fengnan testing cost based faire call queue internally also saw latency increase trying debug issue well current suspicion way metric generated might introducing much overhead process trying reproduce using dynamometer something would interested follow working together issue best chen fengnan li"
    },
    "3345":{
        "ID":40470,
        "MESSAGE_ID":"CACvH57Ky41XcgayT0aVnJrY+E=NKNRxSb-A93C-ao11CumnqvQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 4.0-beta3 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version beta apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3346":{
        "ID":40469,
        "MESSAGE_ID":"CACvH57LDVgBROk02BjCUKfta5j0bM+aoDDDi8Brt26OKjuF17g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.9 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3347":{
        "ID":40468,
        "MESSAGE_ID":"CACvH57L8b9LytGaNUE9NvvsBSA7wdrNX_BycCM5Ebbdd0wSb2w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.23 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3348":{
        "ID":40467,
        "MESSAGE_ID":"CACvH57KYkFM6QLXxDCpBEmRJby5Dz=k3bnu5kiFkTiqoqcTLXA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.19 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3356":{
        "ID":40459,
        "MESSAGE_ID":"CADiq6=y7FYLQJsTnQc9r35X5DM7QJpG5c+NvN9Vq9AqaE_3cAQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Fwd: Heads-up, Apache Yetus looking for feedback on RC with lots of changes",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"forwarding hadoop devs forwarded message sean busbey date tue nov subject head apache yetus looking feedback rc lot change dev hi folk fyi apache yetus rcs release got lot change summary release manager project launch documentation please plan drop replacement current rc going fail due issue came testing candidate dev yetus apache org subject vote apache yetus rc url yetus community looking feedback downstream user rely yetus asf build infrastructure think hbase one larger project using yetus asf would good could try thing see go thing get far additional release candidate cycle moment thought would send head wider audience game please give ping join yetus dev mailing list happy give pointer thing would need change folk already familiar community build infra"
    },
    "3393":{
        "ID":40422,
        "MESSAGE_ID":"33DEE45A-E732-4746-8AB8-8949B328EA26@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cost Based FairCallQueue latency issue",
        "SENT_FROM":"Fengnan Li <loyallfn@gmail.com>",
        "TAGS":"property",
        "BODY":"hi someone deployed cost based fair call queue production cluster ran rpc queue latency degradation rps tried debug find anything suspicious worth mentioning memory issue coming extra heap usage storing call cost thanks fengnan"
    },
    "3404":{
        "ID":40411,
        "MESSAGE_ID":"CAB=riaCpOdu4j29oTWKu4s7cRp5u03dhP1CQAfWd=XGcKLg+zQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Feedback on cql change to allow \"replace\" into table as we did in 2.1",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"existence",
        "BODY":"filed url wanted bring dev list first replace reserved word changed making replace reserved word break user upgrading line query longer parse filed patch trunk tested believe remove replace reserved word without issue given change wanted reach broadly see anyone issue thanks time"
    },
    "3418":{
        "ID":40397,
        "MESSAGE_ID":"CAHvM0ueW6cSBOCn94egL9o8-xVCtqMbmQKXCHoP2Ot6cfn27JA@mail.gmail.com",
        "PARENT_ID":40382.0,
        "SUBJECT":"Re: Minimal 4.0 COMPACT STORAGE backport",
        "SENT_FROM":"Caleb Rackliffe <calebrackliffe@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"immediate concern possibility patch working cassandra actually require information whether table created compact storage"
    },
    "3433":{
        "ID":40382,
        "MESSAGE_ID":"CAB=riaDuoD=R6OhgxOkn72OvcHfbuHtm4ucG=Y=CWtGoOMnuWQ@mail.gmail.com",
        "PARENT_ID":40380.0,
        "SUBJECT":"Re: Minimal 4.0 COMPACT STORAGE backport",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks reply talked alex slack impression deleted row handled differently read collect idea migration cutoff date final deprecation good bringing subset back ease upgrade"
    },
    "3439":{
        "ID":40376,
        "MESSAGE_ID":"CAGY8e-6uOFbDQA6a_3f5LY7vHkryGgvUnuF+dj48G3NuzzuuPQ@mail.gmail.com",
        "PARENT_ID":40337.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everyone reminder meeting top hour url patrick"
    },
    "3440":{
        "ID":40375,
        "MESSAGE_ID":"CAN+t3-gSOF4xA0F1xaVsaiXRtaDAhUuwwMRu-5U_BMzxPXeajA@mail.gmail.com",
        "PARENT_ID":40374.0,
        "SUBJECT":"Re: Minimal 4.0 COMPACT STORAGE backport",
        "SENT_FROM":"Ekaterina Dimitrova <e.dimitrova@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"definitely table also talked morning plan additional testing created part cassandra"
    },
    "3478":{
        "ID":40337,
        "MESSAGE_ID":"CAHyRp2Ry7N7i+CYNPyq_0XqTjSPY7cjpuwyvOA7aeiLboouZkw@mail.gmail.com",
        "PARENT_ID":40336.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"big fan github milestone exactly kind work much process strictly required logically group thing align scope nothing"
    },
    "3479":{
        "ID":40336,
        "MESSAGE_ID":"12185_1602854695_5F899F27_12185_40_1_2EFC3CAB-033F-42F8-AAF8-D87633B7132C@orange.com",
        "PARENT_ID":40260.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"franck.dehay@orange.com",
        "TAGS":"not-ak",
        "BODY":"hi sorry delay busy releasing casskop happened week url would like open discussion feature merging would like follow joshua proposition open issue ca operator said discus first find way forward open issue next week move forward discus next sig call thursday franck"
    },
    "3534":{
        "ID":40281,
        "MESSAGE_ID":"CAHyRp2T2yfiLRbb-r0apiV8eQGWHZRDCskfyiBnEr7CNfeHaqg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Supported upgrade path for 4.0",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"related jira ticket url description historically numerous bug concerning upgrading cluster one version let establish supported upgrade path ensure user safely perform upgrade production topic discussion supported upgrade path actually documented site documentation spent minute poking around find anything anyone opinion formal prior art build"
    },
    "3547":{
        "ID":40268,
        "MESSAGE_ID":"CA+8MUce=obEQ3_DefRO-qURR2se+BJtyf8_DGRExtf_26TKghw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Kubernetes Operator: Can We Preserve CassKop's Flexibility?",
        "SENT_FROM":"Tom Offermann <toffermann@newrelic.com.INVALID>",
        "TAGS":"technology",
        "BODY":"following discussion kubernetes operator great deal interest new relic move cassandra cluster bare metal host datacenters kubernetes cluster aws looking closely current operator goal write operator choose community standard possible possible choose operator active development usage community choose operator work existing way managing cluster significantly new relic use virtual node cassandra cluster instead continue assign initial token individual node certainly expect operator support use case default hope operator make possible run forked version operator ca operator casskop worked well really impressed heading evaluation expected choose datastax ca operator given datastax position cassandra community given wrote widely used cassandra client seemed like would best position provide community standard ended choosing casskop however want email viewed lobbying choosing one operator another excited possibility currently discussed merging development effort incorporating casskop feature ca operator want highlight advantage casskop currently offer use case hope preserve advantage going forward even improve casskop offer huge amount flexibility modifying cassandra configuration file needed swap bootstrap docker image manipulate cassandra configuration file oftentimes even need since casskop offer ability define pre run sh script run bootstrap container get pretty far scripting pre run sh per pod configuration assign initial token value see easy way perform per pod configuration ca operator equivalent pre run sh hook ca config builder init container ca operator comparable casskop bootstrap container casskop le opinionated cassandra version want run understanding ca config builder add layer abstraction produce configuration tailored certain version open source dse cassandra work great unless want run version cassandra supported surprised see ca operator work handful cassandra version seem easy way use ca operator earlier version cassandra officially supported casskop requires adoption fewer le complex component casskop bootstrap container easier wrap head around ca config builder addition using ca operator also required usage management api sidecar mean adoption new operator also required adoption new sidecar well perhaps overstated felt like choosing ca operator required embracing whole ecosystem rather simply operator management api sidecar widely used throughout community would feel reluctance use knowing going community standard moving forward would big help achieves role standard choosing ca operator mean choosing operator sidecar guarantee either become standard bigger commitment realize concern choosing operator may shared raise point hope keep mind possible build flexibility cassandra operator used way deviate default even used way original author anticipate want thank orange datastax work put operator well everyone discussing best way move forward super appreciative optimistic new relic position soon able contribute effort thanks tom url url url url url url tom offermann lead software engineer url"
    },
    "3555":{
        "ID":40260,
        "MESSAGE_ID":"CAA=6J0_ReQcfiwkYbi2rBodpW+q6V_2xk6KDGgZHEq9GOHiNrA@mail.gmail.com",
        "PARENT_ID":40254.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"thanks frank christopher sound like good path consolidate around"
    },
    "3561":{
        "ID":40254,
        "MESSAGE_ID":"CAHyRp2RG8OdMnfEgUrDTGpGGPnRuZBSMZLspoU0XV_y9ddcrdQ@mail.gmail.com",
        "PARENT_ID":40249.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"best merge casskop feature ca operator create issue gh repo url create milestone engineer rally get thing merged engineer focused ecosystem cassandra datastax side would happy collaborate folk get thing"
    },
    "3563":{
        "ID":40252,
        "MESSAGE_ID":"CADFQHFsgQ829+hT-aVXE0z=XdXyMouOnQtNc4iVeFbDsFVrKSQ@mail.gmail.com",
        "PARENT_ID":40249.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Christopher Bradford <bradfordcp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hello franck sound like great plan would love expand group contributor work towards getting combined effort pulled apache cassandra project proper list item listed win book even said much enjoyed casskop labelling interface cheer chris christopher bradford"
    },
    "3566":{
        "ID":40249,
        "MESSAGE_ID":"4920_1601652895_5F77489F_4920_165_1_8B8C7142-EBA7-4D1A-AFD8-EA024B6954F1@orange.com",
        "PARENT_ID":40247.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"franck.dehay@orange.com",
        "TAGS":"existence",
        "BODY":"update orange point view following recent email newly interested party running would use ca operator come datastax logic would community embrace thanks datastax offering orange side propose discus datastax best merge casskop feature ca operator feature node labelling map internal architecture including network specific label muti dc setup volume sidecar management possibly linked podtemplatespec backup restore ruled velero share went instaclustr medusa could work kubectl plugin integration quite useful ops side without admin ui multicasskop evolution drive multiple ca operator instead multiple casskops could remain orange internal specific could decide end discussion best way forward orange could make pr ca operator agree want functionality sort could end pretty neat operator share common architecture operator sdk start know meeting possible want would ok community datastax"
    },
    "3568":{
        "ID":40247,
        "MESSAGE_ID":"CAHyRp2Q=5UZOs1ykNmPuFGPYfFVv3j-8M3sW5o1CD+XRXvtwNA@mail.gmail.com",
        "PARENT_ID":40231.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"next step maybe collectively put table together operator list feature compare contrast enumerate framework dependency help form point view strength weakness option tue sep pm christopher bradford bradfordcp gmail com"
    },
    "3584":{
        "ID":40231,
        "MESSAGE_ID":"CADFQHFu5uTV8s-iYj+xY9LkCedb_a2+7aVBxEWuTRa0no_cNmQ@mail.gmail.com",
        "PARENT_ID":40205.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Christopher Bradford <bradfordcp@gmail.com>",
        "TAGS":"technology",
        "BODY":"hello dev list chris bradford product manager datastax working ca operator team background started path developing operator internally power aa platform astra care taken day keep anything specific product layer ca operator could solely focus task operating cassandra cluster said every single cluster astra provisioned operated ca operator value advanced operator cassandra user tremendous decided open source project associated component goal building community absolutely make sense offer project codebase donation standard baseline running kubernetes find collection ca operator feature differentiator roadmap inflight initiative table stake must functionality operator datacenter provisioning schedule pod bootstrap node appropriate order seed across rack etc uniform configuration scale add new node balanced manner across rack scale remove node one time across rack node recovery restart process reschedule instance ie replace node replace instance specific workflow seed node replacement multi dc multi rack multi region multi cluster note requires support networking layer pod pod ip connectivity may accomplished within cluster cnis like cilium externally via traditional networking tool differentiator os ecosystem component ca config builder os project extracted datastax opscenter life cycle manager provide automated configuration file rendering ca config definition definition file ca config builder defines configuration file parameter template management api apache cassandra maac metric collector apache cassandra mcac reference prometheus operator crds servicemonitor instance reference grafana operator crds instance dashboard datasource podtemplatespec customization existing pod including support adding container volume etc advanced networking node port host network simple security management api mtls support automated generation keystore truststore internode client node tl automated superuser account configuration default superuser cassandra cassandra disabled never available client cluster administration account may automatically provided value stored secret automatic application networktopologystrategy appropriate rf system keyspaces validating webhook invalid change rejected helpful message rolling cluster update change binary upgrade change configuration canary deployment single rack application change validation broader deployment rolling restart platform integration testing certification red hat openshift compatible certified secure universal base image ubi foundation image security scanning performed red hat ca operator ca config builder apache cassandra mcac maac integration red hat certification pipeline marketplace presence red hat operator hub built openshift interface vmware tanzu kubernetes grid integrated edition compatible certified security scanning image performed vmware amazon eks google gke azure ak documentation reference implementation cloud storage class ingres solution sample connection validation application reference implementation java driver client connection parameter cluster level stop resume stop running instance keeping persistent storage allows scaling compute zero bringing cluster back follows expected startup procedure road map inflight repair reaper integration backup velero integration medusa integration advanced networking via sidecar combination proxy sidecar la envoy allow persistent ip address despite kubernetes best effort shuffle single pod canary deployment platform certification vmware project pacific rancher kubernetes engine documentation multi region multi cloud additional ingres provider voyager haproxy gloo ambassdor envoy nginx ingres controller additional storage class reference openebs cassandra enhancement cassandra support networking via identity instead ip asf jira question project codebase architecture etc team would happy dive detail discus cheer chris christopher bradford"
    },
    "3610":{
        "ID":40205,
        "MESSAGE_ID":"CAGY8e-4vPS3aSaKKErjiXQ5AT4yuD+10Lv6YFazwqpLNDQBOtg@mail.gmail.com",
        "PARENT_ID":40190.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"agree ben franck good job outlining casskop somebody ca operator posting something similar keep mailing list patrick"
    },
    "3625":{
        "ID":40190,
        "MESSAGE_ID":"CAA=6J0-MbBwCM11=jnet+PqPMS=PXXU4nnSw=QnteSuLCy6HRA@mail.gmail.com",
        "PARENT_ID":40165.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"process",
        "BODY":"thanks frank stefan patrick great suggestion worthwhile getting everything table one minor change would advocate sig great iterate interact detail really think conversation given nature content need mailing list mailing list really system record accessible give folk time think digest asynchronous easily searchable let honest majority stakeholder based timing issue go away make easier people participate feel like made lot progress simply discussion instead presentation maybe email ml addressing heading patrick identified"
    },
    "3650":{
        "ID":40165,
        "MESSAGE_ID":"CAPw+qV56MYODNqjpL4xrYX=Csktu+sm10_f0jhTreQQTfk6AyA@mail.gmail.com",
        "PARENT_ID":40161.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"process",
        "BODY":"hi patrick suggestion seems good go specific need genuinely prepare quite hard dig deep solution others bring constructive criticism take lot time study everybody behind summarize goal concern much kubernetes operator idiomatic possible industry standard custom brain child group think cool know better say like right want ruthless much possible come functionality done like awesome already something latest thanks john adheres latest release personally hard time keep release finished something aligned week two already another one thing different fast moving space hope time develop something obsolete may easier said done guaranteed people get emotional precious etc please let go good intention trying push one solution would like see equally hard time comply point plan explain wrong solution made mistake done differently late etc quite hard describe work effort light without telling wrong decide good imho put something together fast enough call release always iterate eternity foundation need want say especially like john looked spec obvious written care attention looked solid sure hard put thing top truly think would reinvent wheel want proceed imagine would retrofit casskop top john spec like putting round peg square hole maybe chunk would reused easily otherwise worry square one one specific feeling read even create fourth operator respective party able drop repository whole point behind effort solid community driven stable modern feature complete operator people truly using see real really sunset operator redirecting people new operator main readme doc etc truly mean sure somebody come bug fix needed fix whole point stop using currently time otherwise splitting space even casskop sure use know operator enough wrong exaggerate fine deleting whole repository using cassandra one going make otherwise see point work"
    },
    "3654":{
        "ID":40161,
        "MESSAGE_ID":"CAHyRp2QwzOD8azYBs+EGpj9tRNNdY5k-rnVMBSLWuVt9nWTTdw@mail.gmail.com",
        "PARENT_ID":40151.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"choose ca operator offer right let see talk lot mistake take blame intention long offer ca operator donation slipped crack email yesterday made double take since resolved misalignment datastax would happy donate ca operator asf project agree best serf collective cassandra user also cognizant immense amount effort gone casskop seem something embarrassment rich given understand dug personally two operator express pretty different opinion come framework design supported version etc think discrete enumeration feature set identity could really help navigate conversation going forward also thanks context franck always helpful know people coming working together towards common goal"
    },
    "3657":{
        "ID":40158,
        "MESSAGE_ID":"CAGY8e-7=S6qAtNhgT2T7cEth6pysbydX-gMF2fgyv4k3R68Dzw@mail.gmail.com",
        "PARENT_ID":40151.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"problem franck postpone week meeting next week continue discussion ml patrick"
    },
    "3664":{
        "ID":40151,
        "MESSAGE_ID":"5029_1600964603_5F6CC7FB_5029_139_6_3D33D97F-991A-4D2C-8433-6E3C7123C593@orange.com",
        "PARENT_ID":40126.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"franck.dehay@orange.com",
        "TAGS":"technology",
        "BODY":"share orange view situation sorry long story started casskop end betting simple far concerned lack support local storage ip change time different network plugins try implement non standard way node see different dc hesitated mesos could already tracting much could choose anyway looked around see anyone requirement said try github may give back community used quite year great success production massive load perfect availability love orange thanks started writing support mono dc cluster casskop added multi dc support multicasskop another operator included casskop repo detail tried document design much possible url middle last year talk datastax working together around new management sidecar position open source clear time said please come back decided go open source beginning year time guess work started ca operator kept separate way since beginning year working ops team production simple team learn trust newborn operator take time especially internal cluster tweaked multi tenancy obscure option set team also developed instaclustr backup restore functionnality new crds custom resource definition backup restore reconcile loop call instaclustr sidecar operation support multiple backup parallel write google azur stefan could give detail needed sig call mentioned desire donate casskop satisfies basic requirement coming said many time already actually sure datastax mentioned desire donate ca operator decided compare design functionality based respective crds crd interface user describe cluster want talk interesting found casskop team made good choice time may open indeed intention give possibility ops team work includes open topology definition using configuration label map dc rack node label cluster label dc room row server rack map rack storage network array internaly possibility multiple node single host internal cloud really cloud limited resource custom image selection custom bootstrap script let configure want using configmaps ability mount different volume wherever wanted possibility run number sidecar alongside custom probe case make casskop quite powerful flexible made sure option enabled default one pop simple node cluster quickly"
    },
    "3666":{
        "ID":40149,
        "MESSAGE_ID":"CAGY8e-7th=h1nBxmrUGqhX76D1skH=D+DwU58K28TxtpVaEiAQ@mail.gmail.com",
        "PARENT_ID":40108.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"process",
        "BODY":"would like propose hybrid hybrid benedict mentioned let postpone today sept sig next week oct time keep zoom modification group casskop ca operator time present following state view situation would would support given approach operator technically specific technical circumstance might lead change mind view path forward group get minute minute moderate meeting post video well full transcript thank otter ai presentation deck post pdf kick discussion dev ml debate proposal moving thing forward possible debating patrick"
    },
    "3690":{
        "ID":40125,
        "MESSAGE_ID":"CAE1LR78o0x7Ucesz8Ruj7S0+jTT0HYq4mJpJQJJwamc6jtsN8g@mail.gmail.com",
        "PARENT_ID":40124.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"goal support row level index merging sai update cep share detail optimization"
    },
    "3691":{
        "ID":40124,
        "MESSAGE_ID":"CAA1qPbbiBekFcByB8SPG73G8cqUMA+ExVxAPMs6jfQiMALuJEA@mail.gmail.com",
        "PARENT_ID":40118.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"table read perf sai sasi executes lot singlepartitionreadcommand searching disk index effective switching trie prefix btree suggested switching prefix tree structure question rationale motivation picking one curious personal reason interest lie outside cassandra listed cep could helpful future guidance ok question outside cep scope also agree many area require improvement around read write path many even outside base table format read perf yield positive performance result time right excited contribution look like solid work one question upon resolving partition key row loaded using cassandra internal partition read command across sstables post filtered one criticism sasi reason marking experimental cassandra think switching row offset also huge impact interaction sprc potential optimisation question planned next step yes going mark sai experimental get row offset also likely index format going change row offset added concern may support two version format smooth migration"
    },
    "3697":{
        "ID":40118,
        "MESSAGE_ID":"CAE1LR7_mjm7bAkMizyT=G=x1arS7zBz0U=R8ExaPut1NUaAgrQ@mail.gmail.com",
        "PARENT_ID":40110.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"technology",
        "BODY":"using update cep emphasize sai replace index construction long prefix btree support range prefix aggregation used speed range prefix query matching entire subtree plug compare affect cep design focus sharing data across index posting aggregation improving overall index read performance think improving base table read perf sai sasi executes lot singlepartitionreadcommand searching disk index effective switching trie prefix btree"
    },
    "3705":{
        "ID":40110,
        "MESSAGE_ID":"DBD274A3-CCC0-4511-A149-9AA905786B5A@apache.org",
        "PARENT_ID":40101.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"fwiw personally look forward receiving contribution time right"
    },
    "3706":{
        "ID":40109,
        "MESSAGE_ID":"CAMM7TBxpGPU9fNyFVf2MvkC+m6c83Oww8_OyXvTZvP8mo+-yTg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"TLS protocol configuration for secure internode messaging needs improvement before the final 4.0 release.",
        "SENT_FROM":"Jon Meredith <jmeredithco@gmail.com>",
        "TAGS":"existence, technology",
        "BODY":"tl dr setting encryption option protocol control tl protocol accepted restricting cipher suite protocol think fix encryption option protocol actually restrict proposal end email investigating restricting tl protocol prevent use tlsv tlsv secure internode messaging streaming connection think current implementation need improvement final release apache cassandra documentation page security url mention jvm default supported protocol cipher suite used encryption enabled overidden using setting cassandra yaml recommended unless policy place dictate certain setting need disable vulnerable cipher protocol case jvm updated implication preferred mechanism configure jsse subsystem trawling documentation operator disable older tl protocol jvm level creating new security property file cat conf cassandra security property jdk tl disabledalgorithms sslv rc de mdwithrsa dh keysize ec keysize de ede cbc anon null tlsv tlsv appending current security property using djava security property conf cassandra security property work fine pre however introduction netty tcnative us openssl hood use java security property restrict anything neither implement call supporting openssl configuration file seems possible restrict protocol cipher netty sslcontext api possible disable openssl setting java system property cassandra disable tcactive openssl true seems undesirable lose performance benefit looking cassandra yaml advanced default protocol setting operator might expect restricts tl protocol accepted advanced default protocol tl however setting tlsv effect protocol server accepted running openssl client tlsv connect connect without issue negotiate tlsv session found two previous ticket addressed tl protocol first explicitly hard coding accepted tl protocol disable sslv due poodle cassandra bfadbbfcfbaedabdfb rely back java default cassandra eaabfacaabaeeecced fixed cassandra mention protocol field mechanism specifying protocol however according java doc verifies protocol ssl engine supported restrict negotiation using openssl client test demonstrates setting cipher suite tlsv valid cipher confirm work leading logged error error messaging eventloop failed properly handshake peer closing channel io netty handler codec decoderexception javax net ssl sslhandshakeexception client requested protocol tlsv enabled supported server context caused javax net ssl sslhandshakeexception client requested protocol tlsv enabled supported server context work restrict protocol start logging accepted protocol log show server negotiate tl tl may get flagged anybody validating operator secure connection configuration also discovered ssl misconfigured cipher keystone truststore etc node start happily unable accept make secure internode connection current state code documentation unsatisfactory least improve documentation give clear guidance operator secure system tcnative however think go make encryption option protocol field behave intended proposal interpret current protocol string comma separated list protocol accepted replace default encryptionoptions protocol tl null protocol non null call sslcontextbuilder protocol configured protocol classpath createnettysslcontext special case protocol configuration tl mean tlsv tlsv tlsv user uncommented default value passing tl invalid protocol call hard code classpath createsslcontext pas tl restrict protocol specified non null still look used javadriverclient bulkloader add function classpath applyall verify possible create regular netty ssl context log accepted protocol cipher configuration log negotiated protocol cipher ssl handshake completes make sure propagated client table change operator able restrict protocol cipher well audit configuration past behavior system bringing mailing list operational experience using secure internode messaging streaming raise issue missed clear change behavior setting encryption option protocol actually restricting protocol beta technically user visible change open jira next day incorporating feedback jon researching think read may also issue configuring ssl differing supported cipher cipher name jsse tcnative cipher suite however configuration information passed implementation investigated problem mean need keep separate tool configuration would need add kind filtering prefix jsse openssl cipher unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "3707":{
        "ID":40108,
        "MESSAGE_ID":"109C0DC1-433C-4AE5-9EC8-4D8E099BAF27@apache.org",
        "PARENT_ID":40097.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"perhaps help widen field discussion dev list might help stakeholder organisation state view situation including would would support given approach operator preferably specific circumstance might lead change mind realise meeting log getting wider discourse non stakeholder input might help build community consensus seem like hurt point anyway"
    },
    "3714":{
        "ID":40101,
        "MESSAGE_ID":"CAPH+nLNOvREW7QrL9Km80ANf-dHf7rs90hYBQa6rsx0GNuFTVw@mail.gmail.com",
        "PARENT_ID":40099.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"talking would involve bit information datastax might ready share risk derailing poking prodding week contributor getting act together draft cep donating trie based index asf project come intention certainly contribute code lack destination merge dev branch removing significant urgency process well open rd pandora box certainly interrelatedness conversation going josh mckenzie sent via superhuman"
    },
    "3716":{
        "ID":40099,
        "MESSAGE_ID":"CAHvM0ufXSaTkZ-goCghDEHaN1HWGqVqE9H28g8JOFwCkSfuBzg@mail.gmail.com",
        "PARENT_ID":40094.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Caleb Rackliffe <calebrackliffe@gmail.com>",
        "TAGS":"existence",
        "BODY":"long construct disk index efficiently directly memtable attached index flush room try data structure innovation sai around layout posting something expand people interested natively row oriented design scale multiple indexed column single sstables broader implication using trie reach outside sai talking would involve bit information datastax might ready share"
    },
    "3717":{
        "ID":40098,
        "MESSAGE_ID":"CAA1qPba5GtuQrCh=zsrbR+46KZA78RVi28V_pVj-FjpL7W3fZQ@mail.gmail.com",
        "PARENT_ID":40094.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"see bit future parity beyond le obvious goal think cep upfront eventually replace bit since raise question people using index implementation expect"
    },
    "3718":{
        "ID":40097,
        "MESSAGE_ID":"CA+BDQ7wBNVxvt3Cd9EJTwgkXUpYyomxsQBDu7eBit2G0-OuQzQ@mail.gmail.com",
        "PARENT_ID":40095.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"John Sanda <john.sanda@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"want point pretty much everything discussed thread discussed length sig meeting think worth noting pretty much still conversation"
    },
    "3720":{
        "ID":40095,
        "MESSAGE_ID":"80B64032-66F3-44A4-8EFA-18B4DE39E70D@apache.org",
        "PARENT_ID":40092.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think anything code drop apache way consensus even strong majority amongst invested party see could adopt operator directly project possible green field approach might lead fewer hard feeling everyone boat perhaps operator also suboptimal could improved rewrite think coordinating lot different entity around empty codebase particularly challenging actually think could better cohesion collaboration suboptimal substantive starting point"
    },
    "3721":{
        "ID":40094,
        "MESSAGE_ID":"36EB272D-F3E5-4656-B77D-CD31209A0ACF@gmail.com",
        "PARENT_ID":40093.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think one goal stated cep sai parity could eventually replace unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "3722":{
        "ID":40093,
        "MESSAGE_ID":"CAA1qPbaiDAor1RaEM3sScsPXdJUoXk=BMgXS+oThF84AkZSA=g@mail.gmail.com",
        "PARENT_ID":39993.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"technology",
        "BODY":"short question looking forward going maintain three implementation sasi sai another thing think cep missing rationale motivation trie based index chosen say tree short discussion slack argument heard space saving keeping small subset node memory work primitive implementation tree fully occupied prefix tree similar property lot research tree optimisation unfortunately implementation sitting around direct comparison imagine situation tree may perform better simpler construction maybe even consider prototyping prefix tree fair comparison thank alex"
    },
    "3723":{
        "ID":40092,
        "MESSAGE_ID":"CAPw+qV5tPJzSf+w-UBfPa8zjxiwa_3oxJyKrcnL=FBP=euFuBQ@mail.gmail.com",
        "PARENT_ID":40090.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"think instaclustr stated quite clearly multiple time fine throw away something better wide spread indeed invested lot time operator useless gained lot quite unique knowledge put piece together however think space going quite fragmented balkanized always bad thing quite narrow area kubernetes operator see operator going beneficial ordinary people official community datastax one casskop without significant order sure innovation healthy competition important extent one start cassandra cluster kubernetes many time differently nobody really like vendor lock people wanting run cluster realise three operator backed private business entity community operator huh interesting one may even start question wrong folk take three company build solution said perception cassandra community enough engineer contributor keep operator alive time wish wrong idea selecting best one merge obvious thing approach together understandable even meant eventually sunset addition nobody big player going contribute code base one obvious reason channeling directing effort something common community seems reasonable way cooperation quite hard bootstrap donation code big chunk whole repo question apache way thread running depth ago basically need start scratch quite demotivating inventing wheel nobody like people waiting happen jump thing never materialise least hurdle kick unnecessarily high nobody going invest heavily already working operator company mentioned understood one reason choosing way donating learning community building happen organic manner accept donation true easier build community around something already rather trying build around idea quite hard dedicate"
    },
    "3724":{
        "ID":40091,
        "MESSAGE_ID":"7174_1600871491_5F6B5C43_7174_27_1_5B34348C-F418-4D8C-BB40-C34DDC8BBE73@orange.com",
        "PARENT_ID":40090.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"franck.dehay@orange.com",
        "TAGS":"not-ak",
        "BODY":"explain quite bit history situation today want important question willing donate operator control future community orange casskop soon release quite soon else compare feature ce message et piece jointes peuvent contenir de information confidentielles ou privilegiees et ne doivent donc pa etre diffuses exploites ou copy sans autorisation si vous avez recu ce message par erreur veuillez le signaler expediteur et le detruire ainsi que le piece jointes le message electroniques etant susceptibles alteration orange decline toute responsabilite si ce message ete altere deforme ou falsifie merci message attachment may contain confidential privileged information may protected law distributed used copied without authorisation received email error please notify sender delete message attachment email may altered orange liable message modified changed falsified thank unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "3725":{
        "ID":40090,
        "MESSAGE_ID":"CAHyRp2S4nf30adfoCz_5H3q02f8mPCNo4kFPbg_BDtiLJA9USA@mail.gmail.com",
        "PARENT_ID":40089.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"single approach agree unfortunately case party vested interest written operator came table could agree coalesce single approach john sanda attempted start initiative write best breed combining choice part operator effort gain traction hypothesis come clear better fit operator start would deadlock correct choice would obvious reasonably every engineer written something going want something used thrown away favor another something without strong evidence better choice far know nobody made clear case compelling place start term operator donation project collaborates mass adoption evidence feature enumeration know approach anyone taken discussion remain stalled wed sep benedict elliott smith benedict apache org"
    },
    "3726":{
        "ID":40089,
        "MESSAGE_ID":"1FBA8892-E6EE-4CE4-AB2B-2825F2903807@apache.org",
        "PARENT_ID":40087.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think significant value community trying coalesce single approach earlier later opportunity expand number active organisation involved directly apache cassandra project well quickly expand project functionality area consider urgent important think would real shame waste opportunity doubt hard organisation certain built investment approach participated call consider relevant experience expertise focus project wanted voice vote favour trying bring different organisation together single approach possible anything project help happen"
    },
    "3728":{
        "ID":40087,
        "MESSAGE_ID":"CAA=6J09YRBOETUrmUmofodMFunLCDFq9y5AQiGNv0CcL=VSYHw@mail.gmail.com",
        "PARENT_ID":40085.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"think certainly appetite donate standardise given operator mentioned thread personally found sig hard participate due time zone synchronous nature great forum dive certain detail subset participant worthwhile endeavour would paint accurate reflection community intent think participant want continue path let thousand flower bloom looking towards caskop well number technical reason recorded meeting output also found interested primary source url ben bromhead instaclustr www instaclustr com instaclustr"
    },
    "3730":{
        "ID":40085,
        "MESSAGE_ID":"CAHyRp2Tfd1v4ecSJuxoCdx486aE1N9Kg39iu34CjGHev_JLNDw@mail.gmail.com",
        "PARENT_ID":40084.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"would love see community adopt starting point working towards whatever level functionality desired general inability agree existing operator starting point much engagement taking best breed various combine seems leave let thousand flower bloom stage letting operator grow ecosystem seeing one meet need end user talking adopting one foundation great hear folk joining force though bodes well user wanting run thing"
    },
    "3731":{
        "ID":40084,
        "MESSAGE_ID":"CAA=6J088PTnEuWDFQ0yPDDjhDzRV15u1fz_v1hgNx9xO3BaARg@mail.gmail.com",
        "PARENT_ID":40008.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"worth quick update casskop least two organisation working substantially orange instaclustr well numerous contributor internally also start pointing others towards caskop thing get merged yet sunsetting operator yet certainly looking way would love see community adopt starting point working towards whatever level functionality desired cheer ben"
    },
    "3780":{
        "ID":40035,
        "MESSAGE_ID":"CACvH57L99qRQ-8m+d5pPxexTBhWBOZdv1Fut0Wc+zo86HxRwEQ@mail.gmail.com",
        "PARENT_ID":40034.0,
        "SUBJECT":"Re: Creating a branch for 5.0 \u2026?",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"tangent really appreciate work done post mortem analysis storage rewrite long took find fix bug caused better qa process become feel justified safe raising concern large patch coming wrong time place know recognise frustrating aspect discussion something hard move yes keep bringing back context exception would making specific new contributor recognise would otherwise lose analogy see open source work done open sometimes new contributor may make exception mentor patch two private give safe space build confidence meeting community rule precedence hoping community transcends qa new feature dichotomy good ci cd think project biggest potential pmc spread said afaik still waiting testing qa requirement clarification rc best opportunity qa ci improvement foundational post"
    },
    "3781":{
        "ID":40034,
        "MESSAGE_ID":"B3DC21C3-34F7-4B94-B9C0-580CE4D2D6C2@apache.org",
        "PARENT_ID":40032.0,
        "SUBJECT":"Re: Creating a branch for 5.0 \u2026?",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"make good point provide concrete example ironically entire proposal far rest hypothetical lost contribution hypothetical company individual would also like take issue talking point running much discussion focused quality assurance different priority want ship feature also want ship feature work project agreed upon prerequisite"
    },
    "3783":{
        "ID":40032,
        "MESSAGE_ID":"CACvH57KSTDiSJMWu9PVG1TKn65gAFrAPvyTYSci0ypzqK12Prw@mail.gmail.com",
        "PARENT_ID":39999.0,
        "SUBJECT":"Re: Creating a branch for 5.0 \u2026?",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"know turning away contribution new potential going take stab closing loop thread far one indicated desire maintain cassandra branch people expressed concern would mean release date quality rc community answer concern would suggest productive raising discussing concrete example specific patch ever see potential impact like done messaging system rewrite bug slipped alpha byte array backed cell rewrite since number people asked list detail clarification cassandra branch would work way require community voting approval incase anyone step take following detailed writeup workflow thinking patch reviewed two committers ticket marked patch relevant current version patch require cep must first passed cep patch new contributor would otherwise lose reviewer retreating rc effort successfully reviewed single commit make patch committed cassandra branch ticket transitioned ready commit comment added patch resides cassandra branch regular interval cassandra maintainer rebase rerere branch trunk ci cassandra run ci cassandra branched feature freeze announced email dev ml sent patch parked cassandra soon committed need balance appreciating late reviewer busy right thing given chance provide feedback two trusted committers already signed patch cassandra branch fast forward merged trunk minus commits review opened"
    },
    "3812":{
        "ID":40003,
        "MESSAGE_ID":"CAPH+nLOaO0t+PGB=3ihxgC+kMogKDys6b7FTO0=pkgOyMkmn+w@mail.gmail.com",
        "PARENT_ID":39995.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"basically java driver ecosystem operator ecosystem one hit clear supermajority adoption make de facto default make sense pull project project community pretty slow move building pov around kubernetes find situation bunch contender inclusion project clear heuristic would use gauge one would best fit inclusion outside letting community adoption speak josh mckenzie sent via superhuman"
    },
    "3814":{
        "ID":40001,
        "MESSAGE_ID":"4E7E30C8-6981-4C36-928E-F743FD5CD161@apache.org",
        "PARENT_ID":39999.0,
        "SUBJECT":"Re: Creating a branch for 5.0 \u2026?",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"aware much occurring"
    },
    "3815":{
        "ID":40000,
        "MESSAGE_ID":"CAB=riaC-aoN=wjJkt_RmZ8ttSPRbanWRLGdnaD-797k-VaV=NA@mail.gmail.com",
        "PARENT_ID":39999.0,
        "SUBJECT":"Re: Creating a branch for 5.0 \u2026?",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"follow bug fix go need sync would th branch keep sync feature freeze lifted branch may diverge making harder apply patch ticket reviewed aside feature freeze backlog ticket reviewed going see idea thing punted review would good see backlog large main fear review new ticket complaint heard multiple time several people enough people reviewing review take long time number reviewer small backlog keep growing open review non work fear even le review time allocated work would willing help maintain cassandra branch time able help work kept external gh fork would rather gh fork committed reviewed fork would help community ok see ready commit"
    },
    "3816":{
        "ID":39999,
        "MESSAGE_ID":"CACvH57JQ7g0an3E_XLWm09UfjEqO7R6PK95cTPwQrTOr7P+Ayg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Creating a branch for 5.0 \u2026?",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"know turning away contribution new potential dev community feature freeze going would like suggest create cassandra branch start queue reviewed ready go post commits distract getting primary focus stop gap losing contribution effort cassandra branch maintenance rebasing git rerere upon wish take branch located whatever gh fork individual wish keep ticket reviewed aside feature freeze ready committed committed cassandra branch ticket remain ready commit status goal effort would giving signal contributor get involved even primary focus stabilisation testing effort maintaining ci status sequence commits ready go trunk post rc question would willing help maintain cassandra branch kept external gh fork would rather branch main git repository regard mick"
    },
    "3820":{
        "ID":39995,
        "MESSAGE_ID":"6045_1599749888_5F5A3F00_6045_471_2_83DEA519-8F0D-4492-AB74-FEDC498CA5FF@orange.com",
        "PARENT_ID":39991.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"franck.dehay@orange.com",
        "TAGS":"not-ak",
        "BODY":"hi thanks john effort setting repo sig meeting general team already charge caskop participate code repo different reason never said would discussed crd sig meeting objective check whether casskops choice good good time finishing casskop backup restore functionality almost done merging writing want offer casskop community released working code want mentioned time video news operator big work underestimate believe starting scratch better opinion go formal offer dedicated thread done driver sincerely hope help franck product owner casskop orange url yes well fix vulnerability big merge done ce message et piece jointes peuvent contenir de information confidentielles ou privilegiees et ne doivent donc pa etre diffuses exploites ou copy sans autorisation si vous avez recu ce message par erreur veuillez le signaler expediteur et le detruire ainsi que le piece jointes le message electroniques etant susceptibles alteration orange decline toute responsabilite si ce message ete altere deforme ou falsifie merci message attachment may contain confidential privileged information may protected law distributed used copied without authorisation received email error please notify sender delete message attachment email may altered orange liable message modified changed falsified thank unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "3821":{
        "ID":39994,
        "MESSAGE_ID":"CACfgCKNDBNqtiUDzc5A0o2hosqLRYz-f59+8D7v+bQd81Z_n5g@mail.gmail.com",
        "PARENT_ID":39991.0,
        "SUBJECT":"Re: [DISCUSS] Next steps for Kubernetes operator SIG",
        "SENT_FROM":"\"Tolbert, Andy\" <x@andrewtolbert.com>",
        "TAGS":"not-ak",
        "BODY":"hi john thank effort getting bootstrapped meaning try getting involved month appreciate sig recording session taking note definitely think lot value common operator project path contributing operator much clearer apache project see email back aug mentioned goal need much code established get fully proposed subproject brought apache organization project lot code written looking provide feedback repository set soon hope contribute getting accepted subproject way everyone running cassandra using operator could good idea curious would increase participation seem like large enough classification issue improvement specific running cassandra kubernetes would worth discussing sig url thanks andy unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "3822":{
        "ID":39993,
        "MESSAGE_ID":"CAE1LR7_9JDEGr9xGoL84FVbkBFAYUvr8+nKk54Wp5705ogZXJg@mail.gmail.com",
        "PARENT_ID":39930.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank patrick hosting cassandra contributor meeting cep sai recorded video available url"
    },
    "3870":{
        "ID":39945,
        "MESSAGE_ID":"CAAaVJWW0xNbfgsbPNSyWNby60uNRWGS=s8upN1fKZx--8sfXRg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Unstable Unit Tests in Trunk",
        "SENT_FROM":"Eric Badger <ebadger@verizonmedia.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"putting patch hadoop noticed unit test trunk specifically hdfs incredibly unstable every time put new patch unit test failed failure completely unrelated patch pretty confident since patch simply changing variable name also ran unit test locally would pas fail intermittently effort stabilize unit test know bug bad test either case bad stability project eric"
    },
    "3885":{
        "ID":39930,
        "MESSAGE_ID":"CAE1LR7-2rTW+_KP4k7Si4HzFCcW_xT8zZBR775vxi4ky=+keSQ@mail.gmail.com",
        "PARENT_ID":39911.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank charles patrick"
    },
    "3891":{
        "ID":39924,
        "MESSAGE_ID":"tencent_4A75A7050088A2D477573DE8@qq.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [VOTE] End of Life Hadoop 2.9(Internet mail)",
        "SENT_FROM":"baoloongmao(\u6bdb\u5b9d\u9f99) <baoloongmao@tencent.com>",
        "TAGS":"process",
        "BODY":"none binding thanks baoloong iphone original"
    },
    "3904":{
        "ID":39911,
        "MESSAGE_ID":"CADMskBhMW0-J73S0vN9fR2ip6s+4o6xJn7SNpu7H7zHKxm_EDw@mail.gmail.com",
        "PARENT_ID":39910.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Charles Cao <caohairong@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank patrick"
    },
    "3905":{
        "ID":39910,
        "MESSAGE_ID":"CAGY8e-4+7XXnzz59enRy+T3-BotChNEChK+40jMwTv1CbADDDQ@mail.gmail.com",
        "PARENT_ID":39894.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"moved meeting better accommodate apac please see update url patrick"
    },
    "3906":{
        "ID":39908,
        "MESSAGE_ID":"CACvH57KMiGYtoJKLLD2rw==Es-3JxswNr-iG=xAG7bPEtYU+gQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 4.0-beta2 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version beta apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3908":{
        "ID":39907,
        "MESSAGE_ID":"CACvH57JgEFD1nJc9bHZX=Cz42LWOFAFR5pvHOC0_BykfhSqMcA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.8 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3909":{
        "ID":39906,
        "MESSAGE_ID":"CACvH57L-D3Ju9WTYCAWsR42M4SfJ8KtrCGOONbimCUneRxYX9A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.22 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3910":{
        "ID":39905,
        "MESSAGE_ID":"CACvH57KD6mCSiu8FQURWQkDNFJMDqzPAFhcf444aREx2bujGcg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.18 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3911":{
        "ID":39904,
        "MESSAGE_ID":"CACvH57J6jZ_fG0w4dAR0b0XhhkudVs34Q_TnZeoPVSLbuUFnOQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.22 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "3921":{
        "ID":39894,
        "MESSAGE_ID":"CADMskBgEY32BW_NdRdBmS54pDJUWpon6e32rb7oSOchyxVw9rw@mail.gmail.com",
        "PARENT_ID":39866.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Charles Cao <caohairong@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"patrick pst bad time people apac timezone move pst morning accommodate need charles"
    },
    "3949":{
        "ID":39866,
        "MESSAGE_ID":"CAGY8e-7hAH1gwCY9Sm96wqS_OJW+tWp7EcMm-U38Y6iWo7-_vQ@mail.gmail.com",
        "PARENT_ID":39818.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"meeting scheduled url tuesday september st pst added basic bullet agenda edit away patrick"
    },
    "3991":{
        "ID":39824,
        "MESSAGE_ID":"F3300E3A-7C7F-4A9A-A290-5517EE92D999@apple.com",
        "PARENT_ID":39823.0,
        "SUBJECT":"Re: Check in on CASSANDRA-15393",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"caleb currently working second round review marcus said halfway review morning would expect committed within week unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "3992":{
        "ID":39823,
        "MESSAGE_ID":"CAHyRp2Qjds7wvigwAX_UEu=VXm2szd8U3NiF4g98YtVM9oTdsQ@mail.gmail.com",
        "PARENT_ID":39820.0,
        "SUBJECT":"Re: Check in on CASSANDRA-15393",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"eta landing later risk stability ga due lack time soaking"
    },
    "3995":{
        "ID":39820,
        "MESSAGE_ID":"7AF37DA5-4878-458B-8877-DCDCC194C930@apple.com",
        "PARENT_ID":null,
        "SUBJECT":"Check in on CASSANDRA-15393",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com.INVALID>",
        "TAGS":"property",
        "BODY":"hi dev mick asked check dev list cassandra concern regarding patch suitability inclusion beta cassandra reduces garbage created compaction read path part cassandra including patch reduces garbage read compaction path cassandra supporting byte array backed cell clustering type acheived abstracting backing type bytebuffer byte serialization logic avoid paying allocation cost adding container object singleton accessor object used operate actual data see example url mick robert stupp raised concern summarized patch large file loc concern impact stability parameterizing cell clustering value type way make classcastexceptions possible implication feature freeze patch large vast majority adding type parameter thing change wide deep complex part collection serializers place offset bookkeeping carefully reviewed difficult verify added randomized test check wide range schema also run different test cluster internally parameterizing cell clustering value make classcastexceptions possible java type system guard part regarding feature freeze think applies performance improvement back point stability though pracice compaction gc major contributor cluster instability experience availability issue gc related also compaction gc tends limiting factor repair host replacement topology change limit quickly recover issue patch add risk think net win stability thought unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4019":{
        "ID":39796,
        "MESSAGE_ID":"CAGY8e-7q1bos6cpMk-qBkrqXfdbw0n2E=K7bsryEwQfDWXdBmA@mail.gmail.com",
        "PARENT_ID":39784.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"related discussion jordan contributor zoom call instead open mic issue call based discussion thread thread higher bandwidth discussion would happy schedule next week specifically discus cep attach recorded call cep patrick"
    },
    "4031":{
        "ID":39784,
        "MESSAGE_ID":"CAHyRp2QoD+goYeTP5Ca08JRjsJm7-P_zQNzEkzB=iQ=20BrAHA@mail.gmail.com",
        "PARENT_ID":39780.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"probably discussion ml monthly contrib call first see aligned interested contributor could cep well cep least thus far sans operator tend start strong deeply thought point view expressed"
    },
    "4035":{
        "ID":39780,
        "MESSAGE_ID":"CAE1LR78HtqKWKS=H5wu+A6O962vTz+9UU-5-9naru3F48JQcVg@mail.gmail.com",
        "PARENT_ID":39760.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"technology",
        "BODY":"bound sai also benefit larger memory sai put block info heap searching disk component cross index file page cache improves read performance different index table sai crash node compaction requires le cpu io sai defines global memory limit compaction instead per index memory limit used sasi example compaction running table index sai cap memory usage global limit sasi may use per index limit flushing memory segment disk sai merge disk segment sasi attempt merge end pro con merging segment pro compaction run faster requires fewer resource con small segment reduce compression ratio sai disk format row id compress better deprecation agreed reduce maintenance area possible limited code base eg rangeiterator queryplan shared rest code base quite different disk format cross index file goal cep get community buy sai design tokenization delimiteranalyzer straightforward implement top sai except like tokenisation delimiteranalyzer rest sasi replaced sai away believe known bug sasi either addressed sai apply sai loaded agreed modularization way go speed module development speed community plan open another discussion cep modularization"
    },
    "4055":{
        "ID":39760,
        "MESSAGE_ID":"CACvH57+=bxOmKUzbCe1K1ap4J2X9vY3KYPumYccnnAy90iQcDA@mail.gmail.com",
        "PARENT_ID":39722.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"technology",
        "BODY":"adding duy question hardware spec sasi performance specifically search tree component depends lot component file header available pagecache sasi benefit need node lot ram sai bound similar limitation flushing sasi cpu io intensive point saturation pause crash node ssds must along bit tuning avoid bringing cluster beyond reducing space requirement sai improve thing like sasi sai way change narrow recommendation node hardware spec code maintenance understand desire keeping scope longer term deprecation migration plan sasi provides functionality sai like tokenisation delimiteranalyzer yet introduces body code somewhat similar roughly sketching reduce maintenance surface area list configuration sasi become deprecated sai becomes non experimental given bug open sasi provide overview rough indication many could triage away time project start introducing new spi implementation separate sub module jar file loaded runtime based configuration setting sorry conflation one maybe right time raise shrug regard mick"
    },
    "4056":{
        "ID":39759,
        "MESSAGE_ID":"CAE1LR798-zqZ1xeQb9DMxa2a0kBAet=NAZ=vN7-o_-LxaZ67Qw@mail.gmail.com",
        "PARENT_ID":39753.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"started around definition done determining sufficient quality assurance look like feature looking forward test qa guideline thanks bringing added cep sai cwiki url"
    },
    "4062":{
        "ID":39753,
        "MESSAGE_ID":"CACn_-AxyqNGJ=jCCsBikZrjimKPTKPqfy9uUugp35cAXfE7qvQ@mail.gmail.com",
        "PARENT_ID":39722.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jason Rutherglen <jason.rutherglen@gmail.com>",
        "TAGS":"technology",
        "BODY":"space required index structure using contains logic decomposition text column gram sai suffer issue future iteration sai specific ngram support atm though may added tokenizers ngrams indeed grow index user decision faster query disk space"
    },
    "4085":{
        "ID":39730,
        "MESSAGE_ID":"CAE1LR79DdSErcbZFuSNhq4=QG8EQSLMyPD2Map_us10zmFpG_A@mail.gmail.com",
        "PARENT_ID":39724.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi duy great question sai index partition offset sasi design taken row level index consideration row awareness prototyped record partition level indexing work nicely row wide partition match indexed value switching row level index matching row wide partition index engine need fall back partition level index behavior scanning entire partition post filter instead fetching single row many time huge tokenization part cep scope top head think tokenization require space sai sasi need store match every decomposed value frame reference encoding row id sai require le disk space sasi yes"
    },
    "4090":{
        "ID":39725,
        "MESSAGE_ID":"CAHyRp2SB6zmuaDw-ZzF65xvOJ7s+gRVhw7fjctZpS=oUm8Uf4A@mail.gmail.com",
        "PARENT_ID":39503.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"existence, property",
        "BODY":"totally dropped radar call sai thread reminded thanks benedict think raised great point minimum viable testing might look like new feature aim testing combination option feature possible fall back random combination seems like maybe high level principle surface discussion taking bit editorial liberty adding thing intentionally simplifying release perf regression healthy several hundred corpus user schema tested mixed version final stable version cluster tool empower end user test schema workload mixed version new version cluster prior upgrading green test board adversarial testing new feature function exercised random input deliberate bad input function exercised intentionally boundary condition function exercised variety failure exception scenario run every user option feature behavior least aim testing combination option feature possible fall back random combination least code coverage test maybe prove useful validating work articulating tactical pov testing project benedict"
    },
    "4091":{
        "ID":39724,
        "MESSAGE_ID":"CABNXB2Ddp1QjBv_wqVVGW8TyD958piF=g1Ejc18-f3_=wcaotQ@mail.gmail.com",
        "PARENT_ID":39721.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"technology",
        "BODY":"last least collection static column composite partition key composent udt indexing depth roadmap sai strongly believe feature bare minimum make sai interesting replacement native nd index well sasi sasi limited support advanced data structure hindered wide adoption among issue bug regard duy hai doan le march aout jasonstack zhao yang jasonstack zhao gmail com ecrit"
    },
    "4092":{
        "ID":39723,
        "MESSAGE_ID":"0FC4782D-0AD3-4B6F-92A2-08511BB2B6C6@apache.org",
        "PARENT_ID":39721.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra might set good example retrospectively shoring quality assurance offer prescription approach testing new work think project need conclude discussion keep started around definition done determining sufficient quality assurance look like feature briefly set view earlier email chain initiated josh unfortunately received response project generally busy right approach release partially assume movement assuming activity others get closer time try produce formal proposal quality assurance project debated agreed"
    },
    "4093":{
        "ID":39722,
        "MESSAGE_ID":"CABNXB2Cmakh0jqhxhXqHjR9j+1tk3Hzs9dBEf07D9jU92jW_WA@mail.gmail.com",
        "PARENT_ID":39720.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"technology",
        "BODY":"thank zhao yang starting topic reading short design doc question sasi pretty inefficient indexing wide partition index structure retains partition token clustering colums per design doc sai row id mapping partition offset hope indexing wide partition efficient sai one detail worry beggining design doc said matching row post filtered scanning partition confirm infirm sai efficient wide partition provides partition offset matching row space efficiency one biggest drawback sasi huge space required index structure using contains logic decomposition text column gram sai suffer issue future iteration anticipating bit querying using sai providing complete partition key efficient querying without partition key word sai provide optimisation partition key specified regard duy hai doan le march aout mick semb wever ecrit"
    },
    "4094":{
        "ID":39721,
        "MESSAGE_ID":"CAE1LR780maHCTHYcK7MGmOU3jb_V7UVzTqLTVfBwjyhUj1Aotw@mail.gmail.com",
        "PARENT_ID":39720.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"process",
        "BODY":"mick thanks question defining specific qa guideline rc would important agreed think cassandra quality component test plan set good example qa testing defined per sai follow qa testing guideline cassandra plan making change ensuring maintained qa separate qa implementation plan interface change new implementation reviewed tested merged reduce overhead interface change reviewed tested merged separately help quality think anyone object cep author user might still choose afresh sasi sai would like sai index user decision made community contributor still active related project andres de la pena caleb rackliffe dan larocque jason rutherglen mike adamson rocco varela zhao yang shepherd anyone interested index feel free join slack cassandra sai cep process suggest wiki page feedback another notice wiki required port cep wiki"
    },
    "4095":{
        "ID":39720,
        "MESSAGE_ID":"CACvH57LGnhvurUrv=UndT7=gDV=-irimg_MEBL8icYpCp5E8qg@mail.gmail.com",
        "PARENT_ID":39719.0,
        "SUBJECT":"Re: [DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process, property",
        "BODY":"come immediately mind testing requirement mentioned already project testability qa guideline inadequate successfully introduce new feature refactorings codebase beta phase intended addressed defining specific qa guideline rc would important step towards qa guideline change ceps post question tested qa status lifecycle defined per existing code needing changed proposed plan making change ensuring maintained qa separate qa cycle planned altering spi adding new spi implementation despite scope would nice idea cep author user might still choose afresh sasi sai fill role involved contributor datastax team shepherd stakeholder willing involved preference use gdoc instead project wiki cep process suggest wiki page feedback another approach considered better help evolve cep process cheer mick"
    },
    "4096":{
        "ID":39719,
        "MESSAGE_ID":"CAE1LR78XUG_YPvj9=A88e9xJVG44-BDGZy-5+XY2XdLUBUhpYg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] CEP-7 Storage Attached Index",
        "SENT_FROM":"Jasonstack Zhao Yang <jasonstack.zhao@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi per cep guideline sending email start discussion storage attached index apache cassandra team datastax developed new index implementation called storage attached index sai based advancement made sasi sai improves disk usage sharing common data multiple column index table better compression disk structure numeric range query performance modified kdtree collection type support compaction performance stability larger data set detailed explanation sai design cep document make technical discussion simpler created slack channel cassandra sai looking forward community feedback suggestion regard zhao yang url url"
    },
    "4117":{
        "ID":39698,
        "MESSAGE_ID":"CACvH57K6k4u7D-CQqatvNx9mP1NzUXuAg1EU+zbgC9cOZDSy=Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra CI Status \u2013 2020-08-08",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"following summary change status suggestion community ci ci cassandra apache org please reply question well input circleci status anyone offer post touch upgrade test build time improvement pre commit build stand alone pipeline run standardising ci build script jdk nightly build artefact ci documentation qa status upgrade test jvm normal upgrade test added ci cassandra apache org jvm upgrade test included pipeline build normal upgrade test currently remain stand alone trunk version found url build time improvement dtests parallelised default dtest job divided split exception large dtest job due far fewer test split brings dtest run hour minute brings whole pipeline build hour hour patch devbranch build completed minute speed split ci cassandra currently agent executor often saturated build queue large also look unit test ever using one runner ci cassandra circleci problem using runner break unit test another possible improvement avoid compiling test stage using built artefact beginning pipeline run pre commit build ci cassandra apache org le frequently used pre commit build reason resource limit access reserved committers information found url trusted contributor given jenkins api token along using script found url token rotate still remains little unclear committers generate token via jenkins profile page also investigation whether create jenkins account build permission trusted contributor resource available especially contrast additional testing probably appear beta testing phase restricted feasible notification devbranch pipeline build go cassandra build patch report build url commit sha message patch repository stand alone pipeline run raised number time would great user company could run complete pipeline resource cloud single command line including setup teardown jenkins platform would big win community standardised testing test report share helping test possible configuration combination possible work involved appear moving direction anyway happen stage job inside pipeline need moved generated dsl script defined tree jenkinsfile standardising ci build script today lot duplication build script cassandra build build script embedded circleci config file tree would like suggest move build script tree start migrating circleci use build script difference test list split round robin split circleci timing based splitting parallelisation work circle container jenkins matrix plugin suspect focusing easy stuff lot standardised jdk jdk build contributed thanks shylaja trunk pipeline build jdk artefact adding jdk test run hit hurdle jdk label named test friendly directory name containing space nightly build artefact build artefact tarballs well debian redhat package attached artefact stage inside pipeline jdk jdk build download latest successful jdk build use following link trunk url url url url please note artefact come guarantee used development purpose ci documentation draft page put together ci system url work progress need input circleci user discussion validation required page come draft status qa status trunk currently hovering around failure pipeline run doubling failure past week maybe bad commit maybe much higher utilisation ci cassandra exposing flakies still amazing improvement effort everyone considering test"
    },
    "4121":{
        "ID":39694,
        "MESSAGE_ID":"CA+BDQ7xa817_7m2-wCrRR=j6RRR1q8AooDiYxjeqa9KMJHY0tw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra Kubernetes SIG - status update",
        "SENT_FROM":"John Sanda <john.sanda@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"want provide folk brief summary prior next sig meeting mentioned previous email created url started adding code goal objective include increase collaboration spur depth discussion ramp project eventually considered adoption within asf presumably subproject cassandra objective include reinvent work already done existing operator project accumulating lot tech debt detail using operator sdk bunch change version previously using namely us scaffolding project structure kubebuilder includes extensive use kustomize test framework removed operator sdk literally shamelessly copying pasting bit code ca operator casskop far controller generates couple headless service statefulset currently thing hard coded like number replica statefulset trying sanity check thing started using default docker hub cassandra image needed make change configs added initial support ca config builder extend cassandra image order able copy config file cassandra conf dir ca config builder configures cassandra use classpath class however defined management api apache cassandra datastax management sidecar using management sidecar yet updated image include agent jar contains kseedprovider class still trying iron wrinkle integration ee test yet want get much along without decent ee test coverage thanks john"
    },
    "4155":{
        "ID":39659,
        "MESSAGE_ID":"CAGM0Up_p5H6cRNy4KYX+vahAxBZNgCBSJZ+1ABJ+yXRKNm4uZw@mail.gmail.com",
        "PARENT_ID":39658.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"Yuki Morishita <mor.yuki@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank insight create new thread kick formal voting process removing window support starting regard yuki"
    },
    "4156":{
        "ID":39658,
        "MESSAGE_ID":"CAEyL1EF=-iaaSpYhemythkqF36wbZdLOURp6CeAMVHBr7r2hag@mail.gmail.com",
        "PARENT_ID":39648.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"Erick Ramirez <erick.ramirez@datastax.com>",
        "TAGS":"property",
        "BODY":"minor thanks insight andy field lot question daily window user huge drain mostly work build test ubuntu window surface say waste much time trying replicate mistake user made pc help get past work end spent troubleshooting pc dropping since cause much friction user adoption cheer"
    },
    "4162":{
        "ID":39651,
        "MESSAGE_ID":"6AC92354-B7C0-4406-88EA-E21B8761A0CC@gmail.com",
        "PARENT_ID":39648.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think hearing used use better alternative great signal unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4163":{
        "ID":39650,
        "MESSAGE_ID":"AM6PR07MB5730A0ACF23AA404F217FECFA8710@AM6PR07MB5730.eurprd07.prod.outlook.com",
        "PARENT_ID":39649.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"Jo\u00e3o Reis <joao.r.reis@outlook.com>",
        "TAGS":"property, technology",
        "BODY":"use case minor one removal window support lead significant improvement project velocity overall quality let drop improve doc show user easily get started wsl docker brandon williams escreveu dia quinta unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4165":{
        "ID":39648,
        "MESSAGE_ID":"AM5PR0402MB2835CA5D7A3AEA29DCB97E16E7710@AM5PR0402MB2835.eurprd04.prod.outlook.com",
        "PARENT_ID":39647.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"\"Andrew Cobley (Staff)\" <a.e.cobley@dundee.ac.uk>",
        "TAGS":"property, technology",
        "BODY":"apology involved process year saw topic pas thought would like comment lecturer computer science used couple dev class may remember ran couple hackdays datastax student would develop project using order learn nosql database many run laptop usually window pain since moved using docker gcloud teaching remove pain student get used using cloud service point educational purpose plenty way running small dev cluster probably realistic us case id removing window support suspect use case one minor one andy"
    },
    "4166":{
        "ID":39647,
        "MESSAGE_ID":"CAHyRp2SC0aHn12JQ3GSMCnSx11gXp4LhGcLk5YDtzCd5crC5dA@mail.gmail.com",
        "PARENT_ID":39635.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"property, technology",
        "BODY":"one got window fully supported context say pull support way ntfs treat hard link inability delete junction someone handle open even right flag file memory mapped major headache term way file operates lead large number edge case quirk way thing operate window largely manifest support burden project community clearly superior dev alternative available wsl keep list file got locked delete next startup plus complete necessary disabling early open two major thing wary term development work faith behavioral characteristic translate cleanly linux env also would advise running production environment window server point microsoft strategic embrace linux make need support basically vestigial wsl since fwiw improves experience point view dev window plethora based edge case today worse user experience smooth get started wsl ramp user former consigns never ending risk disruption disjoint deployment env latter one front fixed cost pain free development going forward datastax desktop also make even easier fwiw would advocate improving doc developing window set wsl screenshots easy get started minute guide"
    },
    "4177":{
        "ID":39635,
        "MESSAGE_ID":"AM6PR07MB57303FE4C5B5233C6BF30DBAA8700@AM6PR07MB5730.eurprd07.prod.outlook.com",
        "PARENT_ID":39628.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"Jo\u00e3o Reis <joao.r.reis@outlook.com>",
        "TAGS":"property, technology",
        "BODY":"personally still use ccm window pretty often driver even appveyor job run test ccm window driver smoke test job well setting cluster multiple node easy docker wsl node run inside vm regard wsl microsoft improving user experience use case sure easy set cluster recent window build wsl run inside vm issue think supporting window local dev environment would make harder developer get started apache cassandra community decides completely drop window support offer kind documentation run cassandra wsl docker window currently documentation window user afaik yuki morishita escreveu dia quarta"
    },
    "4178":{
        "ID":39634,
        "MESSAGE_ID":"CAHvM0ue=8gKxeZk49=Oq5mFnjRD3+ZzBkmHjiYsyi_aCb=TbVw@mail.gmail.com",
        "PARENT_ID":39628.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"Caleb Rackliffe <calebrackliffe@gmail.com>",
        "TAGS":"property",
        "BODY":"hey yuki come cassandra take window account certainly complicated thing would favor removing window support soon possible another thing come mind datastax desktop url somewhat mitigate concern local dev environment"
    },
    "4179":{
        "ID":39633,
        "MESSAGE_ID":"CALdd-zgvwZNFcM3fVH7QFzDW1hvYDGTLjbiRuGsvNrxzFcfTTA@mail.gmail.com",
        "PARENT_ID":39628.0,
        "SUBJECT":"Re: [Discussion] Windows support",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"pushed window support year ago use wsl wsl make easier docker required"
    },
    "4184":{
        "ID":39628,
        "MESSAGE_ID":"CAGM0Up_3GoPucCP-U18L1akzBXS1eJoKbui997=ajcCfKJQdng@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[Discussion] Windows support",
        "SENT_FROM":"Yuki Morishita <yukim@apache.org>",
        "TAGS":"existence, property, technology",
        "BODY":"hi would like raise concern window support getting closer release since support jdk cassandra window script start cassandra broken fix script posted url window script maintained recently think window environment ci testing think good idea release apache cassandra broken window script latest update window even window home edition user use docker window enable wsl machine however update yet available everyone believe many enterprise hold onto upgrading latest version even disable wsl using company may allow installing virtualbox either release stop supporting window remove every bat script source distribution encourage window user use vm docker continue supporting window set window test environment test every window script future release since saw enterprise restricted dev environment saw people trying use cassandra window stackoverflow want window script ready used also fine decide remove window script since use docker anyway regard yuki unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4203":{
        "ID":39604,
        "MESSAGE_ID":"CACvH57Ka0vFyOxgcm+1psT_ALXw+sT6ewJryxf=4nTVtbcg3_g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.7 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "4204":{
        "ID":39603,
        "MESSAGE_ID":"CACvH57Kan-NzQT1yALOKPwTgx83-ZBkhnEqYtQE80PC-rBivMA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.17 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "4242":{
        "ID":39565,
        "MESSAGE_ID":"CACvH57KkmQ=bHjKM34PrPxCQLbjEYNX-LjHusiSkpEmPWBNNtA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 4.0-beta1 released",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version beta apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version beta release series always please pay attention release note let know encounter problem enjoy check blog post cassandra beta url change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4272":{
        "ID":39535,
        "MESSAGE_ID":"CAPwQCrmuMU_xhZo9+rrnVx=NtchShSiRmFLNAKpwAg2JAMRuMw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[ANNOUNCE] Apache Hadoop 3.3.0 release",
        "SENT_FROM":"Brahma Reddy Battula <brahma@apache.org>",
        "TAGS":"not-ak",
        "BODY":"greeting give great pleasure announce apache hadoop community voted release apache hadoop apache hadoop first release apache hadoop line year includes fix since previous hadoop release fix hadoop common hdfs yarn mapreduce apache hadoop contains number significant feature enhancement noted support arm first release support arm architecture upgrade protobuf protobuf upgraded protobuf reached eol sa enhancement lot enhancement sa code including delegation token support better handling caching sguard performance resilience improvement abfs enhancement address issue surface field tune thing need tuning add test appropriate improve doc especially troubleshooting tencent cloud co file system implementation tencent cloud top cloud vendor china market object store co widely used among china cloud user cosn filesytem support tencent cloud co natively hadoop java runtime support java runtime support completed hdfs rbf stabilizatio hdfs router support security also contains many bug fix improvement dns resolution support nameservices ip support dfs client use single domain name discover server namenodes router observer instead explicitly listing host config scheduling opportunistic container cheduling opportunistic container central rm yarn distributed scheduling yarn well scheduling container based actual node utilization yarn container promotion demotion yarn application catalog yarn application application catalog system provides editorial search interface yarn application improves usability yarn managing life cycle application major change included hadoop line please refer hadoop main page detail fix release please read changelog releasenotes release news posted hadoop website go downloads section directly many thanks everyone contributed release everyone apache hadoop community release direct result great contribution many thanks vinayakumar helped release process url url url url as html regard brahma reddy battula"
    },
    "4304":{
        "ID":39503,
        "MESSAGE_ID":"B270CE47-C796-4E4B-8D67-1D8C00DD815B@apache.org",
        "PARENT_ID":39499.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"thanks getting ball rolling think need lot specific though may take time hash starter need distinguish type done discussing release new feature new functionality existing feature performance improvement minor refactor bug fix perhaps require unique criterion opinion example new feature required include randomised integration test exercise function feature random combination verifies behaviour consistent expectation new functionality existing feature augment existing test include new functionality random exploration behaviour release suitable many cluster level test going particularly get regular performance regression test running trunk something shared roadmap various thing need specifying clearly coverage model randomised integration test relevant feature need agree specifically thought clear value code coverage measure perhaps acceptable arbitrary number want lower bound pertinent measure option behaviour given system feature function run every user option every feature behaviour least tractable exhaustive coverage every combination option every logical behaviour possible random combination option behaviour think need include mixed schema modified schema cluster well significant source bug far chaos concerned hope bring addition jvm dtests soon facilitate targeted correctness test problem surfaced rapidly repeatably also much le hardware"
    },
    "4308":{
        "ID":39499,
        "MESSAGE_ID":"CAHyRp2QGhHiH_W1k_eU3s2au0zmFyrvY3sp31cW0q8-ru_nUyQ@mail.gmail.com",
        "PARENT_ID":39494.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"property",
        "BODY":"like need definition done seems surfacing directed intent opening thread seems serendipitous outcome reiterate open thread hope intent getting agree anything explore agree place historically seem operate looking share pov project participant know work coming pipe engage interested brainstorming get discussion started could drop doc riff high bandwidth collaborator interested topic tested cluster node would start proposing min maybe tested data set size tb maybe given node count current density soak tested aggressively adversarial scenario proven correctness hour fallout node bounce gc pausing major compaction major repair packet loss bootstrapping etc could come list form mixed version cluster minimum code coverage non boilerplate code possible brand new semantic feature different tested existing schema making use apis mixed version cluster well new version cluster case refactor internal black box rewrite discrete bar like definition done may make sense idea add differing point view disagreement item list hold loosely hesitate respond disagree totally shoot propose entirely different approach determining definition done could engage last least would make infrastructure like available project large usage validation testing feature exercise simply serve deter engagement project outside small subset population resource dedicate type testing think want"
    },
    "4313":{
        "ID":39494,
        "MESSAGE_ID":"434E5CF0-2CBA-44B5-9681-22570F057839@apache.org",
        "PARENT_ID":39489.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"property",
        "BODY":"perhaps could clarify personally hope agree project want agree blossom infinite variety view need agree shared framework quality going forward raise bar contribution including many already exist need roadmap meeting framework requirement past future contribution feature development suffer greatly extra expectation imposed upon hope framework roadmap specific prescriptive setting minimum standard course augmented contributor desire seems way come agreement point contention raise people perceive insufficient concern quality others perceive surplus concern quality agree quite specifically mean tension persist also think great way improve project efficiency contributor care resource focused shared requirement first since table stake could elaborate would prefer leave definition done"
    },
    "4318":{
        "ID":39489,
        "MESSAGE_ID":"CAHyRp2SEDaA3P=ZRdpD4ynKDOtECYcnEUP5Z+4yUz=7vw+r24w@mail.gmail.com",
        "PARENT_ID":39484.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"existence, property",
        "BODY":"strong proponent unit test upon reading document draw conclusion implication verbiage however completely reasonable point view skeptical people project dedication rigor quality think critical name tame current architectural constraint undermine ability thoroughly unit test well understand mitigate weakness current unit testing capability discrete example attempting unit test anything commitlog largely lead entire commitlog package spinning drag package know multiple module running thanks dependency tree something jason stupp branimir others repeatedly burned time trying delicately walk test spin tear ramification far beyond time lost engineer opportunity cost combined fragility system mean testing perform going constrained scope relative traditional battery stand alone modularized artifact contribution testing strongly welcomed project term others going choose invest effort right accepting current shortcoming system make much headway urgent important headed think important set standard project sympathetic pragmatist hammer general adage software never done released resonates core navigate never able state certainty fundamental conformance availability correctness property database dissatisfying reality multiple team implementing software spacecraft redundancy within redundancy system unexpected failure scenario unknown unknown opinion need clear articulation definition done come correctness guarantee yes ariel right well skillful deliberate articulated implemented failsafe catching thing surfacing adverse condition within system upon failure tricky past opinion pretty remiss project come devotion correctness rigor danger anecdotally seeing let pendulum swing far direction without successfully clearly defining done look like quality perspective everest climb die project"
    },
    "4323":{
        "ID":39484,
        "MESSAGE_ID":"BYAPR12MB3320F329FAE33B9272EFEDD8CE7E0@BYAPR12MB3320.namprd12.prod.outlook.com",
        "PARENT_ID":39482.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"not-ak",
        "BODY":"thanks starting discussion replying thread would left comment think important set standard project fundamental conformance property database rather attempting measure quality relative db might useful measure think important one regard measuring common standard project roughly mind proposing release quality metric list still think making progress something like essential toward defining quantitative bar release url strongly agreed nod great potential refactors consider post would excellent set capability really like point took thought experiment would feel great able say one write product announcement landed something like user apache cassandra preflight upgrade runing tool clone upgrade compare cluster ensuring upgrade complete smoothly correctly like document lot nodding toward opening statement empirical evidence quantify relative stability would love revisit discussion quantifying attribute like url scott david capwell sent tuesday july pm dev cassandra apache org subject discus point view testing cassandra also fully clear motif welcome anything help bring better robust testing thanks starting since comment doc copy paste put reality section read anti adding test test unit favor improving creating smoke integration regression performance ee etc testing think negative test unit test still valuable welcome enumerate punch list trait engineer need testing would good speak portability accessibility version independent new contributor want add test suite need able run run within reasonable time frame one big issuer python dtests take hour run make longer accessible new contributor"
    },
    "4325":{
        "ID":39482,
        "MESSAGE_ID":"CAB=riaB+gW8eFV=jDbCyDnpmEVqmioxgf_rw0qyy5s2Y+4mg3A@mail.gmail.com",
        "PARENT_ID":39474.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"David Capwell <dcapwell@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"also fully clear motif welcome anything help bring better robust testing thanks starting since comment doc copy paste put reality section read anti adding test test unit favor improving creating smoke integration regression performance ee etc testing think negative test unit test still valuable welcome enumerate punch list trait engineer need testing would good speak portability accessibility version independent new contributor want add test suite need able run run within reasonable time frame one big issuer python dtests take hour run make longer accessible new contributor"
    },
    "4333":{
        "ID":39474,
        "MESSAGE_ID":"CAHyRp2S5J50HmoU3NNdonQaUzi_YoBbHU+ffY-611OAJAaxoPA@mail.gmail.com",
        "PARENT_ID":39466.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"purpose purely signal point view state testing codebase shortcoming architecture planning kind prompt discussion anyone wild allergic reaction encourage collaboration wild positive reaction sort thing maybe spiritual cep lite would advocate selective topic strive consistent shared point view project lot different experience different point view lead different perspective value system agreeing discrete definition done table stake agreeing get personal take would well served spend energy work expressing complementary position rather trying bend everyone one consistent point view let thousand flower bloom someone wise recently told said work happening open source repo permissive license almost certainly aslv likely using github issue anyone want collaborate would welcome make sure gianluca charles berenguer others bring ml thread started open sourcing thing"
    },
    "4341":{
        "ID":39466,
        "MESSAGE_ID":"19508DA9-4532-467E-9CC2-1BC466304116@apache.org",
        "PARENT_ID":39462.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"raise bar critiquing document though perhaps also feature perhaps first discus purpose document seems mix mission statement project well near term roadmap interpret advertisement view problem project face start dialogue purpose solicit feedback would helpful work towards similar document whole community endorses shared mission statement perhaps loosely defined shared roadmap would like call specific thing document personally excited project long lacked coherent repeatable approach performance testing regression combined easy visualisation tool would huge win fql sampling data distribution inference also something discussed privately elsewhere would hugely advantageous former discover representative workload thanks taking time put together start dialogue"
    },
    "4345":{
        "ID":39462,
        "MESSAGE_ID":"CAHyRp2Q0m7QHD4Hf7-7=Fa2XFATFTk8yQT4tcPvxQfSYxAA-5g@mail.gmail.com",
        "PARENT_ID":39461.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"feature bug happy chat slack anyone complex topic long form high bandwidth communication better fit gdoc comment rapidly become unwieldy"
    },
    "4346":{
        "ID":39461,
        "MESSAGE_ID":"CAEPxca2wc0NfWuzjH56jzvJYRE+kibbKZxm7CxkEuvD29MexpQ@mail.gmail.com",
        "PARENT_ID":39458.0,
        "SUBJECT":"Re: [DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"please allow comment doc leave feedback"
    },
    "4349":{
        "ID":39458,
        "MESSAGE_ID":"CAHyRp2SZRpdXnepUj7KAWD+5g1YVBwiaPXKcwHK5ybrWxPJ8tg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] A point of view on Testing Cassandra",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"link url contributor working point view frame going work improving testing project figured might useful foster collaboration broadly community well provide people opportunity discus work may yet chance bring open source fallout already open sourced expect schema anonymizer cassandra different nosqlbench framework effort open sourced openly worked soon anyone interested collaborating would highly welcome doc view figured could keep ml thanks josh"
    },
    "4397":{
        "ID":39410,
        "MESSAGE_ID":"CAOpVNY06bZJSb1tKB7m+qFamB6r3y-eLhYXv=6g092o7E5LDOw@mail.gmail.com",
        "PARENT_ID":38629.0,
        "SUBJECT":"Re: [Discuss] num_tokens default in Cassandra 4.0",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"close loop url getting tested project testing get updated utilize new default num token using new allocation algorithm uncommenting allocate token local replication factor jon documentation num token url separate ticket mentioned url new default cassandra use new allocation algorithm num token note news txt upgrading bootstrapping lot effort change set hopefully new user much better place box thanks everyone effort"
    },
    "4398":{
        "ID":39409,
        "MESSAGE_ID":"CAOpVNY2W11iza37tS6pTWrx-11zz+ATadA-yy+Pq=59Wz4TJrw@mail.gmail.com",
        "PARENT_ID":38168.0,
        "SUBJECT":"Re: Update defaults for 4.0?",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"wanted close loop url update compaction throughput mb per sec default default become unless people strong objection update separate discussion num token url getting finalized testing"
    },
    "4412":{
        "ID":39395,
        "MESSAGE_ID":"CACXM7vVZ2Uq8BeVhJuMGZ6g3BuQ5-ywh6oG9JVfXuH1oSFRSNw@mail.gmail.com",
        "PARENT_ID":39391.0,
        "SUBJECT":"Re: Moving forward towards our best release yet",
        "SENT_FROM":"tee why <apoptd@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe"
    },
    "4416":{
        "ID":39391,
        "MESSAGE_ID":"30813A3A-5F7E-41A2-A615-036C4A7078A9@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Moving forward towards our best release yet",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra community year seen lot ups down care deeply project people interacting project personally consider many good friend regardless history caused friction recent discussion thread hope see past versus towards shipping something excellent building momentum would ask please assume everyone want project succeed build best stable scalable developer operationally friendly database please know personally may seen cluster work node challenge good company let assume everyone unique contribution based battle scar triumph listen mind think move forward effectively many complementary effort help make thing stable reproduce issue test regression get final stage release cycle think bring bear best release ever different viewpoint please let assume best others communicate constructively thing contribute large small great see renewed interest new contributor energy leading release think seeing glimpse revitalized project community beginning thanks jeremy unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4435":{
        "ID":39372,
        "MESSAGE_ID":"4C55428D-1D14-4130-9966-B466D47BBEF1@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [DISCUSS] Future of MVs",
        "SENT_FROM":"joshua.mckenzie@gmail.com",
        "TAGS":"not-ak",
        "BODY":"clarify one thing understand experimental feature alpha beta quality guarantee correctness differ feature presented database likely articulate wiki doc case mv since began regular feature obviously want degradation functionality feature experimental guarantee codification feature apis functionality historically taken form unit test dtests limited ability explore test state space provide minimal guarantee api consistency sufficient maintain contract correctness experimental feature sent iphone unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4448":{
        "ID":39359,
        "MESSAGE_ID":"CAE1LR78RFWDaXfbJt9mx2TvKQ0TW32Fd4dc3zHiLq4cUac2=uQ@mail.gmail.com",
        "PARENT_ID":39356.0,
        "SUBJECT":"Re: [DISCUSS] Future of MVs",
        "SENT_FROM":"Jasonstack Zhao Yang <zhaoyangsingapore@gmail.com>",
        "TAGS":"existence",
        "BODY":"documented way report bug url jira version environment opportunity deprecate materialized view remove community focusing unable review cep improvement discus community ready discus cep improvement bar agreed learn mistake still user using mv think responsible work user improve mv use case formal discussion analysis thing impossible fix improve"
    },
    "4451":{
        "ID":39356,
        "MESSAGE_ID":"0AFE7C68-4AEF-47C1-804D-4BC5C9CD636A@apache.org",
        "PARENT_ID":39354.0,
        "SUBJECT":"Re: [DISCUSS] Future of MVs",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"existence",
        "BODY":"favor marking deprecated removing someone step fix always option accepting fix dinesh unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4453":{
        "ID":39354,
        "MESSAGE_ID":"CAMK=hAPLxekPN94qHUWOrp4Z_waQid4inv9G-MqnJ4GXH+=Lpg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Future of MVs",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"existence, property",
        "BODY":"couple day ago writing separate email came across datastax blog post discussing mv imagine surprise noticed date five year ago tlp helped numerous customer move mv mostly affected stability cluster horrific way telling project involved helping someone create new table manage gb data view performed poorly made cluster unresponsive unusable despite around five year seen little improvement make usable non trivial non laptop workload since original commits look like much work improve yet another feature ended saying use heard plan improve meaningful way either address issue performance inability repair original contributor mv carl yeksigian seems disappeared project meaning broken feature without maintainer plan fix move forward release consider opportunity deprecate materialized view remove take opportunity learn mistake raise bar new feature undergo much thorough run wringer merging curious folk think way base missing jira magically fix issue performance availability correctness url url"
    },
    "4461":{
        "ID":39346,
        "MESSAGE_ID":"ABF65931-4605-4CCF-8598-3AA9D1FC534B@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Stabilizing 4.0",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi starting separate thread thread veered different direction ground rule thread discussing branching model release strategy folk community following question concern lack clarity stability quality measured lack visibility progress stabilizing lack clarity remaining get stable state cent question follows baseline expectation thought big user cassandra running latest trunk internally testing particular use case wanted file many jiras possible based experience operation host replacement expansion shrink etc obviously issue durability performance availability thought generate body work jiras fixed time would stabilize trunk see trickle new jiras coming halt least nothing serious show big user cassandra would feel comfortable running build prod would good time cut final stable release also created confluence doc test plan major area require testing shepherd tentatively assigned rationale doc area significantly changed need eye ball ensure stability shepherd would help guide testing area think big missing piece know actively running trunk internally aggressive timeline getting stable however see new jiras reported every day also lot open jiras require attention reported diverse set cassandra user great think everyone would like see stable release month quality release dependent aggressively everyone community test release coming week month final concern around people felt lack visible activity signal project dead fully agree assessment suspect sending periodic update new issue test run people running mailing list would definitely help keeping everyone engaged also help bring visibility community sure whether feasible everyone share internally think working something summarizing weekly biweekly basis help community thought suggestion let discus without shooting new idea assume positive intent thanks dinesh url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4502":{
        "ID":39305,
        "MESSAGE_ID":"CAHyRp2SMTLDco0sNfseD9PU7cgAu3zGDyxiOW4A3jZsi4w7tdA@mail.gmail.com",
        "PARENT_ID":39304.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cep seems reasonable enough talk alex olivier"
    },
    "4503":{
        "ID":39304,
        "MESSAGE_ID":"CACvH57JaL7gEurUaS8aPixt9=ZAekTgtEZivRnmtJywqQZi9hA@mail.gmail.com",
        "PARENT_ID":39303.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"take cep even decision take one driver guinea pig learn go question need thrashed advance somewhere better thread incubator ip clearance step question tackle along way version supported branch committers maintainer artifact package name ci jira ml coordination server etc cep document land"
    },
    "4504":{
        "ID":39303,
        "MESSAGE_ID":"158AA079-F7FB-4A92-B4BB-B1018C5A91D5@apache.org",
        "PARENT_ID":39299.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"see reason bring driver project start java driver think nate might aware specific process dinesh unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4508":{
        "ID":39299,
        "MESSAGE_ID":"CAHyRp2T6xG1OQVi9Xo2vo8kQ3uLd2O14Z+x3TtDR-W99cs-pOA@mail.gmail.com",
        "PARENT_ID":38881.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"understanding comparable traffic python java node driver term usage cassandra ecosystem shall get started java process incubation donation cla vetting contribution etc plan follow python node next step anyone knowledgeable thread"
    },
    "4659":{
        "ID":39148,
        "MESSAGE_ID":"CAHyRp2ScEZGOiUZi=y9wf21Lg51XVGGws9_ZT5A_LPePr5LBvQ@mail.gmail.com",
        "PARENT_ID":39128.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"since feedback seems slowing give weekend thing still quiet call vote monday sound good since yet ratified structure know quorum pmc initial idea go minimum binding vote binding vote binding defined pmc member vote given governance concern thanks everyone time energy josh"
    },
    "4679":{
        "ID":39128,
        "MESSAGE_ID":"CAHyRp2SPJT6b5hAbe+UTJEQ3cjrcYP+mRRORhdm8AA636t=Mxw@mail.gmail.com",
        "PARENT_ID":39123.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"integrated feedback got jon good point anyone else"
    },
    "4684":{
        "ID":39123,
        "MESSAGE_ID":"CAHyRp2S9OpZa557gD6BxtoQwu==NpJgPhu1JSZYJFZ_ZeEE8zA@mail.gmail.com",
        "PARENT_ID":39121.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks insight pavel helpful useful reference start test cep process solidifies one thing really stood worth calling would love follow topic future vision coherence etc project iron voting governance process said feedback doc current form anybody else thought thing stand"
    },
    "4690":{
        "ID":39117,
        "MESSAGE_ID":"CAHyRp2Sm_M2E2r1D9F0mfXkPi2Cp8MBve3i0oXTowKSsT7NJ1w@mail.gmail.com",
        "PARENT_ID":39116.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"tightened verbiage also updated doc consistent current cep procedure wiki voting ratifying always feedback welcome"
    },
    "4691":{
        "ID":39116,
        "MESSAGE_ID":"CAHyRp2SVh4Ld3EySYwh0a6pDK6UYG73J70Bm2n+BMSWaHkie5A@mail.gmail.com",
        "PARENT_ID":39114.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"revised pmc member committer"
    },
    "4693":{
        "ID":39114,
        "MESSAGE_ID":"CACvH57+=_QzK2m56xnH6V9f4TC+5mii73YrDqrBSnW6x-L1igg@mail.gmail.com",
        "PARENT_ID":39110.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"start totally agree ceps light weight possible sentiment would also like keep discussion open encourage include many voice possible questioning around value initial exposure discussion implied already lazy consensus starting cep starting cep initial proposal idea one example require cep shepherd pmc member encouraging vote better yet keeping light weight initial discus thread early possible cep lifecycle come value openly calling shepherd allowing experienced community member add insight without get formally involved potential value encouraging open mode opening discussion early versus cost additional process really interested hearing folk community project cep cip lifecycle process work learnt"
    },
    "4695":{
        "ID":39112,
        "MESSAGE_ID":"CAHyRp2R+Hd9HRbP7hfitACE7BRiBDAm1CyivYNgR6F+oifpPfg@mail.gmail.com",
        "PARENT_ID":39110.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"integrated feedback thread thus far responded comment doc open everyone comment"
    },
    "4697":{
        "ID":39110,
        "MESSAGE_ID":"CAMK=hAOGKPpJUGOXJa3e163xMW6HSKOpfsgS5tcaQR_u26Fx9w@mail.gmail.com",
        "PARENT_ID":39107.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"one agree would go even requiring vote order propose idea run counter idea cep would default purpose even cep proposal change get fleshed enough people understand idea vote way around"
    },
    "4698":{
        "ID":39109,
        "MESSAGE_ID":"4D058414-5F8D-426C-ABF3-5661A3D0E2BF@apache.org",
        "PARENT_ID":39108.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"haha delicate get trying participate aggressively time boxing achieve thing imagined entirely confused everyone sorry jordan josh"
    },
    "4699":{
        "ID":39108,
        "MESSAGE_ID":"CAHyRp2Tng1aWpKcu_AW_bEOv8Bk=oJqirKt5Nrkbh6BiyywYKw@mail.gmail.com",
        "PARENT_ID":39107.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"oh interesting checked doc see time frame roll call maybe missed open comment either way"
    },
    "4700":{
        "ID":39107,
        "MESSAGE_ID":"F0527B5C-FB90-44C0-A6F1-D7A0359B7A73@apache.org",
        "PARENT_ID":39104.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"think hour point raised pointed short roll call personally think closing discussion hour acceptable order assist progress since called clear discussion halted consensus likely reached retrospect appears wrong always cancel vote regard ceps personally see value voting start one nothing stop proposer seeking advice discussion collaborator beforehand voting seems premature least concrete proposal thought put initial round wider discussion already community cost process want overly burdensome"
    },
    "4701":{
        "ID":39106,
        "MESSAGE_ID":"2EC859AF-A9BF-4984-B8CF-FD96B342239A@apache.org",
        "PARENT_ID":39105.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think doc great place reach agreement thing easily agreed final form moved wiki anyway voted anything readily agreed moved discussion opinion widen participation"
    },
    "4702":{
        "ID":39105,
        "MESSAGE_ID":"CAHyRp2T0JpChLgQtbqFu=77XrcUAeZaMr-iqyUHhT7XZ1rujyw@mail.gmail.com",
        "PARENT_ID":39104.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"also would everyone like doc opened comment localized feedback discussion think ml thread might get hard follow rapidly want mindful apache policy surrounding thing happening ml think closing final time window link sufficient record thought"
    },
    "4704":{
        "ID":39103,
        "MESSAGE_ID":"CACvH57KmKEY53LVR5=vwzCiZM00b2R2aB637xMZpd2QQL7vNcw@mail.gmail.com",
        "PARENT_ID":39098.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"url thanks benedict josh awesome initiative put open include everyone question around cep lifecycle one established exit move real implementation stage guess evolving discussion also depends nature individual cep raise question apply vote example imagine two vote cep accept cep start earnest second time finalised cep working group finalised ceps evolve quite different place original idea maybe need entry vote document implies entirely sure think initial exposure discussion valuable prevent wasted adventure regard mick"
    },
    "4705":{
        "ID":39102,
        "MESSAGE_ID":"956FF2C4-32FB-45D2-822E-D3CBC1A4FC25@apache.org",
        "PARENT_ID":39099.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"asf vote meant far possible formality confirming consensus something resolve irreconcilable disagreement discussion section describes build consensus multiple option multiple area disagreement proposal using indicative vote multiple option via instant runoff binding used modify proposal vote binary question broad support lot point nail roll call something barely squeezed win indicative vote private list much still debate including window week would also seem fine also question vote floor procedural cep vote clear majority super majority decision determining active electorate mechanism dev private participation discussed well avoid perverse voting incentive need determine floor vote favour rather participant else disincentivise voting proposal yet reached quorum proposal currently requires super majority active electorate well probably strong simple majority active electorate plus super majority voter probably sufficient claim consensus idea aiming keep much public possible another whole rabbit hole discussion agree carve extra cheap consensus option perhaps test source community list clearly defined item would great vote mean need reviewed change mean two committers taken look agreed adequate work appears done skim patch knowledge experience proposer reviewer often suffice mean new contributor relatively junior committers le likely accidentally commit something wider ramification realise practical implication minimal tried clarify document separate item expressly requiring one review change hope strengthen requirement vote least two committers least two concrete review moderate complexity work another discussion"
    },
    "4706":{
        "ID":39101,
        "MESSAGE_ID":"CAPwFCc5Xv4EGU9fzkn5OLch5DBqNht04jTbw2aKRKOuUJiEKfQ@mail.gmail.com",
        "PARENT_ID":39100.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Jordan West <jwest@apache.org>",
        "TAGS":"not-ak",
        "BODY":"missed end josh email suggested engaging doc allow comment anyways question thought regarding pmc roll call definition active project want participate pmc roll call apply pmc original read looking closer email dev hour period seem little short especially weekend bar regarding code review generally requiring eye code review two area think could use clarification low risk patch like test fix etc may strong high risk patch caveat author reviewer also committer weak start limit potential branching thread jordan"
    },
    "4707":{
        "ID":39100,
        "MESSAGE_ID":"CAPwFCc59aux3Jryk0O+UzLvyb6FxgTMhsC9a8aSnDJYTmkV0qA@mail.gmail.com",
        "PARENT_ID":39098.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Jordan West <jwest@apache.org>",
        "TAGS":"not-ak",
        "BODY":"glad see pmc discussing topic making effort towards improving status quo thanks sharing draft leave detailed question comment doc whole encouraging see pmc rely heavily community make effort keep view active participant current jordan"
    },
    "4708":{
        "ID":39099,
        "MESSAGE_ID":"CAKLgQbzwpr-d5Z09TTgRS2RFcw6Q_hR7tD531cAUsQBYw6_SnA@mail.gmail.com",
        "PARENT_ID":39098.0,
        "SUBJECT":"Re: [DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Murukesh Mohanan <murukesh.mohanan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"couple thought seems rule voting predicated question binary perhaps also tack section case pick among multiple option simple plurality maybe cep python governance model proposed pep etc codified pep php voting system iterated upon recently equivalent rfc perhaps since current cep description suggests ceps exclusively code change case could discus later date move proposal first url url url url murukesh mohanan"
    },
    "4709":{
        "ID":39098,
        "MESSAGE_ID":"CAHyRp2TKhp4Bm-adXtNwXunp74D_YrOfurGvqEm6RZJxLMVZQQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] governance on the Apache Cassandra project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"hello project pmc discussing make decision pmc make decision project committers contributor decision made decision ratified came conclusion value formal though lightweight structure around topic well start enumerate expectation interact project matures link current draft governance doc url doc page long interested engaging discussion evolve collaborate project please take time read doc think thing engage thread thanks everyone looking forward great discussion josh mckenzie"
    },
    "4718":{
        "ID":39089,
        "MESSAGE_ID":"1dbeb02c-8c03-c814-4372-50c4dfcbe1c0@snazy.de",
        "PARENT_ID":39084.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Robert Stupp <snazy@snazy.de>",
        "TAGS":"not-ak",
        "BODY":"yea already pretty good state work progress state already available either url url additional commit already use machine bunch thing already feel bad go back branch without gradle start separate dev ml thread information next day getting beta released higher priority atm"
    },
    "4721":{
        "ID":39086,
        "MESSAGE_ID":"CAMz834MSK8c2rfibmuGWkxak_eyERBoi=NqCUGK7gW5nu=1qvA@mail.gmail.com",
        "PARENT_ID":39084.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Abhishek Singh <abh2345x@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"definitely stockholm syndrome hope robert completed good work reduces setup friction"
    },
    "4723":{
        "ID":39084,
        "MESSAGE_ID":"CAHyRp2TSZHUrFwWC_qVrda9ZoiRc4cziGEGG386_P+vCS4Cxaw@mail.gmail.com",
        "PARENT_ID":39082.0,
        "SUBJECT":"Re: Build tool",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"build tool like religion maybe cult stockholm syndrome creator robert stupp noodling around gradle based build env live alongside ant sure status atm"
    },
    "4725":{
        "ID":39082,
        "MESSAGE_ID":"CAMz834PfnRZP6u1tjvSTvUS4z6Qgoyx-hKToB_g48wtQd7_nMw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Build tool",
        "SENT_FROM":"Abhishek Singh <abh2345x@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi hope well safe wanted know build still ant plan migrate modern build tool regard abhishek singh"
    },
    "4759":{
        "ID":39048,
        "MESSAGE_ID":"680ee0a4-aaa1-44ae-272f-b21bcce237e0@apache.org",
        "PARENT_ID":38980.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"process",
        "BODY":"thank response seems strong agreement thread got positive feedback without argument move next step ozone community proposal created new project cover technical question created agreed ozone community second discussion thread started hadoop dev list discus proposal everybody happy proposed way move start vote thread based proposal voted proposal sent asf board discussed decided approved thanks feedback marton"
    },
    "4760":{
        "ID":39047,
        "MESSAGE_ID":"CADfbTpHQC=OhMEbdKzxA3Yja4HEzWSC_pBduR6ajrHnRXTOFOA@mail.gmail.com",
        "PARENT_ID":39045.0,
        "SUBJECT":"Re: [DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Eric Yang <eyang@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sound promising really fantastic news look forward feature let know help thanks regard eric"
    },
    "4762":{
        "ID":39045,
        "MESSAGE_ID":"CAK85xr=cqYsY9f0MO4At+45A6-5yiY8kcbQJKV+tJbHxZ-xc9A@mail.gmail.com",
        "PARENT_ID":39037.0,
        "SUBJECT":"Re: [DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Daryn Sharp <daryn@verizonmedia.com.INVALID>",
        "TAGS":"technology",
        "BODY":"many issue mixed far oidc support pre requisite rpc tl rpc mtls recently completed rollout entire production grid majority past year spent shaking bug ensuring compatibility rough edge need clean community release week ago created rough poc leverage rpc mtls oidc access token goal mtls cert may blessed impersonate access token compromised service may abused impersonate user recently accessed said service kerberos mtls oidc may simultaneously supported part simplicity regardless client authn authz delegation token still acquired job avoid short lived identity credential expiration credential refreshing bigger worm requires careful thought separate discussion"
    },
    "4769":{
        "ID":39038,
        "MESSAGE_ID":"CADfbTpH2kX2V24bJxRSONgX-S1iBPrK0vWta7jC_qeErdqupFA@mail.gmail.com",
        "PARENT_ID":39035.0,
        "SUBJECT":"Re: [DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Eric Yang <eric818@gmail.com>",
        "TAGS":"existence, property, technology",
        "BODY":"hi steve thank sharing work done amazon sts token work sa connector work direct hdfs bucket interaction statement also spot container running yarn mechanism update triple session credential mistaken amazon sts token renewable max life time hour new token must obtained aws role long running container number way fix session issue yarn rm keep track session login secret inject sts token container running environment periodically nasty hack modify environment variable running process transport client access key secret key container container performs login process user home directory contains aws credential node work without code change operational nightmare streamline token handling use oidc jwt token client library always perform check oidc server keep token fresh option might work existing sa connector work modification application well number aimed modify hadoop library authentication token renewal transparently allows existing application work swapping jar file without code modification also improve security session expiration synchronized leaning toward address fundamental problem know community spent year improvement get point however hadoop need way forward discussion help determine essential support oidc alternate security mechanism using existing code break existing code regard eric"
    },
    "4770":{
        "ID":39037,
        "MESSAGE_ID":"CAN-7VpmjQGo31MrDzS4K4TTABPEu_F6s70fuS5Q=vb8VnmDRgw@mail.gmail.com",
        "PARENT_ID":39035.0,
        "SUBJECT":"Re: [DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Vipin Rathor <v.rathor@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi eric thanks starting discussion kerberos developed decade web development becomes popular sure kerberos developed long web selected de facto authentication mechanism hadoop internet boom selected reason one strongest symmetric key based authentication mechanism transmit password plain text kerberos around since long stood test time microsoft active directory extensively used many fact microsoft put active directory azure tell ad thereof kerberos going away time soon overall agree rajive craig topic paving way openid connect hadoop good idea seeing replacement kerberos need carefully thought problem described original mail really kerberos issue yes understand making kerberos work right way always uphill task long time kerberos hadoop support engineer reason replace hint cve way cve accessible right cve database maybe yet public"
    },
    "4775":{
        "ID":39032,
        "MESSAGE_ID":"CADfbTpG2jRFpA1poiut_GRgdt835=a6up19o_GYhtZkKGy6xaQ@mail.gmail.com",
        "PARENT_ID":39030.0,
        "SUBJECT":"Re: [DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Eric Yang <eric818@gmail.com>",
        "TAGS":"existence, technology",
        "BODY":"see comment inline"
    },
    "4779":{
        "ID":39028,
        "MESSAGE_ID":"DM6PR03MB4026EC296CE72997F368D5BEEFB60@DM6PR03MB4026.namprd03.prod.outlook.com",
        "PARENT_ID":39027.0,
        "SUBJECT":"Re: [EXTERNAL] Re: [DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Craig.Condit <Craig.Condit@target.com>",
        "TAGS":"existence",
        "BODY":"strongly disagree making ugi doas private feel impersonation important feature make user many valid use case require impersonation fact consider one differentiating feature hadoop ecosystem make use heavily build variety service would possible without also consider addition gateway service knox broken change would also cripple job scheduler oozie running workload yarn different user vital ensure queue resource allocated accounted properly well file permission enforced without impersonation user cluster would need granted access talk directly yarn higher level access point apis would possible craig condit eric yang sent wednesday may pm akira ajisaka cc hadoop common subject external discus secure hadoop without kerberos hi akira thank information knox play main role reverse proxy hadoop cluster understand importance keep knox running centralize audit log ingres cluster reverse proxy solution like nginx feature rich caching static content load balancer would great ability use either knox nginx reverse proxy solution company wide oidc likely run independently hadoop cluster also possible run hadoop cluster reverse proxy must ability redirects oidc exposed endpoint appropriate hadoop good effort enable sso integration except written extend kerberos authentication prevents decoupling kerberos reality gathered design requirement morning welcome contribute encryption mandatory server certificate validation required existing token infrastructure block access token remains replace delegation token transport oidc jwt token patch token renewer logic support renew token oidc endpoint token expires impersonation logic us service user credential new way renew service user credential securely replace hadoop rpc sasl transport tl oidc work tl natively command cli improvement use environment variable file accessing client credential downgrade use ugi doas private hadoop service run elevated privilege unless good reason loading hive external table think good starting point feedback help turn requirement task let know think thanks regard eric"
    },
    "4780":{
        "ID":39027,
        "MESSAGE_ID":"CADfbTpHXkgBW0L_7WuS0VvMd-VaCi=teUmzeMWjVBk7qDWfR8g@mail.gmail.com",
        "PARENT_ID":39025.0,
        "SUBJECT":"Re: [DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Eric Yang <eric818@gmail.com>",
        "TAGS":"existence, technology",
        "BODY":"hi akira thank information knox play main role reverse proxy hadoop cluster understand importance keep knox running centralize audit log ingres cluster reverse proxy solution like nginx feature rich caching static content load balancer would great ability use either knox nginx reverse proxy solution company wide oidc likely run independently hadoop cluster also possible run hadoop cluster reverse proxy must ability redirects oidc exposed endpoint appropriate hadoop good effort enable sso integration except written extend kerberos authentication prevents decoupling kerberos reality gathered design requirement morning welcome contribute encryption mandatory server certificate validation required existing token infrastructure block access token remains replace delegation token transport oidc jwt token patch token renewer logic support renew token oidc endpoint token expires impersonation logic us service user credential new way renew service user credential securely replace hadoop rpc sasl transport tl oidc work tl natively command cli improvement use environment variable file accessing client credential downgrade use ugi doas private hadoop service run elevated privilege unless good reason loading hive external table think good starting point feedback help turn requirement task let know think thanks regard eric"
    },
    "4782":{
        "ID":39025,
        "MESSAGE_ID":"CAP+3qq4Gypqf=PO4szFvRZhP9oVbTs5woe=fT3jF8xZC3PGfyQ@mail.gmail.com",
        "PARENT_ID":38943.0,
        "SUBJECT":"Re: [DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Akira Ajisaka <aajisaka@apache.org>",
        "TAGS":"technology",
        "BODY":"hi eric thank starting discussion interested openid connect oidc integration addition benefit security cloud native operating cost may reduced company company wide oidc provider enable sso hadoop web uis via knox oidc yahoo japan"
    },
    "4793":{
        "ID":39014,
        "MESSAGE_ID":"CAA1qPbZzZGqB5hHQn7yWzeBztv9O=6K=PHP6a9ASkT0dWcgMiQ@mail.gmail.com",
        "PARENT_ID":38948.0,
        "SUBJECT":"Re: List of serious issues fixed in 3.0.x",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"wanted add remembered url data resurrection marked normal discovered test marked critical url data loss commit log replayed custom exception url undeletable duplicate row problem considered data resurrection sstable corruption"
    },
    "4796":{
        "ID":39011,
        "MESSAGE_ID":"d9470279-3ee9-5db5-6f62-5a94b732e791@apache.org",
        "PARENT_ID":38984.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"process",
        "BODY":"short yes detail discussion agreement followed next discussion vote specific proposal contain technical information including committer list support approach followed submarine existing hadoop committers free opt opportunity committer ozone proposal created wiki add name request added initial list created based statistic jira name already marton unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "4801":{
        "ID":39006,
        "MESSAGE_ID":"CAOScs9YK+ZeBPPiWHh2MgOGr=dRO5+C5=L3JLEks9NHqxYTd8w@mail.gmail.com",
        "PARENT_ID":39000.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Subru Krishnan <subru@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks subru"
    },
    "4807":{
        "ID":39000,
        "MESSAGE_ID":"CAP+3qq7kx2JzHQy+G8cHTpVxo3s02bU6op2Ck3ghE2TS_5qcew@mail.gmail.com",
        "PARENT_ID":38980.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Akira Ajisaka <aajisaka@apache.org>",
        "TAGS":"not-ak",
        "BODY":"akira"
    },
    "4812":{
        "ID":38995,
        "MESSAGE_ID":"CACYiTujCR8a+NiVkCgLPfzuMxUpPxmtkm5ZCaxOVsP6OoLEMbg@mail.gmail.com",
        "PARENT_ID":38980.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Sunil Govindan <sunilg@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks sunil"
    },
    "4815":{
        "ID":38992,
        "MESSAGE_ID":"CADoWKTBSTRV42cTnT59XN2ARk4ExDoohC0SLWomYoOv_SER06w@mail.gmail.com",
        "PARENT_ID":38991.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Vinayakumar B <vinayakumarb@apache.org>",
        "TAGS":"not-ak",
        "BODY":"vinay"
    },
    "4816":{
        "ID":38991,
        "MESSAGE_ID":"CAD4uY09GwmojKQR_O3-VyyacpMe7Xg0r6TsHj0-AO1hDgwDybw@mail.gmail.com",
        "PARENT_ID":38990.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Surendra Singh Lilhore <surendralilhore@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"surendra"
    },
    "4817":{
        "ID":38990,
        "MESSAGE_ID":"CAE_F29z2xjR5a-sNCZJQ+a6f1CG=pRDei1s5mSCqnA-dn6JCZQ@mail.gmail.com",
        "PARENT_ID":38989.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"yisheng lien <yisheng@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thank marton detailed description wanqiang ji"
    },
    "4819":{
        "ID":38988,
        "MESSAGE_ID":"B106AB56-527D-4FAE-B11B-9F167C1B4E13@gmail.com",
        "PARENT_ID":38986.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Ayush Saxena <ayushtkn@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ayush unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "4821":{
        "ID":38986,
        "MESSAGE_ID":"CAGZ+ajmdL=7odJSjwdJYYyLVH5B0Pofpn44iy2N2UJYdtffS9A@mail.gmail.com",
        "PARENT_ID":38985.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Aravindan Vijayan <avijayan@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"thank taking marton"
    },
    "4822":{
        "ID":38985,
        "MESSAGE_ID":"CAPAEb8jD9QLAWWcL5VrB-C7-dCCCpY5CJbqPA1095h9HERy2Tg@mail.gmail.com",
        "PARENT_ID":38980.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Uma Maheswara Rao G <hadoop.uma@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"regard uma"
    },
    "4823":{
        "ID":38984,
        "MESSAGE_ID":"CAK1FreW12Fez9aVsymvr3DsJXOoEsYWrT-JjNBGXW3mn8BDeAw@mail.gmail.com",
        "PARENT_ID":38983.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Weiwei Yang <wwei@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks marton starting discussion one question committers contributed ozone got committer role past like carry committer role new repo"
    },
    "4824":{
        "ID":38983,
        "MESSAGE_ID":"CANu2_gyD024sR46oROhAJxnDWprU9mLerPmtToS8ojyLKb2nBA@mail.gmail.com",
        "PARENT_ID":38980.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"Dinesh Chitlangia <dineshc@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thank marton writing history supporting comment dinesh"
    },
    "4826":{
        "ID":38981,
        "MESSAGE_ID":"FBDA336B-AC30-441B-A09B-97611789D804@gmail.com",
        "PARENT_ID":38980.0,
        "SUBJECT":"Re: [DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"anu engineer <anu.engineer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"anu unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "4827":{
        "ID":38980,
        "MESSAGE_ID":"9c52c34a-e7ff-29bf-813a-c174795f9849@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] making Ozone a separate Apache project",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"process",
        "BODY":"would like start discussion make separate apache project ozone history apache hadoop ozone development started feature branch hadoop repository hdfs october discussion started merge hadoop main branch long discussion merged hadoop trunk march discussion merge suggested multiple time create separated project ozone time ozone tightly integrated hadoop hdfs active plan use block layer ozone hdds hdsl time block level hdfs community ozone subset hdfs community first beta release ozone released seems good time first ga make decision future changed last year ozone became independent community code side separation suggested example owen vinod community point view fortunately new contributor helping ozone originally ozone community subset hdfs project bigger bigger part community related ozone seems easier build community separated project new younger project might different practice communication commiter criterion development style compared old mature project easier communicate improve standard separated project clean boundary separated project brand help increase adoption rate attract individual contributor afaik seen submarine similar move contribution process communicated easily make first time contribution easy code point view ozone became independent ozone different release cycle code already separated hadoop code base apache hadoop ozone git separated ci github action ozone us different strict coding style zero toleration unit test checkstyle error code became independent hadoop maven level originally compiled together tree latest hadoop snapshot depends released hadoop artifact rpc configuration start use multiple version hadoop client side volume resolved issue already high ozone side ozone slightly resolved issue hdfs yarn mapreduce common together last month summary first ozone ga release seems good time discus long term future ozone managing separated tlp project seems benefit please let know opinion thanks lot marton detail see url url url unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "4830":{
        "ID":38977,
        "MESSAGE_ID":"CAPwFCc4eGQRa5=Y_crAhPsPkSJonmA4PEhofV0Mj0-A349CNEQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"4.0 Ticket Review and 20200512 Status Update",
        "SENT_FROM":"Jordan West <jwest@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi everyone week status update josh jon thought important take closer look part release cycle assigned different ticket get better idea close truly releasing beta work left rc ga release lifecycle document url community agreed upon previously mind looked outstanding ticket many case ticket already assigned would expected based document ticket perceived severity case ticket assigned stage cycle different document outlined case felt obvious reached involved updated accordingly ticket fell primarily category client api configuration user interface user interface stabilized end alpha stage testing epic completed end beta stage change rc making substantial change release candidate documentation etc ok stage cycle remaining ticket felt important community discus case case basis larger change past particular look think important community think whether block release would well suited subsequent release one feel confident shorter cycle please look especially involved one encourage discussion happen outside thread either jira separate discus thread mailing list question found helpful reviewing would block release ticket would prioritize ticket testing fixing ticket make stable release transient replication url transient replication unable insert data keyspace configured simplestrategy url transient replication pre release followup work url transient replication cheap quorum decouple storage requirement consensus group size using incremental repair repair streaming url streammanager clearly differentiate initiator receiver session url fix operational hole incremental repair url add command show progress data streaming index build indexing url allocate unneeded mergeiterator ondisktoken iterator url improve handling initialization failure test tooling url avoid lazy initializing shut instance trying send message feature improvement url virtual table expose current running query url remove baseiterator stopchild url improve system table handling losing disk using jbod url add latency sample speculative read repair writes url allow simpleseedprovider resolve multiple ip per dns name url remove compact storage internals release url make client api support passing timeouts one discussed given current status interface related could block beta release ok regular status update board url ticket need attention url ticket alpha need attention beta alpha ticket either flaky test configuration change beta ticket primarily grouped test plan known bug need reviewer url ticket looking reviewer although one related transient replication alpha status currently ticket marked done assigned alpha primarily compromised interface change flaky test number higher last week revisited ticket affected user interface assigned alpha beta beta status ticket marked done assigned beta consist primarily known bug test plan improvement listed rc status ticket marked done assigned rc working ticket assigned rc please consider assigned alpha beta based release lifecycle wiki linked cumulative flow diagram url thanks jordan"
    },
    "4841":{
        "ID":38966,
        "MESSAGE_ID":"CAGY8e-6dRQzTc3_8cq9emp36HKq1v_xMH_nsbk5ijD32oqRq-Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[discussion]Completing CEP-2",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everyone last week cassandra kubernetes sig clear coming completion specification cep path look something like agree overall specification cassandra kubernetes operator much detail possible required feature one group donating code initial commit jira commit activity common cassandra kubernetes operator two main question come result constitutes completed cep something pmc vote get approved part project procedure code donation scale likely one group participating large amount code help opinion two question would great patrick"
    },
    "4850":{
        "ID":38957,
        "MESSAGE_ID":"CAP+3qq4dk6D=3ZJiCBey9guSJPbGd2Q16Nh2dnqj=qUCaDCScw@mail.gmail.com",
        "PARENT_ID":38954.0,
        "SUBJECT":"Re: Client Caller Context Through Router(RBF)",
        "SENT_FROM":"Akira Ajisaka <aajisaka@apache.org>",
        "TAGS":"existence, property, technology",
        "BODY":"thanks ayush bringing namenode us clientid callid retry cache clientid adding remoteaddr ipcconectioncontext nn use remoteaddr clientid also resolve data locality issue callid dfsrouters share callid clientid request via zookeeper way dfsrouters use callid request may costly zk dfsrouters share id atmostonce request thanks regard akira"
    },
    "4853":{
        "ID":38954,
        "MESSAGE_ID":"CADNPQrg7DY8nsCfVL5Ej33rZYAxRXniwaMzvHD2+_3tEwrPZkQ@mail.gmail.com",
        "PARENT_ID":38925.0,
        "SUBJECT":"Re: Client Caller Context Through Router(RBF)",
        "SENT_FROM":"Hui Fei <feihui.ustc@gmail.com>",
        "TAGS":"property",
        "BODY":"ayush thanks bringing meaningful add one typical problem namenode log real client router ip nn log router ip difficult troubleshooting ayush saxena"
    },
    "4859":{
        "ID":38948,
        "MESSAGE_ID":"CAHyRp2T5BB=SkF6jaM-rmRpB-rCvtrEAAZ-Q8eMPiTui0rEbxg@mail.gmail.com",
        "PARENT_ID":38946.0,
        "SUBJECT":"Re: List of serious issues fixed in 3.0.x",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"ml plaintext bro thanks mick since stuck late link gsheet defect month url component url type url"
    },
    "4860":{
        "ID":38947,
        "MESSAGE_ID":"BYAPR12MB33202E71131D45554489CD66CEA50@BYAPR12MB3320.namprd12.prod.outlook.com",
        "PARENT_ID":38946.0,
        "SUBJECT":"Re: List of serious issues fixed in 3.0.x",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"not-ak",
        "BODY":"sankalp thanks sending spreadsheet josh preparing analysis pending image issue look forward reading would encourage everyone involved project review list ticket captured issue theoretical represent real scenario result data loss data corruption incorrect response query violation fundamental property database community made great progress past two year focus quality dramatically improved safety cassandra database especially recent patchlevel release series said also wood following three issue reported confirmed genuine past week cassandra row get duplicated mixed major version cluster full upgrade cassandra corruptsstableexception sstable upgraded failing read cassandra emptytype override writevalue could attempt write byte expected regarding dinesh point regression test beginning go even response issue spreadsheet evolving new approach toward active assertion data integrity add read repair compaction path detection primary key duplication great way audit remediate instance corruption detected cluster repaired data tracking introduced improvement preview repair also great example enabling cassandra assert consistency repaired data something would taken granted active assertion data integrity invariant cassandra important frontier one need explore previously adopted methodology like property based testing large scale different test asserting identity data cluster post upgrade via billion randomized query fault injection model based test ci improvement flaky test reduction helped make huge progress toward quality continue pay dividend want thank everyone work safety stability clear ahead critical apache cassandra future toward shipping release user trust adopt quickly scott joshua mckenzie sent thursday may cc dev cassandra apache org subject list serious issue fixed hearing image got killed web server trying gmail sorry spam time see apache smtp server list culling image little analysis data defect marked fixversion rose level critical term availability correctness corruption loss charted thing rest project community might find interesting critical availability correctness corruption loss defect fixed per month since month monthly png component critical defect arose note bright red bar sum dark red total defect component png type defect found fixed bright red cluster permaloss dark red temp corrupt loss yellow incorrect response total defect type png personal takeaway ton great defect fixing work gone would love code coverage analysis testing codebase well data surface hotspot defect code might need testing caveat many voiced skepticism value type data past project community probably another conversation another thread hope someone else find interesting useful joshua mckenzie"
    },
    "4861":{
        "ID":38946,
        "MESSAGE_ID":"CAHyRp2TqF1nb414ri6DFNq4c7BmRicorqmsA5NZTAd50wCSUMg@mail.gmail.com",
        "PARENT_ID":38945.0,
        "SUBJECT":"Re: List of serious issues fixed in 3.0.x",
        "SENT_FROM":"Joshua McKenzie <joshua.mckenzie@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hearing image got killed web server trying gmail sorry spam time see apache smtp server list culling image little analysis data defect marked fixversion rose level critical term availability correctness corruption loss charted thing rest project community might find interesting critical availability correctness corruption loss defect fixed per month since month component critical defect arose note bright red bar sum dark red type defect found fixed bright red cluster permaloss dark red temp corrupt loss yellow incorrect response personal takeaway ton great defect fixing work gone love code coverage analysis testing codebase well data surface hotspot defect code might need testing caveat many voiced skepticism value type data past project community probably another conversation another thread hope someone else find interesting useful joshua mckenzie"
    },
    "4862":{
        "ID":38945,
        "MESSAGE_ID":"CAHyRp2TPjePD60mA1cdD_ztE5AM9P-Wh_NxE=sVD1S7NKS9jkQ@mail.gmail.com",
        "PARENT_ID":38941.0,
        "SUBJECT":"Re: List of serious issues fixed in 3.0.x",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"little analysis data defect marked fixversion rose level critical term availability correctness corruption loss charted thing rest project community might find interesting critical availability correctness corruption loss defect fixed per month since month component critical defect arose note bright red bar sum dark red type defect found fixed bright red cluster permaloss dark red temp corrupt loss yellow incorrect response personal takeaway ton great defect fixing work gone love code coverage analysis testing codebase well data surface hotspot defect code might need testing caveat many voiced skepticism value type data past project community probably another conversation another thread hope someone else find interesting useful josh"
    },
    "4864":{
        "ID":38943,
        "MESSAGE_ID":"CADfbTpE+mrC_-0bO-SKG2O8VO5HcpPFE1Dtcs1TM+vjJ7KCb4Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Secure Hadoop without Kerberos",
        "SENT_FROM":"Eric Yang <eric818@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi kerberos developed decade web development becomes popular kerberos limitation work well hadoop example corner case kerberos principal encode port number difficult know principal coming authorized daemon hacker container trying forge service principal hadoop kerberos principal used high privileged principal form credential impersonate end user delegation token may allow expired user continue run job long gone without rechecking end user credential still valid passing different form token work well cloud provider security mechanism example passing aws sts token bucket renewal mechanism good way identify token would expire company work bridging security mechanism different type primary goal hadoop hadoop benefit modernized security using open standard like openid connect proposes unify web application using sso ensure client credential transported stage client server interaction may improve overall security provide cloud native form factor wonder interested community enable hadoop openid connect integration work regard eric"
    },
    "4866":{
        "ID":38941,
        "MESSAGE_ID":"586A5F83-846B-44D6-8A6E-BB6351416D22@apache.org",
        "PARENT_ID":38939.0,
        "SUBJECT":"Re: List of serious issues fixed in 3.0.x",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"existence",
        "BODY":"hi sankalp thanks bringing minimum hope regression test specific issue fixed personally think project focus building comprehensive test suite however issue detected scale need user test environment use case ideally folk stand large cluster tee traffic new cluster report issue automated test suite everyone run large scale would even better thanks dinesh test starting node looking log unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4868":{
        "ID":38939,
        "MESSAGE_ID":"CAEPxca0826SqoXhTgvPMe3YcLJ=HMhf+TusQ9P5gbXK58dxZ6A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"List of serious issues fixed in 3.0.x",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi want share serious issue found fixed created list jira help identify area validating also give insight dev community let know anyone suggestion better use data validating also list might missing issue identified early latest one link url thanks sankalp"
    },
    "4876":{
        "ID":38931,
        "MESSAGE_ID":"CAF3Ajax13CVoWa28+REB2t2jeKTierGGE+AGRZKOZ0221=49HQ@mail.gmail.com",
        "PARENT_ID":38925.0,
        "SUBJECT":"Re: Client Caller Context Through Router(RBF)",
        "SENT_FROM":"Xiaoqiao He <hexiaoqiao@apache.org>",
        "TAGS":"existence",
        "BODY":"hi ayush thank summary launching discussion jira link helpful pushing forward would like underline serious issue hope could get solution far know many user deploy rbf meet issue hdfs hdfs reported undetected issue would like give improve rpc framework going common general solution hadoop one attempt course solve security issue daryn concern practice enhance rpc framework expose proxy interface router data locality data inconsistency resolved expected suggestion feedback welcome thanks best regard hexiaoqiao"
    },
    "4882":{
        "ID":38925,
        "MESSAGE_ID":"CAAGq2gv22uihRC6w=iupUGXOXLLiUH3eC4kZ=Q4oCzUkng6XLg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Client Caller Context Through Router(RBF)",
        "SENT_FROM":"Ayush Saxena <ayushtkn@gmail.com>",
        "TAGS":"property",
        "BODY":"hi wanted share discus problem facing present situation using router based federation presently client connects router namenode namenode receives caller context router rather actual client typically cause couple problem two identified firstly concept data locality work correctly connecting router namenode considers router actual client performs optimization computation based router location rather using actual client location secondly namenode retry cache used case failover event client retries connects router case since call id router actual client retry cache identify repeated call serf whole new call creates inconsistency discussing trying solution since long time tried couple solution add proxy address ipc connection hadoop security concern daryn routerrpcserver transfer callercontext client ip namenoderpcserver hdfs tend little opaque couple problem stated hdfs ajay kumar arpit agarwal favored node pas local node favored node complete solution take account fallback case non availability local node couple solution retry cache problem related jira discussion happened someone tends follow hdfs datalocality problem patch end solution favored node hdfs hdfs hdfs retry cache problem hadoop solution add proxy address ipc connection hdfs solution passing caller context let know help solution workarounds way unblock improvise tried solution thanx ayush"
    },
    "4926":{
        "ID":38881,
        "MESSAGE_ID":"CABsaHTPZQRs6nGJbQCzfhsyzdUNrdESK+LDb=tW7ipEXptRL8Q@mail.gmail.com",
        "PARENT_ID":38878.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"approach make complete sense let sort accept java driver guess widely used reference impl iterate"
    },
    "4929":{
        "ID":38878,
        "MESSAGE_ID":"CAMK=hAPeKA07EojCeWNAn2CnLMRXKqsaN67sK+pGL-SC0tCWMQ@mail.gmail.com",
        "PARENT_ID":38877.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"agree keeping source separate good idea start find benefit later merging two tree easy enough pain split thing apart build system used play big part well ant definitely favor"
    },
    "4931":{
        "ID":38876,
        "MESSAGE_ID":"CADiq6=wBgzGi0S6_uKkwfs15LYWGHq5t2C-hv-Wr2SAUm-dsBg@mail.gmail.com",
        "PARENT_ID":38875.0,
        "SUBJECT":"Re: Changing the default Datanode Volume Choosing policy",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com.INVALID>",
        "TAGS":"property",
        "BODY":"switch hadoop break existing application aware noticeable performance regression case observed feel compelled make feature default strictly better hopefully make hadoop easier use way"
    },
    "4932":{
        "ID":38875,
        "MESSAGE_ID":"CAM2M86N0EzUfEQc2HaJi52JrSWQe1SEL6ABTWHSXP0FL59LLCQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Changing the default Datanode Volume Choosing policy",
        "SENT_FROM":"\"Stephen O'Donnell\" <sodonnell@cloudera.com.INVALID>",
        "TAGS":"existence",
        "BODY":"hi long time back jira raised change default volume choosing policy round robin available space url time objection concern using available space year since cloudera seen cluster running available space enabled seen issue caused feel like policy default change often recap available space place block disk free space higher probability disk within threshold free space behaves round robin fashion mean disk replaced slowly catch usage others disk different size self balance would like ask others community running available space volume choosing policy seen issue run smoothly anyone strong objection changing default available space onwards thanks stephen"
    },
    "4933":{
        "ID":38874,
        "MESSAGE_ID":"CAHyRp2T=Mw8OoHc4S794Rc+1EhZ7v3HA8deZ4nL4=W2dxccSkw@mail.gmail.com",
        "PARENT_ID":38872.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"confidently responding something trying say may communicated clearly attempting enumerate new feature development likely require coordination server driver driver change required support new feature server future roadmap core server driver likely overlap see cep assuming one accepts assertion feature require driver change mean cep component independent architectural api change driver likely impact server thus also require coordination especially driver nested used extensively cqlsh test etc speaking day day maintenance project rather larger feature level roadmap architectural planning would expect day day maintenance intersect governance project regular basis"
    },
    "4935":{
        "ID":38872,
        "MESSAGE_ID":"CANRV6q2sABjujKdV5ZJgNTj5sMwRNbk9g=aeQMieO_7jEa71+g@mail.gmail.com",
        "PARENT_ID":38866.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Sylvain Lebresne <lebresne@gmail.com>",
        "TAGS":"existence, process",
        "BODY":"want clarify plea acknowledge adopt driver especially project becomes quite big sane big project minimum organization let make sure enough organization make sure make future life harder need clear natural separation server driver obvious point organization separation high level favor cassandra project server driver saying debatable single user ml make sense well single web site document cep process see cep somewhat high ish level concern day day maintenance work think going type people primarily focus driver development primarily focus server development may interested able focus much either sum big way unrelated actually expect preponderantly drive day day maintenance would like keep thing easy population obviously goal hinder collaboration consistency overall concretely initial thinking think lot said user list web site documentation cep would global new specific jira project driver jira notification going separate commits mailing list one point brainer see would fight one dev mailing list conflicted see dev discussion gaining common think common gut reaction suggest separate list warming idea experimenting one splitting later unmanageable source repository think super strong opinion far fan abusing mono repo think would overall cleaner separate repo separate history reckon pro mono repo well might boil personal preference committers pmc member pool believe keep organization single project apache sense debatable favor point imply single pool committers pmc member fine outside fact going make even urgent pmc conclude ongoing never concluded discussion around objective criterion committers pmc member nomination actually bunch thing need discus scenario instance datastax driver currently independent release cycle versioning especially go mono repo route would make sense move towards releasing everything together stephen mention tinkerpop turn may require non trivial amount build tool setup lastly stephen previous email might manageable accept one driver first figure detail issue question bound arise accepting worth discussing least address important point talking day day maintenance bulk work really feel rather confident saying wrong vast majority work mostly unrelated important really said one effectively focus side focus one dabble overlap big sylvain"
    },
    "4941":{
        "ID":38866,
        "MESSAGE_ID":"CABsaHTN7We-5nb5oZYykx0Ts3CYwO3k_dfKnsa9MVnsaqL40yQ@mail.gmail.com",
        "PARENT_ID":38865.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks stephen really helpful"
    },
    "4942":{
        "ID":38865,
        "MESSAGE_ID":"CAA-H439zAK1icNh61WcbnSM0Q=yyZ9L0t+bPxAo76QDWn4k7WQ@mail.gmail.com",
        "PARENT_ID":38862.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Stephen Mallette <spmallette@gmail.com>",
        "TAGS":"process",
        "BODY":"every apache project different quite possible experience area apply much offer word matter event helpful many year even prior joining apache tinkerpop quite bringing driver style sub project main concern one think voiced thread fashion core developer would knowledgeable incoming body work maintain going forward core contributor primarily java developer difficult think would suddenly responsible review vote python code example bit trepidation eventually decided good idea opened project purpose brought project directly core repository thinking wanted keep aspect project unified testing release etc ensure particular release tag could sure everything worked together initially started python developed model new driver would arrive already disparate project language wanted model ensured reasonably high bar acceptance created rough set minimum criterion wanted adding new driver release line core criterion common language agnostic test suite needed pas consider ready sense project needed build test release using maven build tool project former ensured reasonable level common tested functionality among driver latter ensured easy consistent way manage build release practice fed nicely docker infrastructure full build giving non jvm developer nice way develop driver latest code without java expert established approach python successfully brought net javascript think number nice upside deciding bring driver first place model acceptance chose saw greater diversity folk contributing general ecosystem opened beyond jvm saw general community coalesced around official driver contributing one rather going creating one project really aware third party driver right language support look something like go three choice suppose go would next target official inclusion release day pretty simple despite complexity environment mixed ecosystem unified build model using maven lot disparate tooling exposed release manager directly say really saw problem core project developer mostly new java review python javascript part contribution quality high managed became knowledgeable went released driver core together longer situation third party driver lagged behind feature core wanted use latest core functionality used latest release core driver could assured worked together felt confident saying think would still consider going single repo situation think might place requirement project build maven think maven turned contributor language ecosystem know jvm would much comfortable working directly tool system familiar course get rid local maven build completely would build latest docker image folk need like also maven aside tinkerpop experience offer completely sure think contribution like one bulk code developed outside asf driver would need go ip clearance process url"
    },
    "4943":{
        "ID":38864,
        "MESSAGE_ID":"CAMK=hAPs5n2ukYve15E=XwLcghuyJna2s1vPYzfbqLQw18DhxA@mail.gmail.com",
        "PARENT_ID":38863.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"separate jira enough enough separate dev list maybe see much purpose trying organize hierarchy problem actually solving sound like trust folk work driver commit random code cassandra case concern know gain hierarchy complexity every committer work every part project aware daily activity"
    },
    "4944":{
        "ID":38863,
        "MESSAGE_ID":"7DB83414-A518-4B0F-A808-75E067AA5E59@apache.org",
        "PARENT_ID":38856.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"essentially position agree baseline requirement merged project trying rule anything wondering optimal division think user point view hopefully achieve appearance without project governance goal absolutely official driver close association link directly cassandra site either way question project best structured seems driver benefit umbrella structure governance discussing commonality direction also need distinct list jira would talking going flat hierarchy perhaps three tier structure something like pmc driver cassandra driver dvr dvr sidecar since driver functionally different database server accoutrement likely different kind discussion completely different release schedule hopefully mostly around programmatic api ux client side performance etc feel intuitively like benefit keeping distinct project different focus technical problem discussion easily happen simultaneously design decision making level might help avoid fragmentation decision making community also help unify decision making across driver decision making body whose purview driver might better emphasise collaboration driver since body function staking strongly held prior conviction see problem think consider carefully upfront think kind decision easy revisit"
    },
    "4945":{
        "ID":38862,
        "MESSAGE_ID":"CAHyRp2QiSXjz-+0ZYa3dXs1tZCmHiBV7LPq7S5ZDwYRA1ytWhg@mail.gmail.com",
        "PARENT_ID":38861.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"step weed bit zookeeper curator example anyone know apache project either subprojects complementary sideprojects interdependent upon ecosystem would like reach pmc advice feedback topic since sense reinventing wheel project wisdom share"
    },
    "4946":{
        "ID":38861,
        "MESSAGE_ID":"CAHyRp2So4G0RXP9YufVsuEr+mJ=pbwOfF7nVr0VM_vWk2_HP1g@mail.gmail.com",
        "PARENT_ID":38860.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"ml noise hard would filter jira update component driver jira query governance see cutting way two separate project ml driver keep coherent view new feature roadmap stuff cep project tie together drive change driver feature ecosystem via cep venn diagram overlap non two project see overlap"
    },
    "4947":{
        "ID":38860,
        "MESSAGE_ID":"BBFB0CFE-89F7-4DE2-ADCC-5B6FCCF7F91E@apache.org",
        "PARENT_ID":38856.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"process",
        "BODY":"say getting messy quickly mean thinking would setup initially jira project sidecar separate one track sidecar specific jiras moment separate mailing list think cassandra dev mailing list volume low enough keep using ml added value give visibility developer need go multiple mailing list unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4951":{
        "ID":38856,
        "MESSAGE_ID":"CANRV6q2sUC_qy84wuK6UVdMqn=Xe9s23faf5Acx0ZbmBGVY+_w@mail.gmail.com",
        "PARENT_ID":38825.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Sylvain Lebresne <lebresne@gmail.com>",
        "TAGS":"process",
        "BODY":"fwiw agree concern raised benedict think carefully think handled rejection donation way driver small project majority day day maintenance unrelated server reverse true appears like one project server official driver one coherent website documentation striving behind scene however feel ting setup amount separation remains server whichever driver donated accepted fairly sure thing would get messy quickly mind mean minimum separate jira project dedicated dev commits mailing list also worth thinking whether single pool committers pmc member desirable tbc sure best way achieve within constraint apache fundation maybe stating obvious fwiw say someone point time simultaneously somewhat actively involved cassandra datastax java driver sylvain"
    },
    "4952":{
        "ID":38855,
        "MESSAGE_ID":"CACvH57LNGR9OS+JPS6L0+oU-M6KHm4k6k-+LxLirS7fzpNfFVw@mail.gmail.com",
        "PARENT_ID":38852.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"currently server ubuntu tested docker ie mac window would need additional server donated maybe start gathering writing pro con approach separate doc unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4955":{
        "ID":38852,
        "MESSAGE_ID":"CALHCZd4dgLMVBMZ5DRJ1-Lo_jwh4Qk--0S-1=_z3z=unnaVjgA@mail.gmail.com",
        "PARENT_ID":38851.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Adam Holmberg <adam.holmberg@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"thanks early input actively developed branch major release breaking change url probably work asked partially driver ci fairly extensive matrix platform runtimes server version sure much excess capacity current jenkins pool proceed deciding sub project incubator question discussed adam"
    },
    "4956":{
        "ID":38851,
        "MESSAGE_ID":"ED52A73D-2E28-4730-A78D-8E5F2CE7EF66@apache.org",
        "PARENT_ID":38825.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"existence",
        "BODY":"benedict concern valid great think issue might occur future personally never thought driver treated separate entity user cassandra used without driver driver public interface tightly coupled server personally feel take donation part cassandra project see issue try resolve point thanks dinesh unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "4976":{
        "ID":38831,
        "MESSAGE_ID":"CAHyRp2RLA5U_aOjLbDmbyk4KCu7U30gac9McEBSmzQ53r2wfbg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Documentation donation",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"opportunity offer large portion documentation apache foundation specifically apache cassandra project well dedicate good portion time maintaining going forward familiar datastax sponsored authored cassandra documentation people often refer community link found spoken doc writer going significant work involved go doc writing system authored sphinx doc authoring system project decide switch thing know jon haddad opinion think would great conversation thread interested couple people near future going opportunity continue working doc full time tree doc maintenance going forward represent little disruption project working day day looking feedback question concern donation thought documentation system use long term since donation size would reasonable time consider switching something preferable advocating system current doc clear poking haddad speak since strong pov next step genuinely excited hoping everyone else josh"
    },
    "4982":{
        "ID":38825,
        "MESSAGE_ID":"AFBE530B-2707-4B90-8387-382CD369D354@apache.org",
        "PARENT_ID":38813.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"example issue explain thinking believe value contributor able know understand majority project undertakes many people track wide variety activity project whether express opinion probably form one involve consider important worry importing several distinct loosely related project governance communication structure strong potential undermine capability people begin assume activity decision making unrelated happens think something important lost sidecar challenge already seems hopefully manageable logical extension cassandra existing primarily plug gap cassandra functionality feature may migrate cassandra time likely release closely tied cassandra subprojects far exclusively consumption cassandra project naturally coupled driver however inherently arm length endeavour publish protocol specification driver maintainer implement otherwise fairly independent dialogue helpful need controlled single entity many driver continue controlled others course able ensure strong overlap governance think would helpful something curator zookeeper seem managed looking curator website also seems pitch relatively opinionated product much driver hope recipe conflict case much limited given functional scope driver anyway better avoided integrated still distinct governance say see value project controlling driver directly worry"
    },
    "4993":{
        "ID":38814,
        "MESSAGE_ID":"CAGY8e-5TFniN=-yBx3+LL5HxB7PD3v39GX=PocZbKY9tD2v5xw@mail.gmail.com",
        "PARENT_ID":38813.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Patrick McFadin <pmcfadin@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would probably good idea get outside guidance project seen like nate said first time url url common component url hadoop mentioned module patrick"
    },
    "4997":{
        "ID":38810,
        "MESSAGE_ID":"21CBB371-B26C-4F68-A0DC-826E849F2725@apache.org",
        "PARENT_ID":38809.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"welcome donation hope able accept driver really great news going however wonder project may accumulating many sub project wonder time think splitting perhaps incubating project driver"
    },
    "4998":{
        "ID":38809,
        "MESSAGE_ID":"648AF9B7-1C75-4DEE-A508-46DA83E10F20@apache.org",
        "PARENT_ID":38807.0,
        "SUBJECT":"Re: DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi adam great hear personally welcome driver donation view inline thanks dinesh java python least opinion major difference could please elaborate generally think people built code base become committers avoid disruption allow continuity completely sure may need rename package would really great could avoid breakage due naming change asf jenkins circleci work driver specific need beyond sub project like cassandra different sidecar etc way driver continue evolve separately unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5000":{
        "ID":38807,
        "MESSAGE_ID":"CALHCZd4AWEvVTvyOSY3ZdFZ4QhE7jPiZj7ZQ5yLe=3kQRob8PQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"DataStax Driver Donation to Apache Cassandra Project",
        "SENT_FROM":"Adam Holmberg <adam.holmberg@datastax.com>",
        "TAGS":"existence, process",
        "BODY":"developer maintain datastax driver would like start conversation donating driver apache cassandra project since actively working support integration driver right plan executing release order avoid delaying release meantime wanted open discussion determine think best suit project going forward number detail would like discus project community naming get discussion going interest project community take ownership currently datastax driver driver taken project stewardship project currently bundle java python five others node php ruby major branch java driver chosen development server currently us java driver latest committers maintain driver nominate new committers contributor current driver code base keep maintaining minimal disruption project whole new artifact named package index coordinate artifact name run ci contribution tree sub project surely even figure go look forward discussing everyone kind regard driver team"
    },
    "5134":{
        "ID":38673,
        "MESSAGE_ID":"CANu2_gx=YRzZ=4kXLgAVRN7zAv8pxmFr30eEL=ix7C5Ys9NGAA@mail.gmail.com",
        "PARENT_ID":38659.0,
        "SUBJECT":"Re: [DISCUSS] Shade guava into hadoop-thirdparty",
        "SENT_FROM":"Dinesh Chitlangia <dineshc.asf@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks initiating weichiu dinesh"
    },
    "5136":{
        "ID":38671,
        "MESSAGE_ID":"CAF5pKXFmViJep3y6=_E1kOQnzzqCrV+u-CGbvAQEXT+VE4JY=g@mail.gmail.com",
        "PARENT_ID":38667.0,
        "SUBJECT":"Re: [DISCUSS] Shade guava into hadoop-thirdparty",
        "SENT_FROM":"Zhankun Tang <ztang@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks wei chiu proposal"
    },
    "5140":{
        "ID":38667,
        "MESSAGE_ID":"D97ADC7D-DE82-4911-9EDB-405BF5B325F4@gmail.com",
        "PARENT_ID":38659.0,
        "SUBJECT":"Re: [DISCUSS] Shade guava into hadoop-thirdparty",
        "SENT_FROM":"Ayush Saxena <ayushtkn@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ayush unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "5141":{
        "ID":38666,
        "MESSAGE_ID":"1f036750-cecb-8809-0a22-8b8033e03753@oss.nttdata.co.jp",
        "PARENT_ID":38664.0,
        "SUBJECT":"Re: [DISCUSS] Shade guava into hadoop-thirdparty",
        "SENT_FROM":"Masatake Iwasaki <iwasakims@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"masatake iwasaki"
    },
    "5143":{
        "ID":38664,
        "MESSAGE_ID":"CAP+3qq6HJM2L4Z0k26U3yx9oLtfaYzczv2OhJ_f6oewu8=6UoA@mail.gmail.com",
        "PARENT_ID":38659.0,
        "SUBJECT":"Re: [DISCUSS] Shade guava into hadoop-thirdparty",
        "SENT_FROM":"Akira Ajisaka <aajisaka@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks akira"
    },
    "5148":{
        "ID":38659,
        "MESSAGE_ID":"CADiq6=zMCVmbjhENg2DL4=UO0AV8EZfCVH8Pb3vGGWmR1w+w9g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Shade guava into hadoop-thirdparty",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"existence",
        "BODY":"hi hadoop devs spent good part past month working dozen colleague update guava version cloudera software includes hadoop hbase spark hive cloudera manager project month finally came conclusion update hadoop even go hadoop going really hard guava guava amount work certify minor release update almost equivalent major release update going guava guava big jump several incompatible api change many place bad google developer sympathetic user guava used hadoop jar hadoop server also client jar hadoop common libs hadoop library used practically software cloudera proposal shade guava hadoop thirdparty relocate classpath classpath make hadoop thirdparty release update existing reference guava relocated path import need update release hadoop contains change way able update guava hadoop future without disrupting hadoop application note hbase already guava update project would much difficult hbase thought option include force downstream application migrate hadoop client artifact listed url nearly impossible migrate guava java apis suppose big project estimate much work going weichiu"
    },
    "5178":{
        "ID":38629,
        "MESSAGE_ID":"CAOpVNY2iEwf0sn64xnngoJz6=-BVHv3+Rke8YM5RbEY100YH2A@mail.gmail.com",
        "PARENT_ID":38456.0,
        "SUBJECT":"Re: [Discuss] num_tokens default in Cassandra 4.0",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"discussed let go speaking anthony privately well forgotten analysis branimir initially done skew allocation may internal datastax mentioned previously thanks mick alex anthony analysis helping back decision data benefit many start cassandra know bad number end hard change decision later assigned url thanks"
    },
    "5234":{
        "ID":38573,
        "MESSAGE_ID":"CAPw+qV4cjrKx9nuuaXC3kJRmSPOtQe4aAQB1NPu0HpF1X8sYoQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Questions and problems about the state of Python 3 support on 4.0",
        "SENT_FROM":"Stefan Miklosovic <stefan.miklosovic@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"hi built deb package debian current trunk today wanted test cqlsh got error machine python version python machine cqlsh cassandra cassandra execute select system auth role machine usage cqlsh py option host port cqlsh py error boot valid port number debian buster please keep mind without execute connects fine think bug pretty sure working wanted try python digging deeper saw set change merged recently function specifically hence see support python question strict come version python secondly project building deb debian suppose version debian actually built version python box release example quickly looking python buster stretch jessie even wheezy check official python version understand correctly mean one installs deb want run python python version cqlsh support install repository chase python version build source could either make compatible switch version delete specific requirement code humbly think distribute deb also say release targetting possible install standard mean repos regard url url url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5351":{
        "ID":38456,
        "MESSAGE_ID":"67ff946b-9d11-4267-96ae-b3e499d04c3f@www.fastmail.com",
        "PARENT_ID":38445.0,
        "SUBJECT":"Re: [Discuss] num_tokens default in Cassandra 4.0",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"work first step forward good doc always empower user default setting cheer mick unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5362":{
        "ID":38445,
        "MESSAGE_ID":"CAMK=hAP-MmViXvbsqtZeeA-niem9p+wf0zBRu54rSrX+8yzAWg@mail.gmail.com",
        "PARENT_ID":38443.0,
        "SUBJECT":"Re: [Discuss] num_tokens default in Cassandra 4.0",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"existence",
        "BODY":"lot going hopefully respond everything coherent manner algorithm generate token range created good size distribution instead using random token first node think would better picking random initial token using even distribution around ring using first token offset main benefit random get collision distribution read change cassandra maybe address problem already ignore suggestion provided num token never seen used practice worked together personally moved quite cluster token run balance issue sure saying never seen practice whole bunch client mick said way unaware cassandra doc community recommendation say avoid problem regardless value num token paulo good practice since lead imbalance problem like document perhaps add warning even hard fail encountered node startup agreed intend document cassandra mick test important nuance result seeing sound like test cover edge case using single rack az entire cluster remember many time actually saw several hundred cluster looked almost year tlp say wild think drive pick token count probably better using completely random algorithm corner case using single rack fewer rack rf also encourage people run cassandra way set gunshot foot world tradeoff still convinced token make sense default assuming fix worst case random imbalance small cluster significantly better option make easier team scale cassandra way claim using token brings unnecessary probably unknown ceiling people ability scale majority cluster people pick cassandra scalability availability still high would rather put default work best majority people document case people might want deviate rather picking somewhat crappy better default said better token distribution yet going assume people put production minimal configuration change help deal imbalance issue today know work better willing take win today assumption folk ok changing value release find make work without super sharp edge currently stab would much rather ship token want keep debating much end making change propose drop immediately add production doc cassandra note token count reason would want follow get token simulation written try sort topology whatever token algorithm want simulation written got report revisit eventually probably need add ability folk fix cluster imbalance without adding removing hardware suspect got fair amount plumbing rework make something like doable jon"
    },
    "5364":{
        "ID":38443,
        "MESSAGE_ID":"CAKaZCX6ZGKivW-k8L-jOVDhdr7QcixtxRXpsqmMSi6MJaKTo=w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [Discuss] num_tokens default in Cassandra 4.0",
        "SENT_FROM":"Paulo Motta <pauloricardomg@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"great investigation good job guy personally would liked seen even iteration run iteration give indication average randomness important concern consequence imbalance cluster grows unlucky initial random token example random token land close together token allocation deal breaking large token range unable anything tiny token range even bad experience consideration picking default num token perhaps simple way avoid update random allocation algorithm generate token range created good size distribution worse example rf two rack get random token know number production cluster set way unaware cassandra doc community recommendation say avoid problem regardless value num token number rack multiple replication factor good practice since lead imbalance problem like document perhaps add warning even hard fail encountered node startup cheer paulothem seg de march de mick semb wever mck apache org escreveu ask analysis data risk different num token choice present rush new default background information data operator value added thanks everyone patience topic following input number front analysis token distributionsthe following work done alex dejanovski anthony grasso build upon previous work last pickle recommend best value client please buy beer two effort done following three graph show range imbalance occur cluster growing node node different value num token range based run iteration except got ten num token num token num token graph generated using cluster created aws tlp cluster url script written automate testing generate data value num token cluster configured one rack course interpretation debatable data graph url see graph token allocation pretty good fixing initial bad random token imbalance time node presuming setup cluster correctly token allocation actually work node balanced num token greater need get node num token good balance need get node num token good balance need get node num token good balance personally would liked seen even iteration run iteration give indication average randomness important concern consequence imbalance cluster grows unlucky initial random token example random token land close together token allocation deal breaking large token range unable anything tiny token range even bad experience consideration picking default num token token allocation work touched already thread case token allocation fails kick first node rf rack generates random token typically mean first three node worse example rf two rack get random token know number production cluster set way unaware cassandra doc community recommendation say avoid problem regardless value num token algorithmic token allocation handle rack rf case well cassandra recently landed trunk understanding improves situation graph cover situation described dc rack rf ekaterina maybe could elaborate decommissioning nodeselasticity feature cassandra operational cost cassandra real consideration reduction node cluster back node cluster happen often enough decommissioning node smaller cluster greatest operational cost saving yet suffer low num token setup recommendation cassandra consulting companiesmy understanding datastax recommends num token instaclustr last pickle recommended interestingly enough pushing num token using today num token already sitting lot house experience keeping realclusters used num token regretted past analysis work similar led use num token cost optimisation cluster one key user concern witnessed problem front num token accept validity importance increased availability provided num token never seen used practice default value num token important value good business consultant bad choice cluster difficult change new default chosen wisely regard mick anthony alex"
    },
    "5447":{
        "ID":38360,
        "MESSAGE_ID":"5BF1158F-BE52-4DDD-9953-FDCB9AEDD783@walmart.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [RELEASE] Apache Cassandra 3.11.6 released",
        "SENT_FROM":"Chad Helms <Chad.Helms@walmart.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"get apache cassandra bin tar gz artifact published maven central please"
    },
    "5452":{
        "ID":38355,
        "MESSAGE_ID":"CA+3EGT4iF5XWV_Ap6+t7HXuobPLqhBNzO9xKzXhxEbpPAi-jVg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Libraries update",
        "SENT_FROM":"Ekaterina Dimitrova <ekaterina.dimitrova@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hi nate deepak back topic thank response valuable feedback definitely dependency documentation maven repo great resource question really process follow update regularly library understanding process thank saw discussion slack email different people different experience variety project great want summarize try come option ekaterina dimitrova software engineer ekaterina dimitrova datastax com datastax com"
    },
    "5490":{
        "ID":38317,
        "MESSAGE_ID":"ff75e277-af80-2834-20e6-b0f6eb49454d@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.6 released",
        "SENT_FROM":"Michael Shuler <mshuler@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5491":{
        "ID":38316,
        "MESSAGE_ID":"7c5e03eb-993a-6847-5ad2-7a1612d65f50@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.20 released",
        "SENT_FROM":"Michael Shuler <mshuler@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5492":{
        "ID":38315,
        "MESSAGE_ID":"f26c6ac5-fc45-918b-db50-2b08947ec91a@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.16 released",
        "SENT_FROM":"Michael Shuler <mshuler@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5528":{
        "ID":38279,
        "MESSAGE_ID":"CA+3EGT63KY4fJJaYmXdpDK6pDhh12qwQt3HpyUrnYZu6_rDcZA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Libraries update",
        "SENT_FROM":"Ekaterina Dimitrova <ekaterina.dimitrova@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hello everyone looking library update date per user request made think one thing approach new version release version library cassandra depends sanitized way overall view plan update done case case basis done think would good idea get certain view see easily updated know late big rewrite least maybe update new version introduce big change thought objection ekaterina dimitrova software engineer ekaterina dimitrova datastax com datastax com"
    },
    "5548":{
        "ID":38259,
        "MESSAGE_ID":"7ECC4F74-417B-4BFA-9065-945E9E856FF7@apache.org",
        "PARENT_ID":38258.0,
        "SUBJECT":"Re: Do we need Javadoc in binary distribution? Was: [RELEASE] Apache Cassandra 4.0-alpha3 released",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5549":{
        "ID":38258,
        "MESSAGE_ID":"CAMK=hAOF5sMMCH4G7J+XnDTQ=c16jXPiTXnZx_h6bfOoi8PyxA@mail.gmail.com",
        "PARENT_ID":38257.0,
        "SUBJECT":"Re: Do we need Javadoc in binary distribution? Was: [RELEASE] Apache Cassandra 4.0-alpha3 released",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"well"
    },
    "5550":{
        "ID":38257,
        "MESSAGE_ID":"CAHyRp2RG1exZXaRMR4m0-53nCGP1s=YiY=3q08s5bN-_=_EbEA@mail.gmail.com",
        "PARENT_ID":38256.0,
        "SUBJECT":"Re: Do we need Javadoc in binary distribution? Was: [RELEASE] Apache Cassandra 4.0-alpha3 released",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"technology",
        "BODY":"removing javadoc distro"
    },
    "5551":{
        "ID":38256,
        "MESSAGE_ID":"1f81d14c-4cdd-3cf5-c952-8fdf00d15faa@pbandjelly.org",
        "PARENT_ID":38255.0,
        "SUBJECT":"Re: Do we need Javadoc in binary distribution? Was: [RELEASE] Apache Cassandra 4.0-alpha3 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"existence, property",
        "BODY":"like idea keeping binary deployment size sure handle tarballs could certainly split doc debian rpm package add cassandra doc deb rpm package installable separately user want common doc get large suppose could done apache cassandra doc tar gz sure release policy part thing need research please open jira packaging improvement kind regard michael"
    },
    "5552":{
        "ID":38255,
        "MESSAGE_ID":"m2lfpde9ds.fsf@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Do we need Javadoc in binary distribution?  Was: [RELEASE] Apache Cassandra 4.0-alpha3 released",
        "SENT_FROM":"Alex Ott <alexott@gmail.com>",
        "TAGS":"existence, property, technology",
        "BODY":"hi unpacked binary distribution noticed ship many file javadoc directory thousand file occupy mb disk mb whole unpacked cassandra look practical standpoint expect people run cassandra use javadoc purpose know often contains useful detail implementation talk day day work imho file required least every machine cassandra maybe generate separate artifact javadoc file mick semb wever fri feb wrote msw cassandra team pleased announce release apache cassandra version alpha msw apache cassandra fully distributed database right choice need scalability high availability without compromising performance msw url msw downloads source binary distribution listed download section msw url msw downloads source binary distribution msw url msw url msw debian redhat configuration msw source list msw deb url main msw yum config msw baseurl url msw see url full install instruction msw alpha version intended production use however msw project would appreciate testing feedback make final msw release better always please pay attention release note msw let know encounter problem msw enjoy msw change txt cassandra git blob plain change txt hb ref tag cassandra alpha msw news txt cassandra git blob plain news txt hb ref tag cassandra alpha msw url msw msw unsubscribe mail user unsubscribe cassandra apache org msw additional command mail user help cassandra apache org best wish alex ott principal architect datastax url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5639":{
        "ID":38168,
        "MESSAGE_ID":"CAHkQdMj1UYYDGuSA1YNcG2ZDRud4pTst89=hTy7694b3T+HjmQ@mail.gmail.com",
        "PARENT_ID":38164.0,
        "SUBJECT":"Re: Update defaults for 4.0?",
        "SENT_FROM":"Alexander Dejanovski <alex@thelastpickle.com>",
        "TAGS":"existence",
        "BODY":"support changing default gc setting one drive nut raise max heap size cm instead still go higher half available ram also set new gen size heap size mb per core rule computing new gen size make sense going least context cassandra one common optimization make cluster peep run cassandra gc expert alexander dejanovski france alexanderdeja consultant apache cassandra consulting url"
    },
    "5643":{
        "ID":38164,
        "MESSAGE_ID":"CAHyRp2QDh1WYRsERbSgR=d-6iq2phGGHK1Yyx6bWNxKn8rkspw@mail.gmail.com",
        "PARENT_ID":38156.0,
        "SUBJECT":"Re: Update defaults for 4.0?",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"realized longer create epic anymore new jira ui obtuse figure give odds thinking may due transition ldap since planned experimenting whole confluent testing page look like epic today ping nate godawfully early nz read email either way"
    },
    "5651":{
        "ID":38156,
        "MESSAGE_ID":"CAOpVNY3WUo00AQuXcRrNZmN079euL-0SiSuCnhQHYuM+Hzu4TA@mail.gmail.com",
        "PARENT_ID":38154.0,
        "SUBJECT":"Re: Update defaults for 4.0?",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"previously created url updating compaction throughput mb default created url updating num token default url updating role permission credential validity default url updating default snitch gossipingpropertyfilesnitch unable create epic project sure project permission could someone create epic link ticket subtasks jon would mind creating ticket around jvm default thinking default gc setting better box experience thanks jeremy"
    },
    "5653":{
        "ID":38154,
        "MESSAGE_ID":"CAMK=hAN56Lzy0c6g_0b8i0tsb22Q-dvWtN+eiG+HFdSZtJd4eg@mail.gmail.com",
        "PARENT_ID":38153.0,
        "SUBJECT":"Re: Update defaults for 4.0?",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"yes please also update jvm default"
    },
    "5654":{
        "ID":38153,
        "MESSAGE_ID":"CAOpVNY3NsS2=jR_V5=81Y05O8M0f7z8x3Obi8jEcon=MfFQUVg@mail.gmail.com",
        "PARENT_ID":38119.0,
        "SUBJECT":"Re: Update defaults for 4.0?",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"existence",
        "BODY":"summarize thread think people generally okay updating certain default provided make sure unpleasantly surprise cluster operator think num token compaction throughput mb could go release note reason last email also agree consider bump role validity permission validity credential validity along default snitch going gpfs default give people dc aware default least start everyone okay create ticket link epic discus separately thanks jeremy"
    },
    "5678":{
        "ID":38129,
        "MESSAGE_ID":"CAPwFCc7tfCeyYDc8aEqswpXu0M_RPioc++Xjk3KZzuc5R5K_Sg@mail.gmail.com",
        "PARENT_ID":38083.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"Jordan West <jordanrw@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everyone josh traveling week sent brief summary offered send mailing list update enough progress last week warrant update board found url detail progress closed ticket week rolling total last update last week across alpha beta closed url total url lhf failing test failing test assignee remaining unassigned ticket found url need reviewer ticket need reviewer last week found url available work alpha remaining test failure beta rc issue unassigned found url ready commit ticket marked ready commit found url testing"
    },
    "5690":{
        "ID":38117,
        "MESSAGE_ID":"CADiq6=wg+cUm=DBo4zefEbR+JQk_Jze9a7M6ufcd-yJ+5On0Ng@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"This week's Hadoop storage community online meetup",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi bit hiatus would like revive regular community sync usual call scheduled pacific time wednesday gmt pm india pm beijing thursday agenda week hadoop release plan use rocksdb keep namenode partial namespace memory great discussion baolong anu hdfs slack channel would like use opportunity discus please join via zoom url past meeting minute url feedback gift truly value feedback please let know see opportunity improve communication community weichiu"
    },
    "5699":{
        "ID":38108,
        "MESSAGE_ID":"66d7f68a-7182-729f-a48a-25a5f6adc84a@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Call for presentations for ApacheCon North America 2020 now open",
        "SENT_FROM":"Rich Bowen <rbowen@apache.org>",
        "TAGS":"not-ak",
        "BODY":"dear apache enthusiast youare receiving message subscribed one project mailing list apache software foundation call presentation apachecon north america open url apachecon held sheraton new orleans september th october nd past year apachecon feature track focusing various technology within apache ecosystem call presentation ask select one track agenerala content fall outside one already organized track track karaf internet thing fineract community content delivery solr lucene search gobblin big data integration ignite observability cloudstack geospatial graph camel integration flagon tomcat cassandra groovy web httpd general cfp close friday may america new york time submit early submit often url rich apachecon planner unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5700":{
        "ID":38107,
        "MESSAGE_ID":"CADectgbap6eBn3yirbJs3HN+RwAZZ=J8Khk1KkxA7-R4yArYrw@mail.gmail.com",
        "PARENT_ID":38105.0,
        "SUBJECT":"Re: Amazon MCS contribution plan",
        "SENT_FROM":"Mick Semb Wever <mick@thelastpickle.com>",
        "TAGS":"not-ak",
        "BODY":"hi steve almero shall take discussion list idea come back list thing looking place discussion soon move private discussion infra folk regard mick"
    },
    "5701":{
        "ID":38106,
        "MESSAGE_ID":"9554D6F9-8027-44A0-93E8-DEAA9C16BD0D@apache.org",
        "PARENT_ID":38105.0,
        "SUBJECT":"Re: Amazon MCS contribution plan",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"existence, technology",
        "BODY":"almero thanks introducing steve thanks helping infra cassandra think mick semb wever stephan podkowinski michael shuler guide infra side active discussion slack regarding infra testing cassandra sure landed planning add ec instance jenkins build node thanks dinesh unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5702":{
        "ID":38105,
        "MESSAGE_ID":"86feaf2784ee49d8937fcafb05a3328e@EX13D03EUC002.ant.amazon.com",
        "PARENT_ID":38082.0,
        "SUBJECT":"RE: Amazon MCS contribution plan",
        "SENT_FROM":"\"Gouws, Almero\" <almerog@amazon.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"would like introduce steve mayszak recently joined mc team steve looking work required get infrastructure online asf slave txt say adding additional infrastructure see url seems permission page locked could someone please help get access page almero"
    },
    "5708":{
        "ID":38099,
        "MESSAGE_ID":"CBD3F6E5-0354-497F-84B3-B4D14DE0DD4B@apache.org",
        "PARENT_ID":38098.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"specifically anyone interested think probably maintain three tag work landing alpha alpha help track relevant information first limited release first general release point release process delivered"
    },
    "5709":{
        "ID":38098,
        "MESSAGE_ID":"C77B7F1E-F457-4255-954B-58788F933181@apache.org",
        "PARENT_ID":38097.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think always distinction way treat alpha beta versus patch release staged delivery landing dev user different release know ever totally consistent across major version though think view alpha equivalent except value maintained commit historically track thing land release process discussed somewhere age ago remember value probably also value introducing alpha etc top probably decide document say least consistent next major"
    },
    "5710":{
        "ID":38097,
        "MESSAGE_ID":"CAHyRp2SsAx0uhwLBweyJMAPVQs5Xec86Dqnawh315HjKk7gd=A@mail.gmail.com",
        "PARENT_ID":38096.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"historically believe used nomenclature indicate general release wanted thing etc upon merge update fixversion reflect release actually went still thing whether thing current appropriate usage fixversion project documented somewhere"
    },
    "5711":{
        "ID":38096,
        "MESSAGE_ID":"BYAPR12MB352857672CD192A53822420ACE370@BYAPR12MB3528.namprd12.prod.outlook.com",
        "PARENT_ID":38091.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"not-ak",
        "BODY":"realized would misunderstood mick original email apology would originally interpreted question prioritization intent ensure fix version field reflects release given change included originally targeted apology misunderstanding agreed yes would make sense update recently committed item future fix version indicate resolved alpha seen fix version refer specific alpha release given one moment agree would useful differentiate alpha beta rc build given change land thanks mick scott mick semb wever sent tuesday january pm dev cassandra apache org subject cassandra dev work status yeah though nuance ticket milestone open version becomes available milestone indicated fixversions field ticket open suffixed version ticket get resolved closed fixversion updated exact version becomes available given actually exact alpha alpha etc version maybe missed piece info along way true alpha beta rcs unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5716":{
        "ID":38091,
        "MESSAGE_ID":"a571427e-a389-4e2e-849a-2f2c5692e348@www.fastmail.com",
        "PARENT_ID":38089.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yeah though nuance ticket milestone open version becomes available milestone indicated fixversions field ticket open suffixed version ticket get resolved closed fixversion updated exact version becomes available given actually exact alpha alpha etc version maybe missed piece info along way true alpha beta rcs unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5718":{
        "ID":38089,
        "MESSAGE_ID":"BYAPR12MB3528D89057239DBD5F54DAE0CE340@BYAPR12MB3528.namprd12.prod.outlook.com",
        "PARENT_ID":38085.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"not-ak",
        "BODY":"think intent milestone meant indicate contributor view completion item exit criterion alpha beta rc necessarily item completed strict order principle would interpret work targeting earlier milestone higher priority generally glad see contribution help close item pre release milestone mick semb wever sent tuesday january dev cassandra apache org subject cassandra dev work status issue closed alpha given yet beta unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5722":{
        "ID":38085,
        "MESSAGE_ID":"d4256b95-243e-42e4-9c1e-e28b63d40b4e@www.fastmail.com",
        "PARENT_ID":38083.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"issue closed alpha given yet beta unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5723":{
        "ID":38084,
        "MESSAGE_ID":"CAHyRp2RDaW40muoDQc2EQ9fbyH5H-aRUBx8yp2COoQEw3-ekzg@mail.gmail.com",
        "PARENT_ID":38083.0,
        "SUBJECT":"Re: Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"Joshua McKenzie <joshua.mckenzie@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"apparently formatting got straight borked may try sending subsequent email personal gmail instead apache address see keep rich text formatting sorry ugliness"
    },
    "5724":{
        "ID":38083,
        "MESSAGE_ID":"CAHyRp2RSPukPPTGgkWdMmrmBYdH+AxDA9r-EnW5B9tw__xTE0w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra 4.0 Dev Work Status",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"hello welcome kickoff email release work status structure content fluid would like see see something please reply let know goal purely help meet need dev community initial thinking send weekly biweekly depending volume change thing relatively unchanged time next week may go twice month put together board recent open scope anything closed within past week show intent use purely visualization tool advocate constraining work progress time col tracking kanban esque thing find useful single place poke prod state release see thing might need attention observation stand drop ticket detail bottom email convenience progress closed issue past week total ticket across alpha beta lhf failing test alpha release assignee good low hanging fruit anyone want get involved project need review beta ticket release ticket patch available reviewer available work alpha ticket beta ticket rc ticket assignee time excluding patch available review assignee assumption flight probably need assignee fixed take look bit testing quality test plan wiki article following open opportunity data per wiki follow scott confirm accuracy area testing yet started area yet shepherd area yet jira ticket associated would personally like see information wiki translated jira epic ticket area testing validation track status one place avoid information atrophy staleness given volume information already current email defer discussion another thread lastly intentionally avoiding conversation scope ticket release email etc given friction last week topic would like start providing insight visibility people assuming interest happy facilitate discussion around scope separately jira dev list etc embedded list ticket state case want easily peruse pick work going board test failure assignee link cassandra fix flakey test remote query cql test testcqlslowquery test alpha link cassandra investigate allocating mib chunk reaching maximum bufferpool size beta link cassandra fix flakey test consistency test testconsistency alpha link cassandra fix failing test test rolling upgrade internode ssl upgrade test upgrade version test testprotovupgrade allversions randompartitioner endsat trunk head alpha link cassandra fix failing test test rolling upgrade internode ssl upgrade test upgrade version test testprotovupgrade allversions endsat trunk head alpha link cassandra fix flaky checksummingtransformertest classpath alpha link cassandra fix flakey testacquirereleaseoutbound classpath alpha patch available needing reviewer link cassandra blockingreadrepair maintain monotonicity range movement link cassandra fix multi dc nodetool status output link cassandra purgable tombstone cause false positive repaired data tracking link cassandra legacy counter shard cause false positive repaired data tracking link cassandra ssl connection problem upgrading upgrading link cassandra rpmbuild spec file missing auditlogviewer fqltool link cassandra update hppc dependency link cassandra remove joda time dependency link cassandra sstableloader understand listening cql connection multiple port link cassandra add test coverage workflow circleci config assignee link cassandra confirm correctness window script post link cassandra closedchannelexception handled fserror link cassandra move compaction strategy dedicated page expand detail link cassandra cassandrainputstream bug link cassandra ooms caught rethrown link cassandra fix flakey test remote query cql test testcqlslowquery test link cassandra investigate allocating mib chunk reaching maximum bufferpool size link cassandra fix flakey test consistency test testconsistency link cassandra short read protection cause partial update read link cassandra fix failing test test rolling upgrade internode ssl upgrade test upgrade version test testprotovupgrade allversions randompartitioner endsat trunk head link cassandra fix failing test test rolling upgrade internode ssl upgrade test upgrade version test testprotovupgrade allversions endsat trunk head link cassandra fix flaky checksummingtransformertest classpath link cassandra add verification state machine streamsession link cassandra recycler weakorderqueue occupies heap link cassandra improve system table handling losing disk using jbod link cassandra fix flakey testacquirereleaseoutbound classpath link cassandra calculatependingranges longer safe multiple adjacent range movement link cassandra add command show progress data streaming index build link cassandra standardise config jvm parameter link cassandra transient replication pre release followup work link cassandra fix eclipse warning introduced parameter handling link cassandra fake row deletion range tombstone causing digest mismatch sstable growth link cassandra bufferpool regression link cassandra add documentation java support thanks everyone contribution process attention"
    },
    "5725":{
        "ID":38082,
        "MESSAGE_ID":"4cc94230-4681-4229-bf56-5ca8309984eb@www.fastmail.com",
        "PARENT_ID":38078.0,
        "SUBJECT":"Re: Amazon MCS contribution plan",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"property",
        "BODY":"would immense contribution thank almero everyone aws think others internal infrastructure running dtests much better input ideal instance type understanding server gb ram meet minimum spec largest dtests michael aleksey sam alex blake ticket url describes process last time infrastructure added asf slave txt doc also help explain bit url though cassandra currently mia info date would happy take charge coordinating get server get agreed upon regard mick unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5728":{
        "ID":38079,
        "MESSAGE_ID":"EB3C2AE2-E3BF-40E5-BB0D-BC5C87F17A9A@apache.org",
        "PARENT_ID":38078.0,
        "SUBJECT":"Re: Amazon MCS contribution plan",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi almero great see interest contributing project currently apache cassandra community code freeze ensure stabilize cassandra focus going testing blog post validating cassandra anything team could help test cassandra stabilize would helpful community thanks dinesh url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5729":{
        "ID":38078,
        "MESSAGE_ID":"634b2d2e468149e3b36e10e44ff219dd@EX13D03EUC002.ant.amazon.com",
        "PARENT_ID":null,
        "SUBJECT":"Amazon MCS contribution plan",
        "SENT_FROM":"\"Gouws, Almero\" <almerog@amazon.com.INVALID>",
        "TAGS":"existence, process, property, technology",
        "BODY":"hi cassandra devs name almero gouws head engineering amazon managed apache cassandra service mc team eager begin contributing apache cassandra want share contribution idea planned goal thread get input guidance best way accomplish effort sigv plugins developed java client server authentication plugins make use amazon signature version use plugins production leverage short term session based credential well aws identity access management role authenticating mc looking open source client server plugins self managed cassandra cluster could benefit well something community would interested aim add plugins main project host separate repo make code available review soon infrastructure noticed need infrastructure run automated test cassandra would like help test run regularly reasonable running time believe xlarge ec instance could help accomplish would happy make capacity available help validate appropriate capacity guide configured codeguru invent announced amazon codeguru preview codeguru machine learning service automated code review application performance recommendation looking enable codeguru support apache cassandra github repo assist reviewing pull request codeguru meant replacement developer review instead give specific recommendation fix improve code added repository codeguru would still optional tool require reviewer change existing workflow something community would interested looking forward hearing working community benefit user apache cassandra would also like introduce derek chen becker dchenbec amazon com senior engineer amazon mc along derek available user dev mailing list regularly slack channel well almero url url url url"
    },
    "5786":{
        "ID":38021,
        "MESSAGE_ID":"DM6PR04MB65745B3A498C8368C7E796F4E13E0@DM6PR04MB6574.namprd04.prod.outlook.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop 3.3 Release Plan Proposal",
        "SENT_FROM":"Brahma Reddy Battula <brahmareddy.battula@hotmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi continue faster cadence release accommodate feature could plan hadoop release around march mid start process sooner establish timeline propose target hadoop release march mid month would also would like take opportunity come detailed plan feature freeze date feature merged feb code freeze date blocker critical improvement non blocker critical bug fix march release date march tried come list feature radar could candidate merged completed feature hdfs hdfs rbf stabilization phase owner brahma hdfs scale testing hdfs namenode real metadata workload dynamometer owner erik krogen hdfs support non volatile storage class memory scm hdfs cache directive owner feilong hadoop support impersonation authenticationfilter owner eric yang yarn application catalog yarn application owner eric yang yarn scheduling opportunistic container owner konstantinos karanasos yarn support vector engine new accelerator hardware based pluggable device framework owner peter bacsko yarn umbrella follow intelopencl fpga plugin owner peter bacsko yarn umbrella dynamically add remove auxiliary service feature close finish hadoop upgrade protobuf something newer owner vinay yarn schedule container based utilization currently allocated container owner haibo chen yarn umbrella tool help migration fair scheduler capacity scheduler owner weiwei yang yarn umbrella usability improvement scheduler activity owner tao yang yarn umbrella pluggable device plugin framework ease vendor plugin development owner zhankun tang yarn runc container runtime owner eric badger hadoop uber jira sa phase vi hadoop feature owner steve loughran hadoop uber jira abfs phase ii hadoop feature fix owner steve loughran hadoop uber jira sguard phase iv hadoop feature owner steve loughran hadoop support java lts hadoop owner akira ajisaka summary issue status issue fixed big number blocker critical issue open followup owner get status get code freeze date please let know missed feature targeted per timeline would like volunteer release manager release please let know suggestion reference project yarn hadoop mapreduce hdfs resolution fixed fixversion project yarn hadoop mapreduce hdfs priority blocker critical resolution unresolved target version order priority desc note added owner based jira assignee reporter please correct ii update cwiki regard brahma reddy battula"
    },
    "5803":{
        "ID":38004,
        "MESSAGE_ID":"CADiq6=zzMp7ERjDUVocBiRjJQEZPkuUHVH-aPv1UxBSmOnpyUg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Reminder: Hadoop Storage Online Meetup tomorrow (Hadoop 2->3 upgrade)",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi gentle reminder tomorrow online meetup fei hui didi going give presentation didi hadoop hadoop upgrade experience extend session hour fei speak mandarin help translate non mandarin speaker feel free join time date jan pm west coast pst jan pm beijing china cst jan india ist jan pm tokyo japan jst join zoom meeting url one tap mobile new york dial location new york toll free toll free meeting id find local number url"
    },
    "5871":{
        "ID":37936,
        "MESSAGE_ID":"CAO0b___=NTVCpkkPEypqvEewBoTGVe2eoiRFMKzNcMF9RHymmA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Some updates for Hadoop on ARM and next steps",
        "SENT_FROM":"Zhenyu Zheng <zhengzhenyulixi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi hadoop first want thanks wei chiu last week hadoop community sync introduce idea arm support hadoop also attendee listening providing suggestion want provide update status teammate successfully donated arm machine apacheinfra team setup running url might good idea make use like running periodic job experiment also benifit discussion asking help identified problem keep try test debug sub project sub project current status yarn running whole test suit test suit skipped due rule previous test fails skip suit manually run test suit see pas full test result total failure error skipped among error came apache hadoop yarn timelineservice hbase test test suit came apache hadoop yarn distributedshell suit walk arounds walk arounds build hadoop arm pre build grpc java teammate working community release newer version arm support github com grpc grpc java issue yarn test timelineservice hbase suit need either hbase built protocbuf hbase hbase external protocbuf hbase internal pre build new error still debugging rest know issue possible walk arounds reported hadoop jira wei chiu tent jira report url put test log attachment error related surefire report github url attachment size limited sending mailling list please check interested move little bit forward make use arm resource apacheinfra best regard zhenyu"
    },
    "5884":{
        "ID":37923,
        "MESSAGE_ID":"CAHzWLgeSg7zi1teAaqOUur3PsdS8Xx+oO2nPj518WJAftvDG0Q@mail.gmail.com",
        "PARENT_ID":37917.0,
        "SUBJECT":"Re: [DISCUSS] Making 2.10 the last minor 2.x release",
        "SENT_FROM":"Jonathan Hung <jyhung2357@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks eric comment regarding concern feel pro outweigh con chance patch release much higher new minor release seem many people outside company expressed interest getting new feature branch prior release even week release patch gone branch branch already diverged quite bit case always reverse decision really need recreating branch proposal would reduce lot confusion going jonathan hung"
    },
    "5889":{
        "ID":37918,
        "MESSAGE_ID":"CAD++eCmksN5ZxcG3HMGwCLujzAqRDfUyanj0xHZqWUgcL4hpmg@mail.gmail.com",
        "PARENT_ID":37917.0,
        "SUBJECT":"Re: [DISCUSS] Making 2.10 the last minor 2.x release",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks jonathan bringing"
    },
    "5890":{
        "ID":37917,
        "MESSAGE_ID":"84128534.1613859.1573846857451@mail.yahoo.com",
        "PARENT_ID":37914.0,
        "SUBJECT":"Re: [DISCUSS] Making 2.10 the last minor 2.x release",
        "SENT_FROM":"\"epayne@apache.org\" <epayne@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks jonathan opening discussion favor proposal recently released moving take time community seems premature make decision point never need release eric"
    },
    "5892":{
        "ID":37915,
        "MESSAGE_ID":"CAHzWLgcn3ZW-nqX9P22GX-+8MrsgGHYea5wwS7Phv6CU9UN9Zg@mail.gmail.com",
        "PARENT_ID":37914.0,
        "SUBJECT":"Re: [DISCUSS] Making 2.10 the last minor 2.x release",
        "SENT_FROM":"Jonathan Hung <jyhung2357@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"additional item would need mark fix version yarn hdfs mapreduce hadoop remove version project jonathan hung"
    },
    "5893":{
        "ID":37914,
        "MESSAGE_ID":"CAHzWLgftqc6XSq0c7XA+1dZHNwQfn_aL1WJsCVsVYTdCa_zP7Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Making 2.10 the last minor 2.x release",
        "SENT_FROM":"Jonathan Hung <jyhung2357@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk given release fact intended bridge release hadoop proposing make last minor release line branch currently main issue many fix going branch theoretical going branch become fix branch likely never see light day unless backported branch propose delete branch rename branch branch set version new branch snapshot way get current branch fix release line commit chain look like trunk branch branch branch branch branch thought jonathan hung url"
    },
    "5894":{
        "ID":37913,
        "MESSAGE_ID":"CADiq6=wY=Y7D6k3SVujCM4OMkSxgmMEsPksiMi3r49R-5+iVgg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Questions about Apache Hadoop",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"property",
        "BODY":"please note hadoop essentially prem data infrastructure day fully leverage hadoop typically run compute engine hive spark hbase ymmv folk mailing list please feel free add correct comment type secure connection apache hadoop va system term secure protocol implemented hadoop implement ssl tl tl hadoop http based connection spnego supported separately hadoop rpc protocol leverage java sasl apis authenticate encrypt kerberos supported via java sasl hadoop data transfer leverage openssl data encryption additional custom protocol hadoop delegation token authenticates user cluster extent apache hadoop use fips validated cryptographic module certification number hadoop km cryptographic module hadoop far know fips certified may need commercial vendor purpose recent version apache hadoop release date maintain several branch url voluntary product accessibility template vpat program place ass section compliance looked wikipedia still know may need hire consultant help suspect otherwise would used light green header hdfs namenode web ui main feature apache hadoop url apachetm hadoop project develops open source software reliable scalable distributed computing apache hadoop software library framework allows distributed processing large data set across cluster computer using simple programming model designed scale single server thousand machine offering local computation storage rather rely hardware deliver high availability library designed detect handle failure application layer delivering highly available service top cluster computer may prone failure cloud service provider csp agreement set apache hadoop used securely cloud apache hadoop open source project need commercial vendor answer question apache hadoop offer application program interface api yes offer java api api restful api apps apache hadoop integrate many hbase hive spark presto many others search hadoop ecosystem level support apache hadoop offer project provides community support commercial support available via commercial vendor cloudera example offer several level technical support service apache hadoop leverage database product however use hive top hadoop hive requires metastore run database apache hadoop available premise deployment yes apache hadoop reside user network sure mean thank willingness help answering question please note working tight deadline must research completed within three business day would please acknowledge initial receipt email would greatly appreciated please contact question concern best regard foday fofanah contractor senior security analyst prosphere solution delivery station opb office information technology operation service itops office"
    },
    "5945":{
        "ID":37862,
        "MESSAGE_ID":"76849e2d-9bc4-42d3-2ab4-1a22e4f06f3f@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.5 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5946":{
        "ID":37861,
        "MESSAGE_ID":"fa9a811d-c0fa-942e-7238-36b67c655ddd@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.19 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "5947":{
        "ID":37860,
        "MESSAGE_ID":"8f89388b-9fd5-8e43-7d54-96ec1d1444dd@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.15 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6069":{
        "ID":37738,
        "MESSAGE_ID":"ec452333-8e3d-4883-838c-1ad2bff629af@www.fastmail.com",
        "PARENT_ID":37532.0,
        "SUBJECT":"Re: [DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra enhancement proposal document gone edits thanks benedict believe good place community raise vote next week objection input establish accepting formal document project regard mick unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6158":{
        "ID":37649,
        "MESSAGE_ID":"CAEPxca1w=3NdXEedxOUhFMPgb684mzTYhB6U+Az-_=yJgznfhg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE-2] Apache Cassandra Release Lifecycle",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi discussed email thread apache cassandra release lifecycle came doc finalized doc please vote agree content doc proceed previous vote want use confluence link also mention vote vote remain open hour thanks sankalp url url url attachment area url"
    },
    "6177":{
        "ID":37630,
        "MESSAGE_ID":"721612f2-dac7-47ba-7698-d5e160e1495d@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"ApacheCon Europe 2019 talks which are relevant to Apache Cassandra",
        "SENT_FROM":"myrle@apache.org",
        "TAGS":"not-ak",
        "BODY":"dear apache cassandra committers little week time apachecon europe taking place berlin join october exciting program lovely get together apache community also planning hackathon project interested participating please enter url following talk especially relevant url url url url url url url url furthermore whole conference track community topic learn motivate user contribute patch board director work navigate incubator much apachecon europe community track ticket available apache committers offer discounted ticket price going october th book soon please also help spread word make apachecon europe success weare looking forward welcoming aceu best apachecon team"
    },
    "6275":{
        "ID":37532,
        "MESSAGE_ID":"f1f912f0-95b2-4cfe-84ce-493a0ef1285c@www.fastmail.com",
        "PARENT_ID":37464.0,
        "SUBJECT":"Re: [DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"benedict could check document purpose section updated meet input around flexibility participation process think course could wrong go far enough feel free edit doc well also put often verbatim input sankalp joshua unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6283":{
        "ID":37524,
        "MESSAGE_ID":"CADoWKTBbRKoRXTa-nUSYqEspo_Mw0PLopfv1SNCsNN4pEgsenA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[NOTICE] Building trunk needs protoc 3.7.1",
        "SENT_FROM":"Vinayakumar B <vinayakumarb@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi long pending task protobuf upgrade happening hadoop part protobuf version upgraded please update build environment protobuf version builiding txt updated latest instruction pre requisite update protoc dependecy manually required hadoop maven plugin replaced protobuf mavem plugin dynamically resolve required protoc exe dockerfile updated latest default protoc test environment thanks vinay"
    },
    "6331":{
        "ID":37476,
        "MESSAGE_ID":"CAHyRp2Sc+B3+pEs3zjvqnyeqjRt1U85mFma=DUMk8G_Z6nLqrw@mail.gmail.com",
        "PARENT_ID":37474.0,
        "SUBJECT":"Re: [DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"often work invalidating insight hit late cycle people talking something significant work done invalidated proposal cep front engagement bunch party may well help surface design implication sooner also pretty old code base lot interesting edge case code state domain realize thick be general sentiment"
    },
    "6333":{
        "ID":37474,
        "MESSAGE_ID":"EAEAD60D-FDF2-4315-BC0C-2F8F24943A66@apache.org",
        "PARENT_ID":37472.0,
        "SUBJECT":"Re: [DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"careful opinion process may provide moral authority particularly matter taste opinion mandate participation else accept decision arise people legitimately busy steal spare time participate draining particularly large undertaking context headspace costly even project deliver personally endorse giving benefit doubt participant cep cip carte blanche even presumption decision made favour cep cip still aim bring likely accepted proposal whole project endorsement revision goal mitigate risk party without disrupting governance project everyone incentivised behave desirable way penalise heavily individual project ignoring failing seems follow full pmc vote could held accept reject result cep cip rather normal single committer pmc member would favour meaning veto possible stage would provide incentive author case need agree guidance completed cep cip received vote since bind future pmc anyway"
    },
    "6335":{
        "ID":37472,
        "MESSAGE_ID":"CAEPxca1+1CkaQoS4gX_CLZWH5X1e=Yp462kVtvj6k=gN0j3HCw@mail.gmail.com",
        "PARENT_ID":37464.0,
        "SUBJECT":"Re: [DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"another thing solve someone proposing alternate late development could provided sooner someone good feedback could given time cep good want situation contributor done cep worked implementation someone read cep come start giving feedback feedback come time cep cep covered area clear saying people give feedback later ignore whole thing wake later process cause huge productivity morale loss code contributor minority right community"
    },
    "6343":{
        "ID":37464,
        "MESSAGE_ID":"0C7921A5-2BAA-4542-B350-6E5410F9E200@apache.org",
        "PARENT_ID":37462.0,
        "SUBJECT":"Re: [DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"modify document make really explicit right language suggests process mandated rather encouraged beneficial would nice frame positive incentivised undertaking author list intended advantage well potential disadvantage undertaking making clear left entirely judgement whether really clear refer flexible definition process whether participation even modest interpretation process necessary form pre registration work achieve community buy want go ahead something risk difficulty delay obtaining community buy fact let dissuade hobbyist part timer scratching itch suggesting work discounted pre registered"
    },
    "6345":{
        "ID":37462,
        "MESSAGE_ID":"8e3bd115-d04e-464d-8dbe-7bda609195bd@www.fastmail.com",
        "PARENT_ID":37461.0,
        "SUBJECT":"Re: [DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"process",
        "BODY":"indeed two brief example came another using sidecar proposal example simply ensure little patience taken initial brainstorming navigation phase give open collaboration better chance landscape value might interested getting involved etc etc think community typically pretty amazing would nice see formalised bit better scott highlighted well sure cep could opened nothing title begin go working group materialises landing space new feature jira believe would value way cep return waterfall say late discovery feedback annoying part agile game unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6346":{
        "ID":37461,
        "MESSAGE_ID":"4BC3481D-FE21-405F-AAB9-4BCD41BEA28A@apache.org",
        "PARENT_ID":37459.0,
        "SUBJECT":"Re: [DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"think need meta discussion goal introducing new process email mention two reason see clarity outcome example written jira ticket way becomes quite difficult unpack afterwards difference initial proposal actual agreed upon design implementation community buy input idea largely fleshed behind closed hidden door implemented public process seems orthogonal matter imposing stricter standard doc release mandate independently point formulated today doubt committer think change need cep cep may demanded anybody commit bit problematic ever require process circumstance unnecessarily restrictive member community self organise voluntary process clear benefit participant incentivise also clear impose retroactively contributor follow process work contribute contract simple follow process want progressive feedback work high chance accepted without major conceptual revision final hurdle otherwise risk community rejecting work mandating need define necessary larger impactful change greater incentive author"
    },
    "6348":{
        "ID":37459,
        "MESSAGE_ID":"3cb802f5-5dae-4a94-969e-435d844c3c01@www.fastmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Proposing an Cassandra Enhancement Proposal (CEP) process",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"process",
        "BODY":"feature freeze getting little closer end scott ngcc presentation cassandra better moving forward keen bring idea cassandra enhancement proposal cep process big change past always transparent clear could initial stage example written jira ticket way becomes quite difficult unpack afterwards difference initial proposal actual agreed upon design implementation worse example idea largely fleshed behind closed hidden door implemented public year ago rough cep cip draft put together largely copy kafka spark scott done bit work formulating something higher level le design document heavy url edits cep template folk would like see ready cep process take jump request new feature ticket link cep regard mick unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6366":{
        "ID":37441,
        "MESSAGE_ID":"CAKRKJ1NyS9yu5jw-3KdtioSG2YkwQCDoZapXQ1RqdLvKor7xcQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"RM and NM fails to start on Secure cluster with Java11",
        "SENT_FROM":"Prabhu Joseph <prabhujose.gates@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"rm nm fails start secure cluster java error message krbexception message stream modified look something wrong encryption type kerberos configuration someone give pointer debug issue error classpath error starting resourcemanager classpath failed login classpath resourcemanager java classpath abstractservice java classpath resourcemanager java caused classpath failure login principal yarn yarndocker docker com keytab etc security keytabs yarn keytab javax security auth login loginexception message stream modified classpath usergroupinformation java classpath usergroupinformation java classpath usergroupinformation java classpath securityutil java classpath resourcemanager java classpath resourcemanager java caused javax security auth login loginexception message stream modified jdk security auth classpath krbloginmodule java jdk security auth classpath krbloginmodule java java base javax security auth login logincontext invoke logincontext java java base javax security auth login logincontext run logincontext java java base javax security auth login logincontext run logincontext java java base java security accesscontroller doprivileged native method java base javax security auth login logincontext invokepriv logincontext java java base javax security auth login logincontext login logincontext java classpath hadooplogincontext login usergroupinformation java classpath usergroupinformation java caused krbexception message stream modified java security jgss sun security krb krbkdcrep check krbkdcrep java java security jgss sun security krb krbasrep decrypt krbasrep java java security jgss sun security krb krbasrep decryptusingkeytab krbasrep java java security jgss sun security krb krbasreqbuilder resolve krbasreqbuilder java java security jgss sun security krb krbasreqbuilder action krbasreqbuilder java jdk security auth classpath krbloginmodule java yarn yarndocker usr cat etc krb conf includedir etc krb conf logging default file var log krblibs log kdc file var log krbkdc log admin server file var log kadmind log libdefaults default tkt enctypes aes ct hmac sha default tgs enctypes aes ct hmac sha dns lookup realm false ticket lifetime renew lifetime forwardable true rdns false default realm docker com default ccache name tmp krbcc uid realm docker com kdc yarndocker admin server yarndocker yarn yarndocker usr klist ticket cache file tmp krbcc default principal yarn yarndocker docker com valid starting expires service principal krbtgt docker com docker com root yarndocker log cat var kerberos krbkdc kdc conf kdcdefaults kdc port kdc tcp port realm example com master key type aes ct acl file var kerberos krbkdc kadm acl dict file usr share dict word admin keytab var kerberos krbkdc kadm keytab supported enctypes aes ct normal de hmac sha normal arcfour hmac normal camellia ct normal camellia ct normal de hmac sha normal de cbc md normal de cbc crc normal root yarndocker log java version openjdk version lts openjdk runtime environment build lts openjdk bit server vm build lts mixed mode sharing"
    },
    "6408":{
        "ID":37399,
        "MESSAGE_ID":"b47f57a7-66ec-402b-8554-5bfa365286b7@www.fastmail.com",
        "PARENT_ID":37378.0,
        "SUBJECT":"Re: Builds email notifications",
        "SENT_FROM":"mck <mck@semb.wever.org>",
        "TAGS":"not-ak",
        "BODY":"done look good far cassandra artifact failing manual rebuild generated following email url cassandra artifact job failing eclipse warning unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6431":{
        "ID":37376,
        "MESSAGE_ID":"8c22b5b4-fe48-494c-80dc-9714789605d6@www.fastmail.com",
        "PARENT_ID":37375.0,
        "SUBJECT":"Re: Builds email notifications",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"quick dead around done manually separate pr opened url need help testing deploying review input would appreciated cheer mick unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6433":{
        "ID":37374,
        "MESSAGE_ID":"bb6a0e8e-396e-41b8-8458-9faef28b4dce@www.fastmail.com",
        "PARENT_ID":37354.0,
        "SUBJECT":"Re: Builds email notifications",
        "SENT_FROM":"\"Mick Semb Wever\" <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"done unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6453":{
        "ID":37354,
        "MESSAGE_ID":"pony-05cb8398a8be7b5aac8e0d84f4302b52172ba80d-bcaabdf1323b9e5da585d755c5d23bd8257b07b3@dev.cassandra.apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Builds email notifications",
        "SENT_FROM":"Michael Semb Wever <mck@apache.org>",
        "TAGS":"process",
        "BODY":"breaking build clumsy oversight mea culpa big thanks paulo robert fixing quickly kind bugging send build failure email notification jenkins functionality mail notification configuration post build action section email sent build fails becomes unstable return stable specified ml author breakage objection configure cassandra artifact build create build ml get cc would nice add configuration cassandra test build well none green maybe get greena regard mick unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "6493":{
        "ID":37314,
        "MESSAGE_ID":"CAMK=hAP9QAQ5TPmqQFagjze+1Y=TZr6U-bfhhUvA3WCPZHOyVg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"4.0 alpha before apachecon?",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"hey folk think time cut alpha release put vote thread reason alpha apachecon cassandra summit handful small issue done client list virtual table dynamic snitch improvement fixing token count trying suggest include small enough think ok merge following first alpha jon"
    },
    "6546":{
        "ID":37261,
        "MESSAGE_ID":"CAPBqCLGudZyjtzkhyB=c3faLSNz4CVf-y58XMvR1hm553ccJ5g@mail.gmail.com",
        "PARENT_ID":37170.0,
        "SUBJECT":"Re: Thoughts about moving submarine to a separate git repo?",
        "SENT_FROM":"\u8d75\u56fd\u8d24 <zhaoguoxian12345@gmail.com>",
        "TAGS":"process",
        "BODY":"agree independent development submarine better adapt development machine learning xun liu"
    },
    "6572":{
        "ID":37235,
        "MESSAGE_ID":"CAD++eCmXe3tK85DeVoFdTq0z0qsC9uxQXc6iQ2GjF_W4BaW4MQ@mail.gmail.com",
        "PARENT_ID":37234.0,
        "SUBJECT":"Re: Thoughts about moving submarine to a separate git repo?",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"definitely agree"
    },
    "6573":{
        "ID":37234,
        "MESSAGE_ID":"CACYiTuiCqQVVZQ4qcc_8ZtiVVXEhK1Ei_qb0GsfXyW0ApJpn0Q@mail.gmail.com",
        "PARENT_ID":37210.0,
        "SUBJECT":"Re: Thoughts about moving submarine to a separate git repo?",
        "SENT_FROM":"Sunil Govindan <sunilg@apache.org>",
        "TAGS":"process",
        "BODY":"thanks wangda sharing thought agree idea new repo cleaner code base remove additional dependency jenkins etc one major point end commits new repo ideally happen committers branch committers hadoop community could help case wangda tan thought thanks sunil"
    },
    "6597":{
        "ID":37210,
        "MESSAGE_ID":"CAD++eC=QUC6wroCExZEdip4stf34utEi3CDnVC92zS+CFb_d=A@mail.gmail.com",
        "PARENT_ID":37199.0,
        "SUBJECT":"Re: Thoughts about moving submarine to a separate git repo?",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"process",
        "BODY":"hi xun thanks starting thread glad see existing momentum made submarine community like proposal make separate git repo suggestion option mentioned sunil think better separate git repo instead branch branch targeted diverged codebase instead new codebase since submarine need clean root source code directory think moving new git repo make sense submarine external code pulling think need make sure license icla code comply apache standard mean need additional review etc patch pulled instead address comment wei chiu chuang give extra time existing hadoop committers contributor interest review code waiting least day big patch hour minor fix might good rule follow wei chiu chuang please let submarine community know anything interested review developer ping patch best wangda"
    },
    "6608":{
        "ID":37199,
        "MESSAGE_ID":"CADiq6=ynQSOcdKo_17b4ao5YQXbA9QMdntay0S6YLSNBAvoy3Q@mail.gmail.com",
        "PARENT_ID":37170.0,
        "SUBJECT":"Re: Thoughts about moving submarine to a separate git repo?",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"not-ak",
        "BODY":"review patch obvious patch raised pr non apache git repo please inclusive"
    },
    "6636":{
        "ID":37171,
        "MESSAGE_ID":"CACYiTujENj220oVPXR0vLZf5E5bdV4hd=h+zjb_jFehHeUBOHA@mail.gmail.com",
        "PARENT_ID":37170.0,
        "SUBJECT":"Re: Thoughts about moving submarine to a separate git repo?",
        "SENT_FROM":"Sunil Govindan <sunilg@apache.org>",
        "TAGS":"process",
        "BODY":"hi xun thanks proposal altogether proposal make sense iiuc external repo created developer found productive faster review commits apache way think better track apache jira apparently already happening thanks apache provision called branch committer role help drive feature branch cut apache trunk selected branch committers push change apache repo thus fast pacing feature development community nominating couple active contributor submarine branch committership could address concern raised part difference see new repo instead branch apache trunk afaik seems stopper branch committership suggestion please correct wrong however need ensure commit right repo available branch committer apache policy adhered overall feel option mentioned good way proceed welcoming thought others context similar past experience thanks sunil"
    },
    "6637":{
        "ID":37170,
        "MESSAGE_ID":"CADnwo0cjkOb8DdCRU0c7205sDN=r7+=poeMu0A5Y6Trf6iudUQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Thoughts about moving submarine to a separate git repo?",
        "SENT_FROM":"Xun Liu <liuxun@apache.org>",
        "TAGS":"process",
        "BODY":"dear submarine developer name xun liu member hadoop submarine development team one major contributor submarine since june want hear thought creating separate github repo apache submarine development independent effort submarine spin hadoop project url however spin approved effort benefit follow process well submarine dev community total developer submits average pr per day limited number hadoop committer actively help review merge patch cause development progress delay created external github repo url moved code hadoop submarine project external github repo way everyone review code development progress hadoop submarine fast also submarine little dependency hadoop want separate ci cd pipeline release test submarine instead every time build whole hadoop putting submarine hadoop introduce unnecessary dependency hadoop top level pom xml development process still complies development rule hadoop community first create ticket submarine jira develop external github repo repository title pr accompanied jira id number apache github repo created going move external commits new apache github repo suggestion welcome best regard xun liu"
    },
    "6649":{
        "ID":37158,
        "MESSAGE_ID":"557196360.766593.1565449682612@mail1.virgilio.it",
        "PARENT_ID":null,
        "SUBJECT":"Investigation on the diffusion of innovation along with java releases",
        "SENT_FROM":"f.petrulio@virgilio.it.INVALID",
        "TAGS":"property",
        "BODY":"dear developer member zest research group zurich empirical software engineering team based university zurich delft university technology conducting investigation diffusion innovation focus adoption new language feature research focused api producer adapt interface introduce support java lambda course investigation manually inspected apache hadoops source code documentation understand whether java lambda widespread adoption would like feedback finding study focus primarily functional interface lambda expression new feature introduced java language adopted java jdk api reduce implementation complexity improve readability offer performance benefit improve security contextualization analysis showed though hadoop common explicitly introduce support functional interface using functionalinterface annotation noticed api provide compatibility java feature including lambda expression since apis build platform java would like better understand major change necessitated facilitate usage lambda expression api case developer choose move new release satisfy particular dependency requirement take advantage new java feature like stream functional interface case java standardize implementation align api java jdk api provide information team tackle choice change version java supported factor take account documented source jira ticket issue tracker issue discussion provide explicit change made interface support lambda expression future plan place make larger change api lambda expression would supported thank taking time answer question would like posted result study please let know kind regard fernando petrulio photo logo fernando petrulio phd student university zurich uzh department informatics linkedin url"
    },
    "6662":{
        "ID":37145,
        "MESSAGE_ID":"CADiq6=yHiYGgK0ZV8K_fQ3qJjEPz5ZQz++hiaETdNF0f94HNXw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop Storage Online Sync Notes 8\/5\/2019",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"happy cr uber leading today discussion today sync meeting note url cr hota uber gave update router based federation attendee cloudera weichiu adam uber cr hota target craig rename change hive upon exception copy instead community help already support nn apis running production mostly efficiency improvement migrate non federation rbf easy still use hf scheme update metadata hm migrate viewfs based federation rbf viewfs use view harder migrate view based limited namespaces limit rbf uber already namespaces cluster utilization rebalancer priority uber udestinty router ha supported router state synchronized uber router one cluster latency compare single namenode bottlenecked nn lock read name node help solve problem presto latency sensitive uber made change support read router general negligible latency add router uber want manage thousand cluster want manage set thousand cluster future isolation current problem important production deployment see hdfs fairness router let know feedback right topic looking want present topic development discussion demo best practice welcomed best weichiu"
    },
    "6738":{
        "ID":37069,
        "MESSAGE_ID":"CALrZ4T3PV93SdChABZv6th-KmwQH4FpsSca_FnQKjFVhQJ_F+Q@mail.gmail.com",
        "PARENT_ID":36840.0,
        "SUBJECT":"Re: [DISCUSS] Moving chats to ASF's Slack instance",
        "SENT_FROM":"Rahul Singh <rahul.xavier.singh@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"rahul xavier singh gmail com url"
    },
    "6840":{
        "ID":36967,
        "MESSAGE_ID":"MAXPR01MB326346E079F0164F13FB9912D4E20@MAXPR01MB3263.INDPRD01.PROD.OUTLOOK.COM",
        "PARENT_ID":36966.0,
        "SUBJECT":"Re: Agenda & More Information about Hadoop Community Meetup @ Palo Alto, June 26",
        "SENT_FROM":"Weiwei Yang <cheersyang@hotmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks wangda event recorded extremely helpful people unable join catch thanks weiwei"
    },
    "6841":{
        "ID":36966,
        "MESSAGE_ID":"CAD++eCmiwfwCb_9V0+NJo6mX8nUxJx4xG8=TJPWuef31Lp6Wkw@mail.gmail.com",
        "PARENT_ID":36942.0,
        "SUBJECT":"Re: Agenda & More Information about Hadoop Community Meetup @ Palo Alto, June 26",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"friendly reminder meetup take place tomorrow pdt pm pdt address page mill rd palo alto ca well bigtop conference room st floor go left coming main entrance right zoom url please let know question rsvp yet please go ahead rsvp better prepare food seat etc thanks wangda"
    },
    "6862":{
        "ID":36945,
        "MESSAGE_ID":"AEB25583-D760-40D5-AA76-6138B55AE08D@gmail.com",
        "PARENT_ID":36942.0,
        "SUBJECT":"Re: Agenda & More Information about Hadoop Community Meetup @ Palo Alto, June 26",
        "SENT_FROM":"runlin zhang <runlin512@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"great really looking forward meetup unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "6865":{
        "ID":36942,
        "MESSAGE_ID":"CAD++eCmq3QhYkpFhe7gRFiEbzObs-C=STyGMBz92yv+PojE-KA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Agenda & More Information about Hadoop Community Meetup @ Palo Alto, June 26",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi want let know confirmed agenda hadoop community meetup whole day event agenda dial info see please rsvp url huge thanks daniel templeton wei chiu chuang christina vu helping organizing logistics please help promote meetup information twitter linkedin etc appreciated best wangda arrival check talk hadoop storage cloud native environmentsabstract hadoop mature storage system designed year cloud native movement kubernetes cloud native tool emerging solution containerized environment sometimes require different approach presentation would like share experience run apache hadoop ozone kubernetes connection point cloud native ecosystem element compare benefit drawback use kubernetes hadoop storage together show current achievement future plan speaker marton elek cloudera talk selective wire encryption hdfsabstract wire data encryption key component hadoop distributed file system hdfs however encryption enforcement come nothing feature use case linkedin would like selectively expose fast unencrypted access fully managed internal client trusted expose encrypted access client outside trusted circle higher security risk way minimize performance overhead trusted internal client still securing data potential outside threat design extends hdfs namenode run multiple port connecting different namenode port would end different level encryption protection protection get enforced namenode rpc subsequent data transfer datanode approach come minimum operational performance overhead speaker konstantin shvachko linkedin chen liang linkedin talk yunikorn next generation scheduling yarn ksabstract talk open source work yunikorn scheduler project yarn uni unified brings long wanted feature hierarchical queue fairness user job queue preemption kubernetes brings service scheduling enhancement yarn improvement scheduler benefit kubernetes yarn community speaker wangda tan cloudera pm lunch break provided cloudera talk yarn efficiency uberabstract present work done uber improve yarn cluster utilization job soa elastic resource management low compute workload passive datacenter preemption larger container etc also go yarn upgrade order adopt new feature talk challenge speaker aihua xu uber prashant golash uber one talk bof session breakout session group discussion talk item like jdk support next release etc hadoop cloud etc reception provided cloudera join zoom meeting url"
    },
    "6947":{
        "ID":36860,
        "MESSAGE_ID":"CAFSPUJqDC4hXmSYVR0SXTtBFP7ygGFYDKGR_WT3AikoQFq7twQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop native support of Tencent Cloud COS(Cloud Object Storage)",
        "SENT_FROM":"Sammi Chen <sammichen@apache.org>",
        "TAGS":"technology",
        "BODY":"hi everyone tencent cloud top cloud serivce provider china object store co url widely used among china cloud user far native support co hadoop easy hadoop user access data stored co storage hadoop url incorporate tencent cloud co file system implementation created fill gap many iteration patch kind stable would like call reviewer community new cloud storage support also welcome try patch feedback appreciated best sammi chen"
    },
    "6959":{
        "ID":36848,
        "MESSAGE_ID":"CAPwQCrmfvocCaFNENDD-WUZTRayQyzkSEbmN0RQx6sZOG47fng@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Merge HDFS-13891(RBF) to trunk",
        "SENT_FROM":"Brahma Reddy Battula <brahma@apache.org>",
        "TAGS":"not-ak",
        "BODY":"dear hadoop developer would like propose rbf branch hdfs merge trunk working feature last several month feature work received contribution different company feature development happened smoothly collaboratively jiras kindly take look branch raise issue concern need addressed merge highlight hdfs branch adding security rbf adding missing client api improvement bug fixing critical hdfs hdfs commits jiras resolved commits rbf module change hdfs common tested cluster change verified uber microsoft huawei compaines uber change running production uber including critical security change hdfs cluster node hdfs router zookeeper state store hold delegation token also stress tested hold million token cr hota microsoft change currently running production microsoft security also tested server cluster subclsuters inigo goiri huawei deployed change node cluster router planning deploy production cluster contributor many thanks akira ajisaka mohammad arshad takanobu asanuma shubham dewan cr hota fei hui inigo goiri dibyendu karmakar fengna li gang li surendra singh lihore ranith sardar ayush saxena xiaoqiao sherwood zheng daryn sharp vinayakumar anu engineer invloving discussion contributing future task cleanup jira umbrella contiue work reference url url brahma reddy battula"
    },
    "6968":{
        "ID":36839,
        "MESSAGE_ID":"CAHyRp2QSneaqS+MDKOk7T6LFxwk00OppRWAhWd3ptqg7Jjzkvg@mail.gmail.com",
        "PARENT_ID":36838.0,
        "SUBJECT":"Re: [DISCUSS] Moving chats to ASF's Slack instance",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"switching one le comms client history searchability enough get vote easy"
    },
    "6969":{
        "ID":36838,
        "MESSAGE_ID":"CALdd-ziJMrN1eeVK=ktAsMBZLSD=KJ6mWYA01Mhm=O766P7YTg@mail.gmail.com",
        "PARENT_ID":36837.0,
        "SUBJECT":"Re: [DISCUSS] Moving chats to ASF's Slack instance",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"process",
        "BODY":"agree lower barrier entry new participant slack probably two order magnitude commonly used irc sw devs three everyone else quality life feature get box slack difficulty irc history search file uploads"
    },
    "6970":{
        "ID":36837,
        "MESSAGE_ID":"CABsaHTNv8mBTaPKoinPkZyvToYpAVitUScdBNHPTr3cUGsFnrg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Moving chats to ASF's Slack instance",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"process",
        "BODY":"hi folk working apachecon last week get setup asf slack workspace poking around bit whim created cassandra cassandra dev invited couple people come signup test primarily make sure process seamless non asf account holder well committers etc want jump signup url said think time transition irc slack like cli friendly straight forward tool like irc much anyone recently user talked said one two thing regarding irc channel irc yeah really anymore short think time migrate think really consist communication list updating site anything missing archive irc kind persist posterity sake without additional effort maintenance asf requirement configured already slack workspace think good thanks nate"
    },
    "7008":{
        "ID":36799,
        "MESSAGE_ID":"CAKRKJ1MeK7R6GpAHGRQEHqdda1novv-AbF49B0MC38GN0odatw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cluster Submit Applications API accepts any random ApplicationId",
        "SENT_FROM":"Prabhu Joseph <prabhujose.gates@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi observed yarn cluster submit application api accepts random applicationid provided cluster new application api enforcer check applicationid provided rm user pas applicationid different clustertimestamp negative clustertimestamp negative id sure impact per doc applicationid must obtained new application api cluster application api submit application submit application api used submit application case submitting application must first obtain application id using cluster new application api want check using random applicationis expected behavior impact thanks prabhu joseph"
    },
    "7046":{
        "ID":36761,
        "MESSAGE_ID":"BN6PR04MB0579058D4D954ED680807193AD310@BN6PR04MB0579.namprd04.prod.outlook.com",
        "PARENT_ID":36760.0,
        "SUBJECT":"Re: VOTE: Hadoop Ozone 0.4.0-alpha RC2",
        "SENT_FROM":"Ajay Kumar <ajay.kumar@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"thanks trying ozone rc release artifact vote sending mail make minor correction list binding vote passed following detail binding thanks arpit xiaoyu anu non binding thanks eric dinesh marton together closing thanks publish release note addressed issue highlighted xiaoyu renaming hadoop snapshot src hdds hadoop ozone alpha src git hash still remains md checksum updated renamed file release documentation ozone updated handle future release ajay"
    },
    "7047":{
        "ID":36760,
        "MESSAGE_ID":"BN6PR04MB057948EB317926E69F44701AAD310@BN6PR04MB0579.namprd04.prod.outlook.com",
        "PARENT_ID":null,
        "SUBJECT":"FW: VOTE: Hadoop Ozone 0.4.0-alpha RC2",
        "SENT_FROM":"Ajay Kumar <ajay.kumar@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"thanks trying ozone rc release artifact vote vote passed following detail binding thanks arpit xiaoyu jitendra non binding thanks eric dinesh marton together closing thanks publish release note addressed issue highlighted xiaoyu renaming hadoop snapshot src hdds hadoop ozone alpha src git hash still remains md checksum updated renamed file release documentation ozone updated handle future release ajay"
    },
    "7061":{
        "ID":36746,
        "MESSAGE_ID":"46e00184-af77-e86f-a61e-004b01985ab7@apache.org",
        "PARENT_ID":36739.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks answer eric yang think similar view release working wrote exactly reason prefer current method docker image creation separated branch instead proposed one create image maven branch deprecated usually two three branch large user base deprecate last one yes release manager old release may may available one reason use voted approved package inside container image make clean inside hadoop version show exactly bit voted approved pmc make possible upgrade convenience docker packaging hadoop older actively used release eg today example case serious ssl problem prefer keep container image older version ozone test test compatibility different hadoop version docker container older image help lot test marton unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "7068":{
        "ID":36739,
        "MESSAGE_ID":"CADfbTpH=322kk2s5eHaTraCGRpRks4WrwcPPbYYZAaU99Bpr7g@mail.gmail.com",
        "PARENT_ID":36554.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Eric Yang <eyang@apache.org>",
        "TAGS":"not-ak",
        "BODY":"see comment inline"
    },
    "7081":{
        "ID":36726,
        "MESSAGE_ID":"CAEgVEfHcKfiYu7OhhLHQ668ivMeEbM3uXX9y=qU273qhgJxm_A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"maven-surefire-plugin configuration for Hadoop 2.8.5",
        "SENT_FROM":"Elaine Ang <elaineang95@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi running unit test hadoop script basically repeatedly run command mvn dtest test different test selection test command finish need get test running stats purpose problem saw lingering java process running surefirebooterxxxxx jar consumes lot memory cpu resource owing setting timeout value maven surefire plugin configuration hadoop project pom xml wondering specific reason required certain unit test using timeout value delay killing forked jvms instead something like exit changed pom configuration using shutdown exit see lingering java surefirebooter process anymore sure change would break hadoop unit test thought thanks lot advance best elaine"
    },
    "7089":{
        "ID":36718,
        "MESSAGE_ID":"CDE9B842-6372-40D7-B6CA-26D72FEBAAD5@cloudera.com",
        "PARENT_ID":null,
        "SUBJECT":"VOTE: Hadoop Ozone 0.4.0-alpha RC2",
        "SENT_FROM":"Ajay Kumar <ajay.kumar@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi created third release candidate rc apache hadoop ozone alpha release contains security payload ozone important feature hadoop delegation token block token supported ozone transparent data encryption tde support allows data block encrypted rest kerberos support ozone certificate infrastructure ozone token use pki instead shared secret datanode datanode communication secured via mutual tl ability secure ozone cluster work yarn hive spark skaffold support deploy ozone cluster support authentication mechanism like authentication protocol gateway support multipart upload sa file system tested supported support tracing profiling ozone component audit support including audit parser tool apache ranger support ozone extensive failure testing ozone rc artifact available url rc tag git ozone alpha rc git hash eaceebeaccbddebfb please try vote give feedback vote run day ending may utc thank much ajay"
    },
    "7118":{
        "ID":36689,
        "MESSAGE_ID":"CAHyRp2Td3WAzPp_nSvR4KkDEhmgm1-M=i-2aORWzNGe-gZT=kQ@mail.gmail.com",
        "PARENT_ID":36685.0,
        "SUBJECT":"Re: Jira Updates",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"useful feedback change chance test probably soon wanted say thanks taking point benedict"
    },
    "7122":{
        "ID":36685,
        "MESSAGE_ID":"DE744E33-5548-41F5-A095-4EDEF09133B2@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Jira Updates",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"exciting news jira change maybe done even achieved stretch goal anyone suggestion new workflow tried bit speak easy capability make change somebody proposed making change category multi select list would require recreating anybody opinion would anybody prefer one new field recreated project specific select list like platform impact see manage option gavin mcdonald kindly set two plugins scriptrunner plugin setup scripted listener maintain author field based assignee priority field based update severity well initialising issue try work surprisingly well please let know soon possible bug author management may slightly unintuitive assignee updated always overwrite author value assignee could maybe something sophisticated checking prior value assignee looked fiddly think vast majority circumstance work expect multiple author actively working expect assignee change assignee cleared probably want clear author field set new value probably new author somebody suggestion better approach please chime plugin provided project specific select list used platform impact modified project admin maintain impact platform default value none respectively avoid ux ugliness multi select list ask make prettier originally proposed using value could force user specify value opted make ux ugly supporting project ownership option opinion decision welcome posterity scriptrunner script used setup listener set priority severity updated import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath def issue event issue mutableissue def severitychange null event getchangelog getrelated childchangeitem find field severity issue issuetype name bug severitychange def issuemanager componentaccessor getissuemanager def customfieldmanager componentaccessor getcustomfieldmanager def cf customfieldmanager getcustomfieldobject customfield def constantsmanager componentaccessor getconstantsmanager priority purgent constantsmanager getpriorities find name urgent priority phigh constantsmanager getpriorities find name high priority pnormal constantsmanager getpriorities find name normal priority plow constantsmanager getpriorities find name low def optmanager componentaccessor getoptionsmanager option severity optmanager getoptions cf getrelevantconfig issuecontext global option scritical severity getoptionforvalue critical null option snormal severity getoptionforvalue normal null option slow severity getoptionforvalue low null def sduser componentaccessor getusermanager getuserbykey robot def priority issue getpriority def severity issue getcustomfieldvalue cf severity null def newpriority priority severity scritical newpriority purgent else severity snormal newpriority pnormal else severity slow newpriority plow newpriority priority issue setpriority newpriority issuemanager updateissue sduser issue eventdispatchoption dispatch false listener set author assignee updated import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath def sduser componentaccessor getusermanager getuserbykey robot def issuemanager componentaccessor getissuemanager def customfieldmanager componentaccessor getcustomfieldmanager def cf customfieldmanager getcustomfieldobjectbyname author def issue event issue mutableissue def assignee issue getassignee assignee null def author list issue getcustomfieldvalue cf author null author contains assignee author new arraylist author add assignee issue setcustomfieldvalue cf author issuemanager updateissue sduser issue eventdispatchoption dispatch false else def author list issue getcustomfieldvalue cf author null issue setcustomfieldvalue cf new arraylist issuemanager updateissue sduser issue eventdispatchoption dispatch false script ro copy assignee author import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath def issuemanager componentaccessor getissuemanager def customfieldmanager componentaccessor getcustomfieldmanager def cf customfieldmanager getcustomfieldobjectbyname author def sduser componentaccessor getusermanager getuserbykey robot def jqlqueryparser componentaccessor getcomponent jqlqueryparser def searchprovider componentaccessor getcomponent searchprovider def query jqlqueryparser parsequery project cassandra def result searchprovider search query sduser pagerfilter getunlimitedfilter log warn issue result total result getissues documentissue def issue issuemanager getissueobject documentissue id def assignee issue getassignee assignee null def author list issue getcustomfieldvalue cf author null author new arraylist else author new arraylist author author contains assignee author add assignee issue setcustomfieldvalue cf author issuemanager updateissue sduser issue eventdispatchoption dispatch false log warn documentissue id script copy priority severity import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath import classpath def issuemanager componentaccessor getissuemanager def customfieldmanager componentaccessor getcustomfieldmanager def cf customfieldmanager getcustomfieldobject customfield def constantsmanager componentaccessor getconstantsmanager priority purgent constantsmanager getpriorities find name urgent priority phigh constantsmanager getpriorities find name high priority pnormal constantsmanager getpriorities find name normal priority plow constantsmanager getpriorities find name low def optmanager componentaccessor getoptionsmanager option severity optmanager getoptions cf getrelevantconfig issuecontext global option scritical severity getoptionforvalue critical null option snormal severity getoptionforvalue normal null option slow severity getoptionforvalue low null def sduser componentaccessor getusermanager getuserbykey robot def jqlqueryparser componentaccessor getcomponent jqlqueryparser def searchprovider componentaccessor getcomponent searchprovider def query jqlqueryparser parsequery project cassandra priority high def result searchprovider search query sduser pagerfilter getunlimitedfilter log warn issue result total result getissues documentissue def issue issuemanager getissueobject documentissue id def priority issue getpriority priority null def severity issue getcustomfieldvalue cf def newseverity severity priority purgent newseverity scritical else priority phigh newseverity snormal else priority pnormal newseverity snormal else priority plow newseverity slow else log warn priority newseverity severity issue setcustomfieldvalue cf newseverity issuemanager updateissue sduser issue eventdispatchoption dispatch false"
    },
    "7129":{
        "ID":36678,
        "MESSAGE_ID":"CABsaHTMCa5=0Qc76tw0-MoS980U8sViAZr7fjHV58AezWEgVJA@mail.gmail.com",
        "PARENT_ID":36673.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"josh correct appreciate calling reading think came sideways significantly harsher intended apology benedict aleksey poorly made point collaboration lifeblood open source project require extra work sometimes large complex effort require level pragmatism odds goal"
    },
    "7134":{
        "ID":36673,
        "MESSAGE_ID":"CAHyRp2Rn2_=cvOz+k06jJxnEokWSTD0cHX4o7ydfXRKm1Qbivw@mail.gmail.com",
        "PARENT_ID":36672.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"two engineer co located spend couple month collaborating something opening broad consensus debate hardly extreme think characterizing want formal process project people preemptively get consensus work greater arbitrary loc complexity metric fine let retcon try impose restriction interpretation people behavior fact everyone acted good faith collaborating internationally dozen engineer hard let assume best"
    },
    "7135":{
        "ID":36672,
        "MESSAGE_ID":"CABsaHTNJPv-PqMC-rP71to2W_eR8HT5H7yFfZ8yqzPFG6VB=sw@mail.gmail.com",
        "PARENT_ID":36669.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"process",
        "BODY":"someone long time worked production envs back version large patch taken frank scare shit complex system large change side effect impossible anticipate seen hold true many time said think agree internode source wart since facebook spun yr ago tired applying bandaides talked else thread super crucial point also substantially better testing story internally externally coming together point project past next part partially selfish want clear immediate interest project future getting stage month keynote first cassandra focused event notable attendance long time going vega sept discus future project ideally cool use case show bunch user need story tell need clear cohesive think super important get front people part story took three year compromise quality shit together think start loosing user much faster pace seriously risk becoming thing run large company put bunch people know intimately whether case perception running time back patch surface fix lot stuff put right track future willing set aside number time burned past decade think much better position whole community find report fix issue patch introduce much faster ever want end one point need called couple people even know personally consider friend among best engineer ever met going room producing something isolation le giant open source process community whole internode particularly complex messy baggage ridden component argument made uninterrupted concentration way achieve must understood perception action like toe stepping devaluation opinion generally conducive holding community together doubt intention perception please let avoid future sum wish process smoother running time nate unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7137":{
        "ID":36670,
        "MESSAGE_ID":"CAFYK-52QdEEBDx8XwLL=2wDjtXrR-jRyYhF2h7X+cTT431miAA@mail.gmail.com",
        "PARENT_ID":36669.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Pavel Yaskevich <povel.y@gmail.com>",
        "TAGS":"process",
        "BODY":"seems corner stone development process work review done openly jira github would post factum conversation progress would visible would make sense squash committing preferred indeed really bisect friendly drop squashed change repository guilty sasi number reason blame author without sounding hypocritical mentioned would great could establish process development supposed happen like project concern could discussed separately"
    },
    "7138":{
        "ID":36669,
        "MESSAGE_ID":"12DD2700-23CF-454C-AD0F-E5C7CE8EFD48@apache.org",
        "PARENT_ID":36667.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"start new thread build consensus proposal modifying commit process share view already laid first email community make decision building consensus potentially vote pmc scope change requires thread discussion unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7139":{
        "ID":36668,
        "MESSAGE_ID":"A9565C7A-9CCA-4FE0-BFC6-DF77A02AA375@apple.com",
        "PARENT_ID":36667.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"seems like one main point contention much content patch amount review patch receive relative perceived risk latter think would effective explain case level review would appropriate personally requiring additional review feel like people involved far sufficient expertise trust responsible including soliciting additional review feel needed dev collectively want eye id suggest solicit review people familiar messaging code let decide additional work documentation would need make review manageable everyone review style need ask bunch additional work needed unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7140":{
        "ID":36667,
        "MESSAGE_ID":"CAPwFCc54UXycO4RrpyKm=4ddMHSauLb-1toA3wPgk_Uxy6FEkg@mail.gmail.com",
        "PARENT_ID":36666.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Jordan West <jordanrw@gmail.com>",
        "TAGS":"process",
        "BODY":"since seems assumption read code let clarify working making time reviewer already spent hour patch sent reply likely replying disagree non technical matter mean considered technical sharing think necessary author make review higher quality compromise review standard patch like said already telling review talk directly ignores feedback requires acquiesce concern said reviewer yes arguing changing cassandra community approach large patch way freeze changed approached major release decision net benefit measured quality stability existing community member already chimed support thing like better commit hygiene past approach prioritized quality stability really show others suggesting worked industry adopted company big like google linked previously small like many startup others worked everything want better testing better review better code made easier better design review better discussion digestible patch among many thing suggested thread jordan"
    },
    "7141":{
        "ID":36666,
        "MESSAGE_ID":"4DC68237-4422-4034-BA43-3A4ADB2D65D5@apache.org",
        "PARENT_ID":36664.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"would exhort everyone making kind comment actually read code comment jira preferably justification reference code would improve patch far design document concerned unclear requested already plan jordan know produce wiki page posterity blog post closer release however never heard requirement review commit far taken two member community patch video chat would happy others far nobody difficulty getting grip structure project want modify normal process putting patch together whole different worm strongly sure precedent trying set imposing arbitrary constraint pre commit work already met project inclusion criterion"
    },
    "7142":{
        "ID":36665,
        "MESSAGE_ID":"CAPwFCc5FQ1nQF8PW8mxEaRXADqw-BwpemHkT-n3qtSeKHnd76A@mail.gmail.com",
        "PARENT_ID":36650.0,
        "SUBJECT":"Re: Cassandra 4.0 Quality and Stability Update",
        "SENT_FROM":"Jordan West <jordanrw@gmail.com>",
        "TAGS":"process",
        "BODY":"hi dinesh great question unfortunately great definition alpha mean cassandra community hard answer directly however opinion yet point able branch trunk finding many bug quick pace still yet make enough significant progress test plan previously linked think would beneficial cut official build maybe internode messaging settle preview community make easier folk run dev test hardware riak community call pre build riak prex nothing stable place trunk released periodically reached point branched regarding metric first major step towards benedict others work thanks al organize jira better set input automatically build report around release quality metric etc yet take turn jira report working scott andreas timeframe yet hope soon would like help please let know meantime scott kept list data used came absolutely need make public effort mentioned accomplish jordan url"
    },
    "7144":{
        "ID":36663,
        "MESSAGE_ID":"0A637CE0-8FC4-4A2A-A5D3-B7F70FA9B793@beobal.com",
        "PARENT_ID":36658.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Sam Tunnicliffe <sam@beobal.com>",
        "TAGS":"not-ak",
        "BODY":"thanks articulating well josh sam unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7146":{
        "ID":36661,
        "MESSAGE_ID":"CAPwFCc5qRafMHCP5KAZED+VsR+g7=w6svp34jBsi0wy3YK=gJg@mail.gmail.com",
        "PARENT_ID":36658.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Jordan West <jordanrw@gmail.com>",
        "TAGS":"process",
        "BODY":"understand non technical discussion everyone want focus extremely pertinent stability project would like see merging reasonable asks opinion still result patch merged even confidence quality detail thought behind follow additional third party independent reviewer added required merge patch minimum broken commit wise ticket wise newly added feature crc backpressure virtual table reviewed independent large patch set easily included excluded based community discussion reviewer feedback using exception process new feature used past freeze merging day freeze zstd change etc sankalp mentioned believe progress test plan published executed least part execute merge possible happen post merge minimal design doc published make easier reviewer approach code said apologize comment parallel close home sure direct comparison parallel trying draw continue development process led project like continues used focus cassandra improving quality stability ideally series along way especially light recent status email sent included bug found last month question majority patch go bug fix necessary alternative written question besides increasing confidence patch author make better reviewer putting effort non technical aspect patch new feature included given already risky change proposed patch demand review goal freeze reduce time spent new work improve existed process exception community feel strongly feature follow process would involve isolating change larger patch considered separately someone reviewed found bug others think code author dictate complexity timeframe review make sense say read email suggested encourage consider possible experience informed contrary point view sort denigrating unneeded comment affect community anyways part improvement come design develop database test run worked several large project multiple database cassandra sasi riaks cluster metadata membership riaks bucket type riaks ring resizing feature among others large company project talk sure possible design develop feature better process one used certainly possible hugely beneficial break code smaller commits google also feel way url unreasonable ask mean pre requisite patch like requires author simply writing code holding higher standard increase quality database dramatically way committing real testing done refer bug found freeze found previously hopefully clear supportive getting majority change think would benefit future project deliberate way risky change like late cycle handled past opportunity change would benefit project significantly cassandra willingness jettison code kept relevant process however negative effect database brand deployment series directly affected presumption real otherwise quality could take opportunity fix keep nimble aspect database alive time jordan unfortunately sasi contribute one big commit publicly better commit history development could shared would liked see make digestible think would found bug merge"
    },
    "7149":{
        "ID":36658,
        "MESSAGE_ID":"931FCB84-DB15-49B2-BD06-82F4F4F7CDC7@apple.com",
        "PARENT_ID":36653.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"well said josh pretty much summarized thought well moving forward unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7150":{
        "ID":36657,
        "MESSAGE_ID":"0FF84404-81B7-469B-A0B2-1113E78DEBE8@apache.org",
        "PARENT_ID":36655.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"lot add joshs contribution except id like really hammer home many people party project learned great deal experience complex topic lend simple comparison think anyone participated work would find strange see two piece work compared think would also helpful stopped using kind bogeyman seems easy forget much positive change came many bug since avoided lot people put herculean effort making happen recollection sylvain alone spent perhaps year time initial follow work active contributor participated way month many case every time talk way denigrates lot good work using rhetorical device without seemingly appreciating involved went wrong even le helpful personal note found couple response thread disappointing far tell neither engaged email justify approach area concern accepted third party reviewer comment patch manageable review acceptable scope seemingly read patch care reach conclusion one concrete factual assertion code false trying build positive constructive community past want encourage welcome critical feedback think incumbent critic basic research engage target criticism lest appear goal frustrating body work rather improving please take moment read email take closer look patch engage jira specific constructive feedback concrete positive suggestion would like thank everyone else taking time provide thought hope address lingering concern would love hear feedback testing documentation plan put together executing url"
    },
    "7154":{
        "ID":36653,
        "MESSAGE_ID":"CAHyRp2T91h9hKrT+dWgogJUyHMyS5YoLkqUktTcKxURNEXOQOg@mail.gmail.com",
        "PARENT_ID":36642.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"one two people wrote unit test try help sylvain get door think inaccurate compare scope potential stability impact work truly sweeping work went downplay scope extent work honest one big reason tend drop large pr fact huge issue codebase since least back first encountered five year ago date made progress front nowhere near sufficient mitigate issue codebase allow large meaningful change smaller incremental patch commits yet another discussion around many many year blocker significant work go codebase unnecessary dangerous blocker say formalize path try make incremental progress improve situation far blocking progress decade worth accumulated hygiene problem going make community focus fixing problem going turn away contribution let second jd many others opinion make sense get right first time rather applying bandaids rewriting thing next fwiw asking people already done huge body work reformat work series commits break work fashion liking people involved either writing patch reviewing make much sense neither assignee reviewer contribution leave party involved thing professionally high standard quality admittedly large code change merging like implication rebasing anyone else work flight one commit merged one jira ticket ten end result large contribution format ripple outwards require work others community one thing would strongly argue performance benchmarking new messaging code representative sample different general purpose query lwt etc preferably node rf cluster plus healthy suite jmh micro bench assuming already different disregard sorry speaking aleksey offline work understanding something plan putting bow thing balance fear change destabilizes go forth blindly dark night rewriting thing think cassandra project willingness jettison old introduce new served well keeping relevant year gone would hate see culture progress get mired dogmatic adherence requirement commit count line code allowed expected given patch set metric might stymie professional need heaviest contributor project"
    },
    "7157":{
        "ID":36650,
        "MESSAGE_ID":"C30319B2-481E-46A1-933B-677F4E22F177@apache.org",
        "PARENT_ID":36637.0,
        "SUBJECT":"Re: Cassandra 4.0 Quality and Stability Update",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hey jordan thanks update sense term stability need order cut alpha also remember discussion measuring release quality sure landed idea front thanks dinesh url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7165":{
        "ID":36642,
        "MESSAGE_ID":"CAA1qPbYpoGCSNLo9mdh_KH-Be-b=atEgk4WSdMASar=fJDVjww@mail.gmail.com",
        "PARENT_ID":36639.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"process",
        "BODY":"sorry pick point address think one contribute productively discussion mention backpressure checksumming etc thing hard requirement one thing come mind protocol versioning consistency change adding checksumming handshake make grow upgrade matrix put change separate protocol version sure many internode protocol change planned next definitely something keep mind line need review important part code refactoring tool bug line take time everything definitely reviewed different rigour one thing review byte arithmetic protocol format completely different thing verify verb moved one place still used concentrating smaller subset make patch smaller help guide reviewer observer primary goal help people hence reference jira comment working"
    },
    "7166":{
        "ID":36641,
        "MESSAGE_ID":"CCFE28E9-C158-4581-9777-62704C18DF0F@apache.org",
        "PARENT_ID":36639.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Dinesh Joshi <djoshi@apache.org>",
        "TAGS":"process",
        "BODY":"finding right middle ground splitting issue look opportunity split benefit make verifying testing code lot easier also help pin point sort regression git bisect anybody precisely also give opportunity add correct interface later help make review quicker honest one big reason tend drop large pr fact cassandra code highly intertwined make hard precisely change thing need iterate towards interface allow iterate quickly reduce amount highly intertwined code help testing well want meaningful discussion around drop big pr many time sankalp recognize well thank calling working pmcs develop document concrete guideline help standardize avoid issue like due various reason document go anywhere similar debate sidecar used cip help help make discussion meaningful lack documentation many people called make really hard review thing especially large change dinesh unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7168":{
        "ID":36639,
        "MESSAGE_ID":"F3FD9C62-7121-444E-8384-2310C0A334F7@gmail.com",
        "PARENT_ID":36638.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Sankalp Kohli <kohlisankalp@gmail.com>",
        "TAGS":"process",
        "BODY":"think wait testing doc confluence come discus need added gain confidence work split patch smaller part delay even use time adding test coverage documentation design doc component middle ground example large change going well due lack testing documentation design doc big big add complexity increased total bug count small change equally worse term impact unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7169":{
        "ID":36638,
        "MESSAGE_ID":"CAPwFCc7KrqmnoPjo3Cg3qQT+d6gFR0m+fSYEDNv+rW-JWxGTTg@mail.gmail.com",
        "PARENT_ID":36636.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Jordan West <jordanrw@gmail.com>",
        "TAGS":"existence, process",
        "BODY":"lot discus ill try keep opinion brief bug fix requirement order stable whether come patch original le opinion think important minimize code change time development freeze cycle including large refactors add risk despite discussed perspective would prefer see targeted fix since patch decision different measuring complexity loc exception line need review important part code refactoring tool bug line take time otherwise poor metric long take review seems odd author projecting long take review charge reviewer would like hear clear complex patch risky something like original rewrite jason treat try merge quickly sake repeating past mistake goal reviewing messaging service work would disservice rush change goal get patch priority completing two week clear several community member pushed back comfortable time frame need add special fork netty class code use netty concern quality stability maintenance place document justifies non traditional usage saw javadocs found lacking lot changed given folk community decent relationship netty team perhaps leverage well reached principle agree technical improvement mention backpressure checksumming etc thing hard requirement opinion dinesh done good job providing reason go much detail short bug missing safety mechanism thing also important consider many user change like cover risk found bug late review slipped would subjected user silent corruption thought could occur anymore included feature prod cassandra release patch could seriously benefit commit hygiene would make easier folk review done would review easier also piecemeal breakup feature fix could done easily buy premise possible add feature fix later would possible sure smart way could organized priority upgrade test done added would also like see performance benchmark merging patch similar state term performance testing sure thought seem like important one jordan"
    },
    "7170":{
        "ID":36637,
        "MESSAGE_ID":"CAPwFCc5qQLk6UFNwHOyoH4ZLSpbvP8YHn-=q1vUrjsF7GU57Ug@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra 4.0 Quality and Stability Update",
        "SENT_FROM":"Jordan West <jordanrw@gmail.com>",
        "TAGS":"process, property",
        "BODY":"september community chose freeze trunk begin working quality stability goal releasing stable cassandra major project history lot work ongoing folk could follow along progress jira thought would useful cover accomplished far since spent good amount time working others various testing project time made significant progress improving quality stability cassandra cassandra also cassandra series future cassandra release additionally testing provided opportunity new community member committers contribute comprehensive community found least bug classified either data loss corruption incorrect response loss stability loss availability concurrency issue performance issue lack safety bug found variety methodology including commonly used one like unit testing canary deployment however majority bug found confirmed using new methodology like one described recent blog post additionally state test suite test tooling improved cassandra brought much welcomed improvement circleci workflow made easier people run test supported platform jdk work get upgrade test running found several bug including cassadnra made significant progress still truly confident cassandra release ongoing outstanding work includes improving state cqlsh test ongoing discussion new messagingservice require significant review testing additional upgrade testing cassandra including additional support upgrade testing using jvm dtests work increase coverage important area new feature cassandra list may seem short last item contains long list important area community previously discussed adding coverage looking area contribute great starting point name area interested would encourage reach discus help increase community confidence quality stability cassandra complete list many severe bug found part release cycle thanks community member contributed finding bug improving cassandra everyone cassandra anti compaction briefly remove sstables read path cassandra counter fail increment mixed version cluster cassandra anticompaction throw exception error log cassandra deleting data read fail open marker close marker different deletion time cassandra legacylayout error collection tombstone dropped column cassandra drop add column name different kind result corruption cassandra corruptsstableexceptions cassandra static collection deletion corrupted message cassandra collection deletion dropped column mixed mode delete row cassandra static collection deletion corrupted message cassandra inaccurate sstable min max metadata cause data loss cassandra legacy sstables range tombstone spanning multiple index block create invalid bound sequence cassandra missing row reading sstables cassandra dropped column cause reverse sstable iteration return prematurely cassandra row cross index block boundary cause incomplete reverse read case cassandra desc order read fail return last unfiltered partition cassandra ssl cert hot reloading defensively check sanity new keystore truststore loading cassandra avoid calling iter next loop notifying indexer range tombstone cassandra avoid creating empty compaction task truncate cassandra handle failure upgradesstables cleanup relocatee cassandra column result order change select result upgrading causing response corruption query using prepared statement static column used cassandra regression paging query mixed version cluster cassandra lifecycletransaction encounter concurrentmodificationexception used multi threaded context cassandra pendinganticompaction judicious compaction cancel cassandra rangetombstonelist properly clean mergeable superseded rts case cassandra expand range tombstone validation check multiple interim request stage cassandra fail incremental repair prepare phase encounter sstables un finalized session cassandra comparison used verifying paging query dtests test column name value jordan url url url url url url url url"
    },
    "7171":{
        "ID":36636,
        "MESSAGE_ID":"E537F66F-5C06-40D5-A6CC-4CB028AD04AE@icloud.com",
        "PARENT_ID":36614.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Dinesh Joshi <djoshi3@icloud.com.INVALID>",
        "TAGS":"existence, process, property, technology",
        "BODY":"think general direction work valuable concern id like address inline regression test fail bug reintroduced later point discussed review jason created ticket track explicitly decided defer work due feature freeze community also technical reason detailed regarding new feature feature freeze window discussion past recent one initiated zstd compressor went positively moved forward assessing risk community consensus regarding checksumming please scroll comment section link provided notice discussion enabling tl internode compression mitigation strategy avoid data corruption transit admission cassandra require checksumming tl present full quote want fair later say want force people pay cost tl overhead however would also like point introduction netty internode communication tl performance thanks openssl jni binding refer norman talk topic tl practical compression necessary performance strategy work fine protect data corruption making checksumming redundant ssl certificate hot reloading also avoids unnecessary cluster restarts providing maximum availability vein people using tl internode really really bad data security industry encouraging fact would go far make tl default managing tl infrastructure beyond cassandra scope operator figure user sake cassandra make super easy performant tl enabled people using previous technical argument provided enough evidence protocol level checksumming show stopper reason see adding checksum protocol user want enable tl internode compression stand comment seems mandatory add unnecessary overhead tl compression enabled frankly think need risk destabilizing trunk use case want reiterate believe right thing make acceptable tradeoff community known issue could addressed separate bug fix one could independently verified great theory would really like see objective measurement like chris cassandra netflix engineer tested netty refactor node cluster zero copy streaming reported result invaluable work would great see something similar loc patch unverifiable especially without much documentation place undue burden reviewer also mess everyone branch commit large refactor let considerate others community good engineering practice limit patch size reasonable importantly large refactors lend new bug caught easily unless strong regression test suite cassandra arguably lack therefore opinion bug fix applied piecemeal codebase small enough individually reviewed independently verified also noticed replaced netty class opinion upstreamed better wider netty community benefit maintain class working towards alpha separate discussion issue thanks dinesh url url url url url url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7172":{
        "ID":36635,
        "MESSAGE_ID":"CAA1qPbZYCibjnZoM8ZyuxkaDG=b6bCy+oz4mvMyxjXQubTWwAw@mail.gmail.com",
        "PARENT_ID":36634.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"process",
        "BODY":"fair even though patch total loc core patch within reasonable bound around net async many change code got moved around part change look large java quite verbose language metric table unfortunately see good way split bug fix specific netty refactor change since thing fundamentally reworked leave elaborate comment summarises way approaching patch review might help identify important part one concentrate reviewing reviewing patch say several advantage including fact incoming outgoing path easier test write unit test helped validate rather complex scenario handshake protocol back pressure dropping message large message expiry counting patch also integrates well jvm test allowed verify several behavior otherwise would somewhat difficult reproduce agree validating patch easy endeavor said point would invest similar amount time validate without patch personally leaning towards since help keep community unified testing version together instead concentrating making work skipping proceeding next"
    },
    "7173":{
        "ID":36634,
        "MESSAGE_ID":"0C63F7AF-981C-4E45-8972-FFACCB50C7E9@apache.org",
        "PARENT_ID":36633.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"existence, process",
        "BODY":"appreciate everyone input sound like broad agreement fix need make really pleased see question seems moving towards scope timing tl dr patch probably efficient route stable patch already reviewed extensively tested thorough testing coming perspective timeline merging order two week best answer question ideal scope timing perhaps worthwhile considering ideal approach would look like given realistic breathing room pressure might prefer modify opinion view endorse proceeding patch largely stand though highlight strongest case splitting answer first question starting producing major refactor messaging would produced patch one like answer yes change designed together intentionally making simultaneously reduce review work burden reduce overall risk ensuring semantics component designed harmony trickle change requires subtly updating semantics component across multiple constantly shifting interface old new time touch one interface risk failing properly modify likely hack one side understand carrying misunderstanding hack later patch time costly time risk project really afford either even wider picture sense already much work risk mitigate importantly change necessary actually fix bug example performance improvement implementing netty class actually avoid bug usage since designed use event loop using allocator avoids cross thread recycling cause unbounded heap growth netty today topic active discussion netty bug tracker already allocator work arguably lowest risk repurpose also reduce risk using existing bytebuffer method keeping code idiomatic asyncpromise used avoid blocking event loop modifying invoking listener defaultpromise requires taking mutex thread besides event loop could stall event loop entire scheduler quantum owning thread low priority extremely busy recently bug real time networking thread could servicing dozen connection futurecombiner netty thread safe need perhaps bug fix fundamental part design patch either get free write different patch example checksumming fall naturally framing integral new message flow dropping message eagerly reading wire simply natural design back pressure fall roughly category well fix major stability bug perhaps biggest stability bug today new handshake protocol probably best candidate splitting patch good case made question hoping achieve separating reviewing specific change significant burden think testing independently probably yield significant benefit anything probably advantageous include change atypically thorough testing subsystem perhaps take discussion onto jira dive specific item tried keep high level select item perhaps already deep weed absolutely open modifying scope definitely make sense probably best established deep discussion specific point current pressure think clear landing patch efficient route release already exceeded normal barrier inclusion project reviewed two people already aleksey alex petrov already well tested shortly posting test plan wiki outlining plan coverage suffice say anticipate atypically thorough test coverage patch committed extremely high confidence result also anticipate taking significant length time achieve attempting incorporate patch piecemeal fashion slow thing opinion lead worse riskier result url"
    },
    "7174":{
        "ID":36633,
        "MESSAGE_ID":"CALShVHeeDXPaE9zeFi4o0uPdqW+47zUk5Zcw-FE=Xe-Bk5CG=w@mail.gmail.com",
        "PARENT_ID":36618.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"process",
        "BODY":"let try apparently email hard relatively new code pathsespecially compared committers working issue year author well jason brownbut like many cassandra user familiar many class issue aleksey benedict identified patchset especially related messaging correctness performance lack message backpressure believe every single fix feature patch valuable desire able get merged validated think even question want merge want excellent change questionsin opinionare safely merge merge due vinays relative lack knowledge code path hope get many experienced eye review patch evaluate risk reward tradeoff deeper change feel qualified make assertion risk reward patchset know number people mailing list qualified think would appreciate insight help completely understand live ideal world personally feel ideal world would possible pull bug fix bug specific netty refactor semantic change droppability checksumming back pressure handshake change code refactors verb handler messagein messageout performance change various implementation netty internals optimization around dropping dead message earlier review validate benchmark change independently iteratively move towards better messaging time recognize may hard pull change apart worry review validation patch may take testing community many month properly vet either mean cut many many month cut properly test patchset think agreed want unstable main decision point set change valuable important patch set put try put next determine community hopefully start allocating necessary review testing benchmarking resource ensure first ever rock solid release joey"
    },
    "7175":{
        "ID":36632,
        "MESSAGE_ID":"CALShVHeTX-M7e_3jFc8nsygGyiy5N5EC42w_zJdmdC9msuryZw@mail.gmail.com",
        "PARENT_ID":36618.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"process",
        "BODY":"relatively new code pathsespecially compared committers working issue year author well jason brownbut like many cassandra user familiar many class issue aleksey benedict identified patchset especially related messaging correctness performance lack message backpressure believe every single fix feature patch valuable desire able get merged validated think even question want merge want excellent change questionsin opinionare safely merge merge due vinays relative lack knowledge code path hope get many experienced eye review patch evaluate risk reward tradeoff deeper change feel qualified make assertion risk reward patchset know number people mailing list qualified think would appreciate insight help completely understand live ideal world personally feel ideal world would possible pull bug fix bug specific netty refactor semantic change droppability checksumming back pressure handshake change code refactors verb handler messagein messageout performance change various implementation netty internals optimization around dropping dead message earlier review validate benchmark change independently iteratively move towards better messaging time recognize may hard pull change apart worry review validation patch may take testing community many month properly vet either mean cut many many month cut properly test patchset think agreed want unstable main decision point set change valuable important patch set put try put next determine community hopefully start allocating necessary review testing benchmarking resource ensure first ever rock solid release joey"
    },
    "7189":{
        "ID":36618,
        "MESSAGE_ID":"CAMK=hAMffx+riYHM3zc4=WO9ZKk__W8JAtf8qX2HuWZFXz6DoA@mail.gmail.com",
        "PARENT_ID":36616.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"given number issue addressed definitely think worth strongly considering merging think might little unrealistic cut first alpha merge though realistic loc change going introduce bug honest seems likely issue patch addressed would affected release form anyways question might fix someone cluster burn inbound outbound message load shedding giving quick code review going jira comment well written thanks guy seem pretty important bug fix well paying bit technical debt jon"
    },
    "7191":{
        "ID":36616,
        "MESSAGE_ID":"CAFYK-53ARO6U-OuCkryYZZbYF8vPViDTrnqmnLCqYe4RFLHeEQ@mail.gmail.com",
        "PARENT_ID":36614.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Pavel Yaskevich <xedin@apache.org>",
        "TAGS":"not-ak",
        "BODY":"great see significant progress made area"
    },
    "7192":{
        "ID":36615,
        "MESSAGE_ID":"DE4394B1-F4DB-4BE2-B485-E20C0705C968@gmail.com",
        "PARENT_ID":36614.0,
        "SUBJECT":"Re: Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"\"J. D. Jordan\" <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"definitely sound like worth taking nd look given relation brand new code agree make sense get right first time rather applying bandaids rewriting thing next think solid starting point future work brand new code knowingly planning write right cut release jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7193":{
        "ID":36614,
        "MESSAGE_ID":"CAK+hiSQZ-fMRpHL4rVvsyYqj=UqB17rRPzYeAGWM9RU=83TijA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Stabilising Internode Messaging in 4.0",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"existence, process, property",
        "BODY":"would like propose cassandra important set bug fix stability improvement internode messaging code benedict others working past couple month first context work started review cassandra internode connection management race prone cassandra support large internode message netty pre confirmatory review major new feature however dug realized insufficient bug uncovered dozen critical correctness stability system substantial rework necessary guarantee solid internode messaging subsystem release addition addressing uncovered bug unique trunk used opportunity correct long existing pre bug stability issue complete list notable bug fix read comment cassandra id like highlight lack message integrity check known tcp checksum weak ethernet crc relied upon integrity sufficient scale time hit bit flip sadly time go undetected cassandra replication model make issue much serious faulty data infect cluster recognised problem recently introduced fix server client message implementing crcs cassandra add checksumming native protocol cassandra land also critical flaw internode addressed ensuring matter whether use ssl whether use internode compression protocol level crc always present every message frame deep sincere belief shipping new implementation messaging protocol without application level data integrity check would unacceptable modern database lack back pressure memory usage constraint stand today far easy single slow node become overwhelmed message peer conversely multiple coordinator made unstable backlog message deliver one struggling node address problem introduced strict memory usage constraint apply tcp level back pressure outbound inbound impossible node swamped inbound outbound made significantly harder overcommit resource simple reliable mechanism drastically improves cluster stability load especially overload cassandra mature system introducing entirely new messaging implementation without resolving fundamental stability issue difficult justify view state patch feature freeze timeline concern patch essentially complete much improved unit test passing dtests green extensive fuzz testing underway initial result positive intend improve code documentation test coverage next week two minor additional code review believe basically good commit couple week patch could also use performance testing hoping colleague netflix new cassandra committers joey vinay help aspect however work need done regardless provides significant delay would classify absolutely work done patch necessary bug fix stability improvement line stated goal feature freeze clear feature introduced expanded metric virtual table observe freeze strictly interpreted removed think would unwise hope community appreciate welcome change worked hard deliver promptly minimise delay issue addressed piecemeal sincerely believe work positive impact stability performance cassandra cluster year come believe committed cut first alpha time started train url url url url incomplete list url url url"
    },
    "7233":{
        "ID":36574,
        "MESSAGE_ID":"CA+CzcqnjKsC4tKkkJ-vYEskWyz3N=zgLPQj5B6oHR9k0=BCjMw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"ResourceManager & Resource Types topic to discuss: SafeMode",
        "SENT_FROM":"Szilard Nemeth <snemeth@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi could interesting anyone interested rm resource type filed jira recently url implement safemode resourcemanager defining resource threshold issue one sentence app submitted rm still received registration request nm demand app contains custom resource gpu happen app rejected quickly invalidresourcerequestexception later app submitted later could accepted nm registered likely couple second later sense behavior rm consistent please read jira think issue well described thanks lot szilard"
    },
    "7252":{
        "ID":36555,
        "MESSAGE_ID":"CA+=ZiTmnwJ6V8TB26t_LDNx6mmFy9Hu07MhVrvRr1HYHB3cDSA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Multi-column relations not allowed on partition key\/s",
        "SENT_FROM":"Abhishek Maloo <abhimaloo@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hello trying migrate thrift multiget multiple partition operation cql schema create table table key int key int col int val int primary key key key col compound partition key converting multiget came query select table cassandra threw exception invalidrequest error server code invalid query message multi column relation applied clustering column applied key rationale behind supporting multi column relation partition key understand want discourage use multiget apparently valid cassandra query select table select table thanks abhishek"
    },
    "7253":{
        "ID":36554,
        "MESSAGE_ID":"5bfeb864-3f26-1ccc-3300-2680e1b94f34@apache.org",
        "PARENT_ID":36551.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks answer agree sha based tag seems safe bumping version test let say multiple hadoop docker image apache hadoop apache hadoop apache hadoop apache hadoop apache hadoop understood well proposal following case security issue centos jdk case bug apache hadoop runner base image python script need wait next release fix mean previous image would unsecure bad forever still available case serious problem new release created line help release manager old image remain hand image creation would easy activating new profile release contrast using separated repo new branch would created version dockerfile would adjusted marton development non published image convinced optional docker profile easier way create image create similar plugin execution dockerfile url"
    },
    "7256":{
        "ID":36551,
        "MESSAGE_ID":"E3928424-9E14-4920-80FE-7C30981AD1DA@hortonworks.com",
        "PARENT_ID":36550.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"flexibility date appended release number equivalent maven snapshot docker latest image convention machine apply timestamp better human using jenkins release process done little effort official release best use docker image digest id ensure uniqueness centos sha dadabfdfabecabdefccaedb developer downloaded released source would build docker image without getting side effect couple year ago redhat decided fix ssl vulnerability redhat adding extra parameter disable certification validation urllib python library force certificate signer validation default completely broke ambari agent self signed certificate customer backtrack pick specific version python ssl library keep production cluster operational without due diligence certify hadoop code image wriggle room error update example perfect example want container image certified hadoop binary release avoid wriggle room snapshot release ok wriggle room developer think flexibility necessary official release regard eric"
    },
    "7257":{
        "ID":36550,
        "MESSAGE_ID":"7f9481f0-24b9-551b-3c9c-166417a34738@apache.org",
        "PARENT_ID":36538.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"not-ak",
        "BODY":"understand point afraid concern expressed clearly enough sorry let say use centos base image case security problem centos side eg libssl jdk side would rebuild hadoop hadoop image republish exactly hadoop byte updated centos jdk library understand concern case image tag eg hadoop changed time solved adding date specific postfix eg hadoop tag would never change hadoop changed know perfect widely used example centos tag fixed centos hopefully without flexibility centos jdk security issue invalidate image would require new release active line marton unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "7262":{
        "ID":36545,
        "MESSAGE_ID":"DF18500A-8620-41B1-B548-6B416442A5ED@hortonworks.com",
        "PARENT_ID":36541.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi jonathan thank input match querying google dockerfile maven plugin site github com match query apache hosted project see many project opt use profile work around building docker image time others stay true process inline people right opt using effective root user compile giving dskipdocker flag hence effective root user requirement permanent people change view point discussion email thread understand reason one like disruptive change expect calling vote issue change outcome sufficient fact presented point view email thread feel enough push back community mandatory inline process flexible make change profile based process need feel guilty implementing half baked release process respect community decision let digest presented fact rest day ok calling vote unless others think voting procedure required regard eric"
    },
    "7263":{
        "ID":36544,
        "MESSAGE_ID":"355F1E2E-209D-4AFB-9925-3B00FA594319@hortonworks.com",
        "PARENT_ID":36542.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"hi arpit"
    },
    "7265":{
        "ID":36542,
        "MESSAGE_ID":"6BBA4A4B-D59A-4D30-90A5-A0E0C2DC9A1F@cloudera.com",
        "PARENT_ID":36538.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Arpit Agarwal <aagarwal@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi eric sure always martons point revising docker image independent hadoop version valid understand suggestion could please explain simpler term share link description adjustment thanks arpit unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "7266":{
        "ID":36541,
        "MESSAGE_ID":"CAGeSJcUGm4tsR5n8jjAaHtxuEMmyiyRchA21fg6e9X0HA=qckg@mail.gmail.com",
        "PARENT_ID":36538.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Jonathan Eagles <jeagles@gmail.com>",
        "TAGS":"technology",
        "BODY":"email discussion thread result failing reach consensus jira participate discussion thread please recognize considerable effort made contributor jira hand contributor jira need listen carefully comment discussion thread since represent thought voice open source community benefit bear burden feature failing listen voice failing deliver feature best form thought shown comment yarn particular concern resonate poster thread url docker image evolve rate hadoop tends favor separate release cycle perhaps project docker image could many flavor favoring one flavor say ubuntu window another take away apache hadoop platform neutral stance providing single one image fit stance optimistic introduces release process could limit community ability produce release regular rate effective root user permission needed create image limiting release extra docker image release addition worry send complicated message consumer stagnate release adoption otherwise sorry bit humor lost however apache hadoop set bylaw dictate community process decision making url best regard jeagles"
    },
    "7268":{
        "ID":36539,
        "MESSAGE_ID":"CACVBFfShoMWf7OMCajACQ-zg5wdBB9EWY-B0F+YFEZuc-0bLwA@mail.gmail.com",
        "PARENT_ID":36538.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Jim Brennan <james.brennan@verizonmedia.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"agree steve marton ok docker build option want default jim"
    },
    "7269":{
        "ID":36538,
        "MESSAGE_ID":"45CD0E1B-0637-496D-9CDB-5C67670D0CBC@hortonworks.com",
        "PARENT_ID":36528.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"process",
        "BODY":"hi marton thank input agree said exception security fix result different version image instead replace certain version dockerfile likely change apply security fix change source instability time result non buildable code time maven release automated jenkins breeze clicking button jenkins even increment target version automatically option edit make release manager job easier homer simpson job versioning done correctly older branch docker subproject hadoop released older hadoop branch generate timeline paradox allow changing history hadoop release passed let stay way mounting evidence hadoop community want docker profile developer image precommit build catch build error code allowed slip using profile build process make adjustment accordingly unless people come say otherwise regard eric"
    },
    "7271":{
        "ID":36536,
        "MESSAGE_ID":"CAAafH9TRf8hci2tNGErvpsceOZ3fghWAhfzVOCDdSKe_LqEQAQ@mail.gmail.com",
        "PARENT_ID":36531.0,
        "SUBJECT":"Re: [jira] [Updated] (CASSANDRA-14096) Cassandra 3.11.1 Repair Causes Out of Memory",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"done url"
    },
    "7275":{
        "ID":36532,
        "MESSAGE_ID":"7236F90E-51A0-4656-A1C2-D2C2D8CD0400@apache.org",
        "PARENT_ID":36531.0,
        "SUBJECT":"Re: [jira] [Updated] (CASSANDRA-14096) Cassandra 3.11.1 Repair Causes Out of Memory",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"need arrange another vote since explicitly discussed voted favour lifting limitation anonymous user fwiw remain favour limiting anonymous user"
    },
    "7276":{
        "ID":36531,
        "MESSAGE_ID":"CAHyRp2RX27KDGk4zawGUyt_Zd-q9DZ=petMGBJmrmxeHiQtcXw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Fwd: [jira] [Updated] (CASSANDRA-14096) Cassandra 3.11.1 Repair Causes Out of Memory",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"prevent anonymous user transitioning ticket state without restricting action nd time happened past week long running irritation forwarded message anonymous jira date mon mar pm subject jira updated cassandra cassandra repair cause memory url anonymous updated cassandra status open resolved repair retaining merkel tree png tree retained syncingtasks png keyspace tried increase node memory gb gb result change repairing table one one keyspace completed successfully table jvmstabilityinspector java jvm state determined unstable exiting forcefully due classpath gossipdigestsyn java apache cassandra jar classpath gossipdigestsyn java apache cassandra jar classpath gossipdigestsyn java apache cassandra jar apache cassandra jar apache cassandra jar apache cassandra jar apache cassandra jar classpath inner classpath leaf classpath longtoken classpath classpath classpath classpath lambda java util concurrent concurrenthashmap node classpath ljavax management objectname property classpath classpath candidate classpath treerange classpath paddedatomicreference classpath chunk classpath classpath emptyunfilteredrowiterator classpath unfilteredrowmergeiterator classpath classpath builder classpath lambda classpath sstable sstableidentityiterator sstable sstablesimpleiterator currentformatiterator ljava util concurrent concurrenthashmap node classpath sstmw classpath singleitemcellpath java util concurrent concurrentlinkeddeque node sstable format big bigtablescanner keyscanningiterator classpath buffer classpath key classpath keybound lorg apache cassandra db transform transformation classpath merger classpath merger classpath merger columndatareducer classpath state java util concurrent atomic atomicinteger classpath manytoone classpath countingdigest classpath jmxgauge classpath unfilteredrowmergeiterator mergereducer classpath expiringlivenessinfo classpath lorg apache cassandra db row rangetombstonemarker lorg apache cassandra db deletiontime classpath lambda lorg apache cassandra utils mergeiterator candidate classpath rowhash lio netty util recycler defaulthandle classpath merger cellreducer classpath classpath builder cellresolver classpath filtrationtracker java util concurrent lock reentrantreadwritelock nonfairsync classpath classpath jmxcounter classpath stop java util concurrent concurrentlinkeddeque classpath globalstate java util concurrent atomic atomiclongarray classpath jmxtimer classpath builder classpath classpath state java util concurrent lock reentrantreadwritelock java util concurrent atomic atomicboolean io netty util concurrent fastthreadlocalthread classpath trivialonetoone classpath classpath classpath deletion sstable format big bigtablereader classpath node classpath node java util concurrent lock reentrantlock nonfairsync classpath localsessionwrapper classpath classpath sync java util concurrent executor runnableadapter sstable metadata statsmetadata java util concurrent scheduledthreadpoolexecutor scheduledfuturetask classpath classpath builder complexcolumndeletion java util concurrent lock reentrantreadwritelock readlock java util concurrent lock reentrantreadwritelock sync threadlocalholdcounter java util concurrent lock reentrantreadwritelock writelock classpath segment java util concurrent atomic atomicreference classpath classpath weightedvalue classpath classpath java lang threadlocal threadlocalmap entry java util concurrent linkedblockingqueue node classpath java util concurrent concurrentlinkedqueue node classpath restorableewma ljava lang threadlocal threadlocalmap entry classpath classpath classpath jmxhistogram classpath holder javax management openmbean compositedatasupport classpath messagedeliverytask java lang invoke methodtype concurrentweakinternset weakentry sstable indexinfo classpath onetoone classpath cleanup java util collection unmodifiablerandomaccesslist classpath contextstate compress compressionmetadata sstable indexsummary sstable format sstablereader instancetidier classpath io netty util internal internalthreadlocalmap classpath java util concurrent concurrentskiplistmap node sstable descriptor classpath sstable format big bigformat bigversion classpath cleanup classpath classpath classpath classpath classpath java util concurrent copyonwritearraylist sstable format big bigtablescanner classpath lcom googlecode concurrentlinkedhashmap concurrentlinkedhashmap paddedatomicreference classpath lcom googlecode concurrentlinkedhashmap concurrenthashmapv node classpath classpath sstable bloomfiltertracker classpath terminalentry java util concurrent concurrentskiplistmap classpath classpath classpath classpath classpath tokenrangecomparator classpath serializer java util concurrent lock reentrantlock classpath classpath classpath tablehistogram classpath classpath lcom google common collect immutablemapentry classpath strongentry classpath weakvaluereference java nio channel spi abstractinterruptiblechannel incomingtcpconnection classpath classpath cachingrebufferer classpath mmap classpath classpath tidier classpath tidy sstable format sstablereader globaltidy java util concurrent concurrentlinkedqueue classpath classpath classpath outboundtcpconnection classpath intervalnode classpath rowupdater java util concurrent concurrentskiplistmap headindex classpath classpath classpath internedkey classpath paddedatomiclong io netty util internal chmv longadderv java util concurrent atomic atomicreferencearray classpath java util concurrent lock abstractqueuedsynchronizer node classpath tablemetricnamefactory classpath suballocator classpath io netty util internal shaded classpath classpath classpath runnableexecutorpair classpath jmxmeter classpath sstable format big bigtablescanner keyscanningiterator classpath classpath group classpath classpath classpath region classpath classpath tabletimer classpath classpath classpath entryset classpath entryset java util concurrent copyonwritearrayset sstable format sstablereader uniqueidentifier classpath classpath java util concurrent copyonwritearraylist cowiterator classpath defaultqueryoptions sun security util memorycache softcacheentry classpath classpath cloningbtreerowbuilder outboundtcpconnection queuedmessage classpath lambda classpath lambda java util concurrent concurrentskiplistmap index classpath classpath lambda classpath classpath lambda lorg apache cassandra db marshal abstracttype classpath sstable format sstablereader globaltidy classpath classpath ch qos logback classic spi loggingevent java lang invoke boundmethodhandle specie java util concurrent threadpoolexecutor worker classpath classpath classpath entryset java util concurrent concurrenthashmap keysetview classpath allocation lcom google common collect mapmakerinternalmap segment classpath lambda classpath collector classpath classpath classpath classpath classpath classpath builder classpath validationcompactioniterator java lang invoke lambdaform namedfunction classpath lambda classpath classpath java util concurrent lock abstractqueuedsynchronizer conditionobject classpath java util logging logmanager loggerweakref classpath newformatserializer sstable indexinfo serializer classpath methodandsig classpath lorg apache cassandra db directory datadirectory classpath transformedcollection classpath classpath classpath lambda classpath columnscollector classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath lorg apache cassandra utils memory bufferpool chunk classpath localpoolref classpath classpath classpath validationcompactioncontroller ljava util concurrent runnablescheduledfuture classpath combinedfuture sstable indexinfo classpath cat classpath lambda classpath lambda classpath lambda classpath lambda classpath classpath combinedfuture classpath classpath growingchannel classpath namednotification classpath classpath classpath sun security basicconstraintsextension classpath nonterminalmapentry classpath purger classpath sun security subjectkeyidentifierextension classpath backgroundcompactioncandidate javax management openmbean openmbeanattributeinfosupport sun reflect generic tree simpleclasstypesignature classpath classpath localpool classpath uncomplainingrunnable classpath localtoken lcom sun jmx mbeanserver mxbeanmapping java net inetsocketaddress inetsocketaddressholder classpath unmodifiablemultimap classpath classpath java util concurrent linkedblockingqueue classpath simple classpath java util concurrent concurrentskiplistset classpath lambda classpath lambda classpath classpath classpath statscollector classpath noop classpath sun security certificateextensions java util concurrent concurrenthashmap valuesview classpath classpath classpath classpath java util concurrent concurrenthashmap reservationnode classpath treerangeiterator lcom github benmanes caffeine cache removalcause classpath node classpath lcom github benmanes caffeine cache node lsun reflect generic tree typeargument classpath addtask compress compressionmetadata chunk javax management mbeanservernotification classpath indexedentry javax management openmbean tabulardatasupport classpath chaininglistenablefuture classpath lambda classpath sun misc floatingdecimal asciitobinarybuffer classpath treerangeiterator classpath hashcode classpath classpath sun reflect generic tree classtypesignature sun util locale localeobjectcache cacheentry classpath javafunctionwrapper jdk internal classpath classpath java io objectstreamclass fieldreflectorkey classpath sun security certificatealgorithmid sun security certificateserialnumber java util concurrent concurrenthashmap countercell java lang invoke directmethodhandle special sun nio ch socketadaptor socketinputstream classpath marker sun reflect nativeconstructoraccessorimpl classpath lambda ch qos logback core joran event startevent sun management diagnosticcommandargumentinfo classpath lambda classpath classpath classpath garbageskipper classpath classpath eqrestriction classpath classpath prepared classpath classpath classpath simpleselection javax management openmbean compositetype ljavax management openmbean compositedata sun security authoritykeyidentifierextension ch qos logback classic spi stacktraceelementproxy ch qos logback core joran event endevent classpath segment classpath shallowindexedentry classpath classpath classpath classpath lcom github benmanes caffeine cache nodefactory classpath lorg apache cassandra cql columnspecification classpath classpath memorytidy sun reflect generic repository classrepository classpath resultmetadata classpath classpath combinedfuture classpath sun reflect delegatingconstructoraccessorimpl classpath bientry classpath disabledcoalescingstrategy sun reflect generic factory corereflectionfactory classpath scannerlist classpath classpath classpath lcom google common collect hashbimap bientry java security provider enginedescription classpath classpath parameter classpath chm lsun reflect generic tree formaltypeparameter lorg apache cassandra db clusteringbound java security basicpermissioncollection classpath datainputstreamplus classpath classpath lambda classpath lambda classpath classpath sun reflect generic reflectiveobjects typevariableimpl sun reflect generic tree classsignature ljavax management mbeanconstructorinfo net jpountz xxhash streamingxxhashjni classpath smoothbursty lsun reflect generic tree fieldtypesignature classpath classpath classpath classpath classpath identitymapping java util resourcebundle bundlereference java util resourcebundle loaderreference classpath castastextfunction sun reflect generic reflectiveobjects parameterizedtypeimpl sun management mappedmxbeantype basicmxbeantype classpath classpath classpath classpath classpath identityweakreference messagingservice verb lsun reflect generic tree classtypesignature sun reflect unsafequalifiedstaticlongfieldaccessorimpl ch qos logback core spi contextawarebase jdk internal classpath classpath raw literal sstable format big bigtablescanner emptysstablescanner socketoptionregistry registrykey sun security ssl ciphersuite bulkcipher ch qos logback core joran spi elementpath classpath sun reflect generic tree formaltypeparameter io netty util collection intobjecthashmap java util concurrent threadpoolexecutor classpath classpath classpath classpath classpath sun management diagnosticcommandimpl wrapper java util concurrent lock reentrantreadwritelock sync holdcounter classpath sun reflect annotation annotationinvocationhandler ch qos logback core joran event bodyevent jdk internal classpath classpath classpath classpath ch qos logback core joran spi elementselector java util zip zipfile zipfileinflaterinputstream java util zip zipfile zipfileinputstream messagingservice verb ch qos logback core pattern literalconverter io netty util internal logging slfjlogger classpath feature io netty util concurrent defaultpromise java nio channel closedchannelexception java util concurrent atomic atomicintegerfieldupdater atomicintegerfieldupdaterimpl classpath type classpath native sun reflect delegatingmethodaccessorimpl io netty channel unix error nativeioexception java lang invoke methodhandleimpl intrinsicmethodhandle java util concurrent semaphore nonfairsync sun security ssl ciphersuite keyexchange java util concurrent concurrenthashmap valueiterator classpath ratebasedbackpressurestate lsun management diagnosticcommandargumentinfo java lang unixprocess processpipeinputstream classpath classpath classpath classpath classpath classpath ch qos logback classic spi classpackagingdata javax management openmbean openmbeanparameterinfosupport jdk internal classpath sun security crldistributionpointsextension java util collection unmodifiablecollection classpath classpath classpath classpath classpath classpath outboundtcpconnectionpool classpath nbhmentry io netty util recycler weakorderqueue link sun net www protocol file fileurlconnection classpath classpath feature java io objectstreamclass fieldreflector java lang invoke directmethodhandle accessor sun reflect generic repository methodrepository classpath lcom googlecode concurrentlinkedhashmap concurrentlinkedhashmap paddedatomiclong ch qos logback core asyncappenderbase worker classpath java lang ref finalizer finalizerthread java util concurrent scheduledthreadpoolexecutor delayedworkqueue java util concurrent atomic atomiclongfieldupdater casupdater classpath setter classpath classpath messagingservice socketthread classpath option classpath thriftserverthread java lang ref reference referencehandler ljavax management mbeannotificationinfo lorg apache cassandra gm applicationstate classpath limit java io objectstreamclass classdataslot classpath classpath region classpath sun rmi transport connectioninputstream classpath compositemapping java lang invoke lambdaformeditor transform kind java util collection unmodifiablecollection classpath ljava io objectinputstream handletable handlelist ljava lang management platformcomponent ljava lang invoke lambdaform basictype classpath classpath classpath sun reflect generic tree methodtypesignature sun rmi transport tcp tcptransport connectionhandler sun security util disabledalgorithmconstraints keysizeconstraint java lang management managementpermission sun reflect bootstrapconstructoraccessorimpl classpath classpath ringbuffer lch qos logback classic spi stacktraceelementproxy ch qos logback core joran spi hostclassandpropertydouble classpath sslimw classpath classpath classpath listenerwrapper java util concurrent countdownlatch sync java util concurrent synchronousqueue transferstack snode classpath classpath sun rmi transport connectionoutputstream classpath type classpath sun misc floatingdecimal binarytoasciibuffer classpath value classpath standardsocketoptions stdsocketoption sstable component sstable component type classpath classpath messagingservice droppedmessages sun security util disabledalgorithmconstraints disabledconstraint ljava io objectstreamclass classdataslot classpath strongentry io netty channel epoll epolleventloop io netty channel epoll epolleventloop io netty util concurrent defaultthreadfactory defaultrunnabledecorator io netty util concurrent singlethreadeventexecutor io netty util concurrent singlethreadeventexecutor defaultthreadproperties classpath javacounterfunctionwrapper classpath kind classpath type sun management notificationemittersupport listenerinfo sun misc proxygenerator primitivetypeinfo sun security certificatepoliciesextension ljava lang invoke boundmethodhandle speciesdata classpath nametype java util concurrent scheduledthreadpoolexecutor classpath classpath classpath classpath classpath feature sun management memorypoolimpl collectionsensor sun management memorypoolimpl poolsensor sun reflect generic tree typevariablesignature sun util locale provider localeresources resourcereference lorg codehaus jackson map serializationconfig feature classpath directexecutorservice java io objectinputstream blockdatainputstream java util concurrent atomic atomicreferencefieldupdater atomicreferencefieldupdaterimpl classpath feature classpath classpath sun security netscapecerttypeextension classpath classpath classpath classpath classpath classpath classpath classpath classpath sun security provider nativeprng randomio ljava lang invoke lambdaform namedfunction lorg apache cassandra cql cqltype native classpath sleepingstopwatch java lang invoke innerclasslambdametafactory io netty channel group defaultchannelgroup java lang invoke boundmethodhandle speciesdata java lang invoke directmethodhandle constructor classpath rawstatement classpath lorg apache cassandra db consistencylevel lcom googlecode concurrentlinkedhashmap concurrentlinkedhashmap paddedatomicreference ch qos logback core util cachingdateformatter classpath accessqueue java lang invoke methodhandleimpl intrinsic java util concurrent concurrentskiplistmap entryset java util concurrent lock reentrantreadwritelock fairsync javax crypto cryptopermissioncollection jdk internal classpath classpath classpath classpath classpath utfvalidator state classpath mode classpath treedifference classpath lorg apache cassandra transport message type lorg codehaus jackson map deserializationconfig feature lsun reflect generic tree typesignature java util concurrent synchronousqueue transferstack javax management remote rmi nocallstackclassloader classpath ch qos logback classic encoder patternlayoutencoder classpath classpath javax management openmbean openmbeanoperationinfosupport classpath type classpath fileaction classpath classpath classpath sun security netscapecerttypeextension mapentry ch qos logback core rolling rollingfileappender java io objectoutputstream blockdataoutputstream classpath classpath classpath classpath kind classpath classpath snapshotv sun util locale provider localeprovideradapter type ljava util concurrent forkjointask exceptionnode lorg codehaus jackson sym charstonamecanonicalizer bucket ch qos logback classic pattern dateconverter ch qos logback classic pattern extendedthrowableproxyconverter ch qos logback classic spi throwableproxy classpath entryset classpath java lang unixprocess lambda java lang unixprocess processpipeoutputstream classpath classpath kind classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath state classpath visibility sun security util disabledalgorithmconstraints constraint operator lcom google common cache localcache segment lcom google common collect mapmakerinternalmap entryfactory lorg apache cassandra concurrent stage sstable component type ch qos logback core rolling fixedwindowrollingpolicy ch qos logback core rolling helper filenamepattern classpath accessqueue classpath strongvaluereference classpath arraymapping java io objectinputstream peekinputstream java lang invoke invokerbytecodegenerator java util concurrent executionexception classpath cassandrafunctionwrapper classpath compress compressedsequentialwriter sstable format big bigtablewriter classpath classpath classpath classpath lambda sun rmi transport tcp tcptransport connectionhandler lambda sun security extendedkeyusageextension lorg codehaus jackson annotate jsonmethod ch qos logback core pattern parser tokenstream tokenizerstate ch qos logback core util aggregationtype classpath asmap classpath classpath state classpath state java lang invoke boundmethodhandle specie java lang invoke methodhandleimpl asvarargscollector classpath classpath diskfailurepolicy classpath classpath type classpath status classpath type classpath sstabletidier classpath classpath option classpath classpath ostype classpath scalarstyle sun misc floatingdecimal preparedasciitobinarybuffer sun security util disabledalgorithmconstraints lorg apache cassandra auth permission lorg apache cassandra db partitionposition lorg apache cassandra transport protocolversion classpath listeningdecorator java util concurrent concurrenthashmap entrysetview classpath classpath classpath classpath classpath subpool io netty channel epoll epollserversocketchannel lcom google common cache localcache entryfactory ljava io objectstreamclass membersignature lorg apache cassandra db compaction operationtype lorg apache cassandra repair message repairmessage type ch qos logback classic pattern fileofcallerconverter ch qos logback classic pattern levelconverter ch qos logback classic pattern lineofcallerconverter ch qos logback classic pattern lineseparatorconverter ch qos logback classic pattern messageconverter ch qos logback classic pattern threadconverter ch qos logback core joran action appenderrefaction ch qos logback core pattern parser token ch qos logback core recovery resilientfileoutputstream ch qos logback core rolling helper datetokenconverter ch qos logback core util invocationgate classpath writequeue classpath state classpath classpath enummapping classpath mbeaninfomap classpath perinterfacemap classpath namemap java io objectoutputstream replacetable java lang unixprocess lambda java util concurrent arrayblockingqueue java util concurrent concurrenthashmap forwardingnode java util concurrent lock reentrantlock fairsync javax management notificationbroadcastersupport listenerinfo classpath option classpath flag classpath kind classpath commitfailurepolicy classpath diskaccessmode classpath memtableallocationtype classpath serverencryptionoptions internodeencryption classpath bootstrapstate classpath classpath relationship classpath obsoletion classpath callback outcome sstable sstablerewriter invalidatekeys sstable format sstablereader openreason sstable format sstablereadslistener skippingreason sstable metadata metadatatype classpath builder classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath keyspacemetricnamefactory classpath kind classpath type classpath classpath state classpath op classpath classpath classpath abstracttransactional state classpath base sun rmi transport transport lambda lorg apache cassandra exception exceptioncode classpath classpath cachecleanupexecutor classpath compactionexecutor classpath validationexecutor sstable indexsummarybuilder sstable metadata metadatacollector lio netty util concurrent singlethreadeventexecutor lorg apache cassandra config columndefinition lorg apache cassandra config config diskfailurepolicy lorg apache cassandra schema tableparams option lorg apache cassandra transport message resultmessage kind lorg codehaus jackson annotate jsonautodetect visibility lsun security ssl ciphersuite keyexchange ch qos logback classic filter thresholdfilter ch qos logback classic turbo reconfigureonchangefilter ch qos logback core rolling sizebasedtriggeringpolicy classpath tabularmapping classpath io netty channel group defaultchannelgroup io netty channel unix error nativeconnectexception classpath tracingexecutor classpath smawarereconfigureonchangefilter classpath sstable sstablerewriter classpath classpath sun reflect unsafequalifiedstaticobjectfieldaccessorimpl sun rmi server loaderhandler loaderentry sun security util disabledalgorithmconstraints constraint ljava lang invoke lambdaformeditor transform kind ljava util concurrent concurrenthashmap countercell ljavax management openmbean simpletype ch qos logback core joran action nopaction ch qos logback core joran action propertyaction ch qos logback core rolling helper compressionmode ch qos logback core subst tokenizer tokenizerstate classpath classpath strength classpath rangesmatcher classpath keyset io netty channel defaultchannelhandlercontext io netty channel defaultchannelpipeline headcontext io netty channel defaultchannelpipeline tailcontext io netty channel epoll epollserversocketchannelconfig java io objectstreamclass exceptioninfo java util concurrent atomic atomicmarkablereference pair java util logging logmanager rootlogger java util stream collector characteristic javax management remote rmi rmiconnectionimpl combinedclassloader javax management remote rmi rmiconnectionimpl combinedclassloader classloaderwrapper classpath level classpath clusteringorder classpath internodecompression classpath userfunctiontimeoutpolicy classpath classpath testresult classpath flag classpath resolution classpath filetype classpath cdcstate classpath classpath classpath comparisontype classpath classpath flag classpath classpath topology classpath classpath classpath classpath classpath classpath repairstate classpath classpath tombstoneoption classpath kind classpath cachetype classpath type classpath latestevent classpath classpath level classpath lifecycle classpath defaulttostringstyle classpath multilinetostringstyle classpath nofieldnametostringstyle classpath shortprefixtostringstyle classpath simpletostringstyle classpath args classpath flowstyle classpath linebreak classpath sun misc floatingdecimal exceptionalbinarytoasciibuffer sun nio unixfileattributeviews basic sun security provider nativeprng variant sun security ssl ciphersuite ciphertype sun util locale provider jrelocaleprovideradapter sun util resource parallellistresourcebundle keyset ljava lang unixprocess launchmechanism ljava lang annotation retentionpolicy ljava util stream collector characteristic lorg apache cassandra config cfmetadata flag lorg apache cassandra config columndefinition clusteringorder lorg apache cassandra config columndefinition kind lorg apache cassandra config config commitfailurepolicy lorg apache cassandra config config internodecompression lorg apache cassandra config config memtableallocationtype lorg apache cassandra config encryptionoptions serverencryptionoptions internodeencryption lorg apache cassandra cql resultset flag lorg apache cassandra db systemkeyspace bootstrapstate sstable metadata metadatatype lorg apache cassandra schema compactionparams tombstoneoption lorg apache cassandra schema indexmetadata kind lorg apache cassandra transport event type ch qos logback classic joran action levelaction ch qos logback core joran spi consoletarget ch qos logback core rolling helper compressor ch qos logback core rolling helper integertokenconverter ch qos logback core spi filterattachableimpl classpath classpath weakkeyreference classpath classpath writequeue classpath largelazystriped classpath boundedentryweigher classpath collectionmapping classpath classpath classpath property io netty util concurrent fastthreadlocal java io objectinputstream validationlist java net inetaddress inetaddressholder java util concurrent concurrentlinkedqueue itr javax management remote rmi rmiconnectionimpl javax management remote rmi rmiconnectorserver javax security auth login appconfigurationentry loginmodulecontrolflag classpath work classpath classpath classpath classpath sstable format sstableformat type sstable metadata metadatacollector minmaxinttracker classpath classpath classpath messagingservice classpath classpath gcstate classpath state classpath classpath classpath classpath sun security ssl ephemeralkeymanager ephemeralkeypair sun security privatekeyusageextension sun security subjectalternativenameextension sun util locale provider localeserviceproviderpool lcom sun classpath nametype lcom sun classpath limit lorg apache common lang javaversion lorg codehaus jackson jsonparser feature lsun util logging platformlogger level classpath io netty util concurrent scheduledfuturetask java lang invoke lambdaformeditor transform java util concurrent concurrenthashmap keyiterator javax management remote jmxconnectionnotification javax management remote rmi rmijrmpserverimpl classpath credentialscache classpath clientencryptionoptions classpath serverencryptionoptions classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath dfa classpath classpath classpath classpath compress compressionmetadata writer classpath classpath classpath sun rmi runtime log internalstreamhandler ljava lang invoke methodhandleimpl intrinsic lorg apache cassandra config config commitlogsync lorg apache cassandra cql constant type lorg apache cassandra db clusteringprefix kind lorg apache cassandra db directory fileaction lorg apache cassandra exception requestfailurereason ratebasedbackpressure flow lorg apache cassandra serializers utfserializer utfvalidator state lorg apache cassandra service storageservice mode lorg apache cassandra streaming message streammessage type lorg apache cassandra utils progress progresseventtype lorg codehaus jackson jsongenerator feature lsun security netscapecerttypeextension mapentry ch qos logback classic jmx jmxconfigurator ch qos logback classic pattern ensureexceptionhandling ch qos logback classic spi packagingdatacalculator ch qos logback core joran action definepropertyaction ch qos logback core joran spi interpretationcontext ch qos logback core joran spi interpreter ch qos logback core rolling helper renameutil classpath format classpath localloadingcache classpath classpath inverse classpath classpath value classpath loaderentry classpath mapping classpath classpath idandfilter classpath io netty buffer pooledbytebufallocator poolthreadlocalcache io netty util concurrent globaleventexecutor io netty util internal typeparametermatcher reflectivematcher java lang invoke boundmethodhandle specie java lang invoke innerclasslambdametafactory forwardingmethodgenerator java text attributedcharacteriterator attribute java util concurrent executor defaultthreadfactory java util concurrent atomic atomicmarkablereference javax management mbeanserverinvocationhandler javax management remote rmi rmiconnectionimpl rmiservercommunicatoradmin javax security auth subjectdomaincombiner weakkeyvaluemap classpath classpath commitlogsync classpath diskoptimizationstrategy classpath classpath classpath classpath ontxnerr classpath lastcommitlogposition classpath kind classpath kind classpath classpath classpath kind classpath state classpath classpath kind classpath classpath classpath action classpath sstable format sstablereadslistener selectionreason sstable format big bigtablewriter indexwriter sstable metadata metadatacollector minmaxlongtracker classpath classpath classpath classpath classpath classpath classpath sampler messagingservice ratebasedbackpressure ratebasedbackpressure flow classpath classpath option classpath option classpath parentrepairsession classpath direction classpath statuschange status classpath direction classpath classpath fileoptype classpath dir classpath registeredsignal classpath snapshote classpath snapshotk classpath classpath classpath classpath booleandeserializer classpath bytedeserializer classpath characterdeserializer classpath doubledeserializer classpath floatdeserializer classpath integerdeserializer classpath longdeserializer classpath shortdeserializer classpath booleanserializer sun management managementfactoryhelper sun nio unixfileattributes unixasbasicfileattributes sun rmi server weakclasshashmap valuecell sun security ssl sslalgorithmconstraints sun security util disabledalgorithmconstraints usageconstraint sun security util disabledalgorithmconstraints jdkcaconstraint sun text normalizer normalizerbase quickcheckresult lch qos logback core pattern parser tokenstream tokenizerstate lch qos logback core subst token type lch qos logback core util aggregationtype lcom google common collect sortedlists keypresentbehavior lcom sun jmx mbeanserver classloaderrepositorysupport loaderentry lcom sun classpath lcom sun classpath state lcom sun classpath state ljava lang management memorypoolmxbean lorg apache cassandra cql statement indextarget type lorg apache cassandra db filter datalimits kind lorg apache cassandra db lifecycle logrecord type lorg apache cassandra schema compactionparams option lorg apache cassandra streaming streamsession state lorg apache cassandra utils nativelibrary ostype lorg yaml snakeyaml dumperoptions scalarstyle lsun security util disabledalgorithmconstraints constraint operator lsun util locale provider localeprovideradapter type ch qos logback core joran spi configurationwatchlist classpath classpath wrappedset classpath classpath classpath io netty channel abstractchannel closefuture io netty channel defaultchannelpipeline io netty channel epoll abstractepollserverchannel epollserversocketunsafe classpath classpath classpath classpath classpath sstable format big bigtablewriter transactionalproxy classpath messagingservice messagingservice classpath classpath nospamlogstatement classpath classpath sun management mappedmxbeantype compositedatamxbeantype sun management mappedmxbeantype mapmxbeantype sun security ssl sslcontextimpl defaultsslcontext lch qos logback core rolling helper compressionmode lch qos logback core subst tokenizer tokenizerstate lcom github benmanes caffeine cache caffeine strength lcom google common base predicate objectpredicate lcom google common cache localcache strength lcom google common collect abstractiterator state lcom google common collect mapmakerinternalmap strength lcom google common collect sortedlists keyabsentbehavior lcom googlecode concurrentlinkedhashmap concurrentlinkedhashmap drainstatus lcom sun classpath namemap ljava lang management memorymanagermxbean ljava nio file filetreewalker eventtype ljava util concurrent atomic atomicreference lorg apache cassandra auth dataresource level lorg apache cassandra auth irolemanager option lorg apache cassandra config config diskaccessmode lorg apache cassandra config config userfunctiontimeoutpolicy lorg apache cassandra config readrepairdecision lorg apache cassandra cql assignmenttestable testresult lorg apache cassandra cql statement statementtype lorg apache cassandra db conflict resolution lorg apache cassandra db directory filetype lorg apache cassandra db commitlog commitlogsegment cdcstate lorg apache cassandra db context countercontext relationship lorg apache cassandra db lifecycle sstableset lorg apache cassandra db marshal abstracttype comparisontype lorg apache cassandra db marshal collectiontype kind lorg apache cassandra db monitoring monitoringstate lorg apache cassandra db row serializationhelper flag lorg apache cassandra hint hintsdispatcher callback outcome sstable format sstablereader openreason sstable format sstablereadslistener skippingreason lorg apache cassandra repair repairparallelism lorg apache cassandra repair systemdistributedkeyspace repairstate lorg apache cassandra schema speculativeretryparam kind lorg apache cassandra service cacheservice cachetype lorg apache cassandra streaming streamevent type lorg apache cassandra utils abstractiterator state lorg apache cassandra utils asymmetricordering op lorg apache cassandra utils nospamlogger level lorg apache cassandra utils concurrent transactional abstracttransactional state lorg apache cassandra utils memory memtableallocator lifecycle lorg yaml snakeyaml dumperoptions flowstyle lorg yaml snakeyaml dumperoptions linebreak lorg yaml snakeyaml introspector beanaccess lsun misc formattedfloatingdecimal form lsun security provider nativeprng variant lsun security ssl ciphersuite ciphertype lcom google common collect mapmakerinternalmap entryfactory ch qos logback classic joran joranconfigurator ch qos logback classic joran action configurationaction ch qos logback classic joran action evaluatoraction ch qos logback classic joran action loggeraction ch qos logback classic joran action loggercontextlisteneraction ch qos logback classic joran action receiveraction ch qos logback classic joran action rootloggeraction ch qos logback classic spi loggercontextvo ch qos logback core helper cyclicbuffer ch qos logback core joran action appenderaction ch qos logback core joran action conversionruleaction ch qos logback core joran action includeaction ch qos logback core joran action nestedbasicpropertyia ch qos logback core joran action nestedcomplexpropertyia ch qos logback core joran action newruleaction ch qos logback core joran action paramaction ch qos logback core joran action shutdownhookaction ch qos logback core joran action statuslisteneraction ch qos logback core joran action timestampaction ch qos logback core joran conditional elseaction ch qos logback core joran conditional ifaction ch qos logback core joran conditional thenaction ch qos logback core joran spi simplerulestore ch qos logback core spi appenderattachableimpl classpath boundedlocalloadingcache classpath classpath inpredicate classpath navigablekeyset classpath classpath classpath classpath classpath io netty bootstrap serverbootstrap serverbootstrapacceptor io netty channel epoll epolleventloopgroup io netty channel group channelmatchers classmatcher io netty util concurrent defaultthreadfactory io netty util internal logging slfjloggerfactory java lang arrayindexoutofboundsexception java lang unsupportedoperationexception java nio channel notyetconnectedexception java util concurrent cancellationexception java util concurrent concurrentskiplistmap keyiterator java util concurrent concurrentskiplistmap keyset java util logging logmanager systemloggercontext javax management notificationfiltersupport classpath classpath classpath classpath classpath specificoptions classpath classpath classpath classpath classpath classpath classpath transactiontidier classpath classpath classpath emptycellpath classpath abstractboundsserializer classpath classpath classpath classpath compress compressedsequentialwriter transactionalproxy compress lzcompressor sstable indexsummarymanager classpath classpath lambda classpath classpath classpath alltablemetricnamefactory responseverbhandler classpath classpath classpath classpath classpath classpath classpath classpath set classpath watchedresource classpath streaminghistogrambuilder classpath classpath classpath timedsignal classpath globalpool classpath factory classpath classpath classpath configimpl classpath classpath std classpath numberserializer classpath classpath classpath sun management mappedmxbeantype inprogress sun reflect unsafeintegerfieldaccessorimpl sun reflect unsafequalifiedobjectfieldaccessorimpl sun rmi transport proxy rmimastersocketfactory sun rmi transport tcp tcptransport acceptloop sun security ssl sslalgorithmdecomposer sun security authorityinfoaccessextension sun security issueralternativenameextension sun security policymappingsextension sun util locale provider localeresources lch qos logback core joran spi consoletarget lcom clearspring analytics stream cardinality hyperloglogplus format lcom github benmanes caffeine cache buffer lcom github benmanes caffeine cache disabledticker lcom github benmanes caffeine cache disabledwriter lcom github benmanes caffeine cache singletonweigher lcom github benmanes caffeine cache stats disabledstatscounter lcom google common base function identityfunction lcom google common cache cachebuilder nulllistener lcom google common cache cachebuilder oneweigher lcom google common collect genericmapmaker nulllistener lcom google common collect map entryfunction lcom google common util concurrent moreexecutors directexecutor lcom googlecode concurrentlinkedhashmap concurrentlinkedhashmap discardinglistener lcom googlecode concurrentlinkedhashmap weigher singletonentryweigher lcom sun classpath property ljava util comparators naturalordercomparator ljava util concurrent executorservice ljava util concurrent threadpoolexecutor lorg apache cassandra concurrent executorlocal lorg apache cassandra config config diskoptimizationstrategy lorg apache cassandra config config requestschedulerid lorg apache cassandra cql queryprocessor internalstateinstance lorg apache cassandra cql statement bound lorg apache cassandra db directory ontxnerr lorg apache cassandra db readcommand kind lorg apache cassandra db aggregation aggregationspecification kind lorg apache cassandra db filter clusteringindexfilter kind lorg apache cassandra db row unfiltered kind lorg apache cassandra hint hintsdispatcher action compress buffertype sstable format sstableformat type sstable format sstablereadslistener selectionreason lorg apache cassandra metric tablemetrics sampler lorg apache cassandra schema cachingparams option lorg apache cassandra schema keyspaceparams option lorg apache cassandra streaming progressinfo direction lorg apache cassandra transport event statuschange status lorg apache cassandra transport message direction lorg apache cassandra utils checksumtype lorg apache cassandra utils throwables fileoptype lorg apache cassandra utils btree btree dir lsun security ssl ephemeralkeymanager ephemeralkeypair ch qos logback classic joran action consolepluginaction ch qos logback classic joran action contextnameaction ch qos logback classic joran action insertfromjndiaction ch qos logback classic joran action jmxconfiguratoraction ch qos logback classic spi turbofilterlist ch qos logback classic util contextselectorstaticbinder ch qos logback classic util logbackmdcadapter ch qos logback core joran action contextpropertyaction ch qos logback core joran spi cai withlocatorsupport ch qos logback core joran spi eventplayer classpath classpath classpath performcleanuptask classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath identityfunction classpath mapjoiner classpath objectpredicate classpath objectpredicate classpath objectpredicate classpath objectpredicate classpath nulllistener classpath oneweigher classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath strength classpath strength classpath strength classpath classpath classpath classpath nulllistener classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath entryfactory classpath strength classpath strength classpath strength classpath entryfunction classpath entryfunction classpath keyabsentbehavior classpath keyabsentbehavior classpath keyabsentbehavior classpath keypresentbehavior classpath keypresentbehavior classpath keypresentbehavior classpath keypresentbehavior classpath keypresentbehavior classpath classpath chaininglistenablefuture classpath directexecutor classpath keysetview classpath discardinglistener classpath drainstatus classpath drainstatus classpath drainstatus classpath keyset classpath singletonentryweigher classpath classpath sharebuffer classpath arrayenumeration io netty buffer unpooledbytebufallocator io netty channel adaptiverecvbytebufallocator io netty channel succeededchannelfuture java lang processenvironment stringenvironment java lang invoke methodtype concurrentweakinternset java security policy unsupportedemptycollection java util comparators naturalordercomparator java util resourcebundle control candidatelistcache java util concurrent executor delegatedscheduledexecutorservice java util logging logmanager loggercontext javax management notificationbroadcastersupport classpath classpath role classpath classpath requestschedulerid classpath classpath raw classpath classpath classpath discarderbykey classpath internalstateinstance classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath inrestrictionwithmarker classpath classpath slicerestriction classpath classpath classpath classpath classpath classpath configuration classpath compactionlogserializer classpath classpath cqllimits classpath classpath classpath classpath classpath kind classpath kind classpath kind classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath compress buffertype compress buffertype classpath classpath transactionalproxy classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb messagingservice verb classpath classpath classpath classpath classpath classpath classpath classpath processor classpath classpath classpath compressor classpath decompressor classpath encoder classpath dispatcher classpath protocoldecoder classpath protocolencoder classpath classpath connectiontracker classpath eventnotifier classpath initializer classpath classpath classpath classpath classpath classpath classpath classpath registry classpath barrier classpath debug classpath classpath classpath classpath classpath configimpl classpath classpath classpath booleanarrayserializer classpath doublearrayserializer classpath floatarrayserializer classpath intarrayserializer classpath longarrayserializer classpath shortarrayserializer classpath sun management garbagecollectionnotifinfocompositedata sun rmi transport target lambda sun security provider certpath xcertpath sun security validator endentitychecker sun util locale provider calendardataproviderimpl sun util locale provider calendarproviderimpl sun util locale provider currencynameproviderimpl sun util locale provider dateformatsymbolsproviderimpl sun util locale provider decimalformatsymbolsproviderimpl sun util locale provider numberformatproviderimpl sun util logging platformlogger javaloggerproxy lch qos logback classic spi throwableproxy ljava nio file attribute fileattribute lorg apache cassandra db transform stack morecontentsholder lorg codehaus jackson map abstracttyperesolver lorg codehaus jackson map deserializers lorg codehaus jackson map keydeserializers lorg codehaus jackson map serializers lorg codehaus jackson map deser beandeserializermodifier lorg codehaus jackson map deser valueinstantiators lorg codehaus jackson map introspect annotationmap lorg codehaus jackson map ser beanserializermodifier lsun instrument transformermanager transformerinfo ch qos logback classic selector defaultcontextselector ch qos logback core joran spi consoletarget ch qos logback core joran spi consoletarget ch qos logback core joran spi defaultnestedcomponentregistry ch qos logback core joran util configurationwatchlistutil classpath usertimeclock classpath metricbuilder classpath metricbuilder classpath metricbuilder classpath metricbuilder classpath threadhashcode classpath classpath lambda classpath lambda classpath boundedlocalloadingcache lambda classpath entrysetview classpath keysetview classpath classpath lambda classpath equal classpath identity classpath notpredicate classpath orpredicate classpath supplierofinstance classpath localmanualcache classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath discardingqueue classpath resourcecontext classpath classpath classpath methodorder classpath classpath classpath classpath classpath classpath broadcasterquery classpath bufferlistener classpath timeout classpath notifforwarderbufferfilter classpath classpath classpath realvarargschecker classpath classpath classpath classpath classpath classpath io netty channel channelfuturelistener io netty channel channelfuturelistener io netty channel channelfuturelistener io netty channel channeloutboundbuffer io netty channel defaultchannelpipeline io netty channel defaultmessagesizeestimator io netty channel defaultmessagesizeestimator handleimpl io netty channel defaultselectstrategyfactory io netty channel group channelmatchers io netty channel group channelmatchers invertmatcher io netty util concurrent defaultpromise causeholder io netty util concurrent globaleventexecutor io netty util concurrent globaleventexecutor taskrunner io netty util concurrent multithreadeventexecutorgroup io netty util concurrent multithreadeventexecutorgroup poweroftwoeventexecutorchooser io netty util concurrent rejectedexecutionhandlers io netty util concurrent singlethreadeventexecutor io netty util internal nooptypeparametermatcher java io objectinputstream lambda java lang processbuilder nullinputstream java lang processbuilder nulloutputstream java lang string caseinsensitivecomparator java lang unixprocess lambda java lang unixprocess lambda java lang unixprocess platform lambda java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang management platformcomponent java lang reflect proxy proxyclassfactory java security protectiondomain javasecurityaccessimpl java util collection unmodifiablemap unmodifiableentryset java util spliterators emptyspliterator ofdouble java util spliterators emptyspliterator ofint java util spliterators emptyspliterator oflong java util spliterators emptyspliterator ofref java util treemap entryspliterator lambda java util concurrent executor finalizabledelegatedexecutorservice java util concurrent threadpoolexecutor abortpolicy java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream collector lambda java util stream longpipeline lambda java util stream longpipeline lambda javax management notificationbroadcastersupport javax management remote rmi rmiconnectionimpl stub javax management remote rmi rmiserverimpl stub net jpountz xxhash streamingxxhashjni factory net jpountz xxhash streamingxxhashjni factory classpath negotiator classpath classpath classpath lambda classpath classpath classpath credentialscache lambda classpath credentialscache lambda classpath credentialscache lambda classpath credentialscache lambda classpath credentialscache lambda classpath credentialscache lambda classpath credentialscache lambda classpath credentialscache lambda classpath serializer classpath classpath classpath lambda classpath lambda classpath classpath lambda classpath nopcache classpath classpath classpath classpath lambda classpath lambda classpath lambda classpath lambda classpath builder lambda classpath serializer classpath lambda classpath classpath lambda classpath lambda classpath lambda classpath nullliteral classpath unsetliteral classpath classpath classpath codec classpath classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath migrationsubscriber classpath codec classpath resultmetadata codec classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath classpath classpath classpath classpath classpath lambda classpath serializer classpath serializer classpath serializer classpath lambda classpath classpath flushlargestcolumnfamily classpath lambda classpath serializer classpath countermutationserializer classpath classpath serializer classpath classpath lambda classpath serializer classpath datadirectory classpath emptypartitioniterator classpath classpath classpath mutationserializer classpath classpath rowpositionserializer classpath deserializer classpath withoutpurgeabletombstones lambda classpath legacypagedrangecommandserializer classpath legacyrangeslicecommandserializer classpath legacyreadcommandserializer classpath serializer classpath classpath classpath legacyrangeslicereplyserializer classpath serializer classpath classpath serializer classpath deserializer classpath group lambda classpath classpath serializer classpath selectallslices classpath selectallslices classpath selectnoslices classpath selectnoslices classpath serializer classpath classpath lambda classpath truncateresponseserializer classpath classpath classpath serializer classpath classpath serializer classpath lambda classpath classpath classpath lambda classpath classpath commitlogpositionserializer classpath lambda classpath mutationinitiator classpath lambda classpath classpath classpath lambda classpath lambda classpath lambda classpath classpath validationcompactioncontroller lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath classpath classpath classpath filterserializer classpath namesdeserializer classpath slicedeserializer classpath serializer classpath serializer classpath cqlfilter classpath serializer classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath logfilesbyname lambda classpath logfilesbyname lambda classpath lambda classpath collectionpathserializer classpath lambda classpath partitionupdateserializer classpath lambda classpath serializer classpath classpath lambda classpath lambda classpath lambda classpath serializer classpath lambda classpath serializer classpath classpath classpath lambda classpath lambda classpath stringserializer classpath classpath classpath tokenserializer classpath echomessageserializer classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath gossiptask classpath classpath versionedvaluefactory classpath versionedvalueserializer classpath serializer classpath serializer classpath serializer classpath classpath serializer classpath classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath fsyncwriterstask lambda classpath collatedviewindexbuildingsupport classpath lambda classpath lambda classpath lambda classpath lambda classpath lambda classpath classpath classpath classpath classpath classpath classpath classpath compress compressionmetadata chunkserializer compress snappycompressor sstable descriptor lambda sstable indexsummary indexsummaryserializer sstable indexsummarymanager sstable format sstablereader lambda sstable format sstablereader lambda sstable format sstablereader lambda sstable format sstablereader sstable format sstablereader operator equal sstable format sstablereader operator greaterthan sstable format sstablereader operator greaterthanorequalto sstable format sstablereadslistener sstable format sstablewriter lambda sstable format sstablewriter lambda sstable format big bigformat sstable format big bigformat readerfactory sstable format big bigformat writerfactory sstable format big bigtablewriter indexwriter lambda sstable format big bigtablewriter indexwriter lambda sstable metadata compactionmetadata compactionmetadataserializer sstable metadata statsmetadata statsmetadataserializer sstable metadata validationmetadata validationmetadataserializer classpath classpath classpath lambda classpath state lambda classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath lambda classpath lambda classpath lambda classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath iasynccallback messagingservice messagingservice messagingservice callbackdeterminedserializer classpath classpath nodepairserializer classpath repairjobdescserializer classpath classpath anticompactionrequestserializer classpath cleanupmessageserializer classpath preparemessageserializer classpath repairmessageserializer classpath snapshotmessageserializer classpath synccompleteserializer classpath syncrequestserializer classpath validationcompleteserializer classpath validationrequestserializer classpath classpath lambda classpath serializer classpath lambda classpath lambda classpath lambda classpath lambda classpath builder lambda classpath serializer classpath lambda classpath lambda classpath rawbuilder lambda classpath rawbuilder rawudt lambda classpath lambda classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath countercacheserializer classpath keycacheserializer classpath rowcacheserializer classpath lambda classpath classpath classpath nativeaccess classpath lambda classpath classpath classpath classpath classpath classpath classpath migrationsserializer classpath lambda classpath lambda classpath classpath classpath lambda classpath lambda classpath lambda classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath lambda classpath classpath commitserializer classpath classpath prepareresponseserializer classpath classpath classpath classpath classpath streamrequestserializer classpath streamsummaryserializer classpath compressioninfoserializer classpath classpath filemessageheaderserializer classpath classpath classpath classpath classpath classpath classpath classpath streaminitmessageserializer classpath processor add classpath processor atomic batch mutate classpath processor batch mutate classpath processor ca classpath processor describe cluster name classpath processor describe keyspace classpath processor describe keyspaces classpath processor describe local ring classpath processor describe partitioner classpath processor describe ring classpath processor describe schema version classpath processor describe snitch classpath processor describe split classpath processor describe split ex classpath processor describe token map classpath processor describe version classpath processor execute cql query classpath processor execute cql query classpath processor execute prepared cql query classpath processor execute prepared cql query classpath processor get classpath processor get count classpath processor get indexed slice classpath processor get multi slice classpath processor get paged slice classpath processor get range slice classpath processor get slice classpath processor insert classpath processor login classpath processor multiget count classpath processor multiget slice classpath processor prepare cql query classpath processor prepare cql query classpath processor remove classpath processor remove counter classpath processor set cql version classpath processor set keyspace classpath processor system add column family classpath processor system add keyspace classpath processor system drop column family classpath processor system drop keyspace classpath processor system update column family classpath processor system update keyspace classpath processor trace next query classpath processor truncate classpath classpath classpath classpath exceptionhandler classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath classpath prepared classpath row classpath schemachange classpath setkeyspace classpath void classpath classpath classpath classpath reversed classpath classpath classpath classpath classpath estimatedhistogramserializer classpath classpath unsafeoperations classpath exporter classpath jmxpluggableauthenticatorwrapper classpath killer classpath hashable hashableserializer classpath inner innerserializer classpath leaf leafserializer classpath merkletreeserializer classpath merkletreesserializer classpath lambda classpath classpath classpath lambda classpath streaminghistogrambuilder lambda classpath streaminghistogrambuilder lambda classpath streaminghistogramserializer classpath classpath classpath lambda classpath lambda classpath referencereaper classpath classpath classpath classpath classpath factory classpath prime classpath classpath classpath classpath classpath currencydeserializer classpath inetaddressdeserializer classpath localedeserializer classpath patterndeserializer classpath timezonedeserializer classpath urideserializer classpath urldeserializer classpath uuiddeserializer classpath classpath classpath booleandeser classpath bytedeser classpath chardeser classpath doubledeser classpath floatdeser classpath intdeser classpath longdeser classpath shortdeser classpath stringdeser classpath bigdecimaldeserializer classpath bigintegerdeserializer classpath numberdeserializer classpath sqldatedeserializer classpath stacktraceelementdeserializer classpath boolkd classpath bytekd classpath charkd classpath doublekd classpath floatkd classpath intkd classpath longkd classpath classpath classpath classpath classpath classpath classpath gettermethodfilter classpath minimalmethodfilter classpath setterandgettermethodfilter classpath settermethodfilter classpath classpath doubleserializer classpath floatserializer classpath intlikeserializer classpath integerserializer classpath longserializer classpath sqldateserializer classpath sqltimeserializer classpath classpath classpath classpath classpath bytearrayserializer classpath chararrayserializer classpath classpath classpath classpath classpath classpath classpath classpath classpath constructundefined classpath sun management managementfactoryhelper platformloggingimpl sun misc asciicaseinsensitivecomparator sun misc objectinputfilter config lambda sun net extendedoptionsimpl lambda sun net www protocol jar jarfilefactory sun reflect generatedconstructoraccessor sun reflect generatedconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generatedserializationconstructoraccessor sun reflect generic tree booleansignature sun reflect generic tree bottomsignature sun reflect generic tree voiddescriptor sun rmi registry registryimpl lambda sun rmi registry registryimpl lambda sun rmi server unicastserverref hashtomethod map sun rmi transport dgcimpl lambda sun rmi transport dgcimpl lambda sun rmi transport target lambda sun rmi transport proxy rmidirectsocketfactory sun text normalizer normalizerbase mode sun text normalizer normalizerbase nfcmode sun text normalizer normalizerbase nfdmode sun text normalizer normalizerbase nfkcmode sun text normalizer normalizerbase nfkdmode sun util locale provider auxlocaleprovideradapter nullprovider sun util locale provider calendardatautility calendarweekparametergetter sun util locale provider spilocaleprovideradapter sun util resource localedata localedataresourcebundlecontrol message sent atlassian jira unsubscribe mail commits unsubscribe cassandra apache org additional command mail commits help cassandra apache org"
    },
    "7279":{
        "ID":36528,
        "MESSAGE_ID":"20bead26-0242-8664-f590-0fd21e31cd3e@apache.org",
        "PARENT_ID":36508.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"technology",
        "BODY":"thank eric describe problem multiple small comment trying separate separated build container image creation disadvantage imho wrote previous thread issue using build container image creation enable modify image later eg apply security fix container apply improvement startup script create image older release eg hadoop think two kind image image released artifact developer image would prefer manage separated branch repository optional build process ii agree steve think better make optional time required think better support default dev build default setting enough start iii maven best practice url think good article profile creating multiple version artifact name eg jdk jdk hadoop profile used introduce optional step think fine maven lifecycle phase model static compare tree based approach gradle marton url"
    },
    "7286":{
        "ID":36521,
        "MESSAGE_ID":"1EE305EF-8786-4527-8583-8C263ED3ED1D@hortonworks.com",
        "PARENT_ID":36520.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thank steve feedback would open use setting xml set developer based flag developer need type dskipdocker default build setting xml user customize skip docker default true true help shorten time developer touch docker work want avoid typing dskipdocker every time developer prefer docker build active project require frequent build docker image second concern using profile based build process introduces maintenance cost jenkins conflict maven release procedure end multiple jenkins job different profile toggled major branch hadoop new profile introduced someone need make change jenkins ensure committed code skip untested yarn ui docker etc make jenkins build configuration fragile maintain non backward compatible several apache project release build build apache org like mesos release achievable introduce build flag mvn release cross version hadoop automated release build exact reason project heavily flag dependent take self discipline prevent making mess project continuous integration effort feel hadoop moving wrong direction area prompt discussion see reduce reliance profile artifact build ibm developing hadoop every hadoop related project using maven release plugin automate build process jenkins opened eye simplify release procedure reduce man power maintain build system open source hadoop build benefit reducing bad habit make build environment lighter maintenance alternatively add profile called docker docker build optional need change build apache org pre commit build add flag trunk project ensure docker artifact tested think last resort encourages bad habit spoil developer reconsideration appreciated thanks regard eric"
    },
    "7287":{
        "ID":36520,
        "MESSAGE_ID":"CAL7CpJwKELyt6Si=z+ENLgRDgm5ev+suOOTgAmdQ1DKrF9QJVA@mail.gmail.com",
        "PARENT_ID":36508.0,
        "SUBJECT":"Re: [DISCUSS] Docker build process",
        "SENT_FROM":"Steve Loughran <stevel@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"enthusiastic making docker build process mandatory bad enough remember type dskipshade avoid minute delay every time build different branch every single time change one pr another see docker build need forced onto everyone choice would make every patch went near hadoop common retested real object store hadoop aws hadoop azure etc instead get find change accidentally broken build usually artifact update bouncy castle needed miniyarn etc ok popel want docker build turn yes build mandatory normal build jar mvn clean install dskiptests run skip docker docker mandatory default build see pdist profile exists releasing thing right"
    },
    "7299":{
        "ID":36508,
        "MESSAGE_ID":"F26192BF-45F3-4A64-9758-F4BD3EA6FDB4@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Docker build process",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"process, technology",
        "BODY":"hi hadoop developer recent month various discussion creating docker build process hadoop convergence make docker build process inline mailing list last month ozone team planning new repository hadoop ozone docker image new feature started add docker image build process inline hadoop build lesson learnt making docker build inline yarn build environment must docker successful docker build build txt stated easy build environment use docker logic place ensure absence docker trigger docker build inline process try non disruptive possible existing development environment one exception docker presence detected user right run docker cause build fail developer pushing back inline docker build process existing environment make docker build process mandatory however benefit use inline docker build process listed benefit source code tag maven repository artifact docker hub artifact produced one build le manual labor tag different source branch reduce intermediate build cache may exist multi stage build release engineer developer need search maze build flag acquire artifact disadvantage require developer access docker default build take longer workaround disadvantage using dskipdocker flag avoid docker build completely pl modulename bypass subprojects hadoop development follow maven best practice full hadoop build requires number profile configuration parameter evolution working maven design require fork separate source tree different subprojects pom file maven best practice url explained use profile trigger different artifact build introduce maven artifact naming conflict maven repository using pattern maven offer flag skip certain operation dskiptests dmaven javadoc skip true pl dskipdocker seems worthwhile make correction follow best practice hadoop build developer advocated separate build process docker image need consensus direction work best hadoop development community hence question want inline docker build process maven yes would developer responsibility pas dskipdocker flag skip docker docker mandatory default build release flow docker image going look like thank feedback regard eric"
    },
    "7400":{
        "ID":36407,
        "MESSAGE_ID":"CADiq6=zMQw19S=vH4tpQfWPo7Z08m=wDVRvcZBaR8vrt7Uj_3g@mail.gmail.com",
        "PARENT_ID":36399.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi jonathan thanks filing jira working scope doc past day initially thought km hadoop rpc depends daryn rpc encryption improvement past week realized work parallel proof concept soon"
    },
    "7408":{
        "ID":36399,
        "MESSAGE_ID":"CAGeSJcU0HL4=MM-K4T5-f_SYk6kDG-onBT+560AoWXshf6kbOQ@mail.gmail.com",
        "PARENT_ID":35644.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Jonathan Eagles <jeagles@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"filed url implemented km hadoop rpc seemed interested party involved development feature"
    },
    "7443":{
        "ID":36364,
        "MESSAGE_ID":"4d102c60-a8ca-5e7d-ce2a-4c6dedc88de8@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.21 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7444":{
        "ID":36363,
        "MESSAGE_ID":"019a0201-6047-6ad6-956f-76e33675386b@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.14 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7445":{
        "ID":36362,
        "MESSAGE_ID":"c0ed7f3a-70eb-988a-fdd8-c832dfab83ed@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.18 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7446":{
        "ID":36361,
        "MESSAGE_ID":"07ca0600-1a56-55d6-6c83-b5793e833563@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.4 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7571":{
        "ID":36236,
        "MESSAGE_ID":"CAD++eCnrJLfoOZ0bm03u1pUcMWG0bseaSpqhz6Kmif=C3jXkgA@mail.gmail.com",
        "PARENT_ID":36235.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"property",
        "BODY":"eric thanks reconsideration definitely try best break compatibility etc like component really appreciate everybody support thought suggestion shared thread given discussion went positive go ahead send voting thread best wangda"
    },
    "7572":{
        "ID":36235,
        "MESSAGE_ID":"8D2F623F-98CE-4CBA-AEDE-69B7F3115981@hortonworks.com",
        "PARENT_ID":36222.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"process, property",
        "BODY":"hdfs yarn break compatibility submarine require make release catch latest hadoop change"
    },
    "7573":{
        "ID":36234,
        "MESSAGE_ID":"f2ae6979-ba36-7cf1-06b8-d0f8443efbfa@apache.org",
        "PARENT_ID":36200.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"process",
        "BODY":"like idea submarine ml job execution seems natural extension existing hadoop yarn capability like proposed project structure release lifecycle think better modularized keep development project imho worked well ozone release frequent release support multiple version core hadoop tested new improvement could moved back hadoop common marton"
    },
    "7579":{
        "ID":36228,
        "MESSAGE_ID":"E146A4EC-81D8-4A64-9E8C-FF919860CDDD@hortonworks.com",
        "PARENT_ID":36226.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Hanisha Koneru <hkoneru@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"great proposal thanks hanisha"
    },
    "7581":{
        "ID":36226,
        "MESSAGE_ID":"DADB224C-07A5-4336-8AE1-D2107A440818@hortonworks.com",
        "PARENT_ID":36223.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Bharat Viswanadham <bviswanadham@hortonworks.com>",
        "TAGS":"process",
        "BODY":"thank wangda driving discussion separate release submarine release cadence help iterate project grow faster pace also get new feature hand user get feedback quickly thanks bharat"
    },
    "7582":{
        "ID":36225,
        "MESSAGE_ID":"A310BF7A-3B69-42DA-97B2-F8D0D77B2707@hortonworks.com",
        "PARENT_ID":36224.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Xiaoyu Yao <xyao@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks bringing wangda help expanding hadoop ecosystem supporting new ai ml workload thanks xiaoyu"
    },
    "7583":{
        "ID":36224,
        "MESSAGE_ID":"59D2CE1E-1EFB-4E92-A2C6-72D513335B49@hortonworks.com",
        "PARENT_ID":36223.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Dinesh Chitlangia <dchitlangia@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"fantastic recommendation given increasing interest ml across globe thanks dinesh"
    },
    "7584":{
        "ID":36223,
        "MESSAGE_ID":"431AF4F7-EB38-4ECE-A299-08B081478E82@hortonworks.com",
        "PARENT_ID":36221.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Ajay Kumar <ajay.kumar@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks driving rise use case running ml along traditional application great help thanks ajay"
    },
    "7585":{
        "ID":36222,
        "MESSAGE_ID":"CAD++eCk3d+0FepNmJ1O87HJBTHCzV4QWu2bzaaeF_cjDDLF-DQ@mail.gmail.com",
        "PARENT_ID":36220.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"process",
        "BODY":"thanks everyone sharing thought eric appreciate suggestion many example separate release like hive storage api ozone etc loosely coupled sub project going great least user separate release new feature faster consumed iterated feedback developer user think also people want another concern mentioned submarine aligned hadoop project goal feedback see attracts company continue using hadoop solve ml dl requirement also created good feedback loop many issue faced new functionality added submarine went back hadoop localization file directory gpu topology related enhancement etc definitely use sub project opportunity fast grow submarine hadoop try get fast release cycle project suggestion apache incubator reconsider submarine becomes independent project still small much overhead go process want stop fast growing community month go incubator process really hope comment help reconsider veto thanks wangda"
    },
    "7586":{
        "ID":36221,
        "MESSAGE_ID":"CANdGUhTJPyLZmmx_PS5xvZnA-9Oo9ge4YPWV4wB8pviV9c8stA@mail.gmail.com",
        "PARENT_ID":36220.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Suma Shivaprasad <sumasai.shivaprasad@gmail.com>",
        "TAGS":"process",
        "BODY":"thanks bringing wangda make sense submarine follow release cadence given good momentum adoption far also making run older version hadoop would drive higher adoption suma"
    },
    "7587":{
        "ID":36220,
        "MESSAGE_ID":"F0176BB9-4489-47CE-AF40-91B65F6EE9C9@hortonworks.com",
        "PARENT_ID":36215.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"process",
        "BODY":"submarine application built yarn framework strong dependency yarn development kind project would best enter apache incubator cycle create new community apache common project incubator independent release cycle collection large project goal ambitious one really know component work apache common hadoop much focused project distributed computing framework incubation sandbox alignment hadoop goal want prevent hadoop project overloaded allowing good idea carried forwarded apache incubator put apache member hat vote allow independent subproject release cycle hadoop project align hadoop project goal apache incubator process highly recommended submarine url allows submarine develop older version hadoop like spark work multiple version hadoop regard eric"
    },
    "7588":{
        "ID":36219,
        "MESSAGE_ID":"CAOJC_dg=P0a1LMJjMgORC3tTDOYvna1JXBWO9gRHRT5qeunuXg@mail.gmail.com",
        "PARENT_ID":36218.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"John Zhuge <john.zhuge@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"submarine support jupyter"
    },
    "7589":{
        "ID":36218,
        "MESSAGE_ID":"CAMXuLLpH3nyRtqqEphjjxhryqHTWrDvWrytSrp5N5-=dPuLGuA@mail.gmail.com",
        "PARENT_ID":36215.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Zhe Zhang <zhz@apache.org>",
        "TAGS":"not-ak",
        "BODY":"proposal looking forward progress project"
    },
    "7592":{
        "ID":36215,
        "MESSAGE_ID":"bb92fba3-2a67-42b1-8f34-8374c50eb097@Spark",
        "PARENT_ID":36213.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Weiwei Yang <abvclouds@gmail.com>",
        "TAGS":"process",
        "BODY":"thanks proposing wangda well amazing see progress made submarine last year community grows fast quiet collaborative see reason get release faster cycle time ozone way work well weiwei"
    },
    "7593":{
        "ID":36214,
        "MESSAGE_ID":"CAAF9FPgCTv-2iyOxgWm6CJi8nJFVuHw9Harv_Soz=f5AJsM4rg@mail.gmail.com",
        "PARENT_ID":36212.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Yang Jiandan <succeedin2020@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"didi plan deploy submarine making submarine different release agile would like join develop community runlin zhang"
    },
    "7594":{
        "ID":36213,
        "MESSAGE_ID":"288AA845-EB8D-4F19-AD45-775D87701C24@163.com",
        "PARENT_ID":36200.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Xun Liu <neliuxun@163.com>",
        "TAGS":"process, property, technology",
        "BODY":"hello everyone xun liu head machine learning team netease research institute quite agree wangda team grateful getting submarine machine learning engine community heavy user submarine submarine fit direction big data team hadoop technology stack avoids need increase manpower investment learning container scheduling system important thing use common yarn cluster run machine learning make utilization server resource efficient reserve lot human material resource previous year team finished test deployment submarine provide service commerce department url shortly also plan provides submarine engine existing yarn cluster next six month lot product department need use machine learning service example game department url need ai battle training news department url need news recommendation mailbox department url requires anti spam illegal detection music department url requires music recommendation education department url requires voice recognition massive open online course url requires multilingual translation submarine released independently like ozone help quickly get latest feature improvement great helpful team user thanks hadoop community unsubscribe mail hdfs dev unsubscribe hadoop apache org additional command mail hdfs dev help hadoop apache org"
    },
    "7595":{
        "ID":36212,
        "MESSAGE_ID":"623B6761-EBA9-4B59-8BAD-BC602412D4D6@gmail.com",
        "PARENT_ID":36200.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"runlin zhang <runlin512@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"necessary use submarine older hadoop development deep learning fast submarine must keep faster release iterate unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "7596":{
        "ID":36211,
        "MESSAGE_ID":"CACYiTugWPzynwPzUn72e6EfXm+ALyRY6F10Lq-2iKtGeVmhGDA@mail.gmail.com",
        "PARENT_ID":36200.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Sunil G <sunilg@apache.org>",
        "TAGS":"process, property",
        "BODY":"ml dl one fast growing area runtime yarn help customer ml dl workload run cluster etl traditional big data workload ingest mine data faster release cadence pace development submarine agile run older hadoop version without upgrade effort sunil"
    },
    "7597":{
        "ID":36210,
        "MESSAGE_ID":"CAGi=jZA7_E5PLgR-Y2d6+a8TM2f9D0WuBTnXgz7cZEq8rD0ORw@mail.gmail.com",
        "PARENT_ID":36200.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Rohith Sharma K S <rohithsharmaks@apache.org>",
        "TAGS":"process",
        "BODY":"interested ml dl folk banglore asked submarine release trying tensorflow yarn told wait release since ready use trunk see agile release cycle submarine brings lot added value rohith sharma"
    },
    "7601":{
        "ID":36206,
        "MESSAGE_ID":"CAJmM2AuCxzWiX1utLi2vM7mn+Jp5s9es0-5DyDiYq0M4or_QKw@mail.gmail.com",
        "PARENT_ID":36205.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Oliver Hu <oliverhuhuhu@gmail.com>",
        "TAGS":"process",
        "BODY":"one author linkedin tony would love join upstream force build deep learning ecosystem around hadoop mentioned wangda coupling submarine yarn code base introduced lot unnecessary complexity integrate use case upstream example circular dependency hard dependency hadoop block adopting upstream feature near term architecture wise also make sense make yarn component pure focus resource scheduling ml ecosystem moving extremely fast different release cycle keep momentum would benefit lot"
    },
    "7602":{
        "ID":36205,
        "MESSAGE_ID":"CAGCyb57bbc6k-rHAapJ-U-dJZcJXoBkuy75d2sMXf6cHn21Vnw@mail.gmail.com",
        "PARENT_ID":36200.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Arun Suresh <asuresh@apache.org>",
        "TAGS":"process",
        "BODY":"thanks bringing wangda make lot sense submarine follow release cadence reason outlined would one proposal ask allow yarn release well separate thread cheer arun"
    },
    "7604":{
        "ID":36203,
        "MESSAGE_ID":"8FEB5E44-99F8-4254-A6E6-6B912555933B@hortonworks.com",
        "PARENT_ID":36202.0,
        "SUBJECT":"Re: [DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"second especially allows submarine used hadoop user without upgrade new version new change submarine used tested end user much faster model resounding based experience ozone thanks anu"
    },
    "7607":{
        "ID":36200,
        "MESSAGE_ID":"CAD++eC=+SdrKEPeprhNUb9Zp=rDut8QWoXBeJck_4NW96QEY1w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Making submarine to different release model like Ozone",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"process",
        "BODY":"hi devs since started submarine related effort last year received lot feedback several company netease china mobile etc trying deploy submarine hadoop cluster along big data workload linkedin also big interest contribute submarine tony url runtime allow user use interface yarn application directory release cycle hadoop started release sep release done jan non predictable blocker security issue got delayed lot need iterate submarine fast point also see lot requirement use submarine older hadoop release many company may upgrade hadoop short time requirement run deep learning urgent decouple submarine hadoop version want keep within hadoop first submarine included innovation part enhancement user experience yarn service containerization support add back hadoop later address common requirement addition big overlap community developing using several proposal went ozone merge trunk discussion url propose adopt ozone model master branch different release cycle different release branch great example show agile release ozone release oct le overhead setup ci project etc link jira url design doc user doc release blogposts submarine running deep learning workload apache hadoop chinese translation link talk stratum data conf ny thought thanks wangda tan"
    },
    "7622":{
        "ID":36185,
        "MESSAGE_ID":"b1bd12b2-5a3d-66fb-995e-eed25a78d23a@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[Ozone][status] 2019.01.29",
        "SENT_FROM":"\"Elek, Marton\" <elek@apache.org>",
        "TAGS":"not-ak",
        "BODY":"quick summary ozone community call yesterday release status security branch merged release expected next week todos security related issue connect api security reliability issue see testing bellow release manager ajay kumar would volunteer release manager hanisha koneru would ha release quick ozone presentation update upcoming apache hadoop contributor meetup bay area ongoing work discussed hanisha working ha classpatj issue ozonefs short term jar file added long term hdds different kind test planned started recently blockade test failover partitioning test similar legendary jepsen test using docker based blockade framework check open jiras test tb tpcds test planned stabilization work expected additional upstream test planned based realistic workload using ozonefs upstream bigdata project ozone experimental new solution could backported regular hadoop distribution well example real classpath separation new wiki page started collect candidate moved hadoop common hdfs project distributed tracing poc demonstrated ozone manager storage container manager blocking requirement ee performance test hdds usual feedback welcomed next call pst please join interested thanks marton url url url url unsubscribe mail hdfs dev unsubscribe hadoop apache org additional command mail hdfs dev help hadoop apache org"
    },
    "7678":{
        "ID":36129,
        "MESSAGE_ID":"CAFjxgDwfGP2oj6k4X5K3vHup8ayf04nnSDk7Xgn0pvjvT0pAqg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: SEDA, queues, and a second lower-priority queue set",
        "SENT_FROM":"Carl Mueller <carl.mueller@smartthings.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"additionally certain number thread stage could restricted serving low priority queue say thread ensure processing availability higher priority task"
    },
    "7811":{
        "ID":35996,
        "MESSAGE_ID":"9AA68FA2-BB07-4B9D-A854-4BFF1D5F7CE7@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Component Migration",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"following vote jira workflow change introduced new component migrated relatively easy retained old component value prefix legacy also introduced proposed feature field component establish possible achieve editable multi select list ticket filed infra follow progress change url complete migration component would appreciated could chip filter list ticket jira user associated either reporter assignee reviewer also associated one legacy component type would appreciated could slowly work perhaps starting reporter assignee moving onto reviewer ticket remain un migrated week two project cassandra component legacy coordination legacy core legacy cql legacy distributed metadata legacy documentation website legacy local write read path legacy observability legacy streaming messaging legacy testing legacy tool assignee currentuser reviewer currentuser reviewer currentuser reporter currentuser disappointingly majority ticket component associated perhaps could similar cleanup effort lacking component later date remaining bulk migration may able perform using fuzzy string search go far unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7828":{
        "ID":35979,
        "MESSAGE_ID":"CA+26f9gE4cvHYQaS7pMaAOOTt+1DZxvtYkoC7zGc-Pkwfo4xHQ@mail.gmail.com",
        "PARENT_ID":35978.0,
        "SUBJECT":"Re: CommitLog Recovery replay stop on first timestamp after restore-point-in-time",
        "SENT_FROM":"Morten Vejen Nielsen <mvejen@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks response ben exactly looking think write test ensure condition hold cassandra upgrade linked test cassandra seems nice starting point best regard morten nielsen"
    },
    "7829":{
        "ID":35978,
        "MESSAGE_ID":"CAKgYGapcKYb+XGEnat+Avo=PfqmSnjx8OgnL8ae7TFn1-MhMXQ@mail.gmail.com",
        "PARENT_ID":35977.0,
        "SUBJECT":"Re: CommitLog Recovery replay stop on first timestamp after restore-point-in-time",
        "SENT_FROM":"Ben Slater <ben.slater@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"personal knowledge fix interest took look jira look sound like behaviour fixed url ben slater chief product officer read latest technical blog post email sent behalf instaclustr pty limited australia instaclustr inc usa email attachment may contain confidential legally privileged information intended recipient copy disclose content please reply email immediately highlight error sender immediately delete message"
    },
    "7830":{
        "ID":35977,
        "MESSAGE_ID":"CA+26f9hC6HuP1JvHTejmoTD73UBf8e+r2OjE1RvUgwrG6vWzwg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"CommitLog Recovery replay stop on first timestamp after restore-point-in-time",
        "SENT_FROM":"Morten Vejen Nielsen <mvejen@gmail.com>",
        "TAGS":"property",
        "BODY":"hi moved user mailing list found statement datastax documentation regarding commitlog recovery concern namely restore stop first client supplied timestamp greater restore point timestamp order database receives mutation strictly follow timestamp order leave mutation unrecovered url mean point time restore really guarantee point time replay configured time since expect mutation order setup conducted experiment forcing cassandra instance commitlog replay change ahead time able reproduce behavior used fresh instance taken official cassandra docker image run test change configs done setting restore point time specified experiment follows edit etc cassandra commitlog archiving property set restore point time something near future let say hour ahead server time ssh instance cqlsh create keyspace thezoo replication class simplestrategy replication factor use thezoo create table animal id int primary key name varchar insert animal id name value bear insert animal id name value bear insert animal id name value bear insert animal id name value bear insert animal id name value bear insert animal id name value bear insert animal id name value bear insert animal id name value bear insert animal id name value bear insert animal id name value bear select id name writetime name animal add timestamp use future timestamp must ahead defined commitlog config file insert animal id name value duckfromfuture using timestamp insert animal id name value bird insert animal id name value bird insert animal id name value bird insert animal id name value bird insert animal id name value bird insert animal id name value bird insert animal id name value bird insert animal id name value bird insert animal id name value bird insert animal id name value bird simply forced power machine held power button restarted startup verify commitlog replay done log ssh instance enter cqlsh cqlsh thezoo select animal show bear bird replayed duck also digging cassandra source code made following finding think code skip mutation ahead time commitlogreplayer class see line time writing commitlogreplayer pointintimeexceeded mutation return code triggerred commitlogreader readsection seems responsible reading commit log wrapped loop read file eof see statustracker shouldcontinue reader getfilepointer end reader iseof method called file file commitlog recover recover commitlog segment file note statustracker shouldcontinue fail statustracker requesttermination called see case pointintimeexceeded case bit concerned hidden feature cassandra might revise backup strategy case however far see datastax documentation simply wrong unfortunately official documentation seems work progress fact fact positive result would also expect point time guarantee mutatations point time fact recovered anyone confirm documentation wrong maybe something wrong experiment reference also conducted experiment larger amount data recovery went multiple commitlog file got result namely recovered record restore point time best regard morten nielsen"
    },
    "7832":{
        "ID":35975,
        "MESSAGE_ID":"692d62ed-b764-85d8-03e2-1fa165f5f5f3@akamai.com",
        "PARENT_ID":null,
        "SUBJECT":"Question about PartitionUpdate.singleRowUpdate()",
        "SENT_FROM":"Sam Klock <sklock@akamai.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"cassandra devs question implementation partitionupdate singlerowupdate particular choice use encodingstats stats building resulting partitionupdate functional reason safe modify use encodingstats built deletioninfo row staticrow context table using twcs secondary index problem sstables index lingering essentially forever despite correlated sstables parent table removed pretty much expect traced problem use encodingstats stats singlerowupdate used create index update write parent table appears stats making cassandra think memtables index data september turn prevents dropping expired sstables much recent index experimentally modifying singlerowupdate build encodingstats input plus mutabledeletioninfo creates seems fix problem insight existing logic us stats however know change really safe sound like right track also sure would happy open issue submit patch sound like would useful generally thanks sk unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "7863":{
        "ID":35944,
        "MESSAGE_ID":"52C8F8EE-216F-4D1C-A8EC-7343793A348F@free.fr",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra Integrated Auth for JMX",
        "SENT_FROM":"Cyril Scetbon <cyril.scetbon@free.fr>",
        "TAGS":"not-ak",
        "BODY":"hey guy followed url setup jmx cassandra internal auth using cassandra however still connect jmx without authenticating see following attempt authentication set cassandra adce cqlsh cassandra cassandra connected mycluster cqlsh cassandra cql spec native protocol use help help cassandra cqlsh cassandra adce cqlsh cassandra cassandra connection error unable connect server authenticationfailed failed authenticate error server code bad credential message provided username cassandra password incorrect whole jvm configuration xloggc var log cassandra gc log xx usethreadpriorities xx threadprioritypolicy xx heapdumponoutofmemoryerror xssk xx stringtablesize xx alwayspretouch xx usebiasedlocking xx usetlab xx resizetlab djava net preferipvstack true xmsm xmxm xx useggc xx grsetupdatingpausetimepercent xx printgcdetails xx printgcdatestamps xx printheapatgc xx printtenuringdistribution xx printgcapplicationstoppedtime xx printpromotionfailure javaagent usr local share jolokia agent jar host executor fixed javaagent usr local share prometheus agent jar etc cassandra prometheus yaml xx printcommandlineflags xloggc var lib cassandra log gc log xx usegclogfilerotation xx numberofgclogfiles xx gclogfilesize dcassandra migration task wait second dcassandra ring delay xx compilecommandfile etc cassandra hotspot compiler javaagent usr share cassandra lib jamm jar dcassandra jmx remote port dcom sun management jmxremote rmi port djava library path usr share cassandra lib sigar bin dcom sun management jmxremote authenticate true dcassandra jmx remote login config cassandralogin djava security auth login config etc cassandra cassandra jaas config dcassandra jmx authorizer classpath dcom sun management jmxremote dcom sun management jmxremote ssl false dcom sun management jmxremote local false dcassandra jmx remote port dcom sun management jmxremote rmi port djava rmi server hostname adce dcassandra libjemalloc usr lib linux gnu libjemalloc xx onoutofmemoryerror kill dlogback configurationfile logback xml dcassandra logdir var log cassandra dcassandra storagedir var lib cassandra dcassandra foreground yes still query jmx without authenticating echo mbean classpath type storageservice attribute operationmode type read http cassandra cassandra post url http ok cache control cache content type text plain charset utf date sun dec gmt expires sun dec gmt pragma cache transfer encoding chunked request attribute operationmode mbean classpath type storageservice type read status timestamp value normal also add change permission file java home lib management jmxremote password weird used case cassandra complaining anything missing thanks cyril scetbon"
    },
    "7954":{
        "ID":35853,
        "MESSAGE_ID":"CADiq6=zwSYsAOX8Nrd2-eOK44BfR_M4hGyGkDhrYSD2trniE-g@mail.gmail.com",
        "PARENT_ID":35635.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"thanks daryn work saw filed upstream jira hadoop uploaded patch review watching jira review shortly fast best"
    },
    "7985":{
        "ID":35822,
        "MESSAGE_ID":"45F61DA7-E7ED-49EC-8978-724CE0F22D59@icloud.com",
        "PARENT_ID":null,
        "SUBJECT":"RPC connect error when using kerberos Auth",
        "SENT_FROM":"ZongtianHou <zongtianhou@icloud.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi everyone using hdfs client api access secured hdfs cluster kerberos set successfully configuration hadoop rpc protection core site xml set authentication work well however set integration privacy namenode connected log namenode give following error anyone know info mean lib needed connection integration privacy mode hint appreciated warn securitylogger classpath auth failed null problem callback handler info classpath socket reader port readandprocess client threw exception javax security sasl saslexception problem callback handler caused javax security sasl saslexception client selected unsupported protection unsubscribe mail hdfs dev unsubscribe hadoop apache org additional command mail hdfs dev help hadoop apache org"
    },
    "8004":{
        "ID":35803,
        "MESSAGE_ID":"44195833-148F-4F44-B6A1-BDA8DB1F7BD5@apache.org",
        "PARENT_ID":35798.0,
        "SUBJECT":"Re: JIRA Workflow Proposals",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sorry failed respond point aggregate email sure worth complicating flow scenario ticket simply return patch available really unsure best option anyone else strong opinion thought unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8005":{
        "ID":35802,
        "MESSAGE_ID":"D65C4222-325D-4EF4-B7EB-864B233A6CAF@apache.org",
        "PARENT_ID":35800.0,
        "SUBJECT":"Re: JIRA Workflow Proposals",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks jo feedback ill keep response brief already lot discussion flight let engage discussion avoid fragmentation field affect everything new field bug specific actually adjacent right severity bug category discovered try make clearer feature specific field bug counterpart feature category change category yes one absolute goal triage use ensure ticket promptly answered triaged contributor knowledgeable area great suggestion idea probably scope change hopefully provides foundation follow separate discussion best utilise right commits mailing list sends jira change would easy filter new creation also jira email ticket answer query triage state concern way create range would optimal version implies listing affected version would impossible practical since could affect version say open jira compatible suggestion maintain environment field proposed thread capture would prefer try capture platform option quickly possible quick message cassandra dev irc email dev let somebody quickly add option add list definitely complete yet sound like great idea agree schema hope use wiki starting point guide definitely incorporated think incorporating triage ideal though want create high barrier moving thing open going genuinely difficult issue though people busy get involved see problem materialise newer contributor soliciting early feedback design progress going help unfortunately getting negative feedback implementation commit inherent risk community experience matter long project unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8006":{
        "ID":35801,
        "MESSAGE_ID":"935D1511-BE68-4807-B421-FFBA78EF9721@apache.org",
        "PARENT_ID":35799.0,
        "SUBJECT":"Re: JIRA Workflow Proposals",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"thanks everyone quick initial feedback going aggregate response try avoid much fragmentation discussion well see sensible label irreconcilably keeping label think balance better remove spent looking existing label entirely paper inadequacy currently think label crutch used avoid better hygiene alternative route might support label bi annually promote useful one schema clear rest present label much painful clean categorised top migrate csv embedded proposal look rest occurrence see value really provide priority may right high priority necessary think useful member project flag ticket plan prioritise intention simply indicate contributor value ticket others probably intends address within next year would ok wish low normal urgent though people think josh remainder think several concern addressed new triage state idea user create ticket without field requirement contributor liaise user understand problem transition open expected understand problem system well enough provide initial assessment priority severity complexity affected component bug change category course revised benefit first assessment monitoring outstanding work right really bad managing work outstanding unless filed committer fwiw conjunction conversation priority would propose contributor permitted edit jira created non contributor file ticket without able set priority since something project manage cause conflict user feel empowered stipulate mandatory platform version etc triage plan essentially information required creation transition open proposal stand suggests removing environment field since poorly maintained intended capture reporter platform perhaps could instead make required ticket creation platform made required mark issue exclusively affect platform perhaps would make sense introduce flag would permit make required patch available since version already required transition patch available assignee enough context answer question"
    },
    "8007":{
        "ID":35800,
        "MESSAGE_ID":"CALShVHf0oJeP8XYLew57bTPu6_yCyDGnbXmRcYLd7Rn5=oqR_w@mail.gmail.com",
        "PARENT_ID":35799.0,
        "SUBJECT":"Re: JIRA Workflow Proposals",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"benedict thank putting document together think something like really improve quality usefulness jira ticket piece overall feedback proposal agree jeremy joshua keeping label label way contributor without access jira project configuration use try group related ticket together agree stronger well curated component valuable label valuable supplement natively work search link group ticket really easily throughout text various element available bug feature bug category feature category find hard keep track body text maybe separate document bug field feature field improvement field think pretty odd jira contributor assign ticket even proposal seems make go contributor one move ticket triage open state somewhat concerned ticket languish triage state unassigned person cut issue move open assign fix slo triage like expert tagged category triage new ticket within three day would feel different sure offer clear like triage awaiting feedback state indicate need detail reporter think ticket stay triage amount time contributor triaged asked information nobody looking maybe even auto close triage state ticket period inactivity clarify user receive email jiras awaiting triage perhaps mailing list join get email jiras cut know would really help knowing new jiras cut help triage something afaik currently possible documented still reading entire document far following specific feedback instead since version would recommend version issue since bug apply earlier version later one fix version refers version fix commit related bug feature platform include field allows user provide additional free form context know free form text helped provide additional context like nvme ssds reviewer start checked drive slow worst case included description personally like separation environment description bug improvement description huge review progress change requested really help new contributor know need make change workflow provide guidance contributor get high level feedback get patch available maybe explicitly indicate transitioning progress reviewer found irc mailing list signed high level idea issue maybe part new triage step feel one frustrating issue new contributor work get well completely different way feedback try finish internalizing rest document later today provide specific feedback thanks starting discussion look forward resulting update joey"
    },
    "8008":{
        "ID":35799,
        "MESSAGE_ID":"BAC5B54D-2FEF-48AF-9468-F6E4C3BD2607@gmail.com",
        "PARENT_ID":35798.0,
        "SUBJECT":"Re: JIRA Workflow Proposals",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"regarding label personally fan mapping commonly used label thing like component feature tool etc well keeping label newer arbitrary grouping tried maintain certain label like virtual table lcs lwt fqltool etc new thing fqltool virtual table immediately make component really nice group see might stability feature specific thinking virtual table item agree arbitrary misspelled label make thing bit noisy long strive use component feature periodic upkeep label periodic upkeep mean converting new label component beyond new feature arbitrary grouping might nice ngcc labeled ticket see contributed project time similar event summary really like mapping also really like way label still value also strive keep component field date really harm label jeremy unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8009":{
        "ID":35798,
        "MESSAGE_ID":"1EE95EFF-2EFD-49E4-ABF2-309BDA8010F4@gmail.com",
        "PARENT_ID":35797.0,
        "SUBJECT":"Re: JIRA Workflow Proposals",
        "SENT_FROM":"Sankalp Kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"following initial comment proposal creating jira field mandatory like platform version etc want put le burden someone creating ticket feel required opening bug flow non committer first pas review unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8010":{
        "ID":35797,
        "MESSAGE_ID":"CAHyRp2THD_CssTio_xt4pLUxiCKwzVU-ON20N6xWp8qosvQt6Q@mail.gmail.com",
        "PARENT_ID":35796.0,
        "SUBJECT":"Re: JIRA Workflow Proposals",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"removal label one strength current model flexibility grouping concept arise user perspective lhf etc calcifying label concept component category etc strict loss functionality user express categorize concern project feel like correction current lack discipline cleaning one label counter proposal beef category component proposed migrate label remove one label adding value considering aggregating similar label leave label field intact perhaps bit guidance effectively use required field transition assuming required upon issue creation placing significant burden user seen something want open ticket sure semantic failure consistency failure instance instead field required transition ticket state developer working think make sense priority change blunt look like shuffling chair deck titanic one experience user going set priority ticket open hence default major ticket opened major something either left alone offend priority actually major consistent default changed dev anyway added signal new high urgent distinction communication developer intent engage ticket something lost user reporting something meaningful counter proposal point current problem ux field signal noise field going meta question trying accomplish sound like looking capture information simplify data entry nudge people towards complete accurate data entry ability project measure release quality time identify cassandra ready due release proposal current form make certain strong inroad metric think major thing missing ux thinking changing making easy reduce friction user report bug request project jira easy thing right hard thing wrong current proposal thing right though would argue easy asking user provide experience issue philosophically trying make easier people paid ft work trying make thing easier user neither targeting project change issue problem trying improve lastly tlc management jira aspect project definitely languished pointing finger least guilty anyone big thanks whomever collaborate getting conversation started"
    },
    "8011":{
        "ID":35796,
        "MESSAGE_ID":"D48998E1-AE34-4427-8A17-C00B345EA15B@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"JIRA Workflow Proposals",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"concluded effort produce proposal change jira workflow found url hope broad consensus sure plain sailing would great get discussion going around proposal please take time read respond think strong opinion topic remains undecided question initial proposal highlighted wiki specifically seemingly objective winner suggested change component though preference express ensuing discussion contentious issue may removal label noisy vast majority provide value expect superseded suggestion introduction required field certain transition new complexity severity bug feature category introduction new transition triage review progress change requested look forward hearing thought"
    },
    "8013":{
        "ID":35794,
        "MESSAGE_ID":"CAA0e42N6J1p9kpAWasgtfX=m5EGkVpJH3fk-_ZnDkOLtv9WEeg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Inter-node messaging latency",
        "SENT_FROM":"Yuji Ito <yuji@phact-columba.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8082":{
        "ID":35725,
        "MESSAGE_ID":"CAPccznSN7BjiSD+q07+egQ0wFZ610yzDjiVXH5QnZnmft7VH-g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Request to review feature-freeze proposed tickets",
        "SENT_FROM":"Vinay Chella <vinaykumarcse@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi still patch available open ticket requested review sep freeze starting email thread resurface request review community ticket ticket address vital correctness performance usability bug help avoid critical production issue tried provide context feel ticket important get would like discus technical detail particular ticket let try jira cassandra cluster enters inconsistent state bootstrap failure correctness bug production impact ready commit cassandra de sends request wrong node routinely sla breaking latency production impact review progress cassandra cassandra currently production cluster rebuilt node failure due introduction system auth keyspace rf ticket fix regression introduced letting operator configure rf prevent future outage usability bug production impact patch available cassandra cassandra repair cause memory believe may also impact title say production impact patch available cassandra impossible accurately determine local read write call patch allows user detect choosing incorrect coordinator usability bug troubleshoot review progress cassandra way safely stop bad client bringing node patch would give operator important tool use production incident mitigate impact usability bug production impact recovery patch available cassandra visibility disk compacted usability bug production impact troubleshoot review progress cassandra break large mv mutation prevent ooms title say production impact patch inprogress awaiting feedback cassandra nodetool rebuild dc let pas invalid datacenters usability bug production impact patch available cassandra smarter nodetool rebuild kind bug would nice get production impact recovery patch available cassandra cleanup old configuration confusing new operator cleanup patch available cassandra hint window persistence across record way hint accumulated period time node creating le likely take entire cluster potential production impact patch available cassandra bug cassandra usability bug patch available cassandra rangeaware compaction vnode cluster really need able basic thing like repair patch need rework transient replication production impact need contributor time url ticket jira let know thanks vinay chella"
    },
    "8163":{
        "ID":35644,
        "MESSAGE_ID":"CADiq6=wra7d2rATjQa_y2xrtmYbxcLB2z5L7s6NAdKEShpu5pg@mail.gmail.com",
        "PARENT_ID":35643.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"property, technology",
        "BODY":"thanks input offer additional information daryn working stuff optimizing rpc encryption open another possibility migrating km service use hadoop rpc today km us http rest api much like webhdfs undesirable performance thousand ops per second compared namenode unfortunately namenode namespace operation also need access km migrating km hadoop rpc greatly improves performance implemented correctly rpc encryption would prerequisite please keep mind discussing hadoop rpc encryption improvement cloudera interested help hadoop rpc encryption project lot customer using rest encryption starting hit km performance limit whole migrating km hadoop rpc daryn idea heard idea meetup thrilled see happening real issue bothering customer suspect right solution address tech debt"
    },
    "8164":{
        "ID":35643,
        "MESSAGE_ID":"CADY20s6qZqd+698_1Yx+8uHeOcDZebTUok-6EcS=Tmk1baehyA@mail.gmail.com",
        "PARENT_ID":35642.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com.INVALID>",
        "TAGS":"property, technology",
        "BODY":"one possibility use kudu use ssl encryption self signed certificate maintaining existing sasl gssapi handshake authentication one important bit security wise implement channel binding rfc rfc prevent mitms description kudu protocol url implemented correctly provides tl encryption performance security benefit without requiring user deploy custom cert todd"
    },
    "8165":{
        "ID":35642,
        "MESSAGE_ID":"CAKtuutG1PLbiDTjq6mgCc0+wvWw=q_5PoLg28mPVOgxMc=qu8w@mail.gmail.com",
        "PARENT_ID":35635.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"hi wei chiu thanks starting thread summarizing problem sorry slow response looking encrypted performance well interested effort ran benchmark locally benchmark also showed substantial penalty turning wire encryption rpc although le drastic range ran different benchmark nnthroughputbenchmark ran last year could published result need rerun recent version three point discussion settle benchmarking tool development rpccallbenchmark good measure directly improvement rpc layer external consumption important know namenode rpcs performance probably run benchmark sasl ssl since current implementation based sasl think would make sense make improvement direction assume switching ssl would require change configuration sure compatible since detail point would go hadoop given daryn concern addressed performance improvement expectation ideally want penalty encrypted communication anything probably limited usability gray area could mitigated allowing mixed encrypted un encrypted rpcs single namenode like hdfs thanks konstantin"
    },
    "8172":{
        "ID":35635,
        "MESSAGE_ID":"CAK85xrnTQtdFbc5zTO7Bv5QXQoC7pf5E-TeMUDPGEJv2M-rk+Q@mail.gmail.com",
        "PARENT_ID":35634.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Daryn Sharp <daryn@oath.com.INVALID>",
        "TAGS":"property, technology",
        "BODY":"various km task delaying rpc encryption work nd todo list becoming top priority try best get preliminary netty server patch sans tl week help two cited jiras critical flaw skimming comment use blocking io obvious nonstarter hadoop hand rolled tl like encryption feel something community maintain security standpoint daryn"
    },
    "8173":{
        "ID":35634,
        "MESSAGE_ID":"CADiq6=x04VUgJw0ZDjFTQEeVcYJPyACwYKhaaxiWi0916_B12A@mail.gmail.com",
        "PARENT_ID":35613.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"not-ak",
        "BODY":"ping one cloudera interested moving forward rpc encryption improvement like get consensus approach go otherwise pick hadoop since ready commit spent time testing"
    },
    "8194":{
        "ID":35613,
        "MESSAGE_ID":"CADiq6=wKMjpCORdNWi7RUpeALcH1=OsK8DECTQsf0nLh6Wtdqw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Hadoop RPC encryption performance improvements",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"existence, property, technology",
        "BODY":"folk would like invite discus various hadoop rpc encryption performance improvement probably know hadoop rpc encryption currently relies java sasl really bad performance term number rpcs per second around one without sasl attempt address notably hadoop optimize hadoop rpc encryption performance hadoop securing hadoop rpc using ssl look like attempt progressing recent hadoop contributor meetup daryn sharp mentioned working another approach leverage netty ssl encryption integrate netty hadoop rpc hadoop rpc automatically benefit netty ssl encryption performance least attempt address issue see consensus important problem approach want move forward happy hadoop contributor"
    },
    "8319":{
        "ID":35488,
        "MESSAGE_ID":"1538507673870.99476@helixeducation.com",
        "PARENT_ID":null,
        "SUBJECT":"Resourcemanager Failing on OpenJDK11",
        "SENT_FROM":"Jeremiah Adams <JAdams@helixeducation.com>",
        "TAGS":"not-ak",
        "BODY":"testing openjdk yarn kafka samza found yarn resourcemanager run openjdk see tasking jira regarding java yarn plan regarding openjdk change oracle support release cadence epic story regarding java add issue issue resourcemanager webappcontext failing caused java lang noclassdeffounderror javax activation datasource activation package lumped jee corba removal deprecated marked removal removed gone output log warn classpath failed startup context webappcontext daba file private var folder nwpmbdpjfmmkcwzgn jetty node dir webapp unavailable node classpath unable provision see following error error injecting constructor java lang noclassdeffounderror javax activation datasource classpath jaxbcontextresolver java classpath nmwebapp setup webserver java locating classpath error classpath get injectorimpl java classpath injectorimpl java classpath guiceinstantiatedcomponentprovider getinstance guicecomponentproviderfactory java classpath managedsingleton iocproviderfactory java classpath iocproviderfactory java classpath iocproviderfactory java classpath providerfactory java classpath providerservices java classpath providerservices java classpath contextresolverfactory java classpath webapplicationimpl java classpath webapplicationimpl java classpath webapplicationimpl java classpath webapplicationimpl java classpath error java classpath webapplicationimpl java classpath guicecontainer java classpath internalwebcomponent initiate servletcontainer java classpath webcomponent java classpath webcomponent java classpath servletcontainer java classpath servletcontainer java classpath filterdefinition java classpath managedfilterpipeline java classpath guicefilter java classpath filterholder java classpath servlethandler java classpath servletcontexthandler java classpath webappcontext java classpath webappcontext java classpath contexthandler java classpath servletcontexthandler java classpath webappcontext java classpath abstractlifecycle java classpath containerlifecycle java classpath containerlifecycle java classpath abstracthandler java classpath abstractlifecycle java classpath containerlifecycle java classpath server java classpath containerlifecycle java classpath abstracthandler java classpath server java classpath abstractlifecycle java classpath httpserver java classpath builder start webapps java classpath builder start webapps java classpath webserver java classpath abstractservice java classpath compositeservice java classpath abstractservice java classpath nodemanager java classpath nodemanager java caused java lang noclassdeffounderror javax activation datasource classpath runtimebuiltinleafinfoimpl java classpath runtimetypeinfosetimpl java classpath runtimemodelbuilder java classpath runtimemodelbuilder java classpath modelbuilder java classpath runtimemodelbuilder java classpath jaxbcontextimpl java classpath jaxbcontextimpl java classpath jaxbcontextbuilder build jaxbcontextimpl java classpath contextfactory java java base jdk internal reflect nativemethodaccessorimpl invoke native method java base jdk internal reflect nativemethodaccessorimpl invoke nativemethodaccessorimpl java java base jdk internal reflect delegatingmethodaccessorimpl invoke delegatingmethodaccessorimpl java java base java lang reflect method invoke method java javax xml bind contextfinder newinstance contextfinder java javax xml bind contextfinder newinstance contextfinder java javax xml bind contextfinder find contextfinder java javax xml bind jaxbcontext newinstance jaxbcontext java classpath jsonjaxbcontext java classpath jaxbcontextresolver java classpath fastclassbyguice eea newinstance classpath fastconstructor newinstance fastconstructor java classpath newinstance defaultconstructionproxyfactory java classpath constructorinjector java classpath constructorinjector java classpath factory get constructorbindingimpl java classpath call providertointernalfactoryadapter java classpath injectorimpl java classpath providertointernalfactoryadapter java classpath get singletonscope java classpath internalfactorytoprovideradapter java classpath call injectorimpl java classpath injectorimpl java classpath get injectorimpl java caused java lang classnotfoundexception javax activation datasource java base jdk internal loader builtinclassloader loadclass builtinclassloader java java base jdk internal loader classloaders appclassloader loadclass classloaders java java base java lang classloader loadclass classloader java info classpath started serverconnector dad http http jeremiah adam software engineer www helixeducation com blog twitter facebook linkedin"
    },
    "8327":{
        "ID":35480,
        "MESSAGE_ID":"1538491737.1896386.1527945472.22A36CAC@webmail.messagingengine.com",
        "PARENT_ID":35477.0,
        "SUBJECT":"Re: Implicit Casts for Arithmetic Operators",
        "SENT_FROM":"Ariel Weisberg <ariel@weisberg.ws>",
        "TAGS":"not-ak",
        "BODY":"hi think decide based least surprising mention overridden concern seems priority correctness performance user visible complexity developer visible complexity defaulting silent implicit data loss ideal correctness standpoint something better like using wider type seem like performance issue developer complexity public api get one shot wonder overflow handled well voltdb think threw overflow tended widening conversion make le common imitate another database far know went least likely silently corrupt data url url ariel"
    },
    "8329":{
        "ID":35478,
        "MESSAGE_ID":"CADYGX9b711id=rbnf6wJ0mKOoAGMuWi8e0_5S38z+EEQ1Ha3Mg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"OpenTracing support (replacing HTrace)",
        "SENT_FROM":"Carlos Alberto Cortez <calberto.cortez@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hey sending mail list seems component devel mailing list imminent retirement htrace hadoop corresponding ticket jira url worked small proof concept effort replacing opentracing brave zipkin java client mentioned related jira ticket felt like would nice also post feedback consideration mentioned would happy remaining work effort finished poc creates default tracer instance based zipkin running localhost simplicity purpose us globaltracer create register use tracer single place needed small extra work pas around parent child relationship added new spancontext field clases using protobuf pas trace info bye code life inin url looking forward comment feedback"
    },
    "8330":{
        "ID":35477,
        "MESSAGE_ID":"DF572635-DD96-481C-9844-BCF5A79CF349@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Implicit Casts for Arithmetic Operators",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"existence",
        "BODY":"cassandra introduced arithmetic operator alongside came implicit cast operand semantic decision made think project would well explicitly raise kind question wider input release since project bound forever case choice lossy lossless cast operation involving integer floating point number essence float int float double bigint double float int double double bigint decimal float int decimal double bigint decimal option performs lossy implicit cast int float bigint double simply casting type change value sql server option cast without loss precision thereabouts postgresql question interested right decision right decision arrived view primarily aim least surprise user keen hear others unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8349":{
        "ID":35458,
        "MESSAGE_ID":"5409a4f9754348aeabcfb10fd1177a70@SH1MAIL04.corp.vipshop.com",
        "PARENT_ID":35448.0,
        "SUBJECT":"\u7b54\u590d: NN run progressively slower",
        "SENT_FROM":"\"Lin,Yiqun(vip.com)\" <yiqun01.lin@vipshop.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail hdfs dev unsubscribe hadoop apache org additional command mail hdfs dev help hadoop apache org"
    },
    "8359":{
        "ID":35448,
        "MESSAGE_ID":"8AD4EE147886274A8B495D6AF407DF698FF3DB0E@BLREML503-MBX.china.huawei.com",
        "PARENT_ID":35425.0,
        "SUBJECT":"RE: NN run progressively slower",
        "SENT_FROM":"Brahma Reddy Battula <brahmareddy.battula@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"look using apache hadoop promotion failure checked using following xx printgcdetails xx printpromotionfailure xx printflsstatistics survivorratio configured give gc params configured even gc log option xx printtenuringdistribution show threshold age object new generation useful observing lifetime distribution application periodic heapdump could helped crossed checked following also nn jn dedicated disk writing edit log transaction ii dfs namenode accesstime precision set low value nn update last accessed time file iii group look taking time nn check every request iv nn log excessive spew jira fixed later like decommission node recursive call frequently"
    },
    "8382":{
        "ID":35425,
        "MESSAGE_ID":"a3cca2ca7b7c4bd88b49c4885f852771@SH1MAIL04.corp.vipshop.com",
        "PARENT_ID":35424.0,
        "SUBJECT":"\u7b54\u590d: NN run progressively slower",
        "SENT_FROM":"\"Lin,Yiqun(vip.com)\" <yiqun01.lin@vipshop.com>",
        "TAGS":"property",
        "BODY":"hi wei chiu beginning noted hdfs changing structure stored block multiple adding removing structure performance degradation think reach stable state hdfs root point view failing close file warning client nn fail happened enabled gc logging take analysis nn heap dump gc log find average time ygc around total ygc time within one day increasing day day thanks sharing thanks yiqun wei chiu chuang mailto weichiu cloudera com hdfs dev nn run progressively slower yiqun related hdfs note hdfs backported since cdh interested learn observe client failing close file due insufficient number block replica nn fail gc logging enabled chance take heap dump analyze quite nn scalability gc improvement cdh cdh time frame customer beyond scale version think heard similar symptom regard"
    },
    "8383":{
        "ID":35424,
        "MESSAGE_ID":"CADiq6=y1ToxsTWh=gY4yLpgmMHodcJKh-JhA8jBNcp9UmVM4yw@mail.gmail.com",
        "PARENT_ID":35412.0,
        "SUBJECT":"Re: NN run progressively slower",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@cloudera.com.INVALID>",
        "TAGS":"property",
        "BODY":"yiqun related hdfs note hdfs backported since cdh interested learn observe client failing close file due insufficient number block replica nn fail gc logging enabled chance take heap dump analyze quite nn scalability gc improvement cdh cdh time frame customer beyond scale version think heard similar symptom regard"
    },
    "8384":{
        "ID":35423,
        "MESSAGE_ID":"3a947c936e454e2a9c4becc03178cec4@SH1MAIL04.corp.vipshop.com",
        "PARENT_ID":35419.0,
        "SUBJECT":"\u7b54\u590d: NN run progressively slower",
        "SENT_FROM":"\"Lin,Yiqun(vip.com)\" <yiqun01.lin@vipshop.com>",
        "TAGS":"not-ak",
        "BODY":"hi kiwal following response yes using cm young gen size gb maybe little large old gen gb threshold triggering full gc total heap size gb nn young gen collection every one time thanks yiqun kihwal lee mailto kihwal oath com hdfs dev nn run progressively slower using cm big young gen often nn young gen collection slow"
    },
    "8388":{
        "ID":35419,
        "MESSAGE_ID":"CAKYKF1VkGnxY-0nAWMzJzecZxxsHB228Sr8QdXrRbJrUcUeUhg@mail.gmail.com",
        "PARENT_ID":35412.0,
        "SUBJECT":"Re: NN run progressively slower",
        "SENT_FROM":"Kihwal Lee <kihwal@oath.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"using cm big young gen often nn young gen collection slow"
    },
    "8395":{
        "ID":35412,
        "MESSAGE_ID":"46ea61e7140f42b680cc05ff92e3cdc5@SH1MAIL04.corp.vipshop.com",
        "PARENT_ID":null,
        "SUBJECT":"NN run progressively slower",
        "SENT_FROM":"\"Lin,Yiqun(vip.com)\" <yiqun01.lin@vipshop.com>",
        "TAGS":"property",
        "BODY":"hi hdfs developer meet bad problem rolling upgrade hadoop version cdh cdh problem find nn running slow periodically around week concretely say example startup nn monday run fast time coming weekend cluster become slow beginning thought maybe fsn lock caused improvement configurable remove block interval print fsn lock elapsed time problem still exists suspect maybe hdfs rpc problem finally find related phenomenon every time nn run slow old gen reach high value around gb actually nn total metadata size around gb clsuter temporary solution reduce heap space trigger full gc frequently look better found root sure jvm tuning problem hdfs bug anyone met similar problem version nn old gen space greatly increased information env jdk node million block around gb metadata size used appreciate anyone share comment thanks yiqun communication intended addressee may contain information privileged confidential hereby notified intended recipient listed authorized employee agent addressee communication responsible delivering mail message intended recipient dissemination distribution reproduction communication including attachment hereto strictly prohibited received communication error please notify immediately reply mail addressed sender permanently delete original mail communication attachment storage device without making otherwise retaining copy"
    },
    "8422":{
        "ID":35385,
        "MESSAGE_ID":"CAPbVhuNv_q_akaUKX-YaaNRxM9BWh5QiAPn+3CmLGoeM9+TKdg@mail.gmail.com",
        "PARENT_ID":35380.0,
        "SUBJECT":"Re: Measuring Release Quality",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"yep agreed count"
    },
    "8427":{
        "ID":35380,
        "MESSAGE_ID":"08B59C94-5368-4D7F-A7D8-5CEC17A98C5A@apache.org",
        "PARENT_ID":35379.0,
        "SUBJECT":"Re: Measuring Release Quality",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"thanks kurt think goal would get jira state hold information want easy get information correct filing feeling would easiest small group make rapid progress initial proposal bring community final tweaking approval perhaps rejection hope contentious topic think huge job come proposal though might need organise community effort clean jira history would great could get volunteer company background participate unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8428":{
        "ID":35379,
        "MESSAGE_ID":"CAPbVhuMNryre+53NhdEpR+791s6b0LJ64i92QQarAWt1pyByvQ@mail.gmail.com",
        "PARENT_ID":35365.0,
        "SUBJECT":"Re: Measuring Release Quality",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"process",
        "BODY":"interested better defining component label use doc would good start lhf would prefer kept information within jira use field label though generated report tag keeping information one place much better experience applicable ci obviously ideally generate testing report directly testing system see huge amount work think overall risk pretty small especially considering easily done way affect anyone get consensus methodology"
    },
    "8442":{
        "ID":35365,
        "MESSAGE_ID":"etPan.5ba52e01.35d22b2c.138@paradoxica.net",
        "PARENT_ID":35358.0,
        "SUBJECT":"Re: Measuring Release Quality",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"process",
        "BODY":"josh thanks reading sharing feedback agreed starting simple measuring input high signal good place begin challenge building consensus point taken agreed perhaps distinction producing something useful something authoritative decisionmaking purpose motivation work toward something useful measured value contributor find id happy start putting together part experiment agreed evaluating value relative cost see thing play benedict point jira agreed plotting value messy input would produce useful output question small working group might take toward better categorization might look like revisiting list component core capture lot right revisiting field required filing ticket removed form reviewing active label understanding people trying capture could organized documented better documenting priority common standard point even pretty good considering adding severity field capture distinction priority severity appetite spending little time id put effort toward others interested anyone otherwise equally fine experiment measure basic via current structure josh mentioned scott"
    },
    "8449":{
        "ID":35358,
        "MESSAGE_ID":"514DA743-C5C9-4493-9A30-41C59E33986C@apache.org",
        "PARENT_ID":35357.0,
        "SUBJECT":"Re: Measuring Release Quality",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"process",
        "BODY":"think would great start getting high quality info jira think need clean standardise use facilitate take component field example current list option auth build compaction configuration core cql distributed metadata documentation website hint library lifecycle local write read path materialized view metric observability packaging repair sasi secondary index streaming messaging stress testing tool case duplication metric observability coordination storage proxy hint batchlog counter hint local write read path core others lack granularity streaming messaging core coordination distributed metadata others lack clarity core lifecycle coordination others probably missing entirely transient replication label also used fairly haphazardly clear definition priority perhaps form working group suggest methodology filling jira standardise necessary component label etc put together wiki page step step instruction"
    },
    "8450":{
        "ID":35357,
        "MESSAGE_ID":"CAHyRp2R2ZXUYgjWwFqsxkHx+gC2nzcwU=PpAp7iP0HCT2sVAeQ@mail.gmail.com",
        "PARENT_ID":35352.0,
        "SUBJECT":"Re: Measuring Release Quality",
        "SENT_FROM":"Joshua McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"spent good bit time thinking bounced different way measure quality progress well trying influence community behavior topic advice start small simple kiss yagni get metric pas fail utest dtest flakiness time perhaps also aggregate bug count component time spending predetermined time couple month experiment retrospect project see effort adding value commensurate time investment required perform measurement analysis lot really good idea linked wiki article email thread biggest challenge risk failure translating good idea action selling project participant value changing behavior latter fallen short year building consensus especially regarding process shudder hard also thanks spearheading discussion scott one come back regularity real pain opportunity project going"
    },
    "8455":{
        "ID":35352,
        "MESSAGE_ID":"etPan.5ba2f890.60f46db7.3b7f@paradoxica.net",
        "PARENT_ID":null,
        "SUBJECT":"Measuring Release Quality",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"process",
        "BODY":"hi everyone many team begun testing validating apache cassandra useful think progress look like metric alone may tell done mean help answer question getting better worse quickly friend described attribute metric considered useful suggesting good metric actionable visible predictive consequent actionable know based invest fix fine etc visible everyone stake metric full visibility participates definition predictive good metric enable forecasting outcome consistent performance test result build abc predict reduction ile read latency workload prod consequent take action based shipping test failing note confluence toward metric may useful track beginning phase development release cycle interested thought also copied inline easier reading mail client link url cheer scott measuring release quality document draft sketch idea located discussion section wiki indicate active draft document voted achieved consensus way official introduction document outline series metric may useful toward measuring release quality quantifying progress testing validation phase apache cassandra release cycle goal document think consider measuring quantify progress testing validating apache cassandra document explicitly discus release criterion though metric may useful input discussion topic metric build test health produced via ci recorded confluence bread butter metric intended capture baseline build health flakiness test suite presented time series understand changed build build release release metric pas fail metric unit test pas fail metric dtests flakiness stats unit dtests metric found bug count methodology sourced via jql reported confluence intended help understand efficacy methodology applied might consider annotating bug found jira methodology produced could consumed input jql query reported confluence dev wiki reach pareto optimal level investment methodology wed expect see found bug rate taper achieve higher quality across board wed expect see tapering found bug count across methodology event one two approach outlier could indicate utility doubling particular form testing might consider reporting found count methodology property based fuzz testing replay testing upgrade different testing performance testing shadow traffic unit dtest coverage new area source audit metric found bug count subsystem component sourced via jql reported confluence similar found found metric help understand component subsystem database finding issue event particular area stand hot well quantitative feedback need support investment tracking count time first derivative rate also help make statement regarding progress various subsystem though prove negative bug found therefore bug gain confidence rate decrease normalized effort putting might consider reporting found count component enumerated jira auth build compaction compression core cql distributed metadata metric found bug count severity sourced via jql reported confluence similar found bad metric help understand severity issue encounter build quality improves would expect see decrease severity issue identified high rate critical issue identified late release cycle would concern though may expected earlier time could roughly sourced priority field jira trivial minor major critical blocker priority map directly severity may useful proxy alternately could introduce label intended represent severity wed like make clear metric performance test performance test tell fast expensive many metric could capture variety workload could sourced ill refrain proposing particular methodology reporting structure since many thought reporting perspective inspired mozillas arewefastyet com used report performance javascript engine relative chrome url sort feedback build build basis would help catch regression quantify improvement provide baseline metric code coverage static analysis technique may also useful publish metric ci code coverage package class method branch might useful metric quality relationship code coverage quality tenuous however would useful quantify trend time release source list important poorly covered area project others thing could measure want drown metric work required gather likely described could useful consider convergence across metric thesis document improvement area correlated increase quality improvement across area correlated increase overall release quality tracking metric like provides quantitative foundation assessing progress setting goal defining criterion sense end beginning"
    },
    "8474":{
        "ID":35333,
        "MESSAGE_ID":"2111514680.4847472.1536860353312@mail.yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Proposing an Apache Cassandra Management process",
        "SENT_FROM":"\"dinesh.joshi@yahoo.com.INVALID\" <dinesh.joshi@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"clarification scope management process simply run repair scheduling repair scheduling one many feature could implement adopt existing source could please split management process discussion repair scheduling reading management process proposal see missed communicate basic idea document wanted take pluggable approach various activity management process could perform could accommodate different implementation common activity repair management process would provide basic framework would default implementation basic activity would allow speedier iteration cycle keep thing extensible turning question jon others raised intention fully contribute stay community said thing feel rushed feel like analysis paralysis looking actionable feedback discus management process repair scheduling solution thanks dinesh"
    },
    "8661":{
        "ID":35146,
        "MESSAGE_ID":"D829C7E6-E4C8-4046-A4D9-C549505FE5E5@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"review for IPC client change needed",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi wait jenkins return patch ipc client shutdown need review people experience ipc client code url ipc code key area sensitive yet shutdown logic known broken source timeouts shutdown hook anyone experience area take look otherwise superficial experience voting thanks steve"
    },
    "8696":{
        "ID":35111,
        "MESSAGE_ID":"6A086F2B-AA78-4638-84EB-0CF85FE1DD39@yahoo.com",
        "PARENT_ID":35101.0,
        "SUBJECT":"Re: Reaper as cassandra-admin",
        "SENT_FROM":"Dinesh Joshi <dinesh.joshi@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"briefly looked reaper codebase yet analyze better real meaningful opinion main concern starting existing codebase come tech debt specific reaper codebase imported whole mean future developer patch work within confines decision already made practically speaking codebase established inertia making architectural change left dealing technical debt stand idea using reaper feature would much like using mature code tested would however like propose piece mealing codebase give community chance review going possibly change design decision upfront also avoid situation make many breaking change initial version due refactoring would also like could compare contrast functionality priam interesting sidecar folk may want call fact would great could bring best functionality multiple implementation dinesh unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8698":{
        "ID":35109,
        "MESSAGE_ID":"9ba1b53e-2032-4d56-9101-fe3260f7a0f6@Spark",
        "PARENT_ID":35106.0,
        "SUBJECT":"Re: Reaper as cassandra-admin",
        "SENT_FROM":"Rahul Singh <rahul.xavier.singh@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"id interested contributing well working skew review diagnostics tool feed cfstats tbstats data txt output csv conditionally formatted excel starting store data wrap react based grid backlogged forking reaper core ui api front end lot potential specifically api service ui could modularized leverage ioc add functionality via configuration code lot good convention open source commercial project web based administration tool successful one basic related tool well leave rest system pitfall want valuable talent enter group reinvent wheel thing tool well focus admins architect developer need eg prometheus grafana good stats keep make easier facilitate compose docker another example idea including data browser interactive query interface redash zeppelin good job time matter much time spend probably would want make better one rahul singh chief executive officer anant corporation wisconsin ave nw suite washington build manage digital business technology platform"
    },
    "8699":{
        "ID":35108,
        "MESSAGE_ID":"1535420489.364080.1488188944.602D8CDD@webmail.messagingengine.com",
        "PARENT_ID":35102.0,
        "SUBJECT":"Re: Reaper as cassandra-admin",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"working jeff contributor close cleared copyright either spotify stefan clas place asf license npm dependency good still got audit java deps architecture doc need fleshed especially address side car management ticket discussion design reaper flexible design run one multiple instance lot work made move towards eventually consistent least design hard work towards side car model feel trialled battle tested need add pinning connection repair segment localhosts question reaper flexibility example still want support memory postgres storage backends neither support distributed side car installation quite right jeff owe apology worked ticket far bit caught guard really hoping start converge work idea point regard mick unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8701":{
        "ID":35106,
        "MESSAGE_ID":"1535419324.359584.1488171880.1A2BDFB3@webmail.messagingengine.com",
        "PARENT_ID":35103.0,
        "SUBJECT":"Re: Reaper as cassandra-admin",
        "SENT_FROM":"Mick Semb Wever <mck@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi murukesh roadmap per se open source contribution come make know progress discussed thorough upgrade test support diagnostic event task operation compaction cleanup sstableupgrades etc etc metric better visualisation example see newly added streaming making scheduler repair agnostic task operation scheduled making task operation based jmx call preparing non jmx type task regard mick unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8702":{
        "ID":35105,
        "MESSAGE_ID":"40797FB3-8CE8-4599-86BC-B8F040ADF10B@gmail.com",
        "PARENT_ID":35102.0,
        "SUBJECT":"Re: Reaper as cassandra-admin",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"aside frustrating would sit month first mail april folk enough people know process know communicating early often help avoid duplicating expensive work best tech need go need leave ability meet goal original proposal reaper ui nice wish would talked group folk combine effort april wed much ahead jeff jirsa unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8703":{
        "ID":35104,
        "MESSAGE_ID":"CACUnPaBN7HCsA36oSAb4-MVw8gSHwtMxBmnnSc3mJ16my2aFEw@mail.gmail.com",
        "PARENT_ID":35102.0,
        "SUBJECT":"Re: Reaper as cassandra-admin",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"believe issue mick reaching alex mick putting together architecture documentation step toe currently run reaper single instance connects entire cluster multiple instance ha mode finishing rework code run sidecar"
    },
    "8704":{
        "ID":35103,
        "MESSAGE_ID":"CAKLgQbygzGafMw+nyqS3f0i4oMid+rhg90ORPPn_6+-BKFqpVA@mail.gmail.com",
        "PARENT_ID":35102.0,
        "SUBJECT":"Re: Reaper as cassandra-admin",
        "SENT_FROM":"Murukesh Mohanan <murukesh.mohanan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"roadmap release schedule get idea reaper devs planned murukesh mohanan"
    },
    "8705":{
        "ID":35102,
        "MESSAGE_ID":"03CAC2F0-E3AC-4B54-AAE1-56D71C33F6FE@gmail.com",
        "PARENT_ID":35101.0,
        "SUBJECT":"Re: Reaper as cassandra-admin",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"get contributor cleared architecture centralized sidecar unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8706":{
        "ID":35101,
        "MESSAGE_ID":"CACUnPaAuk-xh78OqXUEW0SUoeq2ro6GzVgj6nYkxO5oJ36OVVA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Reaper as cassandra-admin",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"existence",
        "BODY":"hey folk mick brought sidecar thread wanted clear separate discussion thinking regard contributing reaper project mind starting reaper great way admin right know work well kind scale need worked lot company putting reaper prod least running several hundred cluster codebase evolved direct result production usage feel would great pair release lot work done repair logic make thing work across every supported version cassandra great deal documentation well case folk aware addition one scheduled repair reaper also cluster wide snapshot expose thread pool stats visualizes streaming trunk hoping get feedback side something people interested gone back forth privately preference hope dream etc feel like public discussion would healthy point anyone share view using reaper starting point concern people jon haddad url twitter rustyrazorblade"
    },
    "8741":{
        "ID":35066,
        "MESSAGE_ID":"CACUnPaDj--=53EzO7zGKm1iXuHW7X0R9kdnb5Li+qu700Fth4A@mail.gmail.com",
        "PARENT_ID":35062.0,
        "SUBJECT":"Re: Side Car New Repo vs not",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"strongly agree blake mind supporting multiple version mandatory stated already reaper would consider major misstep could support multiple project provided admin tool reason dtests separate work multiple version number repos affect distribution want ship cassandra admin repair tool going part build process"
    },
    "8744":{
        "ID":35063,
        "MESSAGE_ID":"52883784.241401.1534829634800@mail.yahoo.com",
        "PARENT_ID":35062.0,
        "SUBJECT":"Re: Side Car New Repo vs not",
        "SENT_FROM":"\"dinesh.joshi@yahoo.com.INVALID\" <dinesh.joshi@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"option create mono repo cassandra sidecar module could built independently would keep source artifact repo release cadence said strong opinion point try going separate repo reevaluate work dinesh"
    },
    "8745":{
        "ID":35062,
        "MESSAGE_ID":"etPan.5b7b933e.5e63e9d8.143ee@apple.com",
        "PARENT_ID":35058.0,
        "SUBJECT":"Re: Side Car New Repo vs not",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"process",
        "BODY":"sidecar going different release cadence support interacting mixed mode cluster definitely separate repo even know branching merging would work repo support separate release target mixed mode compatibility pretty sure would mess cluster management tool mixed mode probably going goal point new project benefit tied release cycle would probably delay sidecar release whenever cut"
    },
    "8749":{
        "ID":35058,
        "MESSAGE_ID":"CALShVHfxZWijJxUcfRMNRvs6KUWSOcOva4ts-b4oqPfzqhFnOg@mail.gmail.com",
        "PARENT_ID":35056.0,
        "SUBJECT":"Re: Side Car New Repo vs not",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"process",
        "BODY":"think pro incubating sidecar tree tool first outweigh alternative point time rough tradeoff see unique pro tree sidecar faster iteration speed general example need add new jmx endpoint sidecar need change something jmx virtual table repair monitoring change including test one commit within main repository commit main repo sidecar repo dtest repo juggling version compatibility along way future easily move serious background functionality like compaction repair repair scheduling actual repairing sidecar single atomic commit two phase commits add ipc mechanism allow support turn sidecar turn server etc think verification much easier sound like jonathan disagreed thread could certainly wrong worry testing matrix assure sidecar work various version version sidecar released version cassandra one certify work people want pull new version maintain backports discretion testing iterate prove value committing choice since separate artifact start always move artifact separate repo later moving way harder user get sidecar free install daemon need take affirmative action able restart cluster run repair back data come box free unique pro separate repository sidecar use modern build system like gradle instead ant merging change le scary guess feel like touching daemon already true could see le worrisome releasing separate artifact somewhat easier separate repo especially gradle make building deb rpm trivial could backport previous version without getting argument bug fix feature committers could different main repo may useful thing non unique pro sidecar could achieved main repo separate repo separate build artifact jar deb rpm installed separately slightly easier separate repo certainly reach within single repo indeed current patch already creates separate jar could create separate deb reasonably easily personally think separate deb rpm premature point company really want build package using jar think really distracting issue patch go always choose remove experimental jar file main daemon touch separate process lifecycle matter sidecar go get benefit restarting le dangerous availability restarting main daemon said strong opinion weakly held would rather get something actually committed prove value one way therefore course happy put sidecar patch wherever someone review commit joey"
    },
    "8751":{
        "ID":35056,
        "MESSAGE_ID":"CAEPxca3JYVbv3hSh3uFfeftYjegxFM=nqGWCC=7OwX4nCcsTZw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Side Car New Repo vs not",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi starting new thread get consensus side car contributed please send response pro con approach approach please clear approach pick still giving pro con approach thanks sankalp"
    },
    "8880":{
        "ID":34927,
        "MESSAGE_ID":"330abb8d-0672-9865-6339-b4f35b48e910@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.3 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8881":{
        "ID":34926,
        "MESSAGE_ID":"9e246487-b641-52b8-e851-5117b5cf0fb0@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.17 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8882":{
        "ID":34925,
        "MESSAGE_ID":"626e17a4-eb80-515a-df96-0a90090c9fb2@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.13 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "8896":{
        "ID":34911,
        "MESSAGE_ID":"CABsaHTPYLG56YQK96rCgwwf7Q6Lj11CJ57D_5EzYah4P+=BpQA@mail.gmail.com",
        "PARENT_ID":34910.0,
        "SUBJECT":"Re: Tracking Testing, Release Status, and Build Health",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"process",
        "BODY":"thanks putting together scott like idea using confluence coordinating bit piece way better thing lightweight straight forward everyone asf jira account participate one thing well going link back forth jira referencing issue really easy kafka also make good use confluence development process stuff organized kept date committers contributor use check release page url"
    },
    "8897":{
        "ID":34910,
        "MESSAGE_ID":"C9BD2ADE-BBAD-46AC-BED6-ADCBDE29C81E@paradoxica.net",
        "PARENT_ID":null,
        "SUBJECT":"Tracking Testing, Release Status, and Build Health",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"process, technology",
        "BODY":"hi everyone september approach thinking might able share note testing build health type information mind known issue build master nightlies impact ability test project could include known flaky test bug impacting test automation specific feature functioning designed contributor may prefer waive specific type testing prevent automation failing others may prefer continue exhaustive testing build known impacted issue tracking high priority bug known blocker either test automation suitability release dev qa environment pre release checklist outstanding item need completed prior cutting build necessarily best represented jira ticket performance test status characteristic test performed hardware configuration improvement regression identified time information may change often development testing progress often daily case couple example similar work project hadoops release status doc confluence url hadoop project us status doc track release blocker item need tracked ahead release note scope defined community hadoops road map doc confluence url similarly hadoop project us doc like track planned feature release feature freeze code freeze planned release date useful organizing development signposting planned user community fast yet project mozilla tracking engine performance url perf testing nightlies across several platform comparison javascript engine useful identifying regression quickly tracking progress toward perf goal curious dev community thought best organize information like thinking space share community informed others work toward testing build health active project current cassandra wiki url appear active carry warning others think filing infra ticket request confluence space url type information id happy help maintain information tracking build health remaining do known test automation blocker flaky test etc well cheer scott"
    },
    "8913":{
        "ID":34894,
        "MESSAGE_ID":"CAHjqPuJTBYtED8ACTBL1ALcQT4q-NmXfywm=sEbPw=acOFNa1Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"triage of recent dtest failures",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi vote next release done initial triage failed dtest run based circleci run ten dtest failure found often exhaustive representative opened corresponding jiras let see get ticket assigned analyzed researching test indescribably flakey valuble knowledge well able identify flakey test label step forward lacking full fix ticket might test need corrected might necessarily problem database case problem casandra please keep mind remember fixing test help get stable reliable release thus make database project whole stronger also feel free reach question thanks jason test describecluster information three datacenters nodetool test testnodetool version url test closing connection thrift hsha test testthrifthsha version url test mutation write failure test testwritefailures version url snapshot test testarchivecommitlog version apparently url test decommissioned node cant rejoin topology test testtopology version seen may url test functional global row key cache test testglobalrowkeycache version apparently url test system auth alterable auth test testauth version url test failure threshold deletion paging test testpagingwithdeletions version url test sstableofflinerelevel offline tool test testofflinetools version url test alter rf run read repair test read repair chance read repair test testreadrepair version url"
    },
    "9072":{
        "ID":34735,
        "MESSAGE_ID":"0ACC832B-1B7D-4D64-A4E0-862CBB3B8C62@hortonworks.com",
        "PARENT_ID":34732.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"property",
        "BODY":"public cloud precisely want wide open unless vpn setup set network rule trying install asf hadoop box vm ping bigtop people input unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "9075":{
        "ID":34732,
        "MESSAGE_ID":"150E44B0-8EF5-4340-984B-2BFD2CF224F4@hortonworks.com",
        "PARENT_ID":34722.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"property",
        "BODY":"non routable ip idea preference start hadoop common minimize scope incrementally improve however incompatible change initial user experience public cloud would right release vehicle work regard eric"
    },
    "9085":{
        "ID":34722,
        "MESSAGE_ID":"CACRbFyg5rPDp2MJbPAeUMqGKgt0c1DTXrm3rUaaKgdSbhbmvjw@mail.gmail.com",
        "PARENT_ID":34719.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"larry mccay <lmccay@apache.org>",
        "TAGS":"not-ak",
        "BODY":"well"
    },
    "9088":{
        "ID":34719,
        "MESSAGE_ID":"F2A7414D-7B9A-4DC5-A48C-7766223A9903@hortonworks.com",
        "PARENT_ID":34716.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"box everywhere web uis included unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "9091":{
        "ID":34716,
        "MESSAGE_ID":"6EA13DEC-299D-4623-A53E-DAD7035D8B14@hortonworks.com",
        "PARENT_ID":34707.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"non routable idea like much added ozone roadmap url consensus bringing hadoop general build feature common anu"
    },
    "9100":{
        "ID":34707,
        "MESSAGE_ID":"CAGHyZ6LVw4WjmJ6vt2HLC--CDfO=DeGYyP6i1L_y8=GE83J+UA@mail.gmail.com",
        "PARENT_ID":34705.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com.INVALID>",
        "TAGS":"property",
        "BODY":"really really like approach defaulting non routeable ip allowed seems like good tradeoff complexity implementation pain reconfigure level protection"
    },
    "9102":{
        "ID":34705,
        "MESSAGE_ID":"CADY20s6Jd6w+RCXwf+KvQMG2t24XN2UKM55-w0kWNdY8NQOHqw@mail.gmail.com",
        "PARENT_ID":34702.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com.INVALID>",
        "TAGS":"property, technology",
        "BODY":"approach took apache kudu kerberos enabled default whitelist subnets default whitelist match iana non routeable ip subnet list word box get deployment work fine within typical lan environment allow remote hacker locate cluster access data thought nice balance work box without lot configuration decent security opinion localhost default would overly restrictive since would usually deploying datacenter ec machine trying access client laptop released first bit year ago memory serf relatively complaint question also made sure error message come back client pretty reasonable indicating specific configuration disallowing access people hit issue upgrade clear idea going course foolproof since eric say still likely open entirety corporation may want also pointed might true even enable kerberos authentication todd"
    },
    "9105":{
        "ID":34702,
        "MESSAGE_ID":"B4CD9548-19BA-4A59-A4FC-4536CEC3CF52@hortonworks.com",
        "PARENT_ID":34699.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"property, technology",
        "BODY":"hadoop default configuration aimed user friendliness increase adoption security enabled one one approach problematic security system compromised security feature turned larry proposal add safety remind system admin security disabled however reducing number knob security configs likely required make system secure banner idea work without writing much guessing logic determine ui secured penetration test provide better insight secured improve next release thankfully hadoop vendor done work periodically help community secure hadoop plenty company advertised want security use kerberos statement entirely true kerberos make security difficult crack external party method secure hadoop kerberos environment larger hadoop cluster anyone within kerberos environment access hadoop cluster freely without restriction large scale enterprise cloud vendor sublet resource might acceptable point view secure hadoop release must default setting localhost allow user add host authorized white list server keep security perimeter check wild card acls need removed default current user current host proxy user host acl list must enforced http channel basically realigning default configuration single node cluster firewalled configuration regard eric"
    },
    "9108":{
        "ID":34699,
        "MESSAGE_ID":"CACRbFyigA=itEst8A85wmL-7o+6z5MsNpw+FriaS6cjaNTLA9w@mail.gmail.com",
        "PARENT_ID":34694.0,
        "SUBJECT":"Re: [DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"larry mccay <larry.mccay@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hi steve long overdue discus thread perhaps uis visibly state red warning unsecured ui access open compromise maybe even force click warning get page like ssl exception browser similar tactic ui access without ssl new authenticationfilter added filter chain block api call unless explicitly configured open obvious log similar message thanks larry"
    },
    "9113":{
        "ID":34694,
        "MESSAGE_ID":"DC06CEFA-FE2B-4CA3-B9A9-1D6DF04212D7@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS]: securing ASF Hadoop releases out of the box",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"property, technology",
        "BODY":"bitcoins profitable enough justify writing malware run hadoop cluster schedule mining job couple incident wild generally going security well known password open port vendor hadoop related product get deal lockdown often installing kerberos outset making user make password admin account etc asf release though provide something insecure box doc saying use kerberos want security thing think doc explaining capital letter need lock cluster private subnet use kerberos anything done make kerberos easier see oustanding patch hadoop need review else could hadoop determine coming open network start warning least single node hadoop locked bring kerberos run like sophisticated multinode deployment script refuse work without kerberos unless pas argument like dinsecure cluster permitted idea unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "9118":{
        "ID":34689,
        "MESSAGE_ID":"CAPbVhuMXvr0twUdCDV9=cH8jWTsYpZbqpGg57-GjNcmq_zyYpA@mail.gmail.com",
        "PARENT_ID":34688.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"correct"
    },
    "9119":{
        "ID":34688,
        "MESSAGE_ID":"CAEPxca21n4qigCV1KzfN9CMVOEaCdGBFQZRKV9rWAKf4HbAFDg@mail.gmail.com",
        "PARENT_ID":34687.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi kurt thank feedback reading comment idea working making solid release branching model correct thanks sankalp"
    },
    "9120":{
        "ID":34687,
        "MESSAGE_ID":"CAPbVhuOsHLw9DKAgMDWZ5dNV5Tr3EVWkvXTU2y4K2Z+3nBYJ-g@mail.gmail.com",
        "PARENT_ID":34686.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"process",
        "BODY":"committing testing bug fixing validating focus effort polishing delivering release committing reserving trunk stabilising change actually anything could reserve trunk one could ever commit single patch could reserve trunk everyone continues working feature whatever trunk impact attention directed granted could argue great beneficial psychological aspect feature branch make everyone suddenly start working bug fix people actually affect committers going mean much either already going motivated tasked getting door going thing fairly positive better communication around release progress towards release would better motivator would go getting new contributor definitely care branch involved anyone ml could see progress getting made part call arm end day bikeshedding important one issue someone stand say way said either way really matter impact going minimal may well get life"
    },
    "9121":{
        "ID":34686,
        "MESSAGE_ID":"EC7930DC-25B4-475A-BF4D-FD0CB6897DF8@paradoxica.net",
        "PARENT_ID":34685.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"Scott Andreas <scott@paradoxica.net>",
        "TAGS":"process, property",
        "BODY":"really like proposal focus thought effort take become confident running apache cassandra critical application prior cutting dot zero release mark commitment make user community delivering featureset safety stability top priority many different perspective contributor bring correctness performance durability automation documentation operational safety etc many way gain confidence perf test profiling shadow writes traffic mirroring different test replay test fuzz test fault injection chaos engineering many others bringing diverse method bear class problem quality likely identify issue could impact user ship better release disciplined courageous think discourage new contributor joining fact opposite provides simple step contributor take toward shipping running raise spirit delivering enhancement community working two year rather fracturing attention member community interested post work blocked making progress toward focus unlikely review bandwidth would available given focus agree kurts note nobody forced anything committing reserving trunk stabilizing change beta focus effort polishing delivering release last question id expect take step likely rigor result identifying serious issue regression warranting backports investment testing validation hoping also hoping unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9122":{
        "ID":34685,
        "MESSAGE_ID":"CAPbVhuMXp1tRVfCOPBVDh8QX1xSbGpHHLYbz=X=MOM3jxfTDmw@mail.gmail.com",
        "PARENT_ID":34683.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"process",
        "BODY":"tl dr committing testing bugfixing feature freeze really see changing branching strategy going impact really think big deal people work based whatever priority assigned regardless branching essentially red tape adding unnecessary complexity already established process granted one le merge effortless merge save confusion people feature someone decided commit feature could would every ticket making sure people commit thing committed cutting point really aiming commitment community dev bugfixes review bugfixes testing validation freeze period going enforced change branching strategy going enforced contributor respective priority setter best encourage commitment testing bugfixing freeze period volunteer based project really force anyone anything contributor make proposal feature freeze period tell focus testing unlikely reviewed released best"
    },
    "9124":{
        "ID":34683,
        "MESSAGE_ID":"CADectgaRVJfVrbj4JhqvqgeWcx0rtdw4Mytvc1UPuVugXweNRA@mail.gmail.com",
        "PARENT_ID":34671.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"Mick Semb Wever <mick@thelastpickle.com>",
        "TAGS":"process, property",
        "BODY":"like really yes step towards stable master project trunk focused stabilising ideally stable master true new feature remaining respective branch big cost risk seen anything negative hopefully additional practice lesson learnt freeze period get carried good although unfortunately testing infrastructure available public ensure feature branch solid merging struggle see excuse stabilise release branch mick"
    },
    "9127":{
        "ID":34680,
        "MESSAGE_ID":"CAPH+nLPh2F7e1kEFO1d-w5QTxq55Pg43Wn9s0nLFfzAfqgtjtg@mail.gmail.com",
        "PARENT_ID":34678.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"call action announcement intent attempt two different statement"
    },
    "9128":{
        "ID":34679,
        "MESSAGE_ID":"CAEZ3KkD5LFC6aBndvQ_qDOEJHCm9VKsNwOnJ67Ke=V-p9sBipQ@mail.gmail.com",
        "PARENT_ID":34677.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"Roopa Tangirala <rtangirala@netflix.com.INVALID>",
        "TAGS":"property",
        "BODY":"netflix use ndbench extensively ensure performance regression introduced major release since micro service sensitive latency change see value community organizing effort around production readiness stability release build confidence using particular release production freezed run build pipeline validates performance also regular maintenance like repair compaction node termination replacement streaming share result regard roopa tangirala engineering manager cde mobile"
    },
    "9129":{
        "ID":34678,
        "MESSAGE_ID":"etPan.5b3bf126.2f6adbd2.325@apple.com",
        "PARENT_ID":34675.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"Aleksey Yeshchenko <aleksey@apple.com>",
        "TAGS":"process, property",
        "BODY":"want stable usable release next month need focused effort getting else never happen call action announcement intent attempt enforce policy probably branch keep trunk technically active long critical mass active contributor board mostly working stability bug fix validation assignee reviewer well de facto freeze feeling critical mass ay"
    },
    "9130":{
        "ID":34677,
        "MESSAGE_ID":"429950660.2047693.1530653522764@mail.yahoo.com",
        "PARENT_ID":34673.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"\"dinesh.joshi@yahoo.com.INVALID\" <dinesh.joshi@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"think call action community focus effort testing bug fix spending time reviewing feature said tlp stress look interesting dinesh"
    },
    "9132":{
        "ID":34675,
        "MESSAGE_ID":"CA+EmchkryANHTax+mdNyCZgaOmQmcW9BS35Bmf2J7CoogFOtqQ@mail.gmail.com",
        "PARENT_ID":34673.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think value psychological commitment someone time contribute contribution focused validating release pushing future feature"
    },
    "9134":{
        "ID":34673,
        "MESSAGE_ID":"CACUnPaBwntPrCpxb_UrMQFc4-GwhJ-MtwmRc=hM47YipPZi4cQ@mail.gmail.com",
        "PARENT_ID":34672.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"existence, process, property",
        "BODY":"agree josh see changing convention around trunk improve process seems like introduce handful rollback commits people forget make sense working workload centric stress tool little bit effort create something help wider adoption stress testing differs stress ship including fully functional stress workload well validation process idea flexible enough test performance correctness lwt mv well arbitrary workload url jon"
    },
    "9135":{
        "ID":34672,
        "MESSAGE_ID":"CAPH+nLMa23SyGm-ExxAjgYWQHR2=AM3bt3gjUwUQxpV_5BCXug@mail.gmail.com",
        "PARENT_ID":34671.0,
        "SUBJECT":"Re: Testing 4.0 Post-Freeze",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"branch rel bugfix merge still accepting new feature improvement trunk think potential extra engagement testing balance atrophy discouraging contribution community engagement would get deferring improvement new feature open ended way"
    },
    "9136":{
        "ID":34671,
        "MESSAGE_ID":"CAEPxca0Cq=qWNuVwPbt4iZ-nyQ6KEGw83h8O=gwsiUR_BDDCgw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Testing 4.0 Post-Freeze",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"process, property",
        "BODY":"hi cassandra dev goal making cassandra stable major release date would like committers project consider joining dedicating time attention testing running fixing issue september freeze beta release would result freeze new feature development trunk branch period instead focusing writing improving running test fixing reviewing bug performance regression found earlier would work propose september freeze date beta new branch would created trunk would bug fix performance improvement committed time want discourage community contribution contributor expected aware decision may new project case new feature contributed time contributor informed current status release process encouraged contribute testing bug fixing feature reviewed beta reached happens beta reached ideally contributor made significant contribution release stick around continue testing beta final release additional folk continue focus would also greatly appreciated freeze testing new feature course important meant discourage development enable focus testing hardening deliver cassandra stable major release would like see adoption happen much quickly predecessor thanks considering proposal sankalp kohli"
    },
    "9177":{
        "ID":34630,
        "MESSAGE_ID":"4e6a0d5d70354bfb965f9d349ea3ab11@SH1MAIL04.corp.vipshop.com",
        "PARENT_ID":34627.0,
        "SUBJECT":"\u7b54\u590d: [DISCUSS] Merge Storage Policy Satisfier (SPS) [HDFS-10285] feature branch to trunk",
        "SENT_FROM":"\"Lin,Yiqun(vip.com)\" <yiqun01.lin@vipshop.com>",
        "TAGS":"not-ak",
        "BODY":"hi uma seeing discussion jira hdfs external sps running recommend way user right also mentioned additional work need test integrated one question maybe also cared developer major difference internal sps external sps affect nn running could describe little thanks yiqun uma maheswara rao mailto hadoop uma gmail com hdfs dev hadoop apache org discus merge storage policy satisfier sps hdfs feature branch trunk hi long discussion offline jira sps came conclusion jira hdfs go ahead external sps merge first phase phase process running inside namenode continue discussion internal sps current code base support internal external option review comment internal need additional work analysis testing etc move internal sps work hdfs follow work sps nn working cleanup task hdfs merge clarity internal external sps proposal thought please refer jira hdfs objection go ahead voting soon regard uma"
    },
    "9180":{
        "ID":34627,
        "MESSAGE_ID":"CAPAEb8ggK=JkmcvCA-3XPOcXo7A0X4E1cQPnd-5YpP=_eDY87g@mail.gmail.com",
        "PARENT_ID":32892.0,
        "SUBJECT":"Re: [DISCUSS] Merge Storage Policy Satisfier (SPS) [HDFS-10285] feature branch to trunk",
        "SENT_FROM":"Uma Maheswara Rao G <hadoop.uma@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi long discussion offline jira sps came conclusion jira hdfs go ahead external sps merge first phase phase process running inside namenode continue discussion internal sps current code base support internal external option review comment internal need additional work analysis testing etc move internal sps work hdfs follow work sps nn working cleanup task hdfs merge clarity internal external sps proposal thought please refer jira hdfs objection go ahead voting soon regard uma"
    },
    "9263":{
        "ID":34544,
        "MESSAGE_ID":"CAOQxvGpnncjwL4OubLj7dqeAw=Pi5DoJQdLQ_-3bF0mNu1ZcDA@mail.gmail.com",
        "PARENT_ID":34543.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Patrick Bannister <ptbannister@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"kurt proposal freeze implementation offer python implementation alongside appeal desire free design choice made sake python cross compatibility also advantage keeping python user time tested product"
    },
    "9264":{
        "ID":34543,
        "MESSAGE_ID":"CAPbVhuOMEh9sekNKsaYQVAMa9FBNE0XPBKMjv_AoyVLjecCyGw@mail.gmail.com",
        "PARENT_ID":34540.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"process, technology",
        "BODY":"seems pretty straightforward create python version soon possible make available keep python version default next major release assuming around python eol switch default leave continued support cqlsh community whoever need"
    },
    "9267":{
        "ID":34540,
        "MESSAGE_ID":"81C19C5F-FB86-49CD-9AF6-82EAF835D774@gmail.com",
        "PARENT_ID":34534.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"\"J. D. Jordan\" <jeremiah.jordan@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"using six supporting sorry read initial email wanting drop support end year unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9268":{
        "ID":34539,
        "MESSAGE_ID":"CAKLgQbzCoYGBpb6QdT0dgMJAn5s4HYrDaX7_Drj-10+05SSHsg@mail.gmail.com",
        "PARENT_ID":34534.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Murukesh Mohanan <murukesh.mohanan@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"anything riding coattail mean drop support year two later see experience nicely line python upstream eol date course distro vendor provide support say till perhaps reasonable deadline cassandra drop support assuming version eoling last support python released around"
    },
    "9273":{
        "ID":34534,
        "MESSAGE_ID":"CACUnPaCKvoQKgUtXZsNL-_T+XPzCPK7RuFPEB8D--66t4+vm1A@mail.gmail.com",
        "PARENT_ID":34533.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"property, technology",
        "BODY":"said supporting six right path forward later dropping support advocating drop support asking sort commitment think adding support would controversial"
    },
    "9274":{
        "ID":34533,
        "MESSAGE_ID":"7AD894C3-2F30-41F6-9BA0-E883FCBF6924@gmail.com",
        "PARENT_ID":34532.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"community people python development community people running cassandra server fine riding coat tail library used python development others stated need following lead vendor people deploying cassandra top dropping python end year jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9275":{
        "ID":34532,
        "MESSAGE_ID":"CACUnPaBpxz7xyKDu4knLuUQe9v6vbNqK2fd0g4bYUZjSkcw0Fw@mail.gmail.com",
        "PARENT_ID":34531.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"existence, technology",
        "BODY":"work lot work port python driver object mapper formerly cqlengine python reasonably straightforward use six library panda numpy dropping support python end year fine riding coattail"
    },
    "9276":{
        "ID":34531,
        "MESSAGE_ID":"1a959833-f8e2-2ece-9145-5120dfcadbcb@windofkeltia.com",
        "PARENT_ID":34529.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Russell Bateman <russ@windofkeltia.com>",
        "TAGS":"technology",
        "BODY":"support script right gently pointed several realist python far dead arguably still majority usage beginning change think year people begin asking python"
    },
    "9278":{
        "ID":34529,
        "MESSAGE_ID":"CACUnPaDxkFBgUvZFygnCs8c_PeKoChBQWqaQuMvCLp=K-_ayug@mail.gmail.com",
        "PARENT_ID":34524.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"property",
        "BODY":"supporting next step logical removing support next year two seems reasonable enough got rip band aid point"
    },
    "9283":{
        "ID":34524,
        "MESSAGE_ID":"c7530fb8-6038-644d-4dc7-d99ab61dbbcc@redhat.com",
        "PARENT_ID":34523.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Michael Burman <miburman@redhat.com>",
        "TAGS":"property, technology",
        "BODY":"hi deprecating context mean removing replaced rhel remain python default refers future version none point appears ubuntu deviated debian sense debian changed yet likely debian yet announced release date thus still remains used version server server deployed point time use version year micke"
    },
    "9285":{
        "ID":34522,
        "MESSAGE_ID":"085952c0-2459-e57f-4017-712dd4e94dfa@redhat.com",
        "PARENT_ID":34519.0,
        "SUBJECT":"Re: Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Michael Burman <miburman@redhat.com>",
        "TAGS":"property, technology",
        "BODY":"hi definitely cross compatible python system running rhel distros based like centos shipping default system probably going used long time run cassandra iirc major distribution yet default python think ubuntu debian still defaulting python also happen eventually maybe yet discarding python support would mean base work people wanting run cassandra positive thing future compatibility would mean support larger amount distribution box micke"
    },
    "9288":{
        "ID":34519,
        "MESSAGE_ID":"CAOQxvGob5bQ8DGaNrL1=RmxPEAfXoEy4rBbxivHQO8GPbtScQQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Planning to port cqlsh to Python 3 (CASSANDRA-10190)",
        "SENT_FROM":"Patrick Bannister <ptbannister@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"propose porting cqlsh cqlshlib python end life python currently planned january prepare port tool version python officially supported seeking input three question port straight python python cross compatible much testing needed wait implementation go proposal parallel getting dtest cqlsh test working ported cqlsh py cqlshlib python pass almost dtests unittests pretty good shape although done python cross compatible plenty example python library compatible python python notably cassandra python driver think achievable question want pay price cross compatibility write cqlsh cross compatible carry long term technical debt maintain feature value continuing support python diminish time however cross compatible implementation may ease transition user especially user made significant custom modification python implementation cqlsh think must least consider question additional testing needed could release used coverage py check code coverage existing dtest cqlsh test cqlshlib unittests several blind spot current testing addressed release port cqlsh detail available jira ticket cassandra attachment coverage note txt beyond made effort test platform ubuntu centos window testing needed making effort support window would also preferable real user try port replaces python cqlsh release besides couple test failure still trying figure notably test involving user defined map type task made interesting python general lack support immutable map type wait think reasonable try release given current consensus around feature freeze next month feeling tester committers already busy currently planned change recommend planning toward release occur run python eol cut next release could consider releasing ported cqlsh independently installation distutils pip patrick bannister"
    },
    "9289":{
        "ID":34518,
        "MESSAGE_ID":"CADcMMgHrP2eNX9szJZtNAGbZvAkP979h5hEuWuopBqybNZPzew@mail.gmail.com",
        "PARENT_ID":34466.0,
        "SUBJECT":"Re: [DISCUSSION] Create a branch to work on non-blocking access to HDFS",
        "SENT_FROM":"Stack <stack@duboce.net>",
        "TAGS":"not-ak",
        "BODY":"close loop made branch named hdfs match new non blocking issue nice encouragement posted jira thanks"
    },
    "9348":{
        "ID":34459,
        "MESSAGE_ID":"SN6PR2101MB097387DAEFF586E6BE59A007BA930@SN6PR2101MB0973.namprd21.prod.outlook.com",
        "PARENT_ID":34458.0,
        "SUBJECT":"Re: [DISCUSS] Branch Proposal: HADOOP 15407: ABFS",
        "SENT_FROM":"Thomas Marquardt <tmarq@microsoft.com.INVALID>",
        "TAGS":"existence, property, technology",
        "BODY":"feature branch seems reasonable note wasb connector continue exist live side side new azure blob filesystem abfs connector encourage user move new abfs connector new feature performance improvement target abfs connector abfs perform better additional cost expect current user migrate time two connector compatible mainline scenario uncommon feature wasb chose carry initial implementation hope abfs replace usage wasb wasb connector continue exist maybe remove wasb future day nobody using confirm nobody ever get seek right thanks thomas larry mccay sent tuesday may steve loughran cc hadoop common subject discus branch proposal hadoop abfs seems like reasonable effective use feature branch branch committers"
    },
    "9349":{
        "ID":34458,
        "MESSAGE_ID":"CACRbFyi4oHtOaCz4rP0dVGt+mnkE0wmUH6BDgt22bkwYeTnZhw@mail.gmail.com",
        "PARENT_ID":34457.0,
        "SUBJECT":"Re: [DISCUSS] Branch Proposal: HADOOP 15407: ABFS",
        "SENT_FROM":"larry mccay <lmccay@apache.org>",
        "TAGS":"not-ak",
        "BODY":"seems like reasonable effective use feature branch branch committers"
    },
    "9350":{
        "ID":34457,
        "MESSAGE_ID":"E8136DCF-EE92-4E33-B10C-00083A04921D@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Branch Proposal: HADOOP 15407: ABFS",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"existence, process, technology",
        "BODY":"hi chris douglas proposal short lived feature branch azure abfs connector go hadoop azure package connect new azure storage service ultimately replace one used wasb big patch like storage connector inevitably take time stabilize nobody ever get seek right even think thomas esfandiar coding already done paperwork chris anyone else interested involved review testing comment initial hadoop patch contains new filesystem client forthcoming azure abfs intended replace azure wasb azure storage layer patch large contains replacement client test generated code propose feature branch module broken salient reviewable chunk internal constraint prevented feature developed apache want ensure code discussed maintainable documented community merges effect also propose adding two developer branch committers thomas marquardt tmarq microsoft com esfandiar manii esmanii microsoft com beyond normal feature branch activity merge criterion module want add another merge criterion abfs client apis ga seems reasonable require client work public endpoint merges trunk test blob driver blob team including esfandiar manii thomas marquardt azure storage need msdn subscription id reviewer want run test abfs team whitelist subscription id blob preview time future storage account created blob endpoint dfs core window net blob driver relies temporary state current private preview early phase public preview month whitelisting required anyone able create storage account access blob endpoint thomas esfandiar active hadoop project working wasb connector see url understand process requirement software working branch directly let bring significant feature hadoop azure module without disrupting existing user"
    },
    "9387":{
        "ID":34420,
        "MESSAGE_ID":"7E975F42-AE88-4DCE-AB85-927C61C05FC1@hortonworks.com",
        "PARENT_ID":34419.0,
        "SUBJECT":"Re: [DISCUSSION] Create a branch to work on non-blocking access to HDFS",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi stack look design proposed let post design hdfs needed mean let open new jira make easy understand context someone looking hdfs personally believe developer feature decide go call branch etc would nice sort continuity hdfs thanks anu"
    },
    "9388":{
        "ID":34419,
        "MESSAGE_ID":"CADcMMgH5kf7fACpGmoeSh0nvawLNkv45D1L536LDC_cH1DUzNg@mail.gmail.com",
        "PARENT_ID":34417.0,
        "SUBJECT":"Re: [DISCUSSION] Create a branch to work on non-blocking access to HDFS",
        "SENT_FROM":"Stack <stack@duboce.net>",
        "TAGS":"not-ak",
        "BODY":"thanks support wei chiu anu thinking open new jira hdfs old branch commits need full commentary ahem mite topic duo attach design new issue cite hdfs provenance aggregate discussion launching pad new effort new issue hopefully agreeable thanks"
    },
    "9389":{
        "ID":34418,
        "MESSAGE_ID":"CAAAYAnMdv7d2xuHfPrZKYGzu3xQnoswD7BoP4KXgUFuA9M=UgQ@mail.gmail.com",
        "PARENT_ID":34417.0,
        "SUBJECT":"Re: [DISCUSSION] Create a branch to work on non-blocking access to HDFS",
        "SENT_FROM":"\u5f20\u94ce(Duo Zhang) <palomino219@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"prepare design doc soon roughly describe thing want plan also undecided thing support fan thanks gmt anu engineer"
    },
    "9390":{
        "ID":34417,
        "MESSAGE_ID":"A58AF019-69BD-49D7-9173-E568110D256F@hortonworks.com",
        "PARENT_ID":34416.0,
        "SUBJECT":"Re: [DISCUSSION] Create a branch to work on non-blocking access to HDFS",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi st ack wei chiu kind st ack bring question hdfs dev think good feature branch question hdfs branch already open could use adding duo branch committer familiar hbase code base presuming deviation current design doc posted hdfs would make sense post new design proposal hdfs anu"
    },
    "9391":{
        "ID":34416,
        "MESSAGE_ID":"CADiq6=x-DMyhgPe0yXCrVAARUk0xa4cZr4Q5jp=XRwE0F8_SOw@mail.gmail.com",
        "PARENT_ID":34415.0,
        "SUBJECT":"Re: [DISCUSSION] Create a branch to work on non-blocking access to HDFS",
        "SENT_FROM":"Wei-Chiu Chuang <weichiu@apache.org>",
        "TAGS":"existence",
        "BODY":"given hbase us async output default way code maintained today hbase sustainable piece code maintained hdfs participant community"
    },
    "9392":{
        "ID":34415,
        "MESSAGE_ID":"CADcMMgEj8Sa7cOcUvjCz0AU6Rad174kQcCDo0iRY2vS05K0h8Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSSION] Create a branch to work on non-blocking access to HDFS",
        "SENT_FROM":"Stack <stack@duboce.net>",
        "TAGS":"existence",
        "BODY":"ok lot open branch work non blocking hdfs client intent finish old issue hdfs umbrella nonblocking hdfs access foot umbrella jira proposal heavy lifter duo zhang hbase limited async dfs client written duo use making write ahead log call asyncfswal shipped default wal writer hbase let quote duo proposal base hdfs use lot internal apis hdfs implement asyncfswal expected thing like hbase nosuchmethodexception retrieving private method decryptencrypteddataencryptionkey dfsclient happen make life easier need move async output related code hdfs poc attached patch hdfs show option work would like create feature branch implement async dfs client general think step implement async rpc client option described implement filesystem apis need connect nn mkdirs implement async file read problem api pread think completablefuture enough problem streaming read need discus later implement async file write api also problem important problem want support fan current logic dn side make semantic broken read uncommitted data easily hbase solved hbase think keep broken behavior hdfs need find way deal comment welcome intent make branch named hdfs new jira add duo feature branch committer go well call merge vote thanks st ack option use old protobuf rpc interface implement new rpc framework benefit also need port unification service server side need maintain two implementation server side one thing need upgrade protobuf"
    },
    "9464":{
        "ID":34343,
        "MESSAGE_ID":"242644CE-66A6-4E70-90D7-2ED632A370B4@fastmail.fm",
        "PARENT_ID":34342.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Ariel Weisberg <adweisbe@fastmail.fm>",
        "TAGS":"not-ak",
        "BODY":"hi seen rack awareness used abused solve regard ariel unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9471":{
        "ID":34336,
        "MESSAGE_ID":"DB8C5215-4E4A-444A-8CD1-0A4AAC5E044E@gmail.com",
        "PARENT_ID":34335.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"technology",
        "BODY":"protocol already support optional custom payload thing iirc zipkin tracing implementation url example us pas zipkin id server unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9472":{
        "ID":34335,
        "MESSAGE_ID":"FB199458-2E82-4D30-A88F-52B2F8D13C40@core43.com",
        "PARENT_ID":34334.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"\"Max C.\" <mc_cassandra@core43.com>",
        "TAGS":"process, technology",
        "BODY":"thing like would better idea propose generic enhancement optional vendor extension protocol extension would negotiated connection formation driver could optionally implement additional feature extension would documented separately vendor driver default behavior would ignore extension understand sort feature scylla folk cosmodb could add extension protocol without forking protocol spec potentially without forking driver without laying roadmap project agreed someday line implement given capability corresponding vendor extension could incorporated main protocol spec lot lot protocol implement type technique smtp imap png sieve dhcp etc maybe better way go max unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9473":{
        "ID":34334,
        "MESSAGE_ID":"CANRV6q0bkOxEOL=_Zt-c36dAq+UDPnKLW-cVWsptL5bQov2=sg@mail.gmail.com",
        "PARENT_ID":34323.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Sylvain Lebresne <lebresne@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"confused truly asking native protocol protocol apache cassandra project never meant standard protocol ask move towards handling protocol standard would evolve independently whether cassandra implement would project commit implement eventually let clear concrete suggestion discussion upfront short version personal opinion would likely big distraction relatively low merit project unconvinced ask exactly agree commit change protocol spec actually implemented get downside clear risk feature either never implemeted due lack contribution loss interest protocol change committed fully suitable final implementation benefit project ever get wrong protocol impacting change addition much welcome reasonable cassandra cassandra cassandra certainly worthy definition done ticket certainly include server implementation going changing protocol spec file shard notion make sense cassandra point time unless additional contribution make start make sense sure would add anything related protocol sylvain"
    },
    "9476":{
        "ID":34331,
        "MESSAGE_ID":"19446544-2c25-40f9-bbb1-a7b347670190@Spark",
        "PARENT_ID":34330.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Rahul Singh <rahul.xavier.singh@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"sound interesting could gain shard approach achieved via mesos wrap stateful service technically sharding whole machine better utilizing resource rahul singh rahul singh anant anant corporation"
    },
    "9477":{
        "ID":34330,
        "MESSAGE_ID":"CAEPxca1TP87dQatjrwHmvNbr5NurC=uOuPbGWq-g3YJWi+TGOA@mail.gmail.com",
        "PARENT_ID":34329.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"donate thread per core sure someone help review get committed"
    },
    "9478":{
        "ID":34329,
        "MESSAGE_ID":"CAA=6J09pCTQ_be-m4M+QeH=36BG=JejyazcNuoHb_E-rXSMwKA@mail.gmail.com",
        "PARENT_ID":34328.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"property",
        "BODY":"yup thinking shard port would appear discrete server client per port suggestion unacceptable due hardware requirement remembering cassandra built concept scaling commodity hardware horizontally spend time energy convincing community support protocol feature current use find another interim solution another way would build support consensus around clear technical need apache cassandra project stand today one way build community support might contribute apache licensed thread per core implementation java match protocol change shard concept looking"
    },
    "9479":{
        "ID":34328,
        "MESSAGE_ID":"1524159793.1690407.1343949448.142F38D0@webmail.messagingengine.com",
        "PARENT_ID":34324.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Ariel Weisberg <ariel@weisberg.ws>",
        "TAGS":"property",
        "BODY":"hi technical level understand yet database consisting single threaded shard socket accept generating tcp connection advance know connection going send message shard mechanism get packet given tcp connection delivered specific core know given tcp connection normally packet delivered queue nic tuple source address port destination address port typically hashed pick one queue nic present might content tuple slightly wrong always includes component get control since hashing manipulate queue packet tcp connection go made worse accept socket per shard also mention port bad sound like big number resource wise operational headache token distributed amongst shard way would work right port number appears discrete instance server could shard actual shard simply colocated box run process share resource know push complexity server driver server expects shard share client visible like system table certain identifier ariel"
    },
    "9480":{
        "ID":34327,
        "MESSAGE_ID":"1524159192.1686769.1343922688.70DC53B8@webmail.messagingengine.com",
        "PARENT_ID":34323.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Ariel Weisberg <ariel@weisberg.ws>",
        "TAGS":"process",
        "BODY":"hi think unrealistic expect next version protocol spec include functionality supported either server driver version server driver supporting protocol version released putting something spec making hard commitment driver server without also specifying work yes temporary fork fine run thing like like spec change find want change fine never committed supporting fork either way driver maintainer fine probably never accepted spec change either update driver maintainer going accept change incompatible cassandra server implement temporary fork spec might also committing temporary fork driver well headache come final version spec matching fork would avoid conversation around protocol design front largely getting think apache cassandra driver truly commit spec released implementation server driver point spec subject change le likely change implementation already done work dug issue sharding thorny think ben make really good suggestion leveraging cassandra paging state timeouts think likely could stick work spec wise happy discussion learn scylladb de risking protocol change one commits work might find release next protocol version without tentative spec change ariel"
    },
    "9481":{
        "ID":34326,
        "MESSAGE_ID":"2e0146af-913a-6641-e932-5940e229bd76@pbandjelly.org",
        "PARENT_ID":34324.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"purely opinion find use term shard quite unfortunate context distributed database historical usage term notion data partition reside separate database server learning curve distributed database foresee use term adding additional confusion new user fan kind regard michael unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9483":{
        "ID":34324,
        "MESSAGE_ID":"2e5264e2-cb78-b6c8-b50f-b01266412172@scylladb.com",
        "PARENT_ID":34322.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Avi Kivity <avi@scylladb.com>",
        "TAGS":"existence, property",
        "BODY":"port per shard likely easiest option ugly contemplate run machine shard ibm power sct iirc horrible open port also fit nics ability automatically distribute packet among core using multiple queue kernel would shuffle packet around much better packet delivered directly core service also protocol change needed driver know token distributed among shard"
    },
    "9485":{
        "ID":34322,
        "MESSAGE_ID":"CAA=6J09Rdf4qGS0GmsYPg421mWtGKjYV=ZBmwcj2YkCZDa0j1A@mail.gmail.com",
        "PARENT_ID":34321.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"existence",
        "BODY":"wrt fit existing protocol could shard listen different port driver likely going support due url url super familiar ticket might something missing sound like potential approach would give path forward least short term"
    },
    "9486":{
        "ID":34321,
        "MESSAGE_ID":"1524154244.603752.1343801992.1B8B1FF8@webmail.messagingengine.com",
        "PARENT_ID":34320.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Ariel Weisberg <ariel@weisberg.ws>",
        "TAGS":"existence, technology",
        "BODY":"hi think updating protocol spec cassandra put onus party changing protocol specification implementation spec cassandra well java python driver used cassandra repo implemented cassandra fully evaluated specification change substitute trying make work also reality consider maintainer driver willing commit fact require extra hop range scan jira jeremiah made point still client breaking token range leaky abstraction paging interface vanilla resultset interface serial parallel kind orthogonal driver either agree look like current specification make simple simple could driver implementers change assuming implementation cassandra java python driver hard benefit boxing defining spec implemented tested decided satisfied scylladb de risk certain extent cassandra decides go different direction way think much discussion without example change cql specification look even look risky likely favor regard ariel"
    },
    "9491":{
        "ID":34316,
        "MESSAGE_ID":"CAPbVhuP9Arxdd11D+P2DGN=QYa=rLjk1uxc7DPo3H_wuT0ArUQ@mail.gmail.com",
        "PARENT_ID":34300.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"think forking would desirable anyone seems reasonable certainly make sense say know enough sharding comment seems like could locking design anyone truly know sharding look like hopefully wrong devs already thought driver author wish support project surely imagine would minority"
    },
    "9494":{
        "ID":34313,
        "MESSAGE_ID":"CACUnPaA9QQoaNmooFCRvZNnBfQGioXoyyG5Rtj-YX-3ACCFGrw@mail.gmail.com",
        "PARENT_ID":34311.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"avi something matter welcome submit patch project different driver getting first optimization would nice sure someone would happy work third see would need right going uphill battle since currently would notion shard cassandra want work thread per core cassandra seems like would reasonable addition protocol"
    },
    "9496":{
        "ID":34311,
        "MESSAGE_ID":"CAEPxca24VqyWdE5zoLFCozMY54vGm1pdiGB9q_TeO2L9y98dvA@mail.gmail.com",
        "PARENT_ID":34305.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"driver author wish support project"
    },
    "9502":{
        "ID":34305,
        "MESSAGE_ID":"CA+Emchm9d4YnYavSVdbfGoshu0vh5WvqZ+auaoZc9vDxuBOy0w@mail.gmail.com",
        "PARENT_ID":34300.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"removed list please cross post"
    },
    "9503":{
        "ID":34304,
        "MESSAGE_ID":"CAD-J=za_eahF3e_=XsH+8qFwV6GDCLvPVMY_tLZu8qkX8WW2gg@mail.gmail.com",
        "PARENT_ID":34300.0,
        "SUBJECT":"Re: Evolving the client protocol",
        "SENT_FROM":"Glauber Costa <glauber@scylladb.com>",
        "TAGS":"not-ak",
        "BODY":"way folk cassandra apparently tr eceive message"
    },
    "9507":{
        "ID":34300,
        "MESSAGE_ID":"de6e33eb-b438-8524-ac99-a299e9ba0e72@scylladb.com",
        "PARENT_ID":null,
        "SUBJECT":"Evolving the client protocol",
        "SENT_FROM":"Avi Kivity <avi@scylladb.com>",
        "TAGS":"process, property",
        "BODY":"hello cassandra developer starting see client protocol limitation impact performance would like evolve protocol remove limitation order avoid fragmenting driver ecosystem reduce work duplication driver author would like avoid forking protocol since issue affect cassandra either future would like cooperate protocol development issue would like work near term token aware range query server return page range query also return token continue case token different node client selects new coordinator based token eliminates network hop range query first page prepare message return information allowing client compute first page held given query parameter information identifying compute token given query parameter non range query already url per request timeouts allow request timeout allows user set short timeouts business critical query invalid served within short time long timeouts scanning indexed query even longer timeouts administrative task like truncate drop url shard aware driver admittedly burning issue scylladb much cassandra time way driver token aware shard aware know many shard node sharding algorithm open connection per shard send cql request directly shard serve instead requiring cross core communication happen server url see three possible mode cooperation protocol change developed using cassandra process jira ticket culminating patch doc native protocol spec consensus achieved advantage mode cassandra developer verify change easily implementable ready implement feature driver already adapted support work protocol change developed outside cassandra process mode develop change forked version native protocol spec cassandra still retroactively merge change implemented ability influence change development reduced agree would like allocate prefix feature name supported message use cooperation requires least amount effort cassandra developer enough reach point email cause duplication effort driver author wish support project may cassandra developer redo work already looking forward view avi unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9549":{
        "ID":34258,
        "MESSAGE_ID":"CABzeAR7d=cLArxheOLWFyzdaMMh_Pt-4DW-UnkE+NLfgz=CNSg@mail.gmail.com",
        "PARENT_ID":34248.0,
        "SUBJECT":"Re: Proposing an Apache Cassandra Management process",
        "SENT_FROM":"Jaydeep Chovatia <chovatia.jaydeep@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"opinion great addition cassandra take overall cassandra project next level also improve user experience especially new user jaydeep"
    },
    "9554":{
        "ID":34253,
        "MESSAGE_ID":"CALShVHe7GkJHAjhYyrt05ZvBy_C0NX_TO4JG+xbS07LJFc-k=Q@mail.gmail.com",
        "PARENT_ID":34186.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"property",
        "BODY":"view design proposed taking many core idea datastax repair service reaper adding production experience netflix see resiliency point remote jmx inherently insecure unreliable harmonizing cassandra shared nothing design reaper developer already made really good contribution design document certainly taking reaper experience account try move forward strongly believe continuous always repair important leave external tool impact fundamental correctness database without continuous repair data loss data resurrection violation quorum quorum read write consistency joey"
    },
    "9559":{
        "ID":34248,
        "MESSAGE_ID":"1074061789.1626056.1523569310996@mail.yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"Proposing an Apache Cassandra Management process",
        "SENT_FROM":"Dinesh Joshi <dinesh.joshi@yahoo.com.INVALID>",
        "TAGS":"existence",
        "BODY":"hey uptick discussion around cassandra operability discussing potential solution various member community would like propose addition management process sub project apache cassandra process would responsible common operational task like bulk execution nodetool command backup restore health check among others feel proposal garner discussion debate likely reach consensus community large part agrees feature exist database debate implemented primarily whether use external process build cassandradaemon important architectural decision feel critical aspect code run operator still interacts notion single database multi process database old postgres continue common newer system like druid propose separate management process following reason resource isolation safety feature management process affect read write path critical stability isolated process several technical advantage including preventing use unnecessary dependency cassandradaemon separation jvm resource like thread pool heap preventing bug adversely affecting main process particular gc tuning done separately two process hopefully helping improve least adversely affect tail latency main process health check recovery currently user implement health check sidecar process implementing serving process make sense jvm running cassandradaemon go south healthchecks potentially recovery code may able run management process running isolation open possibility report health process long gc pause stuck jvm also recover list basic health check tested every release officially supported help boost confidence quality make easier operate reduced risk separate daemon open possibility contribute feature otherwise would considered eg ui library started many background thread operated completely differently would likely considered risky cassandradaemon good candidate management process go management process feature non essential serving read writes eg backup restore running health check cassandradaemon etc feature make management process critical functioning serving process word someone wish use management process free disable would like initially build minimal set feature health check bulk command first iteration management process would use software stack used build current cassandradaemon binary would critical sharing code cassandradaemon management process code live tree make easy regard depth feature like repair scheduling discussion around compaction cassandradaemon management process may suitable host goal decide time management process could used case meet criterion technical architectural reason may exists looking forward comment proposal dinesh joshi jordan west"
    },
    "9599":{
        "ID":34208,
        "MESSAGE_ID":"CAD++eCk_Ljz498aP_iNVd2dNJz8O5UA8-DbqdTb1hnavh1nO0A@mail.gmail.com",
        "PARENT_ID":34205.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks konstantin reporting issue post comment jira hadoop wangda"
    },
    "9602":{
        "ID":34205,
        "MESSAGE_ID":"CAKtuutE6YtqrtdtdEz+5y=9QdVZ3fAx-hR3jyH0zFvTAZUJ=3w@mail.gmail.com",
        "PARENT_ID":34182.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"note release manager discussed url producing release artifact without source jar see url believe something maven deployment stage potentially maven source plugin similar release believe fixed thanks konstantin"
    },
    "9621":{
        "ID":34186,
        "MESSAGE_ID":"CADumfkh4AegSxV7N+K1qO7TFVAyC+fHKCi=hj8ApnyvOhdGUQw@mail.gmail.com",
        "PARENT_ID":34168.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Jeff Beck <beckje01@gmail.com>",
        "TAGS":"process",
        "BODY":"personally would rather see improvement reaper supporting reaper repair tool improvement tied cassandra release get place repair tool stable figuring bundle best install make sense add thing support reaper repair solution could also take advantage jeff"
    },
    "9625":{
        "ID":34182,
        "MESSAGE_ID":"CAD++eCma+WV6BpOEcnbzw4tQqmFYW632soJd-VZRex5wHk9YaQ@mail.gmail.com",
        "PARENT_ID":34175.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks guy additional vote sent announcement email best wangda"
    },
    "9632":{
        "ID":34175,
        "MESSAGE_ID":"CADaA6KsRLCRUL2mg5MQzGHwNJbm4eQm7xX155Kr-Qb=rm5wH_w@mail.gmail.com",
        "PARENT_ID":34045.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"\u4fca\u5e73\u5835 <junping_du@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks wangda great work sorry late coming binding based verified signature verified checksum source binary artifact built source deployed single node cluster verified web uis include namenode rm etc tried command hdfs yarn ran sample mr job include pi sleep terasort etc thanks junping wangda tan"
    },
    "9639":{
        "ID":34168,
        "MESSAGE_ID":"CAPbVhuOg8k1grytU3RO+HWNAf77Koo22Y=77+DjOTznWzd0z_Q@mail.gmail.com",
        "PARENT_ID":34165.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"existence",
        "BODY":"vnodes related made default lot people using repairing cluster vnodes catastrophe even small one often problematic deal build repair scheduling repair scheduling important definitely include sidecar long term make sense looked moving background ops sidecar positive going work well vnodes current state said still support scheduling repair vnode cluster vnode repair problem fixed separately probably attention given major issue fwiw know vnode cluster node yet would surprised currently successfully repairing"
    },
    "9642":{
        "ID":34165,
        "MESSAGE_ID":"CABsaHTN_AX_uDvy=Srtk+y4dx-7xfydQP4PXPqj8Af-NBRksHA@mail.gmail.com",
        "PARENT_ID":34164.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"property",
        "BODY":"think take away assume level operation maturity coincide automatically scale make core feature robust account le experienced user lot folk thread really strong ops opsviz story let forget user un fortunately consulting firm tend see worst"
    },
    "9643":{
        "ID":34164,
        "MESSAGE_ID":"CACUnPaAPbCRxBkhtbrYhYFOKJq9wRcK6ehRVybHdVs6YmButGA@mail.gmail.com",
        "PARENT_ID":34163.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"top head remember cluster node token best situation real default better worse"
    },
    "9644":{
        "ID":34163,
        "MESSAGE_ID":"CALShVHeZEMNp2k5e4ED-5271ac0fqUHSeL25CGWD2dUjVR_gbg@mail.gmail.com",
        "PARENT_ID":34161.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"could understand dozen node vnodes hundred surprising whitepaper draft lying around showing vnodes decrease availability large cluster order magnitude polish send list get second meantime sorry de railing conversation repair scheduling talk vnodes let chat different thread joey"
    },
    "9645":{
        "ID":34162,
        "MESSAGE_ID":"CALShVHenOFSnXbhkRAgDQR5t5f=e2W0HBLJjDG_3ycfwrF5LtQ@mail.gmail.com",
        "PARENT_ID":34160.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"existence",
        "BODY":"sorry sent early explain scheduler entirely decentralized proposed design node hold information talking heap fact one node would ever hold information node responsible token primary replica token split table table range individually split subranges hundred range split typically one two want many otherwise many small sstables time megabyte data really believe would significant heap pressure repair certainly would create heap pressure happens regardless scheduler joey"
    },
    "9646":{
        "ID":34161,
        "MESSAGE_ID":"CABsaHTPVRUDxeU9x46odWQc7XHHhkFDkn8OUnqDa20e+1GZkUw@mail.gmail.com",
        "PARENT_ID":34160.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"see larger cluster regularly usually folk grown default unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9647":{
        "ID":34160,
        "MESSAGE_ID":"CALShVHfVrw4OueH+Yq5_02ZzrKCkHygy9VdtTg8iuDqAKmLFmw@mail.gmail.com",
        "PARENT_ID":34159.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"existence",
        "BODY":"current proposal never keep track hundred range split single table time nothing ever keep state entire node compared load generated actually repairing data actually think trivial heap pressure somewhat beside point aware node cluster running vnodes math correct would excessively vulnerable outage many vnodes many node large cluster heard node plus running single token per node"
    },
    "9648":{
        "ID":34159,
        "MESSAGE_ID":"C57ECE1F-4697-474D-A1C8-20358247E968@apple.com",
        "PARENT_ID":34144.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Chris Lohfink <clohfink@apple.com>",
        "TAGS":"not-ak",
        "BODY":"would trivialize scheduling end dealing single repair keyspace table node vnodes lot repair plan keep track easily heap allocation spike opted chris"
    },
    "9652":{
        "ID":34155,
        "MESSAGE_ID":"a31b2022-c3e6-4c8a-9536-87d0736077fe@Spark",
        "PARENT_ID":34151.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Rahul Singh <rahul.xavier.singh@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"simpler scheduler never simple agree principle ala cassandra agent could manage order task schedule etc needing prune manage engine cassandra enough tps need manage already"
    },
    "9653":{
        "ID":34154,
        "MESSAGE_ID":"A3DDD13E-7996-4783-A957-02A2F2E87EAC@hortonworks.com",
        "PARENT_ID":34142.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Gour Saha <gsaha@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"sorry really late send non binding verified checksum sha built source ran yarn service core api test successfully installed node cluster launched flexed stopped started destroyed sample sleeper service launched flexed stopped started hive llap tested service rest apis command line gour"
    },
    "9656":{
        "ID":34151,
        "MESSAGE_ID":"CALShVHcWJaWQVCz=rjs2+CuvGG2BbcLhZiuKAb5v1N6DfGABdg@mail.gmail.com",
        "PARENT_ID":34149.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"existence",
        "BODY":"think getting various repair strategy discussion perhaps orthogonal schedule repair whether end incremental full ticker read continuous repair mutation based repair etc something still need schedule table give good introspection ran long took run etc able get simple scheduler cassandra think always add additional repair type configuration option could even make interface user plug repair strategy example added read repair repair type could drift pretty effortlessly joey"
    },
    "9658":{
        "ID":34149,
        "MESSAGE_ID":"CABLEZn6G_dZkq62sXUvh-WwyWV3NBg=ovA-v4J9zZeWYe4Z7+Q@mail.gmail.com",
        "PARENT_ID":34147.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"existence",
        "BODY":"say reaper problem want wrong reaper end instrumentation built repair slice schedule right problem see built repair rather inefficient many maybe use case due many reason name overstreaming whole partition repaired single mutation race condition merkle tree calculation node taking part repair session every stream creates sstable needing compacted possible sstable creation flood even kill node due many open file yes incremental repair issue today super simple case first ran nodetool repair super small system keyspace ran scrape repair nodetool took minute single node scraping took sec repairing node together beginning twisting brain could optimized end going scraping solved every problem gmt jonathan haddad"
    },
    "9660":{
        "ID":34147,
        "MESSAGE_ID":"CACUnPaAxd-YW-nMgc7A9N5jPHEa0ziEQC+0H0poUBv1BM_3kzA@mail.gmail.com",
        "PARENT_ID":34145.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"technology",
        "BODY":"fair reaper worked sitting around le since commits changing ten thousand line code dealing fault tolerance repair retries scalability etc reaper node managing repair across dozen cluster thousand node totally different situation today"
    },
    "9662":{
        "ID":34145,
        "MESSAGE_ID":"CABLEZn67a1jmvv4i+7NnqVsSs5CLuP2cSAMA162AxJvyULF=1A@mail.gmail.com",
        "PARENT_ID":34109.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"technology",
        "BODY":"would totally awesome sure help completeness completely dumped regular repair matter nodetool repair reaper run tool simply cl scraping whole cluster run year production problem encountered got timeouts scraping large tombstoned partition turned large partition even readable cql cqlsh devcenter problem repair rather design problem storing data read make sense anyway tell experience work much reliable also reliable reaper state run totally smooth much faster regular repair stream need streamed easily manageable interruptible resumable fine grained level thing need store state cf last token simple storage like redis work even pretty well populating empty node changing rf bootstrapping dc easily control cluster load tuning concurrency scrape process see reason ever go back built repair improve immensely many case especially mv true resource killer cent experience gmt ben bromhead"
    },
    "9663":{
        "ID":34144,
        "MESSAGE_ID":"CALShVHeT4TtmLoa8qvFHBLjTKaqcAs0m6E_UGVxbxz3CiPFDwg@mail.gmail.com",
        "PARENT_ID":34109.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"existence",
        "BODY":"think informative dor vinay built sidecar repair system think crucial scheduling component process repair execution component like said ticket design really hard repair scheduling process determine internal state repair execution process current production system significant complexity code account differing daemon sidecar life cycle repair state loss flakey jmx connection authentication sidecar speak jmx cql etc seem though like significant concern iterate quickly main process would easier iterate tool sidecar spend time week sketching design additional component resiliency factor required put scheduler tool hard time buying opt repair scheduling going heap problem impact daemon significantly scheduler literally read byte cassandra table make function call two sleep minute repair execution actual heap intense part already part cassandra daemon concern user start actually running repair expose heap issue repair great let fix cassandra sidecar think would generally great move background task compaction repair streaming backup etc sidecar cleanly separate latency critical process throughput critical process would also great ops perspective could choose run sidecar cgroup control usage network cpu ram could even pin compaction repair dedicated core interfere main process could upgrade background process much easily le risk think key part though leading far know ticket concrete proposal dedicated cassandra sidecar separately sidecar actually hard well think still good direction cassandra go longer term joey"
    },
    "9665":{
        "ID":34142,
        "MESSAGE_ID":"CAD++eCng4+VACnQeW=K_vozRLj0Ces3MKW_Hgr_CF7nPJdcU8w@mail.gmail.com",
        "PARENT_ID":34141.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks everybody voting vote pass successfully binding vote non binding vote work staging release best wangda tan thu apr vinod kumar vavilapalli vinodkv apache org"
    },
    "9666":{
        "ID":34141,
        "MESSAGE_ID":"D232160F-02A3-478E-9EAE-BCB85E014CA5@apache.org",
        "PARENT_ID":34097.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"great observation missed previous email shaded unshaded jar already getting fixed guess good go looking rc went usual check list summary verification check successful recompilation source tar ball check signature verification note format md file changed bit biggie release line form hadoop src tar gz sha bad bdb acfb aefc bcedb bebea dfff rc build source target artifact hadoop tar gz sha dced fad faac ebf cad ddf ee cae check generating dist tarballs source tar ball check testing start nn dn rm nm jhs timeline service ran dist example mr sleep wordcount randomwriter sort grep pi tested cli print node apps etc also navigated uis binding thanks vinod"
    },
    "9672":{
        "ID":34135,
        "MESSAGE_ID":"CAOqB4e9rAv9cL5f3s=vYO+=kP924HFaWJdTYYndhiUQhGdpdpw@mail.gmail.com",
        "PARENT_ID":34133.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Shane Kumpf <shane.kumpf.apache@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks putting together rc wangda sorry late addition non binding verified checksum signature artifact deployed pseudo distributed cluster using binary tgz source tgz git tag ran basic hdfs command ran pi sleep distributed sleeper service using default docker runtimes ran dshell using default docker runtimes secure cluster verified docker runtime privileged container disabled verified yarn hdfs ui validated change log commits discrepancy documented expected basic validation registry dns lookup"
    },
    "9674":{
        "ID":34133,
        "MESSAGE_ID":"CAAntRU+daPTQKNBDkmUrdUENadrVVsOURKFoEy1ULz9UFLkJyQ@mail.gmail.com",
        "PARENT_ID":34114.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Naganarasimha Garla <naganarasimha_gr@apache.org>",
        "TAGS":"not-ak",
        "BODY":"binding verified signature verified checksum source binary artefact built source deployed pseudo hadoop cluster verified yarn hdfs web uis ran sample mapreduce job tested nodelabels regard naga"
    },
    "9693":{
        "ID":34114,
        "MESSAGE_ID":"CANdGUhQ0dSdXAzm+cWHA7G-G5KeqYVVL=Hc3dWTHNL=-TJk9DQ@mail.gmail.com",
        "PARENT_ID":34113.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Suma Shivaprasad <sumasai.shivaprasad@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"non binding verified user group queue mapping node label new ui dynamic queuesthankssuma"
    },
    "9694":{
        "ID":34113,
        "MESSAGE_ID":"F88EE09D-A3EF-4268-A802-A44A93B88F9E@hortonworks.com",
        "PARENT_ID":34097.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"dangerously interesting think right also think version file get generated anyway binding ran new hadoop profile spark spark committer binding downstream test well provided also spark hive jar patched accept hadoop legitimate hadoop version ongoing issue spark project jar cp downstream test happy yesterday today staging file seem missing least maven unable find even turn spark snapshot staging profile maven dist process play nothing else"
    },
    "9698":{
        "ID":34109,
        "MESSAGE_ID":"CAA=6J0-CPP0gXJb+D-MfOmsTspR78=zn5JVLvDomW5tP_s6QUg@mail.gmail.com",
        "PARENT_ID":34107.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"property",
        "BODY":"including implementation cassandra make managed repair first class citizen nicely round cassandra consistency story make likely repair get run"
    },
    "9700":{
        "ID":34107,
        "MESSAGE_ID":"0205EF65-43ED-4023-8DBA-F354E283439F@jonhaddad.com",
        "PARENT_ID":34103.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"implementation detail aside firmly would nice could take care camp reaper pretty damn easy use people still put prod unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9704":{
        "ID":34103,
        "MESSAGE_ID":"699a55a6-017a-4007-8303-8ebda3a0cdc9@Spark",
        "PARENT_ID":34101.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Rahul Singh <rahul.xavier.singh@gmail.com>",
        "TAGS":"existence",
        "BODY":"understand merit approach working db old country sql often write indexing sequence manually important table built product order leverage maximum benefit index different index clustered physical index process still sucked never perfect jvm already fraught gc issue putting another process managed heapspace worried technically process could binary started side car main process consider process called cassandra agent sitting around scheduler based config cassandra table distributed release service script would start end user know examining sh file open possibility including gui hosted process without cluttering core coolness cassandra best rahul singh rahul singh anant anant corporation"
    },
    "9706":{
        "ID":34101,
        "MESSAGE_ID":"CAKUaUn79nCcvWKhwt7ch2U4FHd6GTWDDVkAJZAeZz9HkTz_73g@mail.gmail.com",
        "PARENT_ID":34100.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Dor Laor <dor@scylladb.com>",
        "TAGS":"technology",
        "BODY":"scylla implemented repair similar way cassandra reaper using external application written go manages repair multiple cluster save data external scylla cluster logic resembles reaper one specific internal sharding optimization us scylla rest api however doubt ideal way playing bit cockroachdb realized super nice single binary repair provides gui core db even distributed elect leader node manage repair consistent way complexity reduced minimum repair write status system table provide api progress rate control etc big advantage repair embedded core need expose internal state repair logic external program need deal different version cassandra different repair capability core incremental forth good database schedule repair know whether shreshold hintedhandoff cross know whether node replaced etc cent dor"
    },
    "9707":{
        "ID":34100,
        "MESSAGE_ID":"950933526.1394289.1522822386806@mail.yahoo.com",
        "PARENT_ID":34099.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Dinesh Joshi <dinesh.joshi@yahoo.com.INVALID>",
        "TAGS":"existence",
        "BODY":"simon could still load aware repair outside main process reading cassandra metric general think maintenance task necessarily need live main process could negatively impact read write path unless strictly required serving path could live sidecar process multiple benefit including isolation faster iteration loose coupling example would mean maintenance task different gc profile main process would ok today case issue see project provide official sidecar perhaps one probably would discussion dinesh"
    },
    "9708":{
        "ID":34099,
        "MESSAGE_ID":"CAFmPmDdBJ_LXcti7rsX82rmZ_egyaiV0=+c7NyqjceeErJQwpQ@mail.gmail.com",
        "PARENT_ID":34098.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Qingcun Zhou <zhouqingcun@gmail.com>",
        "TAGS":"existence",
        "BODY":"repair problem uber general favor including scheduling logic cassandra daemon benefit introducing something like load aware repair eg schedule repair ongoing compaction traffic low etc proposed others expose keyspace table level configuration user opt regarding risk yes problem beginning long run user appreciate repair work box like compaction large cassandra deployment work netflix folk intensive testing boost user confidence"
    },
    "9709":{
        "ID":34098,
        "MESSAGE_ID":"CAEPxca12+-N8HsNaQcPANEA+P7a-qrbUoTVHehZCbeYg03pd1A@mail.gmail.com",
        "PARENT_ID":34095.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"property",
        "BODY":"repair critical running agree roopa need part offering think make easy new user run side car process add apache cassandra offering put repair also fine putting side car long term"
    },
    "9710":{
        "ID":34097,
        "MESSAGE_ID":"CAD++eC=mUveTKA-1MbMD+cA=d0EyQvaEFNKieGZWeDStF6H+BA@mail.gmail.com",
        "PARENT_ID":34094.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi vinod arpit checked following version jar maven repo always different jar binary tarball checked hadoop yarn api version jar following number size jar jar maven jar tarball jar maven md efcbefbceddf jar tarball md effffbbffef even size md different jar maven jar tarball jar maven jar tarball jar maven jar tarball guess difference come release process thanks wangda maven jar downloaded url hadoop yarn api jar binary tarballs downloaded url"
    },
    "9711":{
        "ID":34096,
        "MESSAGE_ID":"CAB1dGgrzZa5bkvJJLFm+9Jxe=tner7Q7q=X3euaOUxv5OpYGgA@mail.gmail.com",
        "PARENT_ID":34094.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"I\u00f1igo Goiri <elgoiri@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"non binding deployed subclusters hdfs router based federation executed distcp across subclusters router checked documentation tgz"
    },
    "9712":{
        "ID":34095,
        "MESSAGE_ID":"CAEZ3KkB+a=_m845p4Q=pXeo18JJFAGc+JR7E=cZALWFuH7DzOA@mail.gmail.com",
        "PARENT_ID":34093.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Roopa Tangirala <rtangirala@netflix.com.INVALID>",
        "TAGS":"existence, property",
        "BODY":"seeing many company grapple running repair successfully production seeing success distributed scheduled repair netflix strongly believe adding cassandra would great addition database hoping community make easy team operate run cassandra enhancing core product making maintenance like repair compaction part database without external tooling experimental flag feature team confident service enable others fall back default repair regard roopa tangirala engineering manager cde mobile"
    },
    "9713":{
        "ID":34094,
        "MESSAGE_ID":"299DF674-0DEE-43B0-8EC2-EF2D35AA94BF@apache.org",
        "PARENT_ID":34092.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"vote source code binary convenience artifact would replace maven jar well binary consistent correct give couple day folk tested binary reverify count one clear vote thanks vinod"
    },
    "9714":{
        "ID":34093,
        "MESSAGE_ID":"000001d3cba2$304d2920$90e77b60$@yahoo.com",
        "PARENT_ID":34084.0,
        "SUBJECT":"RE: Repair scheduling tools",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"existence",
        "BODY":"make configurable auto manage repair consistancy true default false user use built auto repair function would created continue handle default behavior would false nothing change wondering option might accelerate progress others already suggested kenneth brotman"
    },
    "9715":{
        "ID":34092,
        "MESSAGE_ID":"CAD++eC=ycoPPYa4=oF1iTrBABk42B3JiB1iRDtRLXUxR8jLiyw@mail.gmail.com",
        "PARENT_ID":34076.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi arpit think match rebuild fine far signed correct see policy allow thanks wangda"
    },
    "9716":{
        "ID":34091,
        "MESSAGE_ID":"bde7b77a-c91d-4535-a79a-a509b64a0726@Spark",
        "PARENT_ID":34084.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Rahul Singh <rahul.xavier.singh@gmail.com>",
        "TAGS":"existence",
        "BODY":"agree including distribution think repair live independently run configured separately rahul singh rahul singh anant anant corporation"
    },
    "9718":{
        "ID":34089,
        "MESSAGE_ID":"1239534492.1330996.1522792573534@mail.yahoo.com",
        "PARENT_ID":34045.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Eric Payne <erichadoop-1@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"binding thanks wangda work produce release following test release built source installed node pseudo cluster interacted rm cli gui tested streaming job tested yarn distributed job tested max resource percent tested simple inter queue preemption tested priority first intra queue preemption tested userlimit first intra queue preemption thanks eric payne"
    },
    "9721":{
        "ID":34086,
        "MESSAGE_ID":"CAMm20=5eXLN0ngSgPqyo4mu8PeqsBcBH4dag6ERzC1VG2x=vcw@mail.gmail.com",
        "PARENT_ID":34081.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Gera Shegalov <gera@apache.org>",
        "TAGS":"not-ak",
        "BODY":"non binding built source tested sparkpi minicluster modulo yarn tested sparkpi pseudo distributed cluster browsed hdfs doc site tarball"
    },
    "9723":{
        "ID":34084,
        "MESSAGE_ID":"CABsaHTMogk0MSoEsjYZdmG5o-nMxACZpw6jQJcrWRhD6NfTSKw@mail.gmail.com",
        "PARENT_ID":34083.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"document really good job listing issue coordinating scheduling repair regardless camp fall certainly worth read"
    },
    "9724":{
        "ID":34083,
        "MESSAGE_ID":"CALShVHco8LsHBroYv3vZjnwu9ZCUNf8OOa22e-O8MZ-Ys6Q5Bw@mail.gmail.com",
        "PARENT_ID":34078.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Joseph Lynch <joe.e.lynch@gmail.com>",
        "TAGS":"existence",
        "BODY":"want say think would great user moved repair scheduling cassandra team netflix opened ticket written detailed design document includes problem discussion prior art anyone want contribute tried fairly discus existing solution drawback proposed solution put part main cassandra daemon think probably marked experimental course something user opt table table cluster cluster understanding might fully work box first time ship willing take risk also honest user may help build confidence major deployment use netflix happy course provide qa best joey"
    },
    "9725":{
        "ID":34082,
        "MESSAGE_ID":"CAFjxgDwNT1y7kFGBJpMKfUMuimG4kt8ee5wsCZXnj9d5=rAMnA@mail.gmail.com",
        "PARENT_ID":34078.0,
        "SUBJECT":"Re: Repair scheduling tools",
        "SENT_FROM":"Carl Mueller <carl.mueller@smartthings.com>",
        "TAGS":"technology",
        "BODY":"lastpickle reaper starting point discussion repair scheduling"
    },
    "9726":{
        "ID":34081,
        "MESSAGE_ID":"FBD02ECD-BE81-480F-A280-9868E056C2E1@hortonworks.com",
        "PARENT_ID":34080.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Hanisha Koneru <hkoneru@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"correction vote non binding sorry confusion thanks hanisha"
    },
    "9727":{
        "ID":34080,
        "MESSAGE_ID":"2C0BEE69-0F03-4A71-AE4E-8A4D9D3DA0CB@hortonworks.com",
        "PARENT_ID":34076.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Hanisha Koneru <hkoneru@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks wangda putting rc binding verified following built source deployed binary node docker cluster sanity check basic dfs operation mapreduce wordcount grep thanks hanisha"
    },
    "9729":{
        "ID":34078,
        "MESSAGE_ID":"5A5202BB-DF07-4B8E-B9AB-10371085AB80@apple.com",
        "PARENT_ID":null,
        "SUBJECT":"Repair scheduling tools",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"existence, property",
        "BODY":"hi dev question best way schedule repair came cassandra thought would good bring idea external tool dev list cassandra lack sort tool automating routine task required running cluster specifically repair regular repair must cluster like compaction mean especially far eventual consistency concerned cassandra totally functional box operator either need find rd party solution implement one adding cassandra would make easier use something look like personally feel like pretty big gap project would like see process tool offered ideally cassandra would take care writing distributed repair scheduler trust run production lot harder writing single process management application failover thought thanks blake"
    },
    "9731":{
        "ID":34076,
        "MESSAGE_ID":"27647A5E-69DF-4C42-87C7-24C1CB9EC469@hortonworks.com",
        "PARENT_ID":34071.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Arpit Agarwal <aagarwal@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks wangda see shaded jar repo jar required binary release match right probably got rebuilt binding modulo remaining question verified signature verified checksum source binary artefact sanity checked jar built source deployed node secure cluster namenode ha verified hdfs web uis tried hdfs command ran sample mapreduce job thanks"
    },
    "9733":{
        "ID":34074,
        "MESSAGE_ID":"TYXPR01MB17102D68B4A4B7FF99E98AE88DA50@TYXPR01MB1710.jpnprd01.prod.outlook.com",
        "PARENT_ID":34071.0,
        "SUBJECT":"RE: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Takanobu Asanuma <tasanuma@yahoo-corp.jp>",
        "TAGS":"not-ak",
        "BODY":"thanks effort wangda sorry participating late non binding verified checksum tarball succeeded mvn clean package pdist native dtar dskiptests started docker hadoop cluster master slave verified teragen terasort verified erasure coding operation seems shaded jar hadoop client runtime hadoop client api hadoop client minicluster correct size orgapachehadoop takanobu"
    },
    "9735":{
        "ID":34072,
        "MESSAGE_ID":"CAN9AGU-xB+qHhvHzc=U4qzn9ZiszaRNXyTgLf8=H31ib9ceMng@mail.gmail.com",
        "PARENT_ID":34045.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Konstantinos Karanasos <kkaranasos@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"binding thanks putting together wangda deployed node hadoop cluster ran various mr job ran job mix opportunistic container via centralized scheduling ran job opportunistic container distributed scheduling ran job various placement constraint worked expected thanks konstantinos"
    },
    "9736":{
        "ID":34071,
        "MESSAGE_ID":"CAD++eCmknPMf1KgLJXSzfdi6FrkxVXQnaaWBW3PjW+H1ezpOqQ@mail.gmail.com",
        "PARENT_ID":34067.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"pointed arpit previously deployed shared jar incorrect redeployed jar staged arpit could please check updated maven repo url since jar inside binary tarballs correct url think need roll another rc update maven repo sufficient best wangda"
    },
    "9740":{
        "ID":34067,
        "MESSAGE_ID":"CAD++eC=6fB5yFCUBsaTszLrmGZ7c3uhCFZ0Kq3uYV62562tOSA@mail.gmail.com",
        "PARENT_ID":34066.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"process",
        "BODY":"hi arpit thanks pointing removed md file artifact found md checksum still exist md file remove md file generated create release script apache guidance instead must please let know think need removed well wangda"
    },
    "9741":{
        "ID":34066,
        "MESSAGE_ID":"90C798EB-A475-4AFD-A194-5C5773107F47@hortonworks.com",
        "PARENT_ID":34062.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Arpit Agarwal <aagarwal@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks putting together rc wangda guidance apache omit md specifically url"
    },
    "9745":{
        "ID":34062,
        "MESSAGE_ID":"CAD++eC=yh2ocbaUyNR9gC08XMDLK7fmq2SAkFqFjz90TCiP2CA@mail.gmail.com",
        "PARENT_ID":34058.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi gera bad thought src bin tarball enough uploaded thing artifact url please let know comment thanks wangda"
    },
    "9746":{
        "ID":34061,
        "MESSAGE_ID":"CACYiTui7iNWjB-fa-B1mXafQCP9-5Ui56SMqBVCko3JYd2s_Cw@mail.gmail.com",
        "PARENT_ID":34057.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Sunil G <sunilg@apache.org>",
        "TAGS":"not-ak",
        "BODY":"binding"
    },
    "9748":{
        "ID":34059,
        "MESSAGE_ID":"CAHjqPu+Osc_FQsfuTX5w3v8hW8Fj=6skC8xF78s5qB8iP4AN9A@mail.gmail.com",
        "PARENT_ID":34052.0,
        "SUBJECT":"Re: Roadmap for 4.0",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"additional ticket would like mention url automatic certificate management using vault stefan vault integration work sub ticket cassandra address encryption rest subsumes cassandra sstable encryption doubt would able get time year would definitely nice clarified encryption security story url address row rather partition sasi nice update sasi critical jason"
    },
    "9749":{
        "ID":34058,
        "MESSAGE_ID":"CAMm20=4JdqWkexiOqrPp2HaMM2PugoB4ew3QOzipQ1EaBSJfnw@mail.gmail.com",
        "PARENT_ID":34057.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Gera Shegalov <gera05@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks wangda many artifact previous vote see url among others site tarball missing"
    },
    "9750":{
        "ID":34057,
        "MESSAGE_ID":"CACYiTuj0C8VHvgf9nKovoGrhEZgX6swyjQbQj5zZpOXSgPi9Dg@mail.gmail.com",
        "PARENT_ID":34045.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Sunil G <sunilg@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks wangda initiating release tested rc built source file tested mr apps sleep wc verified new yarn ui old rm ui feature sanity done application priority application timeout intra queue preemption priority based based affinity test verify placement constraint tested basic nodelabel scenario added couple label node behavior coming correct verified old ui new yarn ui label submitted apps labelled cluster work fine also performed cli command related nodelabel test basic ha case seems correct tested new yarn ui page getting loaded correctly sunil"
    },
    "9751":{
        "ID":34056,
        "MESSAGE_ID":"PS1PR0401MB1339DBCD762B12A438721622D4A60@PS1PR0401MB1339.apcprd04.prod.outlook.com",
        "PARENT_ID":34055.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Weiwei Yang <cheersyang@hotmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi wangda non binding smoke test teragen terasort job various metric ui display validation compatible test tested gpu resource type verified rm fail app recovery verified thread async scheduling enabled placement constraint tested affinity anti affinity allocation sl test weiwei"
    },
    "9752":{
        "ID":34055,
        "MESSAGE_ID":"CAPwQCrn7ee_B_1mzG51U17NW6Manc-RMKzK4_oVqG+E6jNyHrA@mail.gmail.com",
        "PARENT_ID":34045.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Brahma Reddy Battula <brbapache@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"wangda thanks driving binding built source installed ha cluster verified basic command ran sample job browsed ui"
    },
    "9755":{
        "ID":34052,
        "MESSAGE_ID":"CAA=6J09FZiCNnUiGX+F30m_PZ6_BpHeGa3uqFxxrxmmT5GnGVw@mail.gmail.com",
        "PARENT_ID":33458.0,
        "SUBJECT":"Re: Roadmap for 4.0",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"apology realize responding discussion user list one peril responding thread user dev context included response kurt previous discussion topic ended user list discussion folk offline would like revive discussion kurt mentioned keep simple simply build consensus around start process working branch towards beta release candidate kurt mentioned assigning timeline right difficult firm line sand around feature patch limiting future work bug fix give folk le nebulous target work thing mention branch work instaclustr commitment dogfooding release candidate internal staging internal production workload becomes generally available know folk similar commitment simply branch clear list thing allow everyone start testing driving towards quality release thing already large number change ready would suggest recommending ticket yet finished outstanding work unless person working offering work instead get ready review timely fashion way build realistic working target major breaking change always whatever end thinking would suggest similar process applied releasing order get clean ticket labeling move ticket unlikely make worked something else whatever ticket labeled line sand trigger done event feature done certain event simply move next release branch occurred large review could simply resolving current blocker major ticket tagged something would strongly advocate hit done event cut cassandra branch start alpha beta rc cycle branch bugfixes going mind similar approach url without subsequent tick tock currently open blocker tagged old probably really blocker anymore ticket may blocker url url url term major ticket would like see land url virtual table url internode netty url pluggable storage url sstable encryption ben"
    },
    "9757":{
        "ID":34050,
        "MESSAGE_ID":"CAAvsqTqYehy1qvp4-gQ_-VC3LqptNrKOzCJUZ+mFeeaTLanT-g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Hdfs build on branch-2 are failing.",
        "SENT_FROM":"Rushabh Shah <rushabhs@oath.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi recently couple hdfs build failed branch slave id build failed url url failed following error npm http get url http get url http get url err error cert untrusted npm err securepair tl npm err securepair eventemitter emit event npm err securepair maybeinitfinished tl npm err cleartextstream read read tl npm err cleartextstream readable read stream readable npm err encryptedstream write write tl npm err dowrite stream writable npm err writeorbuffer stream writable npm err encryptedstream writable write stream writable npm err write stream readable npm err need help may report log npm err npm err email npm err npm err system linux genericnpm err command usr bin nodejs usr bin npm install bower npm err cwd rootnpm err node npm err npm npm err npm err additional logging detail found npm err root npm debug log npm err ok code certificate detail url valid thursday march central daylight time valid saturday june pm central daylight time far expert ssl need change truststore slave also appreciate anyone help fixing thanks rushabh shah"
    },
    "9759":{
        "ID":34048,
        "MESSAGE_ID":"CAGi=jZBwsz7Kb3qJxin0mV-Bb_Q0rPFLhXWm0hpBduQjKry7fw@mail.gmail.com",
        "PARENT_ID":34045.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Rohith Sharma K S <rohithsharmaks@apache.org>",
        "TAGS":"not-ak",
        "BODY":"binding downloaded source built source dhbase profile installed rm ha cluster integrated atsv installed hbase beta atsv back end scheduler configured level queue hierarchy ran sample job mr distributed verified atsv timeline reader rest api validated data published atsv yarn ui accessed flow activity page navigated inside flow activity page info yarn old ui also verified page rm ha restart work preserving restart tested running job nm restart scenario verified application timeout application priority feature tested thanks regard rohith sharma"
    },
    "9760":{
        "ID":34047,
        "MESSAGE_ID":"CAE3xMSjxepkaZPmU72tW5+Zet7ustUT1cBM5mJ7wmnnH+W0ZYA@mail.gmail.com",
        "PARENT_ID":34045.0,
        "SUBJECT":"Re: [VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Yufei Gu <flyrain000@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks wangda working non binding downloaded binary tarball verified checksum started pseudo cluster inside one docker container run resource manager fair scheduler verified distributed verified mapreduce pi job sanity checked rm webui best yufei"
    },
    "9762":{
        "ID":34045,
        "MESSAGE_ID":"CAD++eCn7te0qdz76y5NAPeQC6F5VFnKt7C6GN_wx8tKGq0n9LQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 3.1.0 (RC1)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk thanks many helped release since dec created rc apache hadoop artifact available url rc tag git release rc last git commit sha bacdcfdbfcfbcaccbed maven artifact available via repository apache org url vote run day ending apr pm pacific contains fixed jira issue since notable addition include first class gpu fpga support yarn native service support rich placement constraint yarn related enhancement allow hdfs block replica provided external storage system etc rc vote discussion please see wed like use starting release depending go get stabilized potentially use several week stable release done testing pseudo cluster ran distributed job gpu scheduling isolation placement constraint intra application anti affinity using distributed start best wangda vinod url project yarn hadoop mapreduce hdfs fixversion fixversion beta status resolved order fixversion asc url"
    },
    "9775":{
        "ID":34032,
        "MESSAGE_ID":"CAAaVJWUPMDiBhXf1CtAGzswa5tUVCfxk98UK3gQh+PdwLohpcA@mail.gmail.com",
        "PARENT_ID":34031.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Eric Badger <ebadger@oath.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"thanks opening jira pretty common rebuild clean lot development trunk branch constantly switching one compiling eric"
    },
    "9776":{
        "ID":34031,
        "MESSAGE_ID":"CAC_6UM_v9pinV9Mt8irT28FXcik-fnrHhZB3wxwSmyBTUJ1nZw@mail.gmail.com",
        "PARENT_ID":34029.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Jim Clampffer <james.clampffer@gmail.com>",
        "TAGS":"existence",
        "BODY":"certainly possible add flag disable libhdfs build opened hdfs put initial patch includes flag cmake could dnative cmake args skiplibhdfspp something similar good understanding maven antrun someone want help plumb maven flag cmake flag would appreciate common completely clean build interactive use incremental rebuilds libhdfs adding second process"
    },
    "9778":{
        "ID":34029,
        "MESSAGE_ID":"7D15D7C7-2F5E-446F-81A1-886DEB963A2E@hortonworks.com",
        "PARENT_ID":34028.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"would possible add maven flag like skipshade help reducing compile time people need build libhdfs thanks anu"
    },
    "9779":{
        "ID":34028,
        "MESSAGE_ID":"CAC_6UM8pE=+6JmiVFSRzaauDwhmmFQFjftAcwz-n8OCZapjPiw@mail.gmail.com",
        "PARENT_ID":34026.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Jim Clampffer <james.clampffer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi eric way completely skip compiling libhdfs part native build could pas dnative cmake args dhdfspp library true maven avoid building libhdfs test example tool though cut native client build time jim"
    },
    "9781":{
        "ID":34026,
        "MESSAGE_ID":"CAAaVJWVhR9kU9Z9sDOYfU7Ho8ZqGxd=FS9FhCT2+vE3Z3T1w7Q@mail.gmail.com",
        "PARENT_ID":33792.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Eric Badger <ebadger@oath.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"way skip libhdfs compilation native build went build native trunk test container executor change spent minute minute apache hadoop hdfs native client basically doubled compilation time eric"
    },
    "9851":{
        "ID":33956,
        "MESSAGE_ID":"e3976b5e-7e62-cc21-e0de-04f6c8b55872@akamai.com",
        "PARENT_ID":null,
        "SUBJECT":"Optimizing queries for partition keys",
        "SENT_FROM":"Sam Klock <sklock@akamai.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra devs use workflow cluster running involve select distinct key style query table observed extremely poor performance light load small number row per second frequent timeouts eventually traced replica shipping entire row case could store order mb data service query surprised partly seem behave way digging eventually came patch modifies selectstatement java following way selection query includes partition key building columnfilter query use builder columnfilter selectionbuilder instead builder columnfilter allcolumnsbuilder initialize columnfilter builder gatherqueriedcolumns seems repair performance regression appear break functionality based unit test smoke test ran involving insertion deletion would like contribute patch back project convinced subtle correctness issue missing judging comment code existence cassandra suggests optimizing kind query nontrivial change sound safe make corner case need account corner case plausibly way addressing selectstatement level need look deeper thanks sk unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "9867":{
        "ID":33940,
        "MESSAGE_ID":"CAD++eCk0gD6o-PuaB8NBS0aTn7si6ZBqhL8OW3hqAVoChm0VKw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 3.1.0 (RC0)",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk thanks many helped release since dec created rc apache hadoop artifact available url rc tag git release rc maven artifact available via repository apache org url vote run day weekday ending mar pm pacific contains fixed jira issue since notable addition include first class gpu fpga support yarn native service support rich placement constraint yarn related enhancement allow hdfs block replica provided external storage system etc wed like use starting release depending go get stabilized potentially use several week stable release done testing pseudo cluster distributed job start best wangda vinod url project yarn hadoop mapreduce hdfs fixversion fixversion beta status resolved order fixversion asc"
    },
    "9960":{
        "ID":33847,
        "MESSAGE_ID":"AD9C704A-A546-413C-81B4-B4D8A49BA9B2@hortonworks.com",
        "PARENT_ID":33846.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi owen thanks proposal hoping release okay different release well konstantin completely open name change let discus hdfs make corresponding change anu"
    },
    "9961":{
        "ID":33846,
        "MESSAGE_ID":"CAHfHakE37-WJXYjMPp=NbECtZCr2SVMFoo0bX+DSjmup_3FKsA@mail.gmail.com",
        "PARENT_ID":33757.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"\"Owen O'Malley\" <owen.omalley@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"andrew daryn feedback proposal otherwise start vote adoption new codebase tomorrow owen"
    },
    "9984":{
        "ID":33823,
        "MESSAGE_ID":"CAKtuutGeKcy7E5TQooeh1tme4u5pvHgRY+Ojp7xi9cMAWwG6Dw@mail.gmail.com",
        "PARENT_ID":33795.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"proposal add subproject hadoop make sense thank owen glad path scaling hdfs especially enters area like iot self driving car storage requirement huge fond name hdsl though storage layer sound generic may something descriptive like hdds hdss hadoop dynamically distributed scaling storage discus jira hdfs thanks konstantin"
    },
    "10012":{
        "ID":33795,
        "MESSAGE_ID":"0B68BCFE-D4C5-448D-9F07-035F4288756A@hortonworks.com",
        "PARENT_ID":33757.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Sanjay Radia <sanjay@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"owen thanks proposal would prefered hdsl hdfs also part hadoop release reason stated earlier thread willing accept proposal compromise move forward jitendra anu daryn andrew konstantine thought thanks sanjay"
    },
    "10014":{
        "ID":33793,
        "MESSAGE_ID":"0B6C1CE3-08D5-440B-9B06-ED2E0E2E92F8@gmail.com",
        "PARENT_ID":33720.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"originally would prefered owen made strong case discussion last week overall need broader discussion around next step nn evolution chart course locked particular path would let make detailed response hdfs sanjay"
    },
    "10015":{
        "ID":33792,
        "MESSAGE_ID":"CAAGvZEP2Dt=-WHwZuC_fZoMdmeFA6QCg7X1nUA7wYn8iMyjaQg@mail.gmail.com",
        "PARENT_ID":33790.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Deepak Majeti <majeti.deepak@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks hard work getting feature sub task james"
    },
    "10017":{
        "ID":33790,
        "MESSAGE_ID":"CAC_6UM-ZM6MH--oi55G9M3u6ych0sBQyy=1Laoh=DMT6=5d0wA@mail.gmail.com",
        "PARENT_ID":33756.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Jim Clampffer <james.clampffer@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"vote pass merging trunk shortly thanks everyone participated discussion vote many thanks everyone contributed code feedback throughout development process particularly bob anatoli xiaowei deepak provided lot large piece code well folk like owen chris allen stephen provided various support guidance apache process project design"
    },
    "10050":{
        "ID":33757,
        "MESSAGE_ID":"CAHfHakEoHTVFo9R3FoNTbYF-ovEEaCExtPqxhxv0UV0HXjhrhw@mail.gmail.com",
        "PARENT_ID":33736.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"\"Owen O'Malley\" <owen.omalley@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"discussion seems died coming closer consensus without resolution would like propose following compromise hdsl become subproject hadoop hdsl release separately hadoop hadoop release contain hdsl vice versa hdsl get jira instance release tag stay separate trunk opposed release branch hdsl separate module hadoop source tree enable hdsl work trunk hadoop trunk without making release every change hadoop trunk build hdsl non default profile enabled hadoop creates release branch rm delete hdsl module branch hdsl yetus check failure hadoop patch check think accomplishes goal encouraging hdsl development minimizing potential disruption hdfs development thought andrew jitendra sanjay thanks owen"
    },
    "10051":{
        "ID":33756,
        "MESSAGE_ID":"CA7A2F0F-9869-4302-8ECF-2AEED7BCA568@hortonworks.com",
        "PARENT_ID":33755.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Jitendra Pandey <jitendra@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"binding"
    },
    "10052":{
        "ID":33755,
        "MESSAGE_ID":"889EC4B1-82A0-4AC8-8BB8-BB370BB65EDA@hortonworks.com",
        "PARENT_ID":33750.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"binding thanks hard work getting client ready nice official supported native client hdfs thanks anu"
    },
    "10057":{
        "ID":33750,
        "MESSAGE_ID":"F981AC22-6C05-4CD4-AD1D-E704307E1505@hortonworks.com",
        "PARENT_ID":33748.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Mukul Kumar Singh <msingh@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"binding thanks mukul"
    },
    "10059":{
        "ID":33748,
        "MESSAGE_ID":"CAHfHakFrjKotDbFKe4JvcGHjS4OUXTHzJFNa1boJ4CX1fcwDpw@mail.gmail.com",
        "PARENT_ID":33738.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"\"Owen O'Malley\" <owen.omalley@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"binding owen"
    },
    "10069":{
        "ID":33738,
        "MESSAGE_ID":"CACO5Y4zxkgEpcpBnGYSnBmBNhZUOPOaPwhr7e3dYY2YRTbxbbg@mail.gmail.com",
        "PARENT_ID":33730.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"binding"
    },
    "10071":{
        "ID":33736,
        "MESSAGE_ID":"CAHfHakEgU0CGJSnmXrMwPMMGcv20GD045_XWOQLKUPu5mJdUjA@mail.gmail.com",
        "PARENT_ID":33727.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"\"Owen O'Malley\" <owen.omalley@gmail.com>",
        "TAGS":"process",
        "BODY":"hi joep"
    },
    "10072":{
        "ID":33735,
        "MESSAGE_ID":"6980CFC9-5F9B-4B75-9DBA-82305417593C@gmail.com",
        "PARENT_ID":33727.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"joep raise number point ozone object store user would choose ozone layer might use others gc azure something else hdsl ozone fit hadoop whether necessary raise release issue respond separate email let respond wrt ozone object store neither hdfs ozone real role cloud except temp data cost local disk eb high long term data storage hdfs even ozone prohibitive hell create kv namespace need stabilize hdsl data stored targeting hive spark apps stabilize hdsl using real hadoop apps ozonefs hdsl ozone feature compatible hdfs user even use real stability user run hdfs ozone side side cluster two namespace like federation run apps run hive spark apps ozone others need full hdfs feature encryption hdfs becomes stable start using hdsl ozone production use portion data wrt hdsl ozone fitting hadoop repository ozone kv temporary step real goal put nn top hdsl shown roadmap konstantine chris asked milestone feasible require removal fsn lock also shown several case sharing code future protocol engine co development easier repo time hdsl ported nn create new hdfs become feature compatible feature come free nn port new nn block layer erasure code added hdsl compare yarn hdfs common hdfs yarn independent depend hadoop common hbase run hdfs without yarn hdsl ozone depend hadoop common indeed new protocol engine hdsl might move hadoop common hdfs made sure dependency hdfs hdsl currently repo issue conclusion hdfs community need work together evolve old hdfs use hdsl new protocol engine raft together evolve newer powerful set sub component important repo share code private interface trying build competing object store improve hdfs fixing scalability fundamentally hard asking environment happen easily next year heeding stability concern hdfs developer eg remove compile time dependency maven profile work done member foreign project trying insert code hadoop hadoop hdfs developer given track record active participation hadoop hdfs job depend hdfs hadoop stability destabilizing last thing want responded every constructive feedback sanjay unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "10077":{
        "ID":33730,
        "MESSAGE_ID":"CAC_6UM-x-SnSTihKg=z5ZK6BLFZonfZTZEvZ8Dzf5u=trJObMw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Merging branch HDFS-8707 (native HDFS client) to trunk",
        "SENT_FROM":"Jim Clampffer <james.clampffer@gmail.com>",
        "TAGS":"existence, technology",
        "BODY":"hi everyone feedback generally positive discussion thread would like start formal vote merging hdfs libhdfs trunk vote open day end pm est branch includes implementation hdfs client use application run process jvm right branch support read metadata call feature paraphrasing list discussion thread avoiding jvm mean application use libhdfs explicitly control resource memory fds thread driving goal project let application access hdfs maintaining single heap includes support kerberos authentication includes libhdfs libhdfs compatible api well api support asynchronous operation application read may able use drop replacement libhdfs asynchronous io built top boost asio turn us select epoll many socket monitored single thread thread pool rather spawning thread sleep blocked socket includes set utility written mirror cli tool hdfs dfs order magnitude lower startup time java client useful script need work many file support cancelable read release associated resource immediately useful application need responsive interactive user point almost new code new subdirectory java source rest hadoop changed risk regression change outside subdirectory integrating build pom file adding couple dependency dockerfile library plenty burn time used production well year indirectly distributed part apache orc project form third party dependency much way well formatted documentation right documentation libhdfs api applicable libhdfs api header file describe various component including detail threading lifecycle expectation important object good place start hdfspp filesystem filehandle rpc connection rpc enginel start binding url second message thread figure link directly mine thanks"
    },
    "10080":{
        "ID":33727,
        "MESSAGE_ID":"CAB7mwtHNB+QuminXf3xvszwC5ZGh5GuKj84df4x31Hy0WHFOyQ@mail.gmail.com",
        "PARENT_ID":33726.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"\"J. Rottinghuis\" <jrottinghuis@gmail.com>",
        "TAGS":"process",
        "BODY":"sorry jumping late fray discussion seems ozone large feature appreciate development effort desire get hand user understand need iterate quickly reduce overhead development also agree hadoop benefit quicker release cycle part challenge large installation multiple cluster thousand user constant balance jumping newest release cost integration test scale especially thing backwards compatible try good citizen upstream change contribute back point made splitting project common yarn work reverted painful lot work involved sure project may slightly different hadoop common yarn hdfs made one consistent whole one could run project without separate block management layer possibly multiple block implementation pluggable cover would good future development hdfs user would choose ozone layer might use others gc azure something else argument made nobody able run hadoop consistent stack without ozone would strong case keep thing repo obviously people want use ozone repo easier flipside separate top level project repo add hadoop release change ozone new release needed would wait hadoop release ditto hadoop release issue ozone case one could turn ozone maven profile work extend done release ozone would make sense release without ozone would weird sound like hadoop feature compatibility lot new feature hadoop need worked still working jumping hadoop release working getting step store release bridge compatibility issue afraid adding large new feature trunk essentially make going hadoop viable quite would bummer feature work gone hadoop encryption erasure encoding appealing feature especially light meeting gdpr requirement would argue pull piece make sense hadoop merge keep rest separate project iterate quickly separate project separate set committers separate release cycle develops ozone new block layer use case even people want give encryption erasure encoding feature parity reached jump bridge reach think adding large chunk code relatively people community familiar necessarily going help hadoop time cheer joep"
    },
    "10081":{
        "ID":33726,
        "MESSAGE_ID":"1166A019-B47C-4BAD-A553-50EEE16853A1@hortonworks.com",
        "PARENT_ID":33718.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Jitendra Pandey <jitendra@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi andrew think eliminate maintenance cost even repo make following change incorporate suggestion daryn owen well hadoop hdsl project root hadoop repo separate directory dependency common yarn hdfs hdsl ozone based daryns suggestion hdsl optionally via config loaded dn pluggable module loaded absolutely code path hdsl ozone make easier folk building hadoop support maven profile hdsl ozone profile deactivated hdsl ozone built example cloudera choose skip even compiling building hdsl ozone therefore maintenance overhead whatsoever hadoop patch show done arguably two kind maintenance cost cost developer cost user developer maven profile noted point completely address concern developer compile time dependency choose build ozone hdsl user cost user completely alleviated ozone hdsl loaded mentioned point jitendra"
    },
    "10083":{
        "ID":33724,
        "MESSAGE_ID":"CANrW+dA8u0fnNnaZc7SFHPfEfo1t0e9A5VG2=nqhG2Pm5nhXDQ@mail.gmail.com",
        "PARENT_ID":33705.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Suresh Srinivas <sureshm.srinivas@gmail.com>",
        "TAGS":"property",
        "BODY":"anu jing nicholas sanjay jitendra many others thank staying focused effort almost year since hdfs created work happened year open feature branch storage layer improvement hdfs important scalability also enabling flexibility new innovation one challenge hdfs balancing need stability majority existing deployment need newer feature enhancement current need see uber single storage layer right abstraction enable new use case beyond file system avoid siloes storage simplify management hdsl storage container abstraction architectural foundation toward future main concern merge stability impact existing hdfs user need priority project modular approach taken ensure clean separation code dependency address concern binding merging hdfs hdfs repository"
    },
    "10087":{
        "ID":33720,
        "MESSAGE_ID":"CAGB5D2YtangF_K+T_VgRwUqp4-B67f_sx4hUsxJ0-ZccwXhL1A@mail.gmail.com",
        "PARENT_ID":33713.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi sanjay thanks response replying inline nn top hdsl nn us new block layer daryn owen hdfs separately hdsl would interested learn performance improvement new engine possible two process scr instance securely pass file descriptor dn client unix domain socket sure construct protocol securely efficiently creates hardlinks also sound like shallow copy work feature like hdfs encryption erasure coding diminishes utility also even hdfs hdfs shallow copy yet hdfs ozone shallow copy even best andrew"
    },
    "10089":{
        "ID":33718,
        "MESSAGE_ID":"CAGB5D2b8B-2FV_ygTbnNa--UYPLbCREZb=3ihb6WfXy47s357g@mail.gmail.com",
        "PARENT_ID":33709.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi owen wangda thanks clearly laying subproject option help discussion onboard idea regular release something tried alpha beta problem though lack commitment feature developer like sanjay jitendra far think every feature developer make reasonable effort test code merged yet experience rm code come risk believe ozone special different regard come maintenance cost maintenance benefit advocating separate source separate release since hdsl stability fsn bm refactoring still way want incur maintenance cost sympathize sentiment working cross repo harder within repo right tooling make lot easier git submodule google repo tool experience internally cloudera happy share knowledge possibly code best andrew"
    },
    "10094":{
        "ID":33713,
        "MESSAGE_ID":"97469E2F-B2D2-4C5C-82B1-2702284B3E30@gmail.com",
        "PARENT_ID":33707.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"andrew thanks response email let focus maintenance unnecessary impact hdfs daryn also touched topic looked code base developer impact point view appreciated code separate agree suggestion move src tree hadoop hdsl project hadoop hdfs project hadoop hdsl also gave good analogy store break thing change evolve store let look area future interaction example nn top hdsl nn us new block layer daryn owen acknowledge benefit new block layer two choice evolve nn interact old new block layer fork create new nn work new block layer old nn continue work old block layer trade offs clearly nd option least impact old hdfs code share hdsls netty protocol engine hdfs block layer hdsl ozone stabilized engine put new netty engine either hdfs hadoop common hdsl use hdfs community talking moving better thread model hdfs dns since release shallow copy hdsl need way get actual linux file system link hdfs block layer need provide private secure api get file name block hdsl hard link hence shallow copy first example beneficial existing hdfs maintenance burden minimized worth benefit nn scalability efficient protocol engine rd beneficial hdfs user want scalability new hdsl ozone code side side system cost providing private api access block file name sanjay unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "10097":{
        "ID":33710,
        "MESSAGE_ID":"75E16190-B55D-4379-9650-7EC89C33B6E6@hortonworks.com",
        "PARENT_ID":33709.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi owen thanks comment merged trunk hdfs branch hopefully make easy look change committed change required fix conflict separate commit make easy see thanks anu"
    },
    "10098":{
        "ID":33709,
        "MESSAGE_ID":"CAD++eCmRvRxSna+S7MOFBaV7rLqDkEyX9Sh4tpcPHWebC+Eadw@mail.gmail.com",
        "PARENT_ID":33708.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"process",
        "BODY":"like idea source release put ozone source different directory like owen mentioned going important party keep regular shorter release cycle hadoop month minor release user try feature give feedback stabilize feature earlier developer happier since effort consumed user soon feature get merged addition feature merged trunk reasonable test review andrew concern may problem anymore bq finally earnestly believe ozone hdsl would benefit separate project ozone could release faster iterate quickly hampered hadoop release schedule security compatibility requirement thanks wangda"
    },
    "10100":{
        "ID":33707,
        "MESSAGE_ID":"CAGB5D2Y=id7YfJLBfKde-D=WuZzmD0WOLKh+a8GWqh6yQyMNJw@mail.gmail.com",
        "PARENT_ID":33706.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi sanjay different opinion important eventually integrate code conveniently ignoring response also making argument claim making attacking argument making going change mind let bring back argument making come hdfs hdsl going ready near term come maintenance cost read proposal hdfs understood hdfs hdsl integration necessarily require lock split however still need refactoring clearly define fsn bm interface make bm pluggable hdsl swapped major undertaking risky similar refactoring made backports hard introduced bug think done minor release furthermore know expectation long take stabilize hdsl horizon storage system typically measured year rather month feel like hadoop item way yet moving non trivial maintenance cost new code code base ozone bug become bug ozone dependency become dependency ozone security flaw security flaw negatively affect already lumbering release schedule thus ability deliver iterate feature already trying ship even ozone separate default still large amount code come large maintenance cost want incur cost benefit still way disagree necessity sharing repo sharing operational behavior library exist method sharing code hdfs also hardly monopoly intermediating storage today disk shared mr shuffle spark impala spill log output kudu kafka etc operationally made work ozone hdsl separate process even seen operational advantage since isolated firmly believe solve implementation issue even separate process asked making separate project given two effort hdsl stabilization nn refactoring way best way get ozone hdsl hand user today release project owen mentioned making hadoop subproject would hash exactly mean assume separate repo still managed hadoop project think could make work attractive incubation new tlp excited possibility hdsl nn refactoring ensuring future hdfs year come pluggable block manager would also let experiment thing like hdfs increasingly important cloud centric world cblock would bring hdfs new usecases around generic container workload however given timeline completing effort time merge best andrew"
    },
    "10101":{
        "ID":33706,
        "MESSAGE_ID":"CAK85xrnKKJuofPat=fqxVPpki+_NkEGnZtwiQm83kxYwN7P2ig@mail.gmail.com",
        "PARENT_ID":33668.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Daryn Sharp <daryn@oath.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"generally neutral looked foremost developer impact ie intertwined hdfs project risk destabilizing developer expertise ozone impeded think answer currently intersection concern based assumption ozone accepted project common appear number superfluous change conf servlet must polluted specific reference logic ozone create dependency common hdfs mapred yarn hive etc common must ozone free datanode expected ozone change intricately linked existing block map dataset volume etc thankfully independent service dn polluted specific reference ozone ozone project dn generic plugin interface conceptually similar nm aux service namenode impact currently certainly code location feel hadoop hdfs project hadoop hdfs acceptable location id rather see hadoop hdfs project hadoop hdsl even better hadoop hdsl project clean separation make easier later spin pull depending way vote dependency owen hit upon could send hadoop already bursting dependency hope pull lot think ozone separate project view competing filesystem clearly yes low risk evolutionary step near term benefit want keep close help evolve think ozone hdsl whatever poorly marketed umbrella term many technology perhaps split interested container block management little interest time key store usability ozone specifically container management unclear lack basic feature like changing replication factor append migration path security etc know good plan yet another goal splicing nn lot high priority item tackle need carefully orchestrated contemplating bm replacement non starter production environment need make sure reach consensus block level functionality rushing nn independent whether allowing project bm scm change nn realistically going contentious destabilizing done correctly bm separation big win nn ozone necessity interface need stable well defined get right long time interface logic change break difficult coordinate well likely veto change impact ozone hopefully synchronize change le friction greatly increase chance developer riddling nn hack ozone specific logic make even brittle note need vigilant pervasive conditionals ie ec snapshot either case think ozone must agree impede current hdfs work ill compare hdfs store owner plan maybe retire year potential new owner ozone lined hdfs graciously give rent space dn precondition help improve store make mess expect hdfs clean make renovation complicate hdfs ignore due anticipation departure demise implying currently happening want see community customer need evolution revolution definitively civil war hdfs much legacy code rot hard change many poorly implemented feature perhaps overly optimistic freshly redesigned code counterbalance performance degradation nn also reluctant realize driven hdfs veteran know understand historical hdfs design strength flaw initially cited issue addressed concept bringing ozone going proverbial bull china shop daryn"
    },
    "10102":{
        "ID":33705,
        "MESSAGE_ID":"CAHfHakEUujH_=1xzO1GV_ca15Tbmwap0GYtb-Q2ZGu3mywKtsw@mail.gmail.com",
        "PARENT_ID":33704.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"\"Owen O'Malley\" <owen.omalley@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think would good get sooner rather later thought hard tell changed git rebase tell branch commits rebase failed conflict would really help rebased current trunk think ozone would good hadoop subproject outside hdfs cblock also coming merge would benefit separation hdfs new transitive dependency ozone hdsl cblock adding client server matter client dependency huge impact user checked new dependency compatibility asl"
    },
    "10103":{
        "ID":33704,
        "MESSAGE_ID":"alpine.DEB.2.10.1803011440231.20132@sussex.dreamhost.com",
        "PARENT_ID":33697.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"\"Clay B.\" <cwb@clayb.net>",
        "TAGS":"not-ak",
        "BODY":"oops retrying subscribed solely yarn dev clay"
    },
    "10105":{
        "ID":33702,
        "MESSAGE_ID":"CAHfHakEAeDQ2ek5vnjAyyAZ0w-bbjg9HsZxg=AOKFQV_1kJMmw@mail.gmail.com",
        "PARENT_ID":33701.0,
        "SUBJECT":"Re: [DISCUSS] Merging HDFS-8707 (C++ HDFS client) to trunk",
        "SENT_FROM":"\"Owen O'Malley\" <owen.omalley@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"merge using trunk orc great released hadoop owen"
    },
    "10106":{
        "ID":33701,
        "MESSAGE_ID":"CADoWKTBJyTheOdJC_59Ta-e5VHL1NWee2sQyL___03koOGTdxw@mail.gmail.com",
        "PARENT_ID":33700.0,
        "SUBJECT":"Re: [DISCUSS] Merging HDFS-8707 (C++ HDFS client) to trunk",
        "SENT_FROM":"Vinayakumar B <vinayakumarb@apache.org>",
        "TAGS":"property",
        "BODY":"definitely would great addition kudos everyone contribution expert vote code libhdfs libhdfs compatible api allows libhdfs serve drop replacement client need read support libhdfs also support writes would nice write support well merge everyone feel okay read alone okay anyway"
    },
    "10107":{
        "ID":33700,
        "MESSAGE_ID":"CAC_6UM_4hpo6OJyKB3jqbigFjk-Hie58Pa5h8tkUYbiLvGUvTw@mail.gmail.com",
        "PARENT_ID":33699.0,
        "SUBJECT":"Re: [DISCUSS] Merging HDFS-8707 (C++ HDFS client) to trunk",
        "SENT_FROM":"Jim Clampffer <james.clampffer@gmail.com>",
        "TAGS":"technology",
        "BODY":"thanks feedback chris kai chris mean potentially landing current state handling rough edge could see working impact existing code regard question kai good doc internal architecture yet reassigned hdfs handle specific area would like know prioritize header file include lot comment help hdfspp main header api filesystem filehandle describes rule object lifetime threading api point view class comment describing restriction threading locking lifecycle rpc engine rpc connection begin getting async rpc implementation yes reimplementation entire client using libhdfs reference help lot still lot work ec supported though would great agree going take lot effort implement right tried read ec file think would get unhelpful error block reader ec enabled cluster set test adding explicit supported message would straightforward libhdfs reuses minidfscluster test libhdfs already get consistency check api new test also get run libhdfs libhdfs make sure expected output agree chance look distribution build see hdfs tracking yet hdfs regard james"
    },
    "10108":{
        "ID":33699,
        "MESSAGE_ID":"1a36a99f-7db9-478d-b28a-9fc35f74c6b1.zhengkai.zk@alibaba-inc.com",
        "PARENT_ID":33695.0,
        "SUBJECT":"\u56de\u590d\uff1a[DISCUSS] Merging HDFS-8707 (C++ HDFS client) to trunk",
        "SENT_FROM":"\"=?UTF-8?B?6YOR6ZS0KOmTgeadsCk=?=\" <zhengkai.zk@alibaba-inc.com>",
        "TAGS":"property, technology",
        "BODY":"work sound solid great quick doc take glance quick question familiar seems client implemented without java code jvm overhead mean lot work rewriting hdfs client right guess erasure coding feature supported would involve significant development right yes say read erasure coded file building testing mechanism enforce consistency part java part thought public header lib exported building distribution package otherwise hard use new api short circuit read supported thanks regard kai chris douglas jim clampffer hdfs dev discus merging hdfs hdfs client trunk let get done many false start native hdfs client good base build"
    },
    "10110":{
        "ID":33697,
        "MESSAGE_ID":"alpine.DEB.2.10.1802282106410.22333@sussex.dreamhost.com",
        "PARENT_ID":33668.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"\"Clay B.\" <cwb@clayb.net>",
        "TAGS":"not-ak",
        "BODY":"non binding walked code find compelling user really look forward seeing ozone code mature maturing hdfs feature together point excite eight year hdfs user excitement making datanode storage technology container patch clearly brings fresh thought hdfs keeping growing stale ability build upon shared storage infrastructure diverse load want stranded storage capacity manage competing storage system disk want metric datanodes provide today instrument two system evolve instrumentation separately looking forward supporting object sized file move hdfs right direction test new block management technique scaling hdfs really excited see raft integration hope open new era hadoop matching modern system design new consistency replication option ever distributed ecosystem clay"
    },
    "10111":{
        "ID":33696,
        "MESSAGE_ID":"AF943F40-7620-40A3-B070-6C99D89126E4@gmail.com",
        "PARENT_ID":33691.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"existence",
        "BODY":"andrew thanks response wrt nn top hdsl raised issue fsn lock separation key issue discussed heavily past context show community way connect nn new block layer heard clearly thought deeply showed nn put top without removing fsn described detail hdfs also summary discussion thread milestone removal fsn give almost scalability require separation fsn lock milestone remove fsn lock give scalability conveniently ignored let reemphasize removing fsn lock necessary nn hdfs benefit hdsl get almost scalability benefit hence fsn local issue moot also conveniently ignored argument benefit keeping hdsl hdfs together vote discussion thread summary side side usage resulting operational concern sharing code argue separate project conflicting argument separate merge later hurry keep seperate focus non hdfs storage use case hdfs community member built hdsl address hdfs scalability trying go object store user market ceph etc explained multiple time ozonefs intermediate step stabilize hdsl immediate value apps hive spark even might value separate motivation go new storage use case hdfs community member built hdsl want focus improving hdfs may agree engineer writing code able drive direction look security design posted show hadoop hdfs focus focus object store market fit hadoop security model especially supporting use case job resulting need support delegation token argue hdsl ozonefs module separate therefore one go separate project look like one win damned damned discussion cloudera team one issue raised lot new code destabilized hdfs explained kept code separate module impact current hdfs stability feature like hdsls new protocol engine plugged old hdfs block layer stabilization argue stability hence separate module use push separate project sanjay unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "10112":{
        "ID":33695,
        "MESSAGE_ID":"CACO5Y4xdEjM2tRm-ZGDrxnLNTUehpd0YcQdpm8AxGfObbDa26A@mail.gmail.com",
        "PARENT_ID":33694.0,
        "SUBJECT":"Re: [DISCUSS] Merging HDFS-8707 (C++ HDFS client) to trunk",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"let get done many false start native hdfs client good base build"
    },
    "10113":{
        "ID":33694,
        "MESSAGE_ID":"CAC_6UM_QPkaar_GGo=1z6yFOt+WrsCYW3Em4VyfEm9Unh44+yA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Merging HDFS-8707 (C++ HDFS client) to trunk",
        "SENT_FROM":"Jim Clampffer <james.clampffer@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"hi everyone would like start thread discus merging hdfs aka libhdfs trunk sent originally sent similar email last october sound like buried discussion feature merges going time libhdfs hdfs client written designed used application written non jvm based language current state support kerberos authenticated read hdfs used production cluster year significant amount burn time hdfs branch around year would like know people thought would take merge current branch handling writes encrypted read new one current notable feature libhdfs libhdfs compatible api allows libhdfs serve drop replacement client need read support libhdfs also support writes asynchronous api synchronous shim top client application want blocking operation internally single thread optionally us select epoll way boost asio watch thousand socket without overhead spawning thread emulate async operation kerberos sasl authentication support ha namenode support set utility program mirror hdfs cli utility hdfs dfs chmod major benefit tool startup time order magnitude faster hundred occupies lot le memory since dealing jvm make possible thing like write simple bash script stats file applies rule result decides move way scale thousand file without penalized jvm startup cancelable read proven useful multiuser application pre fetch large block data need remain responsive interactive user rather waiting large slow read finish return immediately associated resource buffer file descriptor become available rest application use couple known issue doc build integrated rest hadoop public api header exported building distribution short term solution missing doc go libhdfs compatible api use libhdfs doc modification pom file integrate build change isolated new directory chance causing regression rest code minimal please share thought thanks"
    },
    "10116":{
        "ID":33691,
        "MESSAGE_ID":"CAGB5D2ZM+8S1v3BFp8BqJDQpWEOQQ9Y8+bQCtHzowWHR5caVBQ@mail.gmail.com",
        "PARENT_ID":33690.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"existence",
        "BODY":"resending since formatting messed let try plain text time hi jitendra thanks putting together caught discussion jira document hdfs still concern raised earlier merging ozone branch trunk recap question concern high level would ozone benefit separate project merged still believe ozone hadoop would benefit ozone separate project pressing reason merge ozone hdsl primary reason heard merging ozone stage ready user feedback second need merged start nn refactoring hdfs hdsl first without hdfs hdsl support user testing ozone object storage interface ozone hdsl implemented separate master new functionality bolted onto datanode also look like hdfs term api featureset yes speaks filesystem many tree storage system like ceph swift adls etc ozone hdsl support popular hdfs feature like erasure coding encryption high availability snapshot hflush hsync thus hbase apis like webhdfs nfs mean ozone feel like new different system could reasonably deployed tested separately hdfs unlikely replace many today hdfs deployment understand ozone designed second namenode refactoring hdfs hdsl major undertaking discussion hdfs still ongoing clear ultimate refactoring know earlier fsn bm refactoring painful introducing new bug making backports difficult probably deferred new major release instead think refactoring important long term maintainability nn worth pursuing hadoop item merging hdsl also prerequisite starting refactoring really see refactoring prerequisite hdfs hdsl possible finally earnestly believe ozone hdsl would benefit separate project ozone could release faster iterate quickly hampered hadoop release schedule security compatibility requirement also publicity community benefit opportunity build community focused novel capability architectural choice ozone hdsl example project incubated branch hadoop repo spun great success conclusion would like see ozone succeeding thriving separate project meanwhile work hdfs refactoring required separate fsn bm make pluggable point likely hadoop timeframe ready pursue hdfs hdsl integration best andrew"
    },
    "10117":{
        "ID":33690,
        "MESSAGE_ID":"CAGB5D2benZpRpU=pOAEgfKXJwfK1d_1K8YtBOCs0pKSG4y=_aQ@mail.gmail.com",
        "PARENT_ID":33668.0,
        "SUBJECT":"Re: [VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi jitendra thanks putting together caught discussion jira document hdfs still concern raised earlier merging ozone branch trunk recap question concern high level would ozone benefit separate project merged still believe ozone hadoop would benefit ozone separate project pressing reason merge ozone hdsl primary reason heard merging ozone stage ready user feedback second need merged start nn refactoring hdfs hdsl first without hdfs hdsl support user testing ozone object storage interface ozone hdsl implemented separate master new functionality bolted onto datanode also look like hdfs term api featureset yes speaks filesystem many tree storage system like ceph swift adls etc ozone hdsl support popular hdfs feature like erasure coding encryption high availability snapshot hflush hsync thus hbase apis like webhdfs nfs mean ozone feel like new different system could reasonably deployed tested separately hdfs unlikely replace many today hdfs deployment understand ozone designed second namenode refactoring hdfs hdsl major undertaking discussion hdfs still ongoing clear ultimate refactoring know earlier fsn bm refactoring painful introducing new bug making backports difficult probably deferred new major release instead think refactoring important long term maintainability nn worth pursuing hadoop item merging hdsl also prerequisite starting refactoring really see refactoring prerequisite hdfs hdsl possible finally earnestly believe ozone hdsl would benefit separate project ozone could release faster iterate quickly hampered hadoop release schedule security compatibility requirement also publicity community benefit opportunity build community focused novel capability architectural choice ozone hdsl example project incubated branch hadoop repo spun great success conclusion would like see ozone succeeding thriving separate project meanwhile work hdfs refactoring required separate fsn bm make pluggable point likely hadoop timeframe ready pursue hdfs hdsl integration best andrew"
    },
    "10139":{
        "ID":33668,
        "MESSAGE_ID":"E0752494-4BF3-4981-A0F7-914965A9446D@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Merging branch HDFS-7240 to trunk",
        "SENT_FROM":"Jitendra Pandey <jitendra@hortonworks.com>",
        "TAGS":"existence, property",
        "BODY":"dear folk would like start vote merge hdfs branch trunk context reviewed discussion thread jiras see reference hdfs introduces hadoop distributed storage layer hdsl distributed replicated block layer old hdfs namespace nn connected new block layer described hdfs also introduce key value namespace called ozone built hdsl code separate module turned default secure setup hdsl ozone daemon started detailed documentation available url start vote binding discussion thread url url jiras url url url url thanks jitendra discussion thread summary"
    },
    "10151":{
        "ID":33656,
        "MESSAGE_ID":"000401d3accf$60265910$20730b30$@yahoo.com",
        "PARENT_ID":33615.0,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"sincere thank everyone replied heavy lift doc slender cassandra reference project ill try find one two area contribute code get going jira started end workday kenneth brotman unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10189":{
        "ID":33618,
        "MESSAGE_ID":"CY4PR10MB14959B80C4D4C2721AF6D5CDB4CD0@CY4PR10MB1495.namprd10.prod.outlook.com",
        "PARENT_ID":33604.0,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Jacques-Henri Berthemet <jacques-henri.berthemet@genesys.com>",
        "TAGS":"property",
        "BODY":"hi kenneth cassandra user value usability since database value consistency performance even want usability documentation use datastax dse add value top cassandra since datastax actually paid dev work cassandra internals understandable kept part usability product notice google cql command always end datastax site would great case would take lot time also manager supposed fight devs allocate task time choose enhancing documentation fixing bad race condition corrupts data hope would choose later filling jiras create one like want ui setup tl would kind jira nobody would implement take lot time touch security may useful end last point usability cassandra end user difficult see progress since using cassandra internals custom secondary index tell huge rework cassandra partitioniterators elegant solution really helpful case great work guy jacques henri berthemet"
    },
    "10192":{
        "ID":33615,
        "MESSAGE_ID":"CALKyeu9u-SH8=1ETTUqZBu06VJxYPexf71ioeEy3fHYNjxc3Ng@mail.gmail.com",
        "PARENT_ID":33612.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Eric Plowe <eric.plowe@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra hard use disagree completely said definitely deficiency certain part documentation nothing show stopper using cassandra since sub day nothing great thing say said open source project get willing put expect something installs asks couple question race cassandra might willing put time understand cassandra work fit use case right fit use case happy bet thing lacking find work around submit pr beauty open source project"
    },
    "10193":{
        "ID":33614,
        "MESSAGE_ID":"CAGYMO7QDnPX2k2-JeaZP7Mfi8EOTKx4hMkj5MDTD87ua-DqVGg@mail.gmail.com",
        "PARENT_ID":33612.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Eric Plowe <eric@ericplowe.me>",
        "TAGS":"not-ak",
        "BODY":"cassandra hard use disagree completely said definitely deficiency certain part documentation nothing show stopper using cassandra since sub day nothing great thing say said open source project get willing put expect something installs asks couple question race cassandra might willing put time understand cassandra work fit use case right fit use case happy bet thing lacking find work around submit pr beauty open source project regard eric"
    },
    "10195":{
        "ID":33612,
        "MESSAGE_ID":"CACACo5SnhSodct=+pws_uJo9cLUOL3dguUJgBXO=H4gPM5wyoQ@mail.gmail.com",
        "PARENT_ID":33597.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Oleksandr Shulgin <oleksandr.shulgin@zalando.de>",
        "TAGS":"not-ak",
        "BODY":"wed feb pm durity sean sean durity homedepot com oh get started documentation especially datastax one come postgres comparison cassandra documentation mostly non existent way avoid listing uncomfortable epithet sure would able submit patch improve however since time would require already know answer question doc incomplete move datastax apache org doc actually good going since doc maintained poorly real leverage influence cheer alex"
    },
    "10196":{
        "ID":33611,
        "MESSAGE_ID":"C1FCFD80-260F-4984-8F48-EA462E0521CA@apple.com",
        "PARENT_ID":33610.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Michael Kjellman <kjellman@apple.com>",
        "TAGS":"not-ak",
        "BODY":"please send lot really hard great work lot people past year significantly improve documentation tree url url still see reply request jira information unable follow issue referring linked email either still see hole new improved documentation please create ticket track improve soon possible fresh set eye area covered obviously welcomed especially overlap link referring email obviously best kjellman"
    },
    "10197":{
        "ID":33610,
        "MESSAGE_ID":"001b01d3ab71$f2ba34e0$d82e9ea0$@yahoo.com",
        "PARENT_ID":33607.0,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"jeff already addressed everything said boy would like bring date article web trip people lousy documentation apache website lot folk know saying thing making another post hope clarifies going either freakishly valuable asset community freakishly valuable asset another community sure funny way reigning people used helping sure misjudged wow kenneth brotman jeff jirsa mailto jjirsa gmail com sent wednesday february pm cassandra cc cassandra dev subject cassandra need grow version five"
    },
    "10198":{
        "ID":33609,
        "MESSAGE_ID":"73D8388C-C67A-44FB-A361-4A699140085C@apple.com",
        "PARENT_ID":33604.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Chris Lohfink <clohfink@apple.com>",
        "TAGS":"not-ak",
        "BODY":"instead saying make better quantify make better jira conversation continue interested party opening jiras free combative insulting project mailing list may help vent frustration counter productive make people defensive people averse usability quite opposite actually people tend averse conversation opened cassandra idiot clear definition make better better solution would look like though note however saying make backup better look marketing literature guy hard engineer architect break actionable item coming cool idea something likely hook developer working trying shame community sale pitch another db sale guy chris unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10199":{
        "ID":33608,
        "MESSAGE_ID":"CAHjqPuJJJKQZqU9ft6qOU6g2HUyLNyTJzMN479JV8s4UnSin3g@mail.gmail.com",
        "PARENT_ID":33604.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi would like deescalate bit since apache os project contribution come many form code speaking advocacy documentation support project management none thing come free ken appreciate bring usability topic certainly valid concern mentioned working posting sort think amount enumerated list topic issue feel need addressing may simple change may invasive consider implementing look forward positive discussion think would best would complete list work community positive constructive manner towards getting done certainly contributing contributing big way project management working community going beneficial path everyone ken feel like would like help getting initiative going contributing substantively necessarily term code please feel free reach directly jasedbrown gmail com hoping lead somewhere positive benefit everyone jason"
    },
    "10201":{
        "ID":33606,
        "MESSAGE_ID":"CAAafH9TrZsYX2xqPoEBQGk1jrvChY29naeyiO0qKvxF7YZA0-A@mail.gmail.com",
        "PARENT_ID":33604.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"progress point jon said enumerate detail issue jira ticket"
    },
    "10203":{
        "ID":33604,
        "MESSAGE_ID":"001d01d3ab66$ccd79250$6686b6f0$@yahoo.com",
        "PARENT_ID":33603.0,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi akash get part outside work replying jeff jirsa suggesting big company could justify taking easy enough know actually pay people would working people could life part get aversion usability think coding making thing building easy use programming would constantly talking building make thing easier user fight developer architect engineer usability time would gone quick approach programming trying make thing easy kenneth brotman"
    },
    "10204":{
        "ID":33603,
        "MESSAGE_ID":"CALT6hNpzKoZSiP7-bFsdKaxNQ=L61A+mDAEPn958xsnrihY_9A@mail.gmail.com",
        "PARENT_ID":33601.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Akash Gangil <akashg1611@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would second jon argument made contributing outside work draining really requires lot commitment someone requires feature around usability etc pay period"
    },
    "10205":{
        "ID":33602,
        "MESSAGE_ID":"B3717028-0749-4762-A4D3-4C38154B86DD@apple.com",
        "PARENT_ID":33601.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Michael Kjellman <kjellman@apple.com>",
        "TAGS":"not-ak",
        "BODY":"kenneth could please send jira information unable even find account url name despite multiple attempt thanks best kjellman"
    },
    "10206":{
        "ID":33601,
        "MESSAGE_ID":"001301d3ab62$3dc8a260$b959e720$@yahoo.com",
        "PARENT_ID":33600.0,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"jon sorry see value time taking demand stern warning right jon please careful mischaracterized word jon suggest put thing jira seem suggest would lucky anyone looked anything figured appreciate hostility understand fully next post coming try keep conversation civilized trying least understand think saving gig mine really like lot people group come preliminary assessment thing soon cloud clear gone worry peaceful person like driven real important project feel compelled work good others time people hand hold database get stuck project wrong stuff kenneth brotman"
    },
    "10207":{
        "ID":33600,
        "MESSAGE_ID":"473C5881-2E1D-4D87-9DDA-8AC8BF341C1C@jonhaddad.com",
        "PARENT_ID":33598.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"ken maybe clear open source project work let try explain bunch either get paid someone volunteer free time folk get paid yay usually take direction priority work project directly affect job mean someone need care enough feature want work going others said already please put list demand jira someone interested work may need contribute little done already prepared get involved actually want see something get done perhaps learning little cassandra internals people involved reveal design decision priority project third seem little obsessed market share market share fun talk working contributing cassandra actually solve problem solves reasonably well magic open source db appears everything want cassandra bug free keep data consistent automatically backup come really nice cert management ad hoc querying amazing materialized view perfect caveat secondary index somehow still give linear scalability without mental overhead whatsoever sure people might start using actually ok happens well incredibly pumped mind work hard slim chance manifest use cassandra part community keep working thing care iterating improving thing maybe someone even take look jira issue filling mailing list grievance likely help progress towards goal cassandra easier use encourage try little productive try help rather complain constructive quick search name mailing list seen little everyone around trying help look like random dude asking people work free thing asking without offering anything back return jon unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10208":{
        "ID":33599,
        "MESSAGE_ID":"CABNXB2ANuUhNzXoyekz6bf1Vd-8TSFFGL1TG8=7P+yz2+YspuQ@mail.gmail.com",
        "PARENT_ID":33598.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"technology",
        "BODY":"buying marketing claim microsoft whoever maybe try use extensively talking backup look dynamodb url make easy end user without involving unwieldy hadoop machinery url cassandra offer term back restore satisfactory"
    },
    "10209":{
        "ID":33598,
        "MESSAGE_ID":"000701d3ab4e$00502ed0$00f08c70$@yahoo.com",
        "PARENT_ID":33595.0,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"josh say nothing indifference care community sometimes bring subject even though know also temporarily adding discomfort opening jira got specific topic try mind easy one work announce someone else coding year would probably knock make sure easy expect honest saying set right barely looked cassandra code one everyone list probably code secondly lastly good one someone want easy one start vnodes already seen many people seeking assistance vnode setting expect others mentioning similar one compaction repair backup microsoft know poor usability give easy market take make easy switch beginning video say following need worry replica set quorum read repair focus writing correct application logic say hopefully give quick idea seamlessly bring existing cassandra application azure cosmos db code change required work favorite cassandra tool driver including example native cassandra driver spark take second get going elastically globally scalable come kenneth brotman"
    },
    "10210":{
        "ID":33597,
        "MESSAGE_ID":"SN1P108MB00946AE517034627871AE05EBCCE0@SN1P108MB0094.NAMP108.PROD.OUTLOOK.COM",
        "PARENT_ID":null,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Durity, Sean R\" <SEAN_R_DURITY@homedepot.com>",
        "TAGS":"not-ak",
        "BODY":"instructive listen concern new existing user order improve product like cassandra think school yard taunt model effective experience open closed source database always thing could improved many historical base product evolved time newcomer see rough edge right away case database creator often widened scope try solve every data problem creates complexity many configuration option etc even best rdbms informix battled kind issue cassandra though introduced another angle difficulty trying relate rdbms user pun intended often borrowed terminology make seem familiar work way even solve problem classic example secondary index rdbms useful cassandra anathema except narrow case however think shot cassandra generally unfair started working datastax documentation best documentation seen project especially open source one anything cooling apache cassandra datastax may serious misstep far learned cassandra worked marveled clever combination intricate solution gossip merkle tree compaction strategy etc solve specific data problem great product given lot sleep filled night last year customer love explain used applaud contributor whether coder user thank finally note backup backing distributed system tough restores even complex want time extra disk space point time recovery etc want investigate tough problem cassandra go look recoverx datos io solved many problem easy task could ask people try recreate point working solution backup recovery required would argue always required probably worth paying sean durity josh mckenzie mailto jmckenzie apache org sent wednesday february dev cassandra apache org cc user subject external cassandra need grow version five disheartening amount cassandra bad need free happening thread open source software everyone strongly encouraged submit patch move needle thing complained thread apache way work people need step meaningfully contribute project scratch itch instead waiting random corporation subsidized engineer happen interest align contribute project beating dead horse thing everyone project know serious pain point productive"
    },
    "10212":{
        "ID":33595,
        "MESSAGE_ID":"CAPH+nLPRjmxzFda6jJCUyEnSQXre2W5V7hfpam_Z+UrYk3H8kg@mail.gmail.com",
        "PARENT_ID":33593.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"disheartening amount cassandra bad need free happening thread open source software everyone strongly encouraged submit patch move needle thing complained thread apache way work people need step meaningfully contribute project scratch itch instead waiting random corporation subsidized engineer happen interest align contribute project beating dead horse thing everyone project know serious pain point productive"
    },
    "10226":{
        "ID":33581,
        "MESSAGE_ID":"000301d3a9e5$91195dc0$b34c1940$@yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"jeff helped figure missing took day digest wrote coming another type engineering know really documented cassandra run data center day mean node going managed container docker container managed kerbernetes meso something reason anyone operating cassandra real world setting would encounter issue raised way described architectural diagram people reference indicate way would help kenneth brotman kenneth brotman mailto kenbrotman yahoo com sent monday february user cassandra apache org cc dev cassandra apache org subject cassandra need grow version five well said fair would mind hearing others still good guy kenneth brotman jeff jirsa mailto jjirsa gmail com sent monday february cassandra cc cassandra dev subject cassandra need grow version five lot thing disagree ok convinced nit pick every point url stefan work cert management beyond encourage michael suggested open jiras thing care strongly work time sometime year schedule ngcc next generation cassandra conference talk future project work direction encourage attend able encourage anyone care direction cassandra attend probably either free low cost cover venue food nothing else meet team working project learn selected project working opportunity pitch vision maybe talk folk helping jeff"
    },
    "10229":{
        "ID":33578,
        "MESSAGE_ID":"e412c228-d612-42ff-84c1-2a2eb1b47c97@Spark",
        "PARENT_ID":33577.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Rahul Singh <rahul.xavier.singh@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"html"
    },
    "10230":{
        "ID":33577,
        "MESSAGE_ID":"80E3D28E-FABD-4944-9406-A513DE91CDB6@apple.com",
        "PARENT_ID":33575.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Michael Kjellman <kjellman@apple.com>",
        "TAGS":"process",
        "BODY":"thing asking unfortunately tiny effort seem time contribute code best way personally create change would file individual jiras enhancement feature request highlight key one filed via mailing list would personally like see prioritized advocate resource allocated towards implementing ultimately get scheduled release one best kjellman unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10231":{
        "ID":33576,
        "MESSAGE_ID":"000901d3a960$302cbff0$90863fd0$@yahoo.com",
        "PARENT_ID":33574.0,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"property",
        "BODY":"comment inline appreciate desire stay scope believe usability king user learn database learn automate learn automation tool use automation tool something fundamental fundamental task described something missing database adversely affecting usability bad big company need calculate roi cost acquiring training next group user consider steep learning curve new user consider business case improving ease use could wrong sound like lot code work done company would take time contribute code rest code needed could generated easily engineer working month year kidding big company revenue ten billion heavy use cassandra node easy make case full time person involved paying using open source code cassandra let see would licensing fee big company cost like microsoft oracle would charge enterprise level relational database contribution one two people comparison appreciate concern result inaction instead resolution good course would say jeff jirsa apprenticeship speak master classic challenge trying get master see legitimate issue apprentice appreciate time give answer post group like post want take anything wrong way going bit everyone future adoption rate addressed snip realize could trouble link could get speed double na one jeff think concern need test sufficiently ensure stability next major release make perfect sense every release especially major one continuous improvement phase development example ci everything every phase stability testing part every release one major release nice step previous major release though relate studying enterprise level sql server stuff noticed exactly described decided maybe stuff wait thing develop excited way cassandra address thing streaming compaction good glad item related usability optional though sure working hard kind hard problem actually wrote committee committers obvious shortage contributor consider size organization using cassandra leave burden unfair installation generally would say usability big problem big company good ask new organization modest size organization struggling manage cassandra cluster usability big problem truly big problem many stakeholder cassandra need given bigger priority hopefully others weigh kenneth brotman unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10232":{
        "ID":33575,
        "MESSAGE_ID":"000001d3a950$48215c20$d8641460$@yahoo.com",
        "PARENT_ID":33573.0,
        "SUBJECT":"RE: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi michael actually much like database thanks thought comment lot big company like let see apple big one probably could easily justify contributing resource finish basic development cassandra lot big company using cassandra could contribute tiny effort everyone would benefit greatly focused effort small group talented people like group could knock easily everyone cassandra coder michael individual working big company moment michael best kenneth brotman"
    },
    "10233":{
        "ID":33574,
        "MESSAGE_ID":"2307812D-B35C-4CAA-98AF-05FEA07D99A0@gmail.com",
        "PARENT_ID":33572.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"comment inline probably reason historically pmc tried keep scope project narrow database ship driver ship developer tool ship fancy uis ship database think part narrow vision best maybe time reconsider scope postgres autovacuum prevent wraparound hopefully everyone know running postgres us flexible freeze cron sometimes ok let database opinion let third party tool fill gap cassandra definition database large scale problem company working tend big company big company often pre existing automation solved stuff consider fundamental task probably nobody actively working solved problem may consider missing feature many people already solved nearly basic think datastax seemingly multi person team opscenter better anything else around last time used stopped supporting os version left lot desired probably engineer working month sort meaningful reliable mostly trivial cluster managing ui think jiras id rather see time spent first everything think obvious chance someone else already solved differently obvious new solution seen inconvenient assumption complexity appreciate open source project get walk fine line trying useful without making many assumption opinionated overstepping bound may conservative easy go far opposite direction nobody done bigger problem paid solve nobody felt necessary necessary nice required see ever happening config management already push file around infrastructure cassandra need time wiping node failed bootstrap stopped required good argument made something like reaper shipped cassandra another good argument tool like end needing sort leader election scheduling go lot fundamental assumption cassandra node equal etc solving problem probably least part seen built db leader election easy say ill laugh tell user know dc go offline week time stefan particular done fair amount work id bet user use ssl genuinely care na stability testing big theme next major release let keep perspective came cassandra rdbms world building solution bunch master slave mysql postgres type database started using cassandra needed store something like gb day whatever spinning disk gb felt like big database thought writing runbooks automation automatically pick date slave new master promote repoint slave new master reformat old master add new slave without downtime without potentially deleting company whole dataset sounded awful cassandra solved problem cost maintaining yaml xml file yes rough edge get slightly le rough new release better sure use engineering time send patch basic stuff nut bolt database care way streaming compaction ill ever care installation committers working as sort hard problem probably even related cassandra idea open jira time send patch review patch expect bunch people set work optimizing database work packaging installation roi existing committers working database solve problem installation one problem"
    },
    "10234":{
        "ID":33573,
        "MESSAGE_ID":"D038FC4B-40E9-4A8E-A405-46BC70CA9C75@apple.com",
        "PARENT_ID":33572.0,
        "SUBJECT":"Re: Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"Michael Kjellman <kjellman@apple.com>",
        "TAGS":"not-ak",
        "BODY":"hi ken sorry like database thought please file actionable jiras place feel need improved database best way make encourage change looking seems quite idea post could broken individual actionable jiras please cross post mailing list pull request always welcomed best kjellman unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10235":{
        "ID":33572,
        "MESSAGE_ID":"000901d3a943$f295e890$d7c1b9b0$@yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra Needs to Grow Up by Version Five!",
        "SENT_FROM":"\"Kenneth Brotman\" <kenbrotman@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"cassandra feel like unfinished program problem open source cutting edge open source cutting edge program lack basic functionality stuck addressing fundamental mechanical task cassandra basic code would part contributed yet ease use issue need given much attention administrator ease use cassandra poor furthermore currently cassandra idiot everything cassandra contrast fact dawn artificial intelligence software exists automate task human mechanize human administer task database engineering type job apply science technology solve real world problem need organization talent focus crank starting unfinished database example able go node replace cassandra yaml file prompt display ask want update yaml file across cluster manually modify yaml file node create script third party automation tool turn service clear directory restart service coordination node already computer system thing read repair first something wrong name maybe called consistency repair administrator anything behavior cassandra programmed consider gc setting node calculate often run repair run node trying time circumstance indicate also run certificate management automated cluster wide management big theme next major release major release many major release could program coding basic stuff like installation configuration maintenance included finish basic coding cassandra make easy use administrator make smart add cluster wide management keep cassandra competitive soon old model remember fondly ask committee compile list item make plan commit including completed tested code part major release ask release delayed unusually short skip version kenneth brotman"
    },
    "10295":{
        "ID":33512,
        "MESSAGE_ID":"88F0C29D-7081-4F2C-B266-8C4FC2EFB3E5@gmail.com",
        "PARENT_ID":33508.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sorry formatting got messed email client dear hadoop community member multiple community discussion meeting smaller group also jira discussion respect thread express gratitude participation valuable comment key question raised following new block storage layer ozonefs benefit hdfs asked chalk roadmap towards goal scalable namenode working new storage layer asked provide security design question around stability given ozone brings large body code separate project forever merged production ready responded question detailed explanation answer jira well discussion believe sufficiently address community concern please see summary new code base benefit hdfs scaling roadmap provided summary new block storage layer address scalability block layer shown existing nn connected new block layer benefit shown milestone st milestone much simpler nd milestone giving almost scaling benefit originally proposed simply milestone community felt removing fsn bm lock fair amount work simpler solution would useful provide new namespace called ozone filesystem filecontext plugins allow user use new system way hive spark work well kv namespaces cloud facilitate stabilizing new block layer new block layer new netty based protocol engine datanode stabilized used old hdfs block layer see detail sharing code stability impact existing hdfs code base code separation new block layer ozonefs module separate old hdfs code currently call hdfs ozone except dn starting new block layer module configured add instability instability argument raised many time time share code ensure old hdfs continues remains stable example plan stabilize new netty based protocol engine new block layer sharing hdfss old block layer short term medium term new system hdfs used side side user side side usage short term testing side side medium term actual production use till new system feature parity old hdfs time sharing dn daemon admin function two system operationally important sharing dn daemon avoid additional operational daemon lifecycle management common decommissioning daemon dn one place decommission node storage replacing failed disk internal balancing capacity across disk need done current hdfs block new block layer block balancer would like use balancer provide common way balance common management bandwidth used balancing security configuration setup reuse existing set dns rather new one independent cluster need easily share block layer code two system used side side area sharing code desired time sharing new block layer new netty based protocol engine old hdfs dns long time sore issue hdfs block layer shallow data copy old system new system practical within project daemon otherwise deal security setting coordination across daemon shallow copy useful customer migrate old new shared disk scheduling future short term single round robin rather independent round robin sharing code across project technically possible anything possible software significantly harder typically requiring cleaner public apis etc sharing within project though internal apis often simpler protocol engine want share security design including threat model solution posted temporary separation merge later several comment jira argued temporarily separate two code base later merge new code stable agreement merge later bother separating need good reason separate addressed stability separation new code existing merge new code back hdfs later harder code goal diverge taking extra work split take extra work merge issue raised today raised unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "10299":{
        "ID":33508,
        "MESSAGE_ID":"4238B028-4B99-418B-AC8F-5A31D6960EA5@gmail.com",
        "PARENT_ID":32579.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"dear hadoop community member multiple community discussion meeting smaller group also jira discussion respect thread express gratitude participation valuable comment key question raised following new block storage layer ozonefs benefit hdfs asked chalk roadmap towards goal scalable namenode working new storage layer asked provide security design question around stability given ozone brings large body code separate project forever merged production ready responded question detailed explanation answer jira well discussion believe sufficiently address community concern please see summary new code base benefit hdfs scaling roadmap provided summary new block storage layer address scalability block layer shown existing nn connected new block layer benefit shown milestone st milestone much simpler nd milestone giving almost scaling benefit originally proposed simply milestone community felt removing fsn bm lock fair amount work simpler solution would useful provide new namespace called ozone filesystem filecontext plugins allow user use new system way hive spark work well kv namespaces cloud facilitate stabilizing new block layer new block layer new netty based protocol engine datanode stabilized used old hdfs block layer see detail sharing code stability impact existing hdfs code base code separation new block layer ozonefs module separate old hdfs code currently call hdfs ozone except dn starting new block layer module configured add instability instability argument raised many time time share code ensure old hdfs continues remains stable example plan stabilize new netty based protocol engine new block layer sharing hdfss old block layer short term medium term new system hdfs used side side user side side usage short term testing side side medium term actual production use till new system feature parity old hdfs time sharing dn daemon admin function two system operationally important sharing dn daemon avoid additional operational daemon lifecycle management common decommissioning daemon dn one place decommission node storage replacing failed disk internal balancing capacity across disk need done current hdfs block new block layer block balancer would like use balancer provide common way balance common management bandwidth used balancing security configuration setup reuse existing set dns rather new one independent cluster need easily share block layer code two system used side side area sharing code desired time sharing new block layer new netty based protocol engine old hdfs dns long time sore issue hdfs block layer shallow data copy old system new system practical within project daemon otherwise deal security setting coordination across daemon shallow copy useful customer migrate old new shared disk scheduling future short term single round robin rather independent round robin sharing code across project technically possible anything possible software significantly harder typically requiring cleaner public apis etc sharing within project though internal apis often simpler protocol engine want share security design including threat model solution posted temporary separation merge later several comment jira argued temporarily separate two code base later merge new code stable agreement merge later bother separating need good reason separate addressed stability separation new code existing merge new code back hdfs later harder code goal diverge taking extra work split take extra work merge issue raised today raised"
    },
    "10349":{
        "ID":33458,
        "MESSAGE_ID":"CA+Emchn-w+FTM9bNUdM2jyndPQusimCUgPx6zfg-tHyVjGjN=Q@mail.gmail.com",
        "PARENT_ID":33433.0,
        "SUBJECT":"Re: Roadmap for 4.0",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"advantage cutting release sooner later project need constantly progress forward release visible part huge changelog release increase likelihood bug take time find advantage slower release major version often breaking change protocol file format etc squeeze many possible avoid roll new major probably people actually running scale probably people actually testing trunk term big change would like see land one come mind url birch change file format url transient replica probably add new replication strategy similar url rest internode netty stuff idea change internode stuff bet lot easier land major url virtual table selfish inclusion probably need major would even lose sleep slip would like see land stuff ok slipping probably need land major change something big like gossip way schema passed etc url strongly consistent membership url strongly consistent schema said really care building confidence release mean extended testing cycle patch landed tomorrow would still expect month away release need bake next major many change throw alpha beta rc hope someone actually run believe realistic may biased jaded possible alpha beta realistic definitely release"
    },
    "10374":{
        "ID":33433,
        "MESSAGE_ID":"CAPbVhuNChJXvEMpwCoP8=Z87p_nDqT4+ukyZOBw3CJFW6=WXzw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Roadmap for 4.0",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"hi friend tl dr making plan ideally everyone interested provide two list one ticket contribute resource getting finished one feature think would desirable necessarily resource commit helping roadmap discussion last year never conclusion plan came time getting change list getting pretty big thinking would probably make sense define goal getting released actual plan already going quite unwieldy release lot testing required note following open discussion people like plan feel free speak end pretty basic plan think complicate also want end discussion make plan make plan regardless whatever plan end following would still valuable list ticket overall goal email let get worked detail yet save summarise follow todo think best way go would come list jira want included tag improvement aim release tagged ticket bug fix blocker complete catch obviously want include many ticket time want make sure appealing feature set user operator developer minimise scope creep think following strategy help maintain two list jira people want commit resource getting implemented jira people simply think would desirable currently anyone assigned planned assignment would probably make sense label additional tag jira user please feel free point want aggregating list summarise vote list would hopeful list story picked resourcing allows someone come along decides good enough work guess also base vote system reach point including moment purely get idea user actually want please refrain listing something already mentioned purpose get idea everyone priority interest resource available need multiple resource ticket anywhere share interest make lot easier work sharing note talking improvement bug treated always major issue regression need fix prior anyway time frame generally think bad idea commit hard deadline time frame mind idea would aim release go review outstanding improvement decide whether worth pushing back got enough release suppose keep time frame mind choosing ticket aim earlier date midyear figure testing validation bugfixing period prior release might drag bit bit conservative main goal would let list grow unless well ahead cull heavily committed decide improvement wait assume sound like common sense figured better spell next step week whenever discussion dy consolidate ticket relevant comment follow summary discus nitpick issue come final list go ahead side note conjunction effort obviously something validation testing keep email follow willing help validate test trunk avoid duplicating effort review list huge breaking ticket got mentioned last roadmap discussion status terribly important keep mind previously talked think leave relevant contributor decide whether want get still open ticket cassandra immutable node local schema committed cassandra strongly consistent schema alteration open discussion quite time cassandra nio streaming committed cassandra nio messaging committed cassandra gossip open sign action cassandra make index info heap friendly large cql partition progress update long time cassandra enhanced node representation open change since early cassandra epaxos progress update since feb cassandra storage port configurable per node committed cassandra remove thrift support committed cassandra dropping compact storage committed start list get started cassandra tiered cold storage twcs cassandra batchlog redesign cassandra enchance node representation cassandra forward writes replacement node address cassandra expressive consistency level cassandra optimise sstables upgrade task scheduling cassandra rangeawarecompaction cassandra read repair insert blocking cassandra make index info heap friendly large cql partition cassandra ldap auth cassandra audit logging cassandra fix streaming vnodes also handy jql start project cassandra fixversion issue watchedissues status resolved"
    },
    "10425":{
        "ID":33382,
        "MESSAGE_ID":"CAAQhzJUvatR4_ar7oaxk+Om-L04BhuVMFxgX+Vv6GKqCCZoJsA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"CDC usability and future development",
        "SENT_FROM":"Andrew Prudhomme <asp@yelp.com>",
        "TAGS":"not-ak",
        "BODY":"hi currently designing system allows cassandra cluster produce stream data update naturally evaluating cdc aid endeavor found several challenge using cdc purpose cdc provides mutation opposed full column value tends limited use application might want know full column value without issue read back also see value able publish full column value update especially true deleting column since stream may joined others consumer may require field properly process delete additionally difficulty processing cdc update immediately available addressed cassandra node providing independent stream update must unified deduplicated question vision cdc development current implementation could work use case way general streaming solution understand nature cassandra make quite complicated thought desire future direction cdc thanks"
    },
    "10426":{
        "ID":33381,
        "MESSAGE_ID":"CAAQhzJWWk8R6Rqtrjq1iC1qySVfNmq0t4ztewwC_impvCQms3w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"CDC usability and future development",
        "SENT_FROM":"Andrew Prudhomme <asp@yelp.com>",
        "TAGS":"not-ak",
        "BODY":"hi currently designing system allows cassandra cluster produce stream data update naturally evaluating cdc aid endeavor found several challenge using cdc purpose cdc provides mutation opposed full column value tends limited use application might want know full column value without issue read back also see value able publish full column value update especially true deleting column since stream may joined others consumer may require field properly process delete additionally difficulty processing cdc update immediately available addressed cassandra node providing independent stream update must unified deduplicated question vision cdc development current implementation could work use case way general streaming solution understand nature cassandra make quite complicated thought desire future direction cdc thanks"
    },
    "10496":{
        "ID":33311,
        "MESSAGE_ID":"1518443963.477402.1516732786976@mail.yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"\"Tsz Wo (Nicholas), Sze\" <s29752-hadoopdev@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"unfortunately ga neither alpha beta release signed contract matter signed signed long time ago big downside hadoop becomes known incompatible major release known keeping promise hadoop brand name important seems best solution nn rpc listening default instead compatible regard tsz wo"
    },
    "10499":{
        "ID":33308,
        "MESSAGE_ID":"4BB0A2B9-AB9E-4212-90EF-21D7A804DFC0@hortonworks.com",
        "PARENT_ID":33307.0,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi xiao chen unaffected change either way change save people time include voting outcome release determines addressed community merely bringing potential risk change proper communication issue regard eric"
    },
    "10500":{
        "ID":33307,
        "MESSAGE_ID":"CAFS=WjzDxBjZUtqnYtyC8uCDocQ8-QGfSWwa3oc87OFdGtH5Xg@mail.gmail.com",
        "PARENT_ID":33305.0,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"Xiao Chen <xiao@cloudera.com>",
        "TAGS":"existence, property",
        "BODY":"thanks comment atm initiating discussion thread returned week pto reading comment hdfs think agree different default nn port inconvenient problematic several case ranging rolling upgrade various downstream use case cdh initially reported downstream impala testing script try rpc nn running intuitive change cm match later case pop including table location hive metastore custom script including oozie wfs real world example heard far anu comment hdfs enjoy keeping separate script hadoop note limit nn rpc port port change hdfs indeed switching default ephemeral port disagreement far proceed fix mean everyone run issue upgrade make nn rpc listen nicholas came idea smartly solves compatibility problem downside even though thing work upgrade people still whack mole existing agree adding side effect give nn flexibility future without port change change back make upgrade go free problem original switch appear mature move downside summarize user compat since released safe say tremendously user make release note clear benefit tremendously user harming various others commented special case definition incompatible change actually fix previously problematic incompatible change consensus also notify user mailing list release note weaken compatibility guideline surprise community eric nicholas address concern xiao"
    },
    "10502":{
        "ID":33305,
        "MESSAGE_ID":"5ad46b7b-c723-587a-957a-a70e851796d8@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"Akira Ajisaka <aajisaka@apache.org>",
        "TAGS":"existence, property",
        "BODY":"thanks chris daryn reply first missed nn rpc port moved hdfs avoid ephemeral port however nn rpc port already range change move port range change really necessary agree change disastrous many user however reverting change also disastrous user therefore revert change must notify incompatibility user adding notification release announcement seems good choice probably user carefully read change log easily miss missed release process cancelling akira"
    },
    "10510":{
        "ID":33297,
        "MESSAGE_ID":"273287056.148967.1516241031052@mail.yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"\"Tsz Wo (Nicholas), Sze\" <s29752-hadoopdev@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"sent found previous email seems delivered common dev first let state clearly problem please help missed anything problem reported hdfs hdfs changed nn default rpc port hdfs claimed nn rpc port change painful downstream migrating hadoop note problem ha cluster note port configurable user set value note hdfs also changed many http rpc port shown namenode port secondary nn port datanode port port change probably also affect downstream project give painful experience example nn ui webhdfs use different port problem related convenience anything serious like security bug possible solution considered port change limited nn rpc default port value hardcoded also downstream project probably need fix hardcoded port webhdfs anyway let keep port change document clearly change may throw exception application try connect old port way compatible change nn rpc nn listens default new feature nn listen two port simultaneously feature benefit one port reserved high priority application better response time compatible course user could choose set back one port conf revert nn rpc port back need ask revert happen revert proposed hdfs however incompatible change dot release violates policy compatible important user expect compatible could explain incompatible due convenience revert compatibility issue since allowed incompatible change according policy since compatibility important convenience solution impermissible remaining solution fine thanks tsz wo"
    },
    "10547":{
        "ID":33260,
        "MESSAGE_ID":"CA+4052kHtwCJpuKnE9WUbAxF3OLzhe-ESK12esFk3BnZKghvJQ@mail.gmail.com",
        "PARENT_ID":33259.0,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"\"Aaron T. Myers\" <atm@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yes indeed proposal discussed hdfs revert default nn rpc port change none port change default port change actually technical benefit believe far le likely embedded database script test etc real deployment best aaron"
    },
    "10548":{
        "ID":33259,
        "MESSAGE_ID":"CACRbFyivw3zdjeKV2zDwivB7P0SnW2xmQVsQkfmSi_ga7vq6Ag@mail.gmail.com",
        "PARENT_ID":33258.0,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"larry mccay <lmccay@apache.org>",
        "TAGS":"not-ak",
        "BODY":"proposal fix nn port change understood"
    },
    "10549":{
        "ID":33258,
        "MESSAGE_ID":"38880920-9F21-45AF-87B6-7B4835262D9C@hortonworks.com",
        "PARENT_ID":33257.0,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"reading correctly daryn larry favor complete revert instead namenode please charm wrong reason try explore perspective understand cost option appears fragment opinion one choice serve need majority community would good pmc call vote reasonable pace address issue reduce pain point either side opposition regard eric"
    },
    "10550":{
        "ID":33257,
        "MESSAGE_ID":"CACO5Y4yCS_Ue+G9-2ZXXz3paHdGtxPyvd6-pdeUzBWJVRHDpNg@mail.gmail.com",
        "PARENT_ID":33256.0,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"limited reverting change"
    },
    "10551":{
        "ID":33256,
        "MESSAGE_ID":"A47AD404-DDAE-4D2B-8E07-704585F3C023@hortonworks.com",
        "PARENT_ID":33244.0,
        "SUBJECT":"Re: When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"fix hdfs potentially bring new customer le chance new comer encountering port already use problem make change according hdfs incompatible change make incompatible change compatible port reverted according hdfs user encounter bad taste mouth hdfs attempt solve please consider negative side effect reverting well incompatible minor release change thanks regard eric"
    },
    "10557":{
        "ID":33250,
        "MESSAGE_ID":"45F843A1-6D37-4084-87D5-5912CCADBC0A@apple.com",
        "PARENT_ID":33249.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Michael Kjellman <kjellman@apple.com>",
        "TAGS":"existence",
        "BODY":"another thought sufficient system resource resource intensive test fixture dynamically figure number thread run stress seems reasonable significantly lower concurrency dynamically resource constrained"
    },
    "10558":{
        "ID":33249,
        "MESSAGE_ID":"FC4A5611-15EC-40E4-A408-BA6F73B72E1D@internalcircle.com",
        "PARENT_ID":33248.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"existence",
        "BODY":"done limited testing medium size see quite bad behavior seeing added test fixture sufficient system resource resource intensive test currently basic check free memory check deselects test annotated pytest mark resource intensive annotation current system enough resource short medium term thinking could expand dynamically skip test whatever physical resource constraint working ultimate goal dynamically run many test reliably possible given chance would mind changing circleci config set ccm max heap size resource constrained env var mb kicking another run get baseline see ton failure test run stress pre fill cluster test know way control heap setting stress invoked via ccm node dtests"
    },
    "10559":{
        "ID":33248,
        "MESSAGE_ID":"23167b24-86f9-3640-7bdc-aa1dbfd9e774@apache.org",
        "PARENT_ID":33246.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Stefan Podkowinski <spod@apache.org>",
        "TAGS":"not-ak",
        "BODY":"giving another try today see long would take finish os account canceled job hour test started fail almost constantly url look like cpu mb medium limit container really adequate dtests seem running xlarge"
    },
    "10560":{
        "ID":33247,
        "MESSAGE_ID":"7E969EE2-6367-4E54-9E15-65BA60D8FD27@jonhaddad.com",
        "PARENT_ID":33246.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"agreed love seeing anything improves ease accessibility testing awesome book apology involved fix intended contribute break life got way unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10561":{
        "ID":33246,
        "MESSAGE_ID":"4C04BBC2-F141-451A-9C1E-1C12FDCE8BF5@internalcircle.com",
        "PARENT_ID":33245.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"process",
        "BODY":"plan action continue running everything asf jenkins additional developer like today free run unit test many dtests possible local test branch circleci circleci offer free os account container slow run additionally anyone want speed obviously free upgrade account plan resolve concern"
    },
    "10562":{
        "ID":33245,
        "MESSAGE_ID":"CAPH+nLOJ_qqtPv+i=JxBCkRry0KyfZyWC3zq2NG7rQZcEBJXBQ@mail.gmail.com",
        "PARENT_ID":33236.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"discussed cost funding aspect know project run infra donation cost issue past differentiating asf whole cassandra project sure would work term sponsor funding circleci container project use instance huge improvement runtime understatement day award great work front"
    },
    "10571":{
        "ID":33236,
        "MESSAGE_ID":"CABsaHTPH_SCJKmVnVp+rUmaNADbJyqhaBFa6kT-ujrRrEfVPMw@mail.gmail.com",
        "PARENT_ID":33235.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"property",
        "BODY":"making test accessible reliable super huge lot folk community well versed python included wholly support effort make dtest process easy thanks bunch taking think pay quickly"
    },
    "10572":{
        "ID":33235,
        "MESSAGE_ID":"E162992D-1EDC-4F59-9204-C7DD9B423A09@apple.com",
        "PARENT_ID":33208.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Michael Kjellman <kjellman@apple.com>",
        "TAGS":"not-ak",
        "BODY":"hi continuously iterating dtest pytest branch since nd run dtests close time ci ariel working way thru formal review three cheer ariel flaky test real thing despite dozen totally green test run vast majority run still reliably hitting roughly test failure world run dtests minute instead hour least possible keep finding flaky test fixing one one gotten huge amount feedback overall really want hear ultimately work driven desire test run every commit able trust result make testing story amazing even casual weekend warrior want work project want use python guy although lucky know work many thankfully able defer much largely python based effort sure people working project consider python expert id especially appreciate feedback finally lot effort focused around improving end user experience getting bootstrapped running test improving debugability story etc id really appreciate people could try running pytest branch following install instruction figure could improved existing behavior inadvertently removed going make someone life miserable thanks looking forward hearing feedback community best kjellman"
    },
    "10588":{
        "ID":33219,
        "MESSAGE_ID":"CA+4052nHUvHP1joATtUt45J1xrtvOuWY6OP1hoGkcbuypS4nNQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"When are incompatible changes acceptable (HDFS-12990)",
        "SENT_FROM":"\"Aaron T. Myers\" <atm@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hello hdfs discussion whether ever acceptable make incompatible change minor dot release general course undesirable avoided almost case however believe instance someone desiring make incompatible change evaluated case case basis consider cost benefit making change example believe historically made incompatible change minor dot release would break older client security reason particular case linked believe given hadoop released thus folk likely deployed would benefit large number existing deployment downstream application change default nn rpc port number back previously released version apache hadoop would like make change question would considered incompatible change however believe incompatible change warranted given circumstance would like hear others thought thanks aaron background used case many hadoop default service port ephemeral range could potentially service fail start given host process happened already bound said port part effort also changed default nn rpc port even though ephemeral range moved close new range rest port time change made though others realize substantial downside would introduce example hive metastore put full hdfs path including port database substantial upgrade headache"
    },
    "10599":{
        "ID":33208,
        "MESSAGE_ID":"BCCCFFAB-00E1-40EF-9E12-C919F23E6BBD@internalcircle.com",
        "PARENT_ID":33207.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"figured target python work first place current ubuntu lts pulling pretty old version concern using unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10600":{
        "ID":33207,
        "MESSAGE_ID":"01c9b525-73ff-0341-cbcc-ac3f33d04ebe@apache.org",
        "PARENT_ID":33206.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Stefan Podkowinski <spod@apache.org>",
        "TAGS":"not-ak",
        "BODY":"latest update branch fixed logging issue thanks test seem execute fine locally using pytest looking dockerfile noticed explicitly use python aware issue older python version use well locally jenkins"
    },
    "10601":{
        "ID":33206,
        "MESSAGE_ID":"8A9DCB7F-3EE4-4558-8F53-89832945D2F0@internalcircle.com",
        "PARENT_ID":33205.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"reproduced notset log issue locally got fix push commit moment unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10602":{
        "ID":33205,
        "MESSAGE_ID":"E0AE0B3B-E6D6-494C-9FE9-606F2491D4DE@internalcircle.com",
        "PARENT_ID":33204.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"comment inline thanks giving go sure issue parsing logging level passed pytest python logger could paste exact command using invoke pytest small change sure missed invocation case already tracked separate repo url plan action already already mentioned previous email get dtests working free circieci os account well part work already included pytest effort fixture look system resource dynamically include test possible yes touch cassandra build yet focused getting circleci local run working first happy stable make change jenkins configs pretty easily unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10603":{
        "ID":33204,
        "MESSAGE_ID":"50b3b046-111f-be77-a70f-d0ac52a4ba4e@apache.org",
        "PARENT_ID":33186.0,
        "SUBJECT":"Re: [Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Stefan Podkowinski <spod@apache.org>",
        "TAGS":"technology",
        "BODY":"giving try today mixed result first running pytest locally would fail ccmlib common argumenterror unknown log level notset error test although created new virtualenv described readme thanks updating use dtest cassandra branch patched ccm described ticket maybe publish patched ccm branch gh updated circle yml using docker seems good idea reduce clutter yaml file give control test environment add dockerfile circleci directory well could find trying solve pytest error mentioned next thing push trunk circle branch gh repo start circleci run finishing dtests minute sound exciting requires paid tier plan get kind parallelization look like dtests even deliberately disabled non paid account could test running dtests pytest branch build apache org work either least run dtests py argument need updated cassandra build currently use single cassandra dtest sh script build maybe create new job template would use updated script wip pytest dtest branch make work testable parallel"
    },
    "10607":{
        "ID":33200,
        "MESSAGE_ID":"CA+EmchkjP_cNbv-wF9H_veRZgig=Y6btnPEWUYZKff0pK8C1rw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra 2017 Wrapup",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"happy holiday imagine people disappear celebrate holiday wanted try summarize state cassandra dev see standard disclaimer apply personal opinion employer officially endorsed apache cassandra pmc asf quick stats cassandra development effort using imperfect git log awk sed counting looking trunk buyer beware probably first commit ben mane transforming heap cache caffeine url alex petrov removed code line according github benjamin lerer added code line according github put bed tick tock release cycle still cut different release across different branch total different contributor contributor contributing one patch year total different reviewer non merge commits trunk non merge commits doc end year roughly pending change resolved either fixed disqualified issue jira count something like email thread dev email thread user project added stefan podkowinski joel knighton ariel weisberg alex petrov blake eggleston philip thompson committers project added josh mckenzie marcus eriksson jon haddad apache cassandra pmc ngcc eric gary managed organize help instaclustr sponsoring achievement people talk two different talk apple fb instagram struggling describe simple term sorta involving using hint changing consistency concept help deal latency durability availability especially cross dc workload grouping together really fair one email summary going fair either talk missed ngcc guess get wait jiras patch new storage engine fb instagram using rocksdb note using cdc scale proposed change make easier uber url michael shuler datastax cassandra pmc release master etc spent time talking testing ci big ish development effort worth mentioning personal memory perhaps worst possible way create list spent fair amount time talking testing francois instagram lead way codifying new set principle around testing quality url url also spent time making test work circleci make life much easier occasional contributor need figure run test asf jenkins internode messaging rewrite use async netty probably single largest come mind went earlier year make easier huge cluster running thousand instance cluster probably benefit patch know talked irc url company working making cassandra happy proprietary flash storage ppcle ibm recent patch url new commitlog mode added first time quite time groupcommitlog url michael kjellman spent time porting dtests nose pytest python python removing dependency dead project like pycassa old thrift cql library still need reviewed url robert stupp spent time porting java still need reviewed url overall state project appears strong seeing active contribution driven primarily user like engine looking pretty good december code base stabilizing towards product happy run production despite irrationally skeptical sky falling thread near end feel confident saying pretty good year cassandra project continues move forward looking forward seeing launch hopefully real user conference jeff"
    },
    "10621":{
        "ID":33186,
        "MESSAGE_ID":"FAA11B84-6434-478A-9300-69C8F1F8C94A@apple.com",
        "PARENT_ID":null,
        "SUBJECT":"[Patch Available for Review!] CASSANDRA-14134: Migrate dtests to use pytest and python3",
        "SENT_FROM":"Michael Kjellman <kjellman@apple.com>",
        "TAGS":"existence",
        "BODY":"created url includes ton detail patch available review effort migrate dtests nosetest pytest ultimately ended also including porting ode python python would love people could pitch way help get reviewed committed reduce natural drift occur huge patch like change going master apologize sending close holiday really working non stop trying get thing completed stable state latest circleci run took roughly minute run dtests failure remaining run vnodes failure remaining run without vnodes comparison last asf jenkins dtest job successfully complete took nearly hour test failure note working trying determine baseline existing test found asf jenkins job incorrectly configured due typo vnodes job actually running vnodes meaning vnodes job identical vnodes asf jenkins job bootstrap test reliably hang nosetest pytest test cleanup however test run vnodes configuration debugged fixed lot case across many test case past week longer know test hang ci thanks optimistic making testing great project importantly os community best kjellman highlight quickly thought particular order also included jira migrate dtests executing using nosetest framework pytest port entire code base python python update run dtests py work pytest add dtest print test option run dtests py get easily parsable list available collected test update readme md executing dtests pytest add new debugging tip section readme md help basic debugging python pytest migrate existing enviornment variable usage mean control dtest operation mode argparse command line option documented help toggle intended usage migration old unittest nose based test structure modern pytest fixture approach automatic detection physical system resource automatically determine pytest mark resource intensive annotated test collected run system executed new pytest fixture replacement since pytest mark upgrade test annotation migration python logging framework upgrade thrift binding latest version full python compatibility remove deprecated cql pycassa dependency migrate remaining test fully remove dependency fixed dozen test would hang pytest framework forever run ci enviornments ran code nearly time circleci migration find identify fix test capable hanging ci upgrade test yet run ci still need additional migration work although upgrade test class compile successfully"
    },
    "10673":{
        "ID":33134,
        "MESSAGE_ID":"CAGB5D2bU6R71wm+q4GGjzO+Cv6h1in7znYF=OfvwinoZwxStWQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[ANNOUNCE] Apache Hadoop 3.0.0 GA is released",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi pleased announce apache hadoop generally available ga ga consists bug fix improvement enhancement since beta release mark point quality stability release line user earlier alpha beta release encouraged upgrade looking back ga culmination year work line starting alpha released september altogether incorporates change since user encouraged read overview major change ga release note changelog detail change since beta asf press release provides additional color highlight major feature url let end thanking many many contributor helped release line three major release hadoop year history biggest major release ever incredible accomplishment community proud worked best andrew"
    },
    "10748":{
        "ID":33059,
        "MESSAGE_ID":"CACO5Y4xd_QZOuj1uS7vW4pmkAemT6u_SnzmzusXHbP+WvoMQDQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Merge HDFS-9806 to trunk",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"discussion thread url last issue preparing branch merge trunk post merge patch hdfs minor cleanup task checkstyle findbugs naming etc tracked hdfs tried ensure feature disabled hdfs unaffected reviewing please look place might add overhead address merge site documentation design doc date sufficient try please point unclear address long effort grateful support received community particular thanks inigo goiri andrew wang anu engineer steve loughran sean mackrory lukas majercak uma gunuganti kai zheng rakesh radhakrishnan sriram rao lei xu zhe zhang jing zhao bharat viswanadham atm chris nauroth sanjay radia atul sikaria peng li input design testing review feature vote close earlier one week today url url url url unsubscribe mail hdfs dev unsubscribe hadoop apache org additional command mail hdfs dev help hadoop apache org"
    },
    "10774":{
        "ID":33033,
        "MESSAGE_ID":"1512467996703.39762@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 2.8.3 (RC0)",
        "SENT_FROM":"Junping Du <jdu@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi created first release candidate rc apache hadoop next maint release follow includes important fix improvement rc artifact available url rc tag git release rc maven artifact available via repository apache org url please try release vote vote run usual working day ending pst time thanks junping"
    },
    "10823":{
        "ID":32984,
        "MESSAGE_ID":"C807049A-670E-469E-ADCB-A2CF8F86EB1C@internalcircle.com",
        "PARENT_ID":32983.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"know case test unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10824":{
        "ID":32983,
        "MESSAGE_ID":"ea722f11-1883-2ed8-fc14-697636f2707d@pbandjelly.org",
        "PARENT_ID":32977.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"test cdc target dependent test set separate job jenkins url url michael"
    },
    "10825":{
        "ID":32982,
        "MESSAGE_ID":"CAPH+nLPYrZb0TWvd5d2Rk4gqJZJ07VN1oVpxWKLscy_hSERYaQ@mail.gmail.com",
        "PARENT_ID":32981.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks taking jay ended buried thing last week ooo week able get next week earliest also came somehow neglected merge pr dtest change master sure playing failure failed hand one author another pr led unfortunately"
    },
    "10826":{
        "ID":32981,
        "MESSAGE_ID":"CABzeAR7vpm6DWBp0qQjiNKroE5Q3zHuuv4NL-VhO4VGkRzD-0g@mail.gmail.com",
        "PARENT_ID":32979.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Jaydeep Chovatia <chovatia.jaydeep@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"useful info thanks jaydeep"
    },
    "10827":{
        "ID":32980,
        "MESSAGE_ID":"7C420AD5-4315-4625-BE9D-4BEA688869D8@internalcircle.com",
        "PARENT_ID":32979.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"make super clear awesome currently dtests executed via asf jenkins actually run successfully take roughly hour execute able run everything reliably stably minute obviously many many order magnitude better best kjellman"
    },
    "10828":{
        "ID":32979,
        "MESSAGE_ID":"5E36483E-352F-4308-B0FC-5202A1048658@internalcircle.com",
        "PARENT_ID":32978.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"technology",
        "BODY":"complicated question unfortunately something actively working improving cassci longer offered run datastax need come new solution ultimately still wip loss huge obviously testament awesome resource effort put providing community year short term current test dtests unit test run via asf jenkins url solution hugely helpful resource constrained short medium term hope get fully baked circleci solution get reliable fast test run long term actively discussed optimistic get something awesome project stable combination circleci asf jenkins sure change long term plan unit test java one tree url take look url look like last successful job finish url currently total test compressedinputstreamtest failing trunk via asf jenkins specific test failure environmental unit test trunk currently know flaky classpath testregularcolumntimestampupdates tracked url distributed test dtests python one url situation great deal complicated due length time number resource executing dtests take executing test across various configuration dtest job asf jenkins trunk url url url url look like need go back run url see test result last job triggered failed execute depending environment variable set test executed skipped see different test run vnode job heap job regular dtest job test might run multiple time recently woking getting circleci running sample run personal fork seen url personally using paid account get circleci resource container actually build project run unit test run dtests roughly minute actively working determine exactly executed reliably routinely easily anyone simple free circleci account also working getting scheduled circleci daily run setup trunk got story fully baked hope answer question quite dtests currently failing jeff mentioned created jiras lot already help matter trivial annoying might seem get everything green best kjellman"
    },
    "10829":{
        "ID":32978,
        "MESSAGE_ID":"CABzeAR4_m1XMyg1TBdr+jN5n7ZLTBrFDubYp8H+puvdb0O8iWA@mail.gmail.com",
        "PARENT_ID":32847.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Jaydeep Chovatia <chovatia.jaydeep@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"way check test failing trunk currently previously url giving result longer working jaydeep"
    },
    "10830":{
        "ID":32977,
        "MESSAGE_ID":"A5637162-6911-4223-B86A-70737C842D51@internalcircle.com",
        "PARENT_ID":32975.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"hey jay thanks took quick look jira noticed test cdc ant target mean cdc get testing ant test know history around unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10832":{
        "ID":32975,
        "MESSAGE_ID":"1680753164.2959255.1511804641055@mail.yahoo.com",
        "PARENT_ID":32880.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Jay Zhuang <jay.zhuang@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"fixed one cdc utest please review url"
    },
    "10840":{
        "ID":32967,
        "MESSAGE_ID":"CACYiTuhKhF1JCtR7ZFuZSEKQ4sBvN_n_tV5GHsbJ3YeyJP+P4Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Merge Absolute resource configuration support in Capacity Scheduler (YARN-5881) to trunk",
        "SENT_FROM":"Sunil G <sunilg@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi would like bring discussion merging absolute min max resource support capacity scheduler branch yarn trunk week goal get hadoop major work happened branch yarn support add min max resource configuration queue yarn compute effectivecapacity per resource vector yarn inter queue preemption computefixpointallocation need handle absolute resource regarding design detail please refer detailed design document regarding testing extensive test feature last couple month comparing latest trunk sl benchmark see observable performance gap simulated test based node sl trace pb memory got container allocated per second microbenchmark use performance test case added yarn show much performance regression comparing trunk yarn resourcetypes average fastest resourcetypes average fastest trunk resourcetypes average fastest resourcetypes average fastest regarding api stability newly added public apis unstable documentation jira could help provide detailed configuration detail feature work end end running development cluster last couple month undergone good amount testing branch code run trunk tracked via would love get thought opening voting thread special thanks team folk worked hard contributed towards effort including design discussion patch review etc wangda tan vinod kumar vavilappali rohith sharma url url url url thanks sunil wangda tan"
    },
    "10842":{
        "ID":32965,
        "MESSAGE_ID":"CAF8ixHvrNPaQLfYqS4TNDCF7bLy2_s_wMZO9Oqa24pz2Sd8hwQ@mail.gmail.com",
        "PARENT_ID":32964.0,
        "SUBJECT":"Re: Weekly Cassandra Wrap-Up: Oct 16 Edition",
        "SENT_FROM":"Lucas Benevides <lucas@maurobenevides.com.br>",
        "TAGS":"not-ak",
        "BODY":"hello pedro see two mine url based ben slater post cassandra stress tool lucas benevides gmt pedro gordo"
    },
    "10843":{
        "ID":32964,
        "MESSAGE_ID":"CALVQ-8F1Fn-6H_xvtN0m1O+6DOq3FTDNgJHTE8S_-ESjHSb56A@mail.gmail.com",
        "PARENT_ID":32568.0,
        "SUBJECT":"Re: Weekly Cassandra Wrap-Up: Oct 16 Edition",
        "SENT_FROM":"Pedro Gordo <pedro.gordo1986@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi jon looking create stress profile would like see couple stress profile someone experience first please send link repo pedro gordo"
    },
    "10850":{
        "ID":32957,
        "MESSAGE_ID":"9F72A453-80E7-4555-9CB2-325330A96CF6@gmail.com",
        "PARENT_ID":32956.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"happily assigned jeff jirsa unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10851":{
        "ID":32956,
        "MESSAGE_ID":"A7641421-F34A-4DFD-9E20-0E4800A0E9B6@oracle.com",
        "PARENT_ID":32847.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"sam sriramadhesikan <sam.sriramadhesikan@oracle.com>",
        "TAGS":"not-ak",
        "BODY":"hi jeff new cassandra project would like take one dtest ticket first contribution could michael assign url asf jira id sasrira see assign action button self assign thanks sam"
    },
    "10856":{
        "ID":32951,
        "MESSAGE_ID":"1511300504507.53487@hortonworks.com",
        "PARENT_ID":32838.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Junping Du <jdu@hortonworks.com>",
        "TAGS":"property",
        "BODY":"hi andrew bq source binary compatibility required new major release known documented incompatibility regard technically true however practically retain compatibility much otherwise could break downstream project third party library existing user application unintentionally quick example blocker issue reported hadoop break old mr application deployment due token format incompatible issue bq follow earlier email think need bridge release given successfully tested rolling upgrade find issue hadoop curious rolling upgrade mean going upgrade breaking running application recognized rolling miss anything thanks junping andrew wang sent wednesday november junping du cc wangda tan steve loughran vinod kumar vavilapalli kai zheng arun suresh common dev hadoop apache org yarn dev hadoop apache org hdfs dev mapreduce dev hadoop apache org subject discus final minor release branch hi junping"
    },
    "10898":{
        "ID":32909,
        "MESSAGE_ID":"CAPbVhuOzuNW3tWHQWf9RJtY_Womcmz9wFn91ZF-UuvdVW_6-RA@mail.gmail.com",
        "PARENT_ID":32880.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"upgrade test probably broken running since move asf jenkins believe start look mv test failure"
    },
    "10915":{
        "ID":32892,
        "MESSAGE_ID":"CAPAEb8j3djifJRNopfZgN7ZSXAHEkVKDgLH9dLDST-uUw0OpNA@mail.gmail.com",
        "PARENT_ID":31970.0,
        "SUBJECT":"Re: [DISCUSS] Merge Storage Policy Satisfier (SPS) [HDFS-10285] feature branch to trunk",
        "SENT_FROM":"Uma Maheswara Rao G <hadoop.uma@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"update worked review comment additional jiras mentioned take support recursive api support hdfs provided recursive api support apache org jira browse hdfs improved portion well url fixed comment continuing test feature working far well also uploaded combined patch got good qa report objection would like go merge vote tomorrow please default feature disabled regard uma"
    },
    "10927":{
        "ID":32880,
        "MESSAGE_ID":"CAPH+nLNWs8yXy_Mov7kcj4HciLohaxE+4V3gKeS4gzumHmjWzA@mail.gmail.com",
        "PARENT_ID":32873.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"try take look cdc test next week look like one base unit test failing well"
    },
    "10928":{
        "ID":32879,
        "MESSAGE_ID":"CANaNPn3d22xFob-qdj0PLcVd1AYq-_H9pGo=mqBO2EN3JWfoJA@mail.gmail.com",
        "PARENT_ID":32878.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Philip Thompson <philip.thompson@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hi michael release ccm publish pypi release cut request since commit december tell least ten release gone since release apache cassandra dtest us cut november"
    },
    "10929":{
        "ID":32878,
        "MESSAGE_ID":"FB897F81-5881-4B08-892F-BD18CD0B1D49@internalcircle.com",
        "PARENT_ID":32877.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"guessing part url see sylvain left comment something sound pretty similar actually resolved look like merged url ccm release get published pypy"
    },
    "10930":{
        "ID":32877,
        "MESSAGE_ID":"205CD4AA-9A9E-40D0-BC59-C09EE18A490A@internalcircle.com",
        "PARENT_ID":32873.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"see ton upgrade test right failing unexpected error node log error error main cassandradaemon java exception encountered startup invalid yaml please remove property rpc port cassandra yaml see rpc port seems yanked trunk seems like legitimate failure sure fully understand yaml upgrade path work upgrade test dtests taken look upgrade test upgrade manifest py upgrade test readme md anyone would light supposed work handling rpc port upgrade dtests missed removed whatever reason trunk thanks best kjellman"
    },
    "10934":{
        "ID":32873,
        "MESSAGE_ID":"73CCA155-CA7B-49CD-A982-15A2BA11E8BD@internalcircle.com",
        "PARENT_ID":32848.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"existence",
        "BODY":"quick update dtests heap memtables filed cassandra many dtests fail configurationexception offheap object available offheap memtables true look like going need work test configuration right pretty broken volunteer fix broken materialized view cdc dtests best kjellman unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10956":{
        "ID":32851,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B66662BC5E96@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":32850.0,
        "SUBJECT":"RE: Backporting OSS module to branch 2.x",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"ok clear branch already maintenance mode allows none new feature included sound good suggestion workaround still wondering last release agree otherwise putting branch releasing along nice thing would still desirable thinking release would next one popular favorite line could early stop sure also depends potential interest taking said previous email likely missed full picture want catch help future indeed yet yes look rather late could see rc voted go fine idea put work branch first expect new release one sure let raise release thread right time thanks chris education thought regard kai"
    },
    "10957":{
        "ID":32850,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B66662BC5E0D@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":null,
        "SUBJECT":"Backporting OSS module to branch 2.x",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"discussion backporting os module branch per chris suggestion dev list"
    },
    "10959":{
        "ID":32848,
        "MESSAGE_ID":"C8E05177-B2A8-4DAF-869F-B5A9EA659674@internalcircle.com",
        "PARENT_ID":32847.0,
        "SUBJECT":"Re: Flakey Dtests",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"yes true flaky almost one filed fail time look forward triaging remaining flaky one hopefully without power combined end month appreciate everyone help matter small already personally fun random python class missing return method stuff wanted time actually execute make good previous dev list promise best kjellman unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "10960":{
        "ID":32847,
        "MESSAGE_ID":"CA+Emch=jsYjiK_phDH5TkP15v1e3MNaCGfXW79ivbf8rUV22ow@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Flakey Dtests",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"process",
        "BODY":"lieu weekly wrap pre thanksgiving call help paying attention jira likely notice josh went triage categorized bunch issue adding component michael took time open bunch jiras failing test many bunch something like test currently failing trunk regular contributor already know dtests flakey would great go fix even incremental improvement improvement easy search find url new contributor fixing test often good way learn new part codebase many dtests live different repo url python fear repo instruction setting running dtests url normal contribution workflow applies self assign ticket want work click start progress indicate working mark patch available uploaded code reviewed github branch standalone patch file attached jira question feel free email dev list many thanks given jeff"
    },
    "10964":{
        "ID":32843,
        "MESSAGE_ID":"CA+RK=_BGsMxO15wfxzjeOTXLEFr_8PYtL+t38cW49=AKX3LzdQ@mail.gmail.com",
        "PARENT_ID":32832.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"many downstream project hbase tez etc still consuming many non public server side apis hadoop saying project product outside hadoop ecosystem api compatibility test cover case situation claim new major release responsible private api change would consider filing hbase jiras opinion worst offense least take look"
    },
    "10969":{
        "ID":32838,
        "MESSAGE_ID":"CAGB5D2aPub3dDfcAthNC6BF_TBL+5xfoq=s-TkBSMi8oiSd8Vg@mail.gmail.com",
        "PARENT_ID":32832.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi junping"
    },
    "10975":{
        "ID":32832,
        "MESSAGE_ID":"1510738794018.33625@hortonworks.com",
        "PARENT_ID":32829.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Junping Du <jdu@hortonworks.com>",
        "TAGS":"existence, process, property",
        "BODY":"thanks vinod bring discussion time agree response option good choice community bandwidth precious focus limited mainstream branch develop test deployment course still follow apache way allow interested committer rolling release given specific requirement mainstream release biased option discus later think bridge release upgrading back necessary reason obviously given lesson learned previous experience migration matter careful tend still chance level compatibility source binary configuration etc get broken migration new major release incompatibility identified runtime ga release widely deployed production cluster ton downstream project numerous configuration cover house deployment test recent classpath isolation work surprised find many downstream project hbase tez etc still consuming many non public server side apis hadoop saying project product outside hadoop ecosystem api compatibility test cover case situation claim new major release responsible private api change given possibility breaking existing application way user could hesitated migrate release safe solution roll back beside incompatibility also possible performance regression lower throughput higher latency slower job running bigger memory footprint even memory leaking etc new hadoop release performance impact migration could neglectable user user could sensitive wish roll back happens production cluster andrew mentioned early email thread work done verifying rolling upgrade curious release tested upgrade still releasing aware work test downgrade correct miss work user hit three situation mentioned give chance roll back really conservative unexpected side effect upgrading given bridge release cover case safely roll back matter rolling sure call br release sure exactly change include supporting roll back moment defer decision discus later better idea summary two cent feature release happen branch last minor release mainstream community branch bridge release necessary safely upgrade downgrade decide later see necessary scope bridge release clear thanks junping andrew wang sent tuesday november pm wangda tan cc steve loughran vinod kumar vavilapalli kai zheng arun suresh common dev hadoop apache org yarn dev hadoop apache org hdfs dev mapreduce dev hadoop apache org subject discus final minor release branch follow earlier email think need bridge release given successfully tested rolling upgrade expect keep making improvement smooth additional incompatibility found requirement user upgrade bridge release upgrading otherwise strong opinion discontinue branch release historically release line maintained interest wane maintainer taking care backports much work rest vote rcs best andrew"
    },
    "10978":{
        "ID":32829,
        "MESSAGE_ID":"CAGB5D2aVtF8W86o-c2xNFOyReaoxK2UPnuj1d0fqD_Zqzp25Zg@mail.gmail.com",
        "PARENT_ID":32817.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"existence",
        "BODY":"follow earlier email think need bridge release given successfully tested rolling upgrade expect keep making improvement smooth additional incompatibility found requirement user upgrade bridge release upgrading otherwise strong opinion discontinue branch release historically release line maintained interest wane maintainer taking care backports much work rest vote rcs best andrew"
    },
    "10979":{
        "ID":32828,
        "MESSAGE_ID":"CAGB5D2Y4hZYBWLCrsL7Wr7E9rWW26ag+vTJTHUqF1vnHOO9NHQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 3.0.0 RC0",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk thanks always many many contributor helped release created rc apache hadoop artifact available url vote run day ending nov th pm pacific ga contains fixed jira issue since beta notable addition include merge yarn resource type api based configuration capacityscheduler hdfs router based federation done traditional testing pseudo cluster pi job start best andrew"
    },
    "10989":{
        "ID":32818,
        "MESSAGE_ID":"1510621454345.7341@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"Apache Hadoop 2.8.3 Release Plan",
        "SENT_FROM":"Junping Du <jdu@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi several important fix get landed branch would like cut branch start release work far see pending blocker current plan cut st rc next several day coming commits land branch please mark fix version really important fix getting closed please notify ahead landing branch please let know thought comment plan thanks junping dujunping gmail com behalf sent friday october pm general hadoop apache org subject announce apache hadoop release hi give great pleasure announce apache hadoop community voted release apache hadoop available download apache mirror download instruction please refer apache hadoop release page apache hadoop first ga release apache hadoop line newest stable release entire apache hadoop project major change incuded hadoop line please refer hadoop main page release resolved issue since previous release following breakdown hadoop common hdfs yarn mapreduce please read log change releasenotes detail release news posted hadoop website go downloads section directly thank contributing apache hadoop release cheer junping url url url url url url unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "10990":{
        "ID":32817,
        "MESSAGE_ID":"CAD++eCkGoDu1s2TPwqE=NVCkXXZLTzrCKKk=34tRbcboDumd3A@mail.gmail.com",
        "PARENT_ID":32792.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"existence",
        "BODY":"thanks vinod staring also leaning towards plan make last minor release branch maintenance release bridge continue make maintenance release necessary part sure separate bridge release bridge release steve suggestion sound doable new feature fix appropriate esp feature stabilisation whoever put hand release deserves support testing someone make really strong case backport feature branch backwards compatible going stop way le compelling make community focus release fill whatever gap migrating best wangda"
    },
    "11002":{
        "ID":32805,
        "MESSAGE_ID":"CAO=2E=ucARhz2yHYHph5LwDuek=HENDXUyee7iPr4OcCCNS4oA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[YARN-6483] Add nodes transitioning to DECOMMISSIONING state to the list of updated nodes returned by the Resource Manager as a response to the Application Master heartbeat",
        "SENT_FROM":"Juan Rodr\u00edguez Hortal\u00e1 <juan.rodriguez.hortala@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi submitted pull request url url change alternative proposal yarn notifying application master decommission node could help completing url apache org jira browse yarn could useful implementing functionality like example url spark able blacklist executor corresponding node transition decommissioning state would like hear feedback thanks juan rodriguez hortala"
    },
    "11009":{
        "ID":32798,
        "MESSAGE_ID":"CAO=2E=tfQOAtCsKoTCh+CZAfaqXHXnVkJD=h4+CH9d1hUzTC1Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[YARN-6483] Add nodes transitioning to DECOMMISSIONING state to the list of updated nodes returned by the Resource Manager as a response to the Application Master heartbeat",
        "SENT_FROM":"Juan Rodr\u00edguez Hortal\u00e1 <juan.rodriguez.hortala@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi submitted pull request url url change alternative proposal yarn notifying application master decommission node could help completing url could useful implementing functionality like example url spark able blacklist executor corresponding node transition decommissioning state would like hear feedback thanks juan rodriguez hortala"
    },
    "11015":{
        "ID":32792,
        "MESSAGE_ID":"DFAC055D-A356-44EB-91E7-993F732784BE@hortonworks.com",
        "PARENT_ID":32782.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"existence, technology",
        "BODY":"developer new feature hadoop sa committers mostly already committed targeting code deal failure retries unashamedly embraced java lambda expression production code backporting going traumatic term ide assisted code change resultant different source branch trunk worse going traumatic test jvms start moment starting worry whether bump window vm java keep eye akira work currently testing really java yetus branch internal test run door assume cdh ship soon allow rapid round trip time inevitable bug release compatibility tuned reported issue addressed certainly would like focus time broadly used version say move expect everyone given explicitly got backwards incompatible change seen people rushing layer qualified hbase hive spark mean big user rush move going maintain including security patch old version one issue patch bumping jar version incompatible new feature fix appropriate esp feature stabilisation whoever put hand release deserves support testing someone make really strong case backport feature branch backwards compatible going stop way le compelling steve note implicitly assuming timely door work included issue arriving fixed worry ship whether benefit maintaining whether best say move guess based effort test report andrew others unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11024":{
        "ID":32783,
        "MESSAGE_ID":"CAGC+2MsJhbLacK1Bk=VOpUG_UfweTveVRpHCn6u5W15d2M7LYA@mail.gmail.com",
        "PARENT_ID":32769.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Sean Mackrory <mackrorysd@gmail.com>",
        "TAGS":"existence",
        "BODY":"type testing rolling upgrade orchestration order direct implication testing done complete detail available hdfs trying get script automate test committed run jenkins hdfs follow order documentation see documentation indicate upgrade zkfc daemon done end also see documentation rolling upgrade yarn resourcemanagers first nodemanager basically following pattern used hdfs speak much app compatibility yarn etc rolling upgrade run terasuite hadoop continually upgrade sometime afterward incompatibility found fixed trunk quite ago part test working well quite already broken anywhere fix need bridging feature work hdfs also includes test data copied distcp webhdfs old new cluster regardless distcp job launched try test run us hdfs week part jira also looked protobuf discrepancy incompatibility one found fixed rest looked good"
    },
    "11025":{
        "ID":32782,
        "MESSAGE_ID":"582E3AE2-E314-4378-8F26-564A49F8E405@apache.org",
        "PARENT_ID":32770.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks comment zheng reply inline ga release apache hadoop community assume usage short term going storage optimization feature dedicated cluster make sure workload migrated right existing cluster upgraded place calling ga arun suresh also asked question earlier think really depend discover part migration user acceptance testing find major issue right folk jump directly one answering question also one goal starting thread collectively need conclude okay okay longer putting new feature work general line release move focus thanks vinod unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11037":{
        "ID":32770,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B66662BB22A3@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":32769.0,
        "SUBJECT":"RE: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"thanks vinod thought good concern overall perspective hand discussed quite potential user look like interested erasure coding feature major scenario back large volume data save storage cost might run analytics workload using hive spark impala kylin new cluster based version must first time understand might gap would migrate workload incrementally major analytics workload performed lot benchmark integration test well side believe find issue fixed downstream project thought release ga accelerate progress expose issue could wait matured perfectness sound good consideration thinking hadoop user example using whatever version would first upgrade bridging release use bridge support upgrade version sure hand might tend look guide support doc upgrade frankly speaking working bridging release targeting feature attractive contributor overall final minor release branch good also give time evolve mature therefore look would work two release line meanwhile time would like option suggest focus recent release thought regard kai"
    },
    "11038":{
        "ID":32769,
        "MESSAGE_ID":"F340FE95-3ED0-412E-8BF5-6F3CD94264C7@apache.org",
        "PARENT_ID":32764.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"existence",
        "BODY":"main goal bridging release ease transition stuff guaranteed broken top head one biggest area application compatibility folk move apps binary compatible source compatible need change upgrade bunch work atleast make old apps source compatible mean relooking api compatibility impact migrating application revist un deprecate old apis un delete old apis write documentation apps migrated work line bridging release hand deprecation apis undeleted may already done many place need make sure fill gap area recall old day config migration many configs deprecated deleted need documentation help folk move also need deprecation bridging release configs undeleted mentioned rolling upgrade good exactly outline type testing rolling upgrade orchestration order direct implication testing done story downgrade copying data cluster cluster work already broken anywhere fix need bridging feature work vinod unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11043":{
        "ID":32764,
        "MESSAGE_ID":"CAGB5D2ZamefwL_ZkeuvzfMgiE6sqzwTPkVsSPEpV1cC5UaMzcA@mail.gmail.com",
        "PARENT_ID":32755.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"known gap need bridging rollback mentioned nm rollback issue familiar anything else external discussion documented known issue best andrew"
    },
    "11052":{
        "ID":32755,
        "MESSAGE_ID":"CAGCyb57KDZxj-=11cB_qvwdH8ktC9fjrn6zBUFDfSs=Uw8LmzQ@mail.gmail.com",
        "PARENT_ID":32751.0,
        "SUBJECT":"Re: [DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Arun Suresh <asuresh@apache.org>",
        "TAGS":"existence",
        "BODY":"thanks starting discussion vinod agree bad idea would prefer given atm branch still close branch good time make collective decision lock commits branch think also clearly define bridging release assume mean following user wanting move must first upgrade bridging release first upgrade release regard state store upgrade least nm state store bridging state store aware new key implicit assumption would user rollback release bridging release old release use opportunity clean deprecated api even want consider separate bridging release line cheer arun"
    },
    "11053":{
        "ID":32754,
        "MESSAGE_ID":"CAKtuutF70UbPwYjt+ObhGe1kvLH3GYOC+M4O0v-mxxgxcdnE=w@mail.gmail.com",
        "PARENT_ID":32741.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi sanjay read doc clearly see value ozone use case agree stack others question part hadoop clear detail jira url thanks konstantin"
    },
    "11056":{
        "ID":32751,
        "MESSAGE_ID":"D19A5D7E-582D-4D4F-93E4-23820154019A@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] A final minor release off branch-2?",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"existence",
        "BODY":"hi ga around corner tx push andrew rc tx arun subru tx junping think high time discussion manage developmental bandwidth line line ga go two parallel major release line last time situation back jump parallel release implies overhead decision branch merges back port right already backports potentially month ga many line going used bunch large site time user migrate ga overnight support two parallel line propose start thinking fate branch idea one final release help user migrate includes change older line bridge compatibility issue upgrade issue layout change tooling etc option think make last minor release branch maintenance release bridge continue make maintenance release necessary new feature obviously go line feature go maint line create new release new feature bridging release continue make maintenance release necessary new feature bridging change go line continue making branch release postpone discussion later leaning towards lesser extent willing hear otherwise obviously mean blocking minor release branch obviously interested committer pmc roll sleeve create release plan release need acknowledge version cheap figure community bandwidth split overall thanks vinod proposal obviously force everyone go one direction nudging community figure focus major part bandwidth one line similar concern parallel impending possibility spreading thin much worse going pps bad choice already seeing user adoption splintering two line etc coexisting etc revisit mad phase year ago security coexisting etc"
    },
    "11063":{
        "ID":32744,
        "MESSAGE_ID":"056ABBF8-A58F-4145-AB81-3C068103E92E@apache.org",
        "PARENT_ID":32739.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"existence",
        "BODY":"expected case look like lot value splitting hdfs code smaller module definitely newer code like ozone yarn initially concern module proliferation looking back observation done far good expected starting fact client server modularized independently well server server far cleaner contract hadoop world thanks vinod"
    },
    "11065":{
        "ID":32742,
        "MESSAGE_ID":"CAMs9kVgJA3Z3rc47wOxqmY55PMvrsE6=q_7zUUFSeYkna_OoMQ@mail.gmail.com",
        "PARENT_ID":32741.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Ravi Prakash <ravihadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk thank sharing design doc tremendous amount work gone ozone grateful atleast someone trying drastically improve hdfs meeting discus merge could please also invited ever thought distributing namenode metadata across node dynamically based load rpc time unlike static federation also think major feature hdfs still lack lot user ask bcp disaster recovery bring see choice proposed design would implication later thanks ravi"
    },
    "11066":{
        "ID":32741,
        "MESSAGE_ID":"65FC6B59-8D2A-44E5-9933-3E285BA1F0CB@gmail.com",
        "PARENT_ID":32684.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"konstantine thanks comment question feedback attached document hdfs jira explains design scaling hdfs ozone pave way towards full solution url sanjay"
    },
    "11068":{
        "ID":32739,
        "MESSAGE_ID":"4B240DB4-97F3-416F-9812-EE78604C3FA4@effectivemachines.com",
        "PARENT_ID":32737.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Allen Wittenauer <aw@effectivemachines.com>",
        "TAGS":"technology",
        "BODY":"given completely different set config file ozone site xml etc package name classpath classpath really seem want part hdfs much le hadoop plus hadoop hdfs project hadoop hdfs already battle zone come unit test dependency etc minimum least using maven module lot bit generates maven jar split functionality build test time higher level feel lot like design decision made around yarn native service feature either part hdfs pick one incredibly confusing everyone outside branch unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11099":{
        "ID":32708,
        "MESSAGE_ID":"CAGB5D2bBuH=XkyUSTX1Sp=L3dr4oOi5-Sf1OY-BO5FxxgCPKOw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"2017-10-31 Hadoop 3 release status update",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"url update lot progress towards ga look track cutting rc week ran version script check branch match jira fixed thing also checked changelog release note look reasonable highlight resource type vote passed merged branch shortly three blocker dashboard actively revved red flag still need validate resource type ready go merged previous tracked ga blocker resolved dropped change executiontype yarn add documentation container update api resolved arun got patch review wangda haibo reservationsystem yarn document configuration reservationsystem fairscheduler resolved yufei subru got rolling upgrade yarn support rolling upgrade resolved ray resolved since think sufficiently complete erasure coding hdfs erasure coding system policy state correctly saved loaded real cluster restart resolved resolved one incorporate hdfs ga blocker rolling upgrade hdfs support rolling upgrade xpatch available asked sean downgrade blocker erasure coding hdfs ecadmin listpolicies always show systemerasurecodingpolicies state disabled patch available actively worked reviewed soon hdfs support erasurecoding section oiv xml reversexmlpatch available waiting hdfs asked work concurrently feature merged ga erasure coding testing still ongoing cloudera new bug found recently closing remaining blocker ga classpath isolation hadoop hadoop document downstream client make use new shaded client artifact open seems unlikely make compat guide hadoop hadoop create downstream developer doc compatibility guideline patch available patch actively revved reviewed robert anu posted big review hadoop create end user documentation compatibility guideline patch available patch yet tsv alpha merged problem thus far image smile api based scheduler configuration yarn orgqueue easy capacityscheduler queue configuration management resolved merged problem thus far image smile hdfs router based configuration hdfs router based hdfs federation resolved merged problem thus far image smile resource type yarn extend yarn resource model easier resource type management profile resolved vote passed daniel currently mechanic merging need also perform final validation post merge dropping unmerged feature section since letting anything else point"
    },
    "11110":{
        "ID":32697,
        "MESSAGE_ID":"CACRbFygStav+PRwUOcu6GniHs8YeuhnTErBhOc32SiZML7pkkw@mail.gmail.com",
        "PARENT_ID":32696.0,
        "SUBJECT":"Re: [DISCUSS] Feature Branch Merge and Security Audits",
        "SENT_FROM":"larry mccay <lmccay@apache.org>",
        "TAGS":"process, property",
        "BODY":"new revision incorporated addition mike added default tag item considered secure default setting hoping close actual list shortly move discussing meta point require completion checklist whether included doc feature moving forward comment gotten offline included concern targeting merge request would capture subset new feature may actually affect decision use branch certainly something would want time want intrusive development cycle bog patch fix bug rate let close checklist first thanks tech preview security audit feature merged without full security model coverage need base line assurance introduce new attack vector deployment actual release even built trunk uis new uis added merge enabled accessible default hosted existing process part new process server new process server launched default apis new rest apis added merge enabled default rpc based apis added merge enabled default secure cluster feature disabled completely secure deployment justification available cf dependency introduced merge checked known issue ga readiness security audit point merging full partial security model implementation let inventory covered model point whether future merges required full uis sort validation done accepted user input default pointer code would appreciated explicit protection built pointer code would appreciated cross site scripting default cross site request forgery default click jacking frame option default using cooky secure flag cooky turned default using cooky httponly flag turned default sort authentication required access uis default kerberos tgt renewal accounted spnego support delegation token proxy user acl authorization available determining access capability uis either viewing modifying data related process default input ultimately persisted configuration executing command process validated persistence default uis support trusted proxy pattern doas impersonation tl ssl support default possible configure tl protocol cipher suite possible configure support http strict transport security hsts access uis audited user logged ip address etc default rest apis rest apis support trusted proxy pattern doas impersonation capability explicit protection built cross site scripting default cross site request forgery csrf default xml external entity xxe default used authentication hadoop auth module default separate process http resource uis rest endpoint part existing process tl ssl support default possible configure tl protocol cipher suite possible configure support http strict transport security hsts default new cli command client accessing rest apis authorization enforcement point within rest apis access rest apis audited user accessed resource ip address etc default encryption support encryption persisted data km hadoop key command used key management km interaction proxy user cryptography hard obscure pitfall crypto computer science standard cryptographic library always used work attempt create encryption scheme protocol novel unique use normal crypto dragon even normal looking use cryptography must carefully reviewed need random bit security purpose session token cryptographic key need cryptographically approved place acquire said bit use securerandom class default configuration password secret added configuration accessed via configuration getpassword allow provisioning credential provider setting used launch docker container command execution etc ha provision ha single point failure cf dependency need checked known issue merge however want list cf fixed released yet dependency checked cf log message write secret data log file sound obvious mistake happen log password key security related token sensitive configuration item log user supplied data ever even snippet user data error parsing line text xxxx xxxxs user data never know might contain secret like credit card number secure default strive secure default mean product ship secure state human tuning put insecure state exhibit mongodb ransomware fiasco insecure default mongodb installation resulted completely open instance mongodb open internet attacker removed encrypted data left ransom note behind want sort notoriety hadoop granted always possible turn security feature example kdc set order enable kerberos setting configuration shipped default secure state"
    },
    "11111":{
        "ID":32696,
        "MESSAGE_ID":"CACRbFyjkWcnAytra6npAwJ3dxmHVP+i8pz9+ZhsKvqPkfXzHAQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [DISCUSS] Feature Branch Merge and Security Audits",
        "SENT_FROM":"larry mccay <lmccay@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks example mike think actually added checklist place best practice raise interesting point item enabled default maybe indicating throughout list make sense ask description secure default consideration end work new revision morning"
    },
    "11120":{
        "ID":32687,
        "MESSAGE_ID":"AF5D5E12-CA5B-4720-ADAF-20FAA2049729@hortonworks.com",
        "PARENT_ID":32684.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Jitendra Pandey <jitendra@hortonworks.com>",
        "TAGS":"existence, property",
        "BODY":"hi konstantin thank taking time review ozone appreciate comment question agree completely believe ozone attempt address issue hdfs let look number object problem ozone directly address scalability number block introducing storage container hold multiple block together earlier effort complicated fact block manager namespace intertwined hdfs namenode effort past separate block manager namespace hdfs ozone address problem cleanly separating block layer separation block layer also address file directory scalability free blockmap namenode separate block layer relief namenode handling block report ibrs heartbeat replication monitor etc thus reduces contention fsnamesystem lock significantly reduces gc pressure namenode improvement greatly help rpc performance namenode believe namenode leverage ozone storage container layer however also big effort would like first block layer stabilized ozone taking however would certainly support community effort fact brought last bof session summit big data evolving rapidly see customer needing scalable file system object store like block store docker vms ozone improves hdfs two way address throughput scale issue hdfs enriches newer capability took quick look core code ozone cloc command report line functionality change java patch also brings web framework code like angular brings bunch cs file contribute size patch rest test documentation change hope address concern best regard jitendra"
    },
    "11123":{
        "ID":32684,
        "MESSAGE_ID":"CAKtuutEmv83uTj4UqS-5uotEPHOm1A9c8vGJOR=Obf4KfvnLjg@mail.gmail.com",
        "PARENT_ID":32579.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"existence",
        "BODY":"hey guy interesting question whether ozone part hadoop two main reason think close sub task mb code change sizable community behind look like whole new project essentially new storage system different hdfs architecture separate like apis really great world sure need distributed file system clear ozone co exist hdfs roof ozone probably first step rebuilding hdfs new architecture next step presumably hdfs hdfs design doc new architecture never published assume based presentation personal communication idea use ozone block storage implement namenode store partial namesapce memory bulk cold data persisted local storage architecture make wonder solves hadoop main problem two main limitation hdfs throughput namespace operation limited number rpcs namenode handle number object file block system maintain limited memory size namenode rpc performance important hadoop scalability object count read rpcs main priority new architecture target object count problem expense rpc throughput seems wrong resolution tradeoff also based use pattern large cluster read data write cold data small fraction must cached summarize ozone big enough system deserve project architecture ozone lead seem solve intrinsic problem current hdfs post opinion ozone jira convenient discus reference thanks konstantin"
    },
    "11181":{
        "ID":32626,
        "MESSAGE_ID":"CAF40oFrXKv_WSeVNFGmre7F3Ttr-_mNpWVXcp_oVZcbwswytKg@mail.gmail.com",
        "PARENT_ID":32600.0,
        "SUBJECT":"Re: Integrating cloud and 3rd party security solutions",
        "SENT_FROM":"Lutaya Shafiq Holmes <lutayashafiq@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank much"
    },
    "11197":{
        "ID":32610,
        "MESSAGE_ID":"CACRbFyhsBe6SUw8dEDRd4FHK8FFnj81fgwhw-FWnr3KyLKSUOA@mail.gmail.com",
        "PARENT_ID":32608.0,
        "SUBJECT":"Re: [DISCUSS] Feature Branch Merge and Security Audits",
        "SENT_FROM":"larry mccay <lmccay@apache.org>",
        "TAGS":"not-ak",
        "BODY":"adding security hadoop list well"
    },
    "11199":{
        "ID":32608,
        "MESSAGE_ID":"CACRbFyg8PrRmS-_rfM9rixDzQjP2BJTwG+ctMZ69rV0uy=KPnA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Feature Branch Merge and Security Audits",
        "SENT_FROM":"larry mccay <lmccay@apache.org>",
        "TAGS":"process",
        "BODY":"given maturity hadoop point would like propose start explicit security audit feature merge time reason think good place time review represents specific snapshot feature stand whole mean easily identity attack surface given feature identify security gap need fixed release carry feature considered ready extreme case block feature merging baseline security coverage achieved folk interested able review security aspect scale every iteration every jira review checklist follow pointer specific area interest provided impromptu security audit checklist discus thread merging ozone hdfs trunk want pick particularly think good way bootstrap audit process figure incorporate without intrusive question provided mix general question could standard checklist provide along merge thread specific read ozone excellent doc provided consider subset following proposal general checklist perhaps shared document created iterate list fine tune thought additional datapoints collect etc thanks larry uis see least two uis storage container manager key space manager number typical vulnerability find uis sort validation done accepted user input pointer code would appreciated explicit protection built pointer code would appreciated cross site scripting cross site request forgery click jacking frame option sort authentication required access uis authorization available determining access capability uis either viewing modifying data affecting object store related process uis built proxying mind leveraging forwarded header input ultimately persisted configuration executing command process uis support trusted proxy pattern doas impersonation tl ssl support rest apis rest apis support trusted proxy pattern doas impersonation capability explicit protection built cross site scripting cross site request forgery csrf xml external entity xxe used authentication hadoop auth module separate process http resource uis rest endpoint part existing hdfs process tl ssl support new cli command client access rest apis bucket level api allows setting acls bucket authorization required restrictive acl set creation bucket level api allows deleting bucket assume dependent acls based access control bucket level api list bucket return key paging available storage level apis indicate signed user authorization refer exactly object level apis indicate acl support bucket owner read write acl apis bucket level meaningless rest client know ozone handler connect missing well known nn type endpoint architecture doc somewhere encryption support encryption persisted data km hadoop key command used key management configuration password secret added configuration accessed via configuration getpassword allow provisioning credential provider setting used launch docker container command etc ha provision ha leveraging existing ha capability hdfs storage container manager spof see ha listed future work architecture doc still open issue"
    },
    "11201":{
        "ID":32606,
        "MESSAGE_ID":"BB2EF249-09F8-4AD1-A08C-356799549B57@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: \u7b54\u590d: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi steve addition everything weiwei mentioned chapter user guide really want drill rest protocol might want apply patch build ozone url generate open api url url based specification accessed ksm ui json file unfortunately patch still code review stage apply patch build thanks anu"
    },
    "11202":{
        "ID":32605,
        "MESSAGE_ID":"031AA46F-2F5A-4371-8DDC-210CF00D9F0F@hortonworks.com",
        "PARENT_ID":32602.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"property",
        "BODY":"sizable merges hadoop would like start security audit order initial idea attack surface protection available known threat sort configuration used launch process etc dug architecture document middle list nice doc intend try make generic check list like security audit future lot tried also direct specific question doc well uis see least two uis storage container manager key space manager number typical vulnerability find uis sort validation done accepted user input pointer code would appreciated explicit protection built pointer code would appreciated cross site scripting cross site request forgery click jacking frame option sort authentication required access uis authorization available determining access capability uis either viewing modifying data affecting object store related process uis built proxying mind leveraging forwarded header input ultimately persisted configuration executing command process uis support trusted proxy pattern doas impersonation tl ssl support rest apis rest apis support trusted proxy pattern doas impersonation capability explicit protection built cross site scripting cross site request forgery csrf xml external entity xxe used authentication hadoop auth module separate process http resource uis rest endpoint part existing hdfs process tl ssl support new cli command client access rest apis bucket level api allows setting acls bucket authorization required restrictive acl set creation bucket level api allows deleting bucket assume dependent acls based access control bucket level api list bucket return key paging available storage level apis indicate signed user authorization refer exactly object level apis indicate acl support bucket owner read write acl apis bucket level meaningless rest client know ozone handler connect missing well known nn type endpoint architecture doc somewhere encryption support encryption persisted data km hadoop key command used key management configuration password secret added configuration accessed via configuration getpassword allow provisioning credential provider setting used launch docker container command etc ha provision ha leveraging existing ha capability hdfs storage container manager spof see ha listed future work architecture doc still open issue unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11204":{
        "ID":32603,
        "MESSAGE_ID":"PS1PR04MB10528DE5D32CB70290B7ECBDD4430@PS1PR04MB1052.apcprd04.prod.outlook.com",
        "PARENT_ID":32602.0,
        "SUBJECT":"\u7b54\u590d: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Yang Weiwei <cheersyang@hotmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi steve code available hdfs feature branch public git repo sure public api object store design doc us common syntax believe compliance find rest api doc example usage commandline api look forward feedback weiwei steve loughran yang weiwei hdfs dev hadoop apache org mapreduce dev hadoop apache org yarn dev hadoop apache org common dev hadoop apache org discussion merging hdfs object store ozone trunk wow big piece work pr branch github rendered doc look made public api change related object store probably something opinion implementation detail thanks dev cluster docker hadoop apache software foundation cwiki apache org first us much smaller common image contains hadoop second real hadoop built source dist director"
    },
    "11205":{
        "ID":32602,
        "MESSAGE_ID":"10A9CBC4-E566-4B54-8DCE-5CF1B5DEC426@hortonworks.com",
        "PARENT_ID":32579.0,
        "SUBJECT":"Re: [DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"wow big piece work pr branch github rendered doc look made public api change related object store probably something opinion implementation detail thanks unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11207":{
        "ID":32600,
        "MESSAGE_ID":"760e73c6-238e-8c11-2eee-bf7911ce9316@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Integrating cloud and 3rd party security solutions",
        "SENT_FROM":"Stefan Podkowinski <spod@apache.org>",
        "TAGS":"property",
        "BODY":"recently looking could improve security cassandra integrating external solution interesting project vault also growing list security related apis offered cloud provider today cassandra already customized using different authenticator also really nice role based access model part cassandra simply painful work certificate management ssl anything related local keystores one want deal would cool automated build certificate management instead got started work cassandra cloud provider solution like vault also offer key management feature could use data rest encryption identity service authentication going start working idea could integrate vault certificate management data rest encryption authentication would really like see support cloud platform well would great hear opinion suggestion especially people already worked aws km aws cert identity manager related gc azure service also improve make cassandra secure default general url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11228":{
        "ID":32579,
        "MESSAGE_ID":"SG2PR04MB10566CE348080FB62CDC73A2D4420@SG2PR04MB1056.apcprd04.prod.outlook.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSSION] Merging HDFS-7240 Object Store (Ozone) to trunk",
        "SENT_FROM":"Yang Weiwei <cheersyang@hotmail.com>",
        "TAGS":"existence",
        "BODY":"hello everyone would like start thread discus merging ozone hdfs trunk feature implement object store co exist hdfs ozone disabled default tested ozone cluster size varying data node merge payload includes following service management script object store apis exposed via rest rpc master service uis command line interface pluggable pipeline integration ozone file system hadoop compatible file system implementation pass filesystem contract test corona load generator ozone essential documentation added hadoop site version specific ozone documentation accessible via service ui docker support ozone enables faster development cycle build ozone run ozone using docker please follow instruction wiki page url built passionate diverse community drive feature development team achieved significant progress past year since first jira hdfs opened oct far resolved almost jiras contributor committers different country affiliation also want thank large number community member supportive effort contributed idea participated design ozone please share thought thanks weiwei yang"
    },
    "11239":{
        "ID":32568,
        "MESSAGE_ID":"B52FB656-A443-4278-B783-917C7B02455B@jonhaddad.com",
        "PARENT_ID":32564.0,
        "SUBJECT":"Re: Weekly Cassandra Wrap-Up: Oct 16 Edition",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"regarding stress test willing share starting repo keep bunch different stress profile id like start running release agree push anyone stress test willing share please get touch unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11241":{
        "ID":32566,
        "MESSAGE_ID":"CA+EmchmDd+hXC5cEigqi2bM9PrgVEvrvdNLOTyvZEMfRFa10Nw@mail.gmail.com",
        "PARENT_ID":32564.0,
        "SUBJECT":"Re: Weekly Cassandra Wrap-Up: Oct 16 Edition",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"technology",
        "BODY":"also learned url generate flame graph easily without requiring restart agent work openjdk oracle"
    },
    "11243":{
        "ID":32564,
        "MESSAGE_ID":"CA+Emchkvq+OdgcxFLuFxZ_vnebyFtm+h0FUBN+bhu-4rMFtHsQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Weekly Cassandra Wrap-Up: Oct 16 Edition",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"process, property",
        "BODY":"got feedback last week try monday morning let see nudge people action week released dev list surprise anyone seen vote release notification people working directly cassandra every day probably aware number nature fix version aware change list huge fix important week wrap really reflection size two release changelogs one advantage cassandra project size user base know accurate count survey laughable know order thousand probably ten thousand company huge number instance willing speculate know least hundred thousand may well million historically best stabilizer release people upgrading unusual use case finding bug developer anticipated therefore test exist edge case reporting next release would slightly better one chicken egg problem pretty obvious lot spending lot time making thing better want use email ask favor part tried yet please spin test cluster would better ok need thousand node cluster weird stuff seen post world deal data cluster size grab prod data throw test cluster add node remove node tell work please run stress workload test cluster even minute purpose two fold like help find edge case seen also help identify hole stress coverage ticket add udts stress url lwt url ideally stress profile read writes try actually model schema query behavior use static column use collection unable model use case deficiency stress open jira thing break open jira work perfectly interested seeing stress yaml result please send privately spam list somehow able run stress hardware spare cluster profiling live cluster also incredibly useful tlp note generate flame graph url saw one example cluster really surprised version use case know heavily profiled probably version use case nobody ever run much way profiling running openjdk prod able safely attach profiler generate flame graph please send privately please think whole list need copy hope build corpus real world use case real current state via profiling leverage make testing performance better going forward get much way response either try send summary next week email jeff"
    },
    "11269":{
        "ID":32538,
        "MESSAGE_ID":"0b49a9b4-d6fa-f032-4806-89ba4bc16f61@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.1 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11270":{
        "ID":32537,
        "MESSAGE_ID":"49df8d9d-5989-58d3-9fd3-aba825cbbc79@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.15 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11306":{
        "ID":32501,
        "MESSAGE_ID":"CAPw3+Dgc2Ujt1TScNjU5_qF8JKccJM1o4fi0-jPYR_RdT7-DGA@mail.gmail.com",
        "PARENT_ID":32500.0,
        "SUBJECT":"Re: Cassandra pluggable storage engine (update)",
        "SENT_FROM":"Dikang Gu <dikang85@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi duyhai good point moment see anything really prevent one storage engine type per table using one rocksdb instance per table anyway however want simple thing first easier storage engine per keyspace development internal deployment revisit choice strong need storage engine per table thanks dikang"
    },
    "11307":{
        "ID":32500,
        "MESSAGE_ID":"CABNXB2Bt-=-G6ni90kGi=LSQVATUMMz6xtZmfFLWQc1fkCfy5A@mail.gmail.com",
        "PARENT_ID":32499.0,
        "SUBJECT":"Re: Cassandra pluggable storage engine (update)",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"existence",
        "BODY":"excellent doc thanks update dikang question design choice technical reason specify storage engine keyspace level rather table level overly complicated move table sharing storage engine keyspace make table organization strongly tied technical storage engine choice rather functional splitting regard"
    },
    "11308":{
        "ID":32499,
        "MESSAGE_ID":"CAPw3+DjkkVgpDZELspvtEsRBoricimwJyGFTd_Z-F2etCLneMQ@mail.gmail.com",
        "PARENT_ID":32497.0,
        "SUBJECT":"Re: Cassandra pluggable storage engine (update)",
        "SENT_FROM":"Dikang Gu <dikang85@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi blake great question yeah implement encoding algorithm could encode data type byte array keep sorting order implementation based orderly lib used hbase url repair supported yet still working figure work need done support repair incremental repair thanks dikang"
    },
    "11310":{
        "ID":32497,
        "MESSAGE_ID":"etPan.59d546f0.67f42878.5a2@apple.com",
        "PARENT_ID":32496.0,
        "SUBJECT":"Re: Cassandra pluggable storage engine (update)",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"existence",
        "BODY":"hi dikang cool stuff question based presentation ngcc seems like rock db store thing byte order mean code make existing type byte comparable clustering order implementation dependent also see anything draft api seems support splitting data set arbitrary category ie repaired unrepaired data living token range support incremental repair planned thanks blake"
    },
    "11311":{
        "ID":32496,
        "MESSAGE_ID":"CAPw3+DgbLB8_qVCm495C=fV=A20up7ujCnQWM4x+zah2BLx8bw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra pluggable storage engine (update)",
        "SENT_FROM":"Dikang Gu <dikang85@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hello developer previous email url presented instagram kicking project make storage engine pluggable modern database like mysql mongodb etc user able choose suitable storage engine different work load use different feature addition pluggable storage engine architecture improve modularity system help increase testability reliability cassandra month development testing like share work done including first draft version storage engine api first version rocksdb based storage engine storage engine api draft version proposed url contains apis read write request streaming table management storage engine related functionality like data encoding decoding format disk data read write compaction etc taken care storage engine implementation storage engine class instance class stored keyspace instance column family within keyspace share one storage engine instance storage engine instance created cassandra sever issue command engine instance performance data storage retrieval task opening column family managing column family streaming config storage engine different keyspaces still open discussion one proposal add storage engine option create keyspace cql command potentially overwrite option per node config file api implemented new storage engine based rocksdb called rocksengine long term want support existing feature rocksengine want build progressive manner first version rocksdbengine support following feature non nested data typestable schemapoint queryrange querymutationstimestampttldeletions cell tombstonesstreaming supported following feature first version yet multi partition querynested data typescountersrange tombstonematerialized viewssecondary indexessasirepair moment implemented feature deployed shadow cluster using shadowing traffic production use case saw read latency drop compared prod cluster detailed metric url need feature existing storage engine please keep using existing storage engine want predictable lower read latency also feature supported rocksengine enough use case rocksengine could fit work finished want work together community make happen presented work ngcc last week also pushed beta version pluggable storage engine instagram github cassandra repo rock branch url based please feel free play download follow instruction url try test environment feedback valuable thanks dikang"
    },
    "11337":{
        "ID":32470,
        "MESSAGE_ID":"CADectgZLLey=TL_wjY5AEYHAYS71gp2+pwWjsJmFjTyggUzmPA@mail.gmail.com",
        "PARENT_ID":32435.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Mick Semb Wever <mick@thelastpickle.com>",
        "TAGS":"process",
        "BODY":"approach far favourite thanks josh flag name cdc enabled simple without adjective imply experimental beta anything like make life easier operator developer also fond apache project often vote release well stability flag alpha beta ga general availability url url given importance database would keen see attached community agreed quality reference going release also substantial new feature yet reach ga downloads page could provide table something like url one idea throw hijack thread bit could even quality tag release go long way user trust especially really humble use ga appropriately example perfectly happy using beta production see community otherwise good process place strong testing staging resource take advantage kurt implied many user indeed smart wise enough know safely test cautiously use even alpha feature production anyway without idea yaml flag name use adjective could address kurt concern pulling rug foot existing user flag small improvement suitable minor release must read news txt even patch upgrade documentation making explicit along user feel returning feature alpha beta mode actually improving community quality assurance documentation mick"
    },
    "11372":{
        "ID":32435,
        "MESSAGE_ID":"CAPH+nLObT-TozXA_v8uDrT0Q3_4DLJ5wW9NLgbRZTzhdq+yxuw@mail.gmail.com",
        "PARENT_ID":32427.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"went route incredibly wary changing cl code wanted shield non cdc user risk reasonably could know outstanding issue feature call question distinguish new feature consider stable scope constrained testing coverage etc new feature admittedly experimental well determining long something remains experimental point remove yaml gate keeping warning instance sasi seen much development long point address marcus question consider experimental feature atrophied remove mean user took plunge using feature production stable use case also going introduce complexity risk code base experimental feature later pull much static state project lot design precedent code base inheritance coupling etc exactly add completely isolated cleanly abstracted feature code base remove risk free later"
    },
    "11381":{
        "ID":32426,
        "MESSAGE_ID":"CAA=6J08vQUSqJKR_1Fo0v1pJWR1PfNq076odMD9SLZSThMiyaA@mail.gmail.com",
        "PARENT_ID":32424.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"experimental feature flag yaml file far better choice operator explicit opt dangerous feature would greatly help protect new user well plenty user ignore batch size warning tombstone warning etc soft warning approach would achieve goal original proposal"
    },
    "11383":{
        "ID":32424,
        "MESSAGE_ID":"CA+N2F5fgUOkUxSTLFKAiuf9sP=DnUV_2j530pbeUERmO+F8gPw@mail.gmail.com",
        "PARENT_ID":32419.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Voytek Jarnot <voytek.jarnot@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"user cassandra dev perspective welcome would recommend similarly identifying experimental feature describe desc cqlsh output well"
    },
    "11386":{
        "ID":32421,
        "MESSAGE_ID":"etPan.59d2b0d7.2b16117d.406@apple.com",
        "PARENT_ID":32419.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Aleksey Yeshchenko <aleksey@apple.com>",
        "TAGS":"not-ak",
        "BODY":"yep would nice addition opt flag yaml operator stricter warning ay"
    },
    "11387":{
        "ID":32420,
        "MESSAGE_ID":"etPan.59d2b098.26e2feb0.5a2@apple.com",
        "PARENT_ID":32419.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"not-ak",
        "BODY":"yes understand saying point making log still apply possible driver object mapper handle query schema change developer rarely open cqlsh also uncommon schema change done different group developer writing application"
    },
    "11388":{
        "ID":32419,
        "MESSAGE_ID":"25D1DF0B-BA83-4E7F-BC97-D1731091AAC2@datastax.com",
        "PARENT_ID":32414.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"blake saying put something log talking warn actually showing cqlsh issue native protocol warn cqlsh print console front result query url example sasi would look something like cqlsh create custom index sasi table using classpath warning sasi index enabled sasi table sasi still experimental take extra caution using production cqlsh jeremiah"
    },
    "11390":{
        "ID":32417,
        "MESSAGE_ID":"etPan.59d2aba0.46e921f3.406@apple.com",
        "PARENT_ID":32407.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Aleksey Yeshchenko <aleksey@apple.com>",
        "TAGS":"not-ak",
        "BODY":"different allows operator set boundary rather rely user right thing ideally would flag given state mv design implementation id argue default nope operator warning cqlsh developer talking throwing manage address issue couple release least consider eventually least url need addressed going ay"
    },
    "11392":{
        "ID":32415,
        "MESSAGE_ID":"E2933E83-AE33-4034-89D1-3BB7EBF885D7@jonhaddad.com",
        "PARENT_ID":32414.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"developer also people able make decision keeping yaml mean operator disable developer maybe seeing warning keep mind everyone creates table cqlsh unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11393":{
        "ID":32414,
        "MESSAGE_ID":"etPan.59d2aa10.5b72c703.5a2@apple.com",
        "PARENT_ID":32407.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"not-ak",
        "BODY":"message materially different reach fewer people later people typically attentive log developer finding new warning log later could sometimes even deployed uncommon happened requiring flag reach everyone trying use mv soon start developing mv logging warning reach subset user point hopefully downside think flag polite"
    },
    "11400":{
        "ID":32407,
        "MESSAGE_ID":"CAPH+nLMSaQizaGnq=NyZWLn8wD52uHAJKJZ3Y0Mhm7S0khyViA@mail.gmail.com",
        "PARENT_ID":32401.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"nobody talking removing mv precisely true email thread point future consider removing code base unless gotten significant improvement well going yaml change requirement materially different barfing warning someone screen dev process use ddl mv end day question forceful want messaging cqlsh client print feature ready big bold letter going miscommunicate user feature ready much like sasi something code base certain use case apparently work fine might worth considering approach making boundary around use case rigid instead throwing baby bathwater"
    },
    "11406":{
        "ID":32401,
        "MESSAGE_ID":"CABNXB2BpQ3YV81LDt1K=wvBeNPFYh4pCrCE7Z11vHPt5eBhk_Q@mail.gmail.com",
        "PARENT_ID":32400.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ok flag enable mv la uda udf cassandra yaml fine initially understood wanted disable definitively maybe add explicit error message mv disabled someone try use something like mv disabled enable turn flag xxxx cassandra yaml user spend searching around"
    },
    "11407":{
        "ID":32400,
        "MESSAGE_ID":"8CD68EFB-037B-4738-87E7-95FFD4BA1548@jonhaddad.com",
        "PARENT_ID":32398.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"big difference removal protocol every single user use disabling feature objectively broken almost nobody using nobody talking removing mv want use enable trivially explicit option really ready general use claiming disabling default removal helpful conversation misleading let practical people likely put mv production right people new cassandra know better people using mv contributor project people actually wrote cassandra code patch push prod get submitted upstream fix something yes lot stuff requires production usage shake bug fine lie people say feature ready great way get reputation unstable fit production jon unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11409":{
        "ID":32398,
        "MESSAGE_ID":"CABNXB2DkWYCeigGBVYO=sFEiRBDzxpurVRr=_E8nnUuuUDT5Vw@mail.gmail.com",
        "PARENT_ID":32396.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would patch release disable mv create statement emit warning alter statement schema load explicitly enabled find pretty extreme existing feature sitting base code forbidden version xxx onward since start removing feature patch release forbidding create new mv removing feature defacto even thrift protocol gone long process deprecation removed start opening pandora box like next forbidding create sasi index removing vnodes mon oct pm jeremiah jordan jeremiah jordan gmail com"
    },
    "11411":{
        "ID":32396,
        "MESSAGE_ID":"CCD18707-A22D-4953-92EC-2882ADA280D3@gmail.com",
        "PARENT_ID":32388.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"emitting native protocol warning reduce visibility development process run create mv cqlsh print giant warning statement experimental feature think pretty visible development guess see blocking new one without flag set need careful need make sure problem someone using currently even edge case issue jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11419":{
        "ID":32388,
        "MESSAGE_ID":"etPan.59d27ef7.6eaf995f.5a2@apple.com",
        "PARENT_ID":32382.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"not-ak",
        "BODY":"yeah proposing disable mv existing cluster"
    },
    "11422":{
        "ID":32385,
        "MESSAGE_ID":"21B9DDB9-4C26-467D-BC5D-8A5EFFA1BDC9@jonhaddad.com",
        "PARENT_ID":32381.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"helped folk put mv prod without realizing got flag disabling feature default warn message would helped unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11423":{
        "ID":32384,
        "MESSAGE_ID":"0dd271f2-7e5e-8f38-1ea8-b2650b36b7cd@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Cassandra 3.11.1",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"propose following artifact release sha caabeaeadeacaaf git url artifact url staging repository url debian package available url vote open hour longer needed change txt url news txt url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11425":{
        "ID":32382,
        "MESSAGE_ID":"etPan.59d27e1f.3141160a.41e@apple.com",
        "PARENT_ID":32380.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Aleksey Yeshchenko <aleksey@apple.com>",
        "TAGS":"not-ak",
        "BODY":"idea check flag createviewstatement creation new mv succeed without flag flipped obviously disabling existing mv working minor would silly warning yes also emitted unconditionally ay"
    },
    "11426":{
        "ID":32381,
        "MESSAGE_ID":"etPan.59d27db0.514c271c.5a2@apple.com",
        "PARENT_ID":32380.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"existence",
        "BODY":"yeah sure emitting warning enough point super explicit bad thing happen use mv would patch release disable mv create statement emit warning alter statement schema load explicitly enabled emitting warning really reduces visibility need development process emitting warning protecting user run even rudimentary test upgrading cluster operator going blindly deploy database update prod without testing going poke eye something anyway whether mv flag something else make change clear news txt user list think best thing"
    },
    "11427":{
        "ID":32380,
        "MESSAGE_ID":"DABDA48E-6B99-4297-B785-BDC9E2F44C3A@gmail.com",
        "PARENT_ID":32376.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"existence",
        "BODY":"hindsight reason cut release got merged moving forward going start adding experimental flag thing would definitely put sasi list well sasi mv know adding flag cassandra yaml prevents use right way go would propose emit warn native protocol mechanism user alter create ever try use experiment feature probably system log well someone starting new development using get warning showing cqlsh hey thing used experimental proceed caution also log thing live cluster right would want someone upgrade cluster new patch release suddenly something may working function anyway need careful get put practice going retroactively jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11431":{
        "ID":32376,
        "MESSAGE_ID":"CAPH+nLO7kaJRLQTzT=nimtU=reVr3XB9ELvvF_fqqgbsb9FOVg@mail.gmail.com",
        "PARENT_ID":32375.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"major refactor like staggering amount extra work parallel write core component storage engine accessible parallel major based experimental flag branch think complexity code base two channel parallel would altogether different kind burden along making work take considerably longer argument modularizing change like however something get behind matter general principle discussed ngcc amount static state code base make aspirational goal rather reality often unfortunately looking get discussion appropriateness major refactors like nio messagingservice instance difference building new feature shielding code base user complexity reliability refactoring core component code base keep relevant"
    },
    "11432":{
        "ID":32375,
        "MESSAGE_ID":"074f3609-cb0f-6e48-5160-13e027c1d998@apache.org",
        "PARENT_ID":32366.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Dave Brosius <dbrosius@apache.org>",
        "TAGS":"not-ak",
        "BODY":"trigger"
    },
    "11438":{
        "ID":32369,
        "MESSAGE_ID":"etPan.59d119ea.26c4e6b.1b6e@apple.com",
        "PARENT_ID":32368.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"process",
        "BODY":"think presenting false dichotomy yes people interested taking risk still running probably people would put trunk prod packaged whole spectrum user operator competence sophistication sort spectrum would expect amount feedback experimental feature would function quality design implementation amount user interest getting feedback experimental feature probably poorly implemented one interested think labelling feature going kill user developer feedback loop probably slow pace feature development bit slowing anyway good thing going"
    },
    "11439":{
        "ID":32368,
        "MESSAGE_ID":"CABNXB2Cy9PsPfK1aqoaXkVb=zfFXKKP7MBB1xDUOdGixhFV=Uw@mail.gmail.com",
        "PARENT_ID":32367.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"process",
        "BODY":"basically saying even lot test never sure cover possible edge case real stamp production readiness experimental feature deployed various cluster various scenario use case phrasing blake totally idea foresee problem experimental flag nobody community use even dare play thus experimental feature never get chance tested break bug report bug fix iteration many time seen user ml asking version fit production answer always least major version behind current released major recommended released one fundamental issue lot folk community want take risk take conservative approach production fine perfectly understandable mean implicit contract os software software free exchange give feedback bug report improve completely broken let take example mv mv shipped considered stable nobody people us mv bug report bug chance get fixed problem last sasi many people really played thoroughly apart toy example cause consequence even blame design fundamentally architecture pretty solid question usage feedback suspect broken community qa feedback loop also explain partially failure tic toc release interpretation figure restore new feature community bug report strong feedback loop going face issue debate future"
    },
    "11440":{
        "ID":32367,
        "MESSAGE_ID":"etPan.59d10a0a.1af23e98.1b6e@apple.com",
        "PARENT_ID":32365.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"process",
        "BODY":"sure main issue case mv testing case seems design issue design work overly restrictive use case mv committed knowing issue seems real problem case mv sure think ever made experimental stage thinking experimental flag fit project going forward though disagree avoid adding experimental feature"
    },
    "11441":{
        "ID":32366,
        "MESSAGE_ID":"F85A887F-14CA-41DC-AFD0-ED7EC3ECF787@gmail.com",
        "PARENT_ID":32364.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"historical example anything would bet job first release udf uda incremental repair would yanked flag following sasi probably still experimental counter sort correctness issue originally longer true since rewrite vnodes least shuffle cdc api going change good cql say basically anything definitively say feature going work build product company around world trying make determination insight active committers transition could define fixed number release dev vote think find something applies experimental feature flexible probably best bet jeff jirsa unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11442":{
        "ID":32365,
        "MESSAGE_ID":"CABNXB2CJ+A-oi8Sn6hf=Rfinmnrw4yaxMqjowc0V0fCRfGgdJg@mail.gmail.com",
        "PARENT_ID":32364.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"transition one feature experimental state production ready state"
    },
    "11443":{
        "ID":32364,
        "MESSAGE_ID":"CA+1dbhPKi+CYv63aFzBkGYjS+SETYPieiW91vpDomXmgviP0qg@mail.gmail.com",
        "PARENT_ID":32359.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Marcus Eriksson <krummas@gmail.com>",
        "TAGS":"process",
        "BODY":"thinking try really hard avoid adding experimental feature experimental due lack testing right clear path making feature non experimental get removed path discussed dev might give visibility also struggling bit find good historic example would better experimental feature used think would good commit dtcs sort experimental flag would made dtcs better would better testing realise work commit course anyone good example feature would made sense commit behind experimental flag sasi might good example mv knew painful would really would gotten committed right marcus"
    },
    "11447":{
        "ID":32360,
        "MESSAGE_ID":"CAEPxca0RGZ6zRbGHu-tJE0mv3D-hs0A0EKQe1SvpVt6WP9Srgw@mail.gmail.com",
        "PARENT_ID":32359.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"marking experimental also making prop enable feature default think disabled"
    },
    "11448":{
        "ID":32359,
        "MESSAGE_ID":"D5441136-1491-41D3-9FFC-FA4C11B612AD@gmail.com",
        "PARENT_ID":32358.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"process",
        "BODY":"reviewer able suggest experimental warranted conversation dev jira justify transitioned experimental stable remove flag soon collectively confident feature behavior least correctness performance unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11449":{
        "ID":32358,
        "MESSAGE_ID":"CA+1dbhOyQc0+Ury6J1Qi2D63v8J6Uz5qXRzrhHg3XAF8EcX=yQ@mail.gmail.com",
        "PARENT_ID":32354.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Marcus Eriksson <krummas@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"marking mv experimental point future consider removing code base unless gotten significant improvement well probably need enforce kind process adding new experimental feature future perhaps mail like one dev motivating experimental marcus"
    },
    "11453":{
        "ID":32354,
        "MESSAGE_ID":"CAEPhM6VctPvj+aOHB6=qBZVmYK5rUCYikxYVZ_vje9f+PvvGLg@mail.gmail.com",
        "PARENT_ID":32346.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Vinay Chella <vchella@netflix.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"tried perf testing mv internally see good result hence paused usage tagging certain feature prod ready stable enough regard vinay chella"
    },
    "11454":{
        "ID":32353,
        "MESSAGE_ID":"CA+Emch=W_he1dZEKYzpfkMqQhUE-cK=LgVjKZpt1CCPGmtfkHQ@mail.gmail.com",
        "PARENT_ID":32341.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ben said willing consider thing deserve experimental flag well sasi come mind potential example"
    },
    "11457":{
        "ID":32350,
        "MESSAGE_ID":"CAHzWLgd8MugxLYo1KDuWcdK5d8ab8QMNhp5Ejibjf1ruc=b5UQ@mail.gmail.com",
        "PARENT_ID":32345.0,
        "SUBJECT":"Re: [DISCUSS] Merging API-based scheduler configuration to trunk\/branch-2",
        "SENT_FROM":"Jonathan Hung <jyhung2357@gmail.com>",
        "TAGS":"existence",
        "BODY":"thanks andrew larry feedback hoping start merge vote early next week deadline suppose meeting deadline depends outcome discus thread appreciate question jira answer question larry feature extending existing yarm rm rest api yes feature add another endpoint yarn rm rest api user send configuration change request enabled api behavior disabled api called nothing happens return http bad request implement trusted proxy pattern proxy able impersonate user importantly dictate proxy would allowed impersonate admin api assume required right pluggable policy control user make configuration change see yarn default policy allow yarn admins user yarn admin acl make change also implementation relaxed policy allows admins queue make configuration modification queue sure answer question thanks jonathan hung"
    },
    "11461":{
        "ID":32346,
        "MESSAGE_ID":"CAA=6J08+wxj8eKyXWnW4g=yFj4vzakvG6qOyBmF9x0MsDd90Yg@mail.gmail.com",
        "PARENT_ID":32342.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"fan introducing experimental flag general well"
    },
    "11462":{
        "ID":32345,
        "MESSAGE_ID":"CACRbFygMy8bJupvOxQubx2JHPexTn092Zk5JpcoF-rB8E=uAjA@mail.gmail.com",
        "PARENT_ID":32343.0,
        "SUBJECT":"Re: [DISCUSS] Merging API-based scheduler configuration to trunk\/branch-2",
        "SENT_FROM":"larry mccay <larry.mccay@gmail.com>",
        "TAGS":"process",
        "BODY":"hi jonathan thank bringing discussion would personally like see specific security review feature like especially one allow remote access configuration take look jira see whether come concern question would urge others give pas security perspective well addition couple question top head feature extending existing yarm rm rest api enabled api behavior implement trusted proxy pattern proxy able impersonate user importantly dictate proxy would allowed impersonate admin api assume required larry"
    },
    "11464":{
        "ID":32343,
        "MESSAGE_ID":"CAGB5D2Zx2yi6C12qXN7BDdaHpjhdu_oNaaSU_mOhYtd1sRARXA@mail.gmail.com",
        "PARENT_ID":32315.0,
        "SUBJECT":"Re: [DISCUSS] Merging API-based scheduler configuration to trunk\/branch-2",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi jonathan okay putting branch ga merged within next two week even though beta slipped month want stick targeted ga data nov st much possible course let sacrifice quality stability speed something ready let defer subru able review feature perspective would add confidence think immediately ready merging branch thanks andrew"
    },
    "11465":{
        "ID":32342,
        "MESSAGE_ID":"C33796A7-449A-4384-9F36-6365C93457AD@jonhaddad.com",
        "PARENT_ID":32341.0,
        "SUBJECT":"Re: Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Jon Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"much new feature general think clear line classify something production ready would nice would great committers using feature prod could vouch stability unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11466":{
        "ID":32341,
        "MESSAGE_ID":"etPan.59ce8c52.3c167a15.1b6e@apple.com",
        "PARENT_ID":null,
        "SUBJECT":"Proposal to retroactively mark materialized views experimental",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"existence",
        "BODY":"hi dev id like propose retroactively classify materialized view experimental feature disable default require user enable config setting using materialized view several issue make effectively unusable production issue implementation problem problem design easily fixed unfair make feature available user state without providing clear warning bad unexpected thing likely happen use obviously great news user already adopted mv great answer think sort sunk cost point mv related problem whether marked experimental would expect reduce number user adopting mv future though would opt mv reach point usable production remove flag specific experimental flag would work hammered forthcoming jira id imagine would prevent user creating new mv maybe log warning startup existing mv flag enabled let know think thanks blake"
    },
    "11467":{
        "ID":32340,
        "MESSAGE_ID":"CACO5Y4xkC_a787UnmRB0=EK1OFJ+j-HT1ZsF2meCemx_SMZZ_g@mail.gmail.com",
        "PARENT_ID":32339.0,
        "SUBJECT":"Re: [DISCUSS] HADOOP-9122 Add power mock library for writing better unit tests",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"eric explain powermock differs augments mockito adopt maybe example existing test could improved using library"
    },
    "11468":{
        "ID":32339,
        "MESSAGE_ID":"FE82AA45-51A8-40AC-A4FB-8EAB568BC00B@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] HADOOP-9122 Add power mock library for writing better unit tests",
        "SENT_FROM":"Eric Yang <eyang@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi hadoop dev long time ago hadoop community decided put powermock hold unit test mockito powermock evolved lot past year mature version software compatibility chart indicate version work together hadoop grown lot last year becomes apparent without ability instrument lower level class contain unit test scope many test written simulate integration test order perform unit test result slow performance unit test part testable strictly unit test case discussion revisit decision see would embrace powermock allow hadoop implemented feel free comment hadoop thread revisit issue thank time regard eric"
    },
    "11492":{
        "ID":32315,
        "MESSAGE_ID":"CAHzWLgfEAgczjcEOUCg-03ma3ROtO=PKEc9dPGGYX9rZF3NvDw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Merging API-based scheduler configuration to trunk\/branch-2",
        "SENT_FROM":"Jonathan Hung <jyhung2357@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi everyone starting thread discus merging api based scheduler configuration trunk branch feature add framework allowing user modify scheduler configuration via rest cli using configurable backend leveldb zk currently supported add capacity scheduler support umbrella jira yarn required work feature done committed branch yarn full different generated yarn regarding compatibility feature configurable turned default feature tested locally couple rms since rm change queue addition removal update tested single rm leveldb two rms zk also verified original configuration update mechanism via refreshqueues unaffected feature configured original plan merge trunk yarn different based port branch release andrew thought also merging branch thanks jonathan hung"
    },
    "11508":{
        "ID":32299,
        "MESSAGE_ID":"etPan.59c5884d.5b87f2ca.475@apple.com",
        "PARENT_ID":32295.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Aleksey Yeshchenko <aleksey@apple.com>",
        "TAGS":"not-ak",
        "BODY":"remaining one radar good next week long nothing else pop missing jiras ay"
    },
    "11512":{
        "ID":32295,
        "MESSAGE_ID":"d50d33eb-bb88-c6a1-e189-b4c2f423ad24@pbandjelly.org",
        "PARENT_ID":32293.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"asked question irc couple day ago aleksey asked could hold cassandra kind regard michael"
    },
    "11514":{
        "ID":32293,
        "MESSAGE_ID":"CAA=6J09KQcD476k6UueQko8ubX0OegsGkSGZcUGwj72KCaR4sg@mail.gmail.com",
        "PARENT_ID":31746.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"saw url got commited day ago awesome stuff huge thank everyone worked looking forward happens url know waiting anything url"
    },
    "11518":{
        "ID":32289,
        "MESSAGE_ID":"434f4208-78d1-ef09-c855-d3e5e84b257f@anzix.net",
        "PARENT_ID":32173.0,
        "SUBJECT":"Re: [DISCUSS] official docker image(s) for hadoop",
        "SENT_FROM":"\"Marton, Elek\" <hdp@anzix.net>",
        "TAGS":"not-ak",
        "BODY":"thanks feedback created issue url let continue discussion thanks marton"
    },
    "11538":{
        "ID":32269,
        "MESSAGE_ID":"etPan.59c15ad4.14a15d21.3ad@apple.com",
        "PARENT_ID":32268.0,
        "SUBJECT":"Re: Compact Storage and SuperColumn Tables in 4.0\/trunk",
        "SENT_FROM":"Aleksey Yeshchenko <aleksey@apple.com>",
        "TAGS":"not-ak",
        "BODY":"also fail startup early still see non migrated table probably ay"
    },
    "11539":{
        "ID":32268,
        "MESSAGE_ID":"30C18B62-891E-4F13-9186-162D6C5DB51F@gmail.com",
        "PARENT_ID":32267.0,
        "SUBJECT":"Re: Compact Storage and SuperColumn Tables in 4.0\/trunk",
        "SENT_FROM":"\"J. D. Jordan\" <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks clarification adding drop compact storage option allowing specified"
    },
    "11540":{
        "ID":32267,
        "MESSAGE_ID":"45778DD0-5949-4ECF-BB11-045DB2AD0248@gmail.com",
        "PARENT_ID":32260.0,
        "SUBJECT":"Re: Compact Storage and SuperColumn Tables in 4.0\/trunk",
        "SENT_FROM":"Alex P <oleksandr.petrov@gmail.com>",
        "TAGS":"existence",
        "BODY":"bit detail compact storage thrift table implemented table created thrift compact storage flag value column invisible cql query seen thrift supercolumn family internally storage level partition key clustering value column type map thrift expose normal super column family cql however expose map column instead translates key map second clustering map value regular column requires quite special casing everywhere across cql layer order hide show translate column depending whether table dense super detail take look short dropping compact storage flag mean table accessible internal representation hidden value column exposed normal column data lost data inaccessible take look detail cassandra want detail regard supercolumn family proposal support lwts counter sort query exactly like accessible cql clear upgrade path suggest drop compact storage still make data available expose whole internal cql structure together usually hidden compact value column without legacy special casing"
    },
    "11547":{
        "ID":32260,
        "MESSAGE_ID":"8EE7F934-B72E-4EAE-AF64-79BE7A99B063@gmail.com",
        "PARENT_ID":32257.0,
        "SUBJECT":"Re: Compact Storage and SuperColumn Tables in 4.0\/trunk",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"existence",
        "BODY":"think work support compact storage table cql seems like wasted effort going tell people kidding migrate data think supporting compact storage table option matter one way think able read data table created way something need path forward think fact thrift supported trunk make accessing said data cql necessary appealing provide way drop flag still access data think fine perfectly reasonable proposal user data compact storage table way upgrade still access data without exporting brand new table clarify thing proposed clear jeremiah unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "11550":{
        "ID":32257,
        "MESSAGE_ID":"82594C8B-5830-4D67-BF9F-60CB6476DFC8@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Compact Storage and SuperColumn Tables in 4.0\/trunk",
        "SENT_FROM":"Oleksandr Petrov <oleksandr.petrov@gmail.com>",
        "TAGS":"existence",
        "BODY":"may know supercolumn table work way worked order provide everyone reasonable upgrade path working cassandra brings support supercolumn table close possible patch planned land cassandra cassandra branch since patch trunk require even work since thrift supported trunk make much le appealing even necessary idea behind support supercolumns always allow people smoothly migrate world primary feature supercolumns type compact table cassandra compact table special cased special schema layout column hidden cql allows used thrift except fact accessible thrift advantage use new storage order allow people expose internal structure compact table make fully accessible cql cassandra created light fact reasonable supercolumn support due related complexity amount special case required support possibility drop compact storage flag expose normal table idea removing compact table altogether leaving compact storage make table metadata bit lighter allow remove special case required support major release provided reasonable upgrade path functionality thrift cql compact table including super column one sound like best option right would good could voice support idea raise possible concern additional discussion proposal allow online compact storage flag drop cassandra later following week best regard alex url url url"
    },
    "11589":{
        "ID":32218,
        "MESSAGE_ID":"94FA9CE2-61BA-45B1-B12E-0E63C42E3749@gmail.com",
        "PARENT_ID":32216.0,
        "SUBJECT":"Re: [DISCUSS] official docker image(s) for hadoop",
        "SENT_FROM":"Mingliang Liu <liuml07@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"testing voting using docker container see code url idea official docker image basically mean commitment maintain well documented broadly tested image seems burden ceph community docker project url think scope similar mingliang"
    },
    "11591":{
        "ID":32216,
        "MESSAGE_ID":"CAE3xMSg4XEU0fScAbwCk0JMr_-vAX_2s3c9WeTkuvReo2V6Y_g@mail.gmail.com",
        "PARENT_ID":32213.0,
        "SUBJECT":"Re: [DISCUSS] official docker image(s) for hadoop",
        "SENT_FROM":"Yufei Gu <flyrain000@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would helpful testing rc vote rc committers pmcs usually spend lot time compile deploy rc several sanity test rc docker image potentially save compilation deployment time people test best yufei"
    },
    "11592":{
        "ID":32215,
        "MESSAGE_ID":"8009F7BA-E5B8-4FE2-AA8E-49E7AB4568EE@hortonworks.com",
        "PARENT_ID":32214.0,
        "SUBJECT":"Re: [DISCUSS] official docker image(s) for hadoop",
        "SENT_FROM":"Bharat Viswanadham <bviswanadham@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"non binding would really nice docker try different feature hadoop like ha federation enabled erasure coding helpful developer user thanks bharat"
    },
    "11593":{
        "ID":32214,
        "MESSAGE_ID":"CAAaVJWUPO7QkWRH0dDxnphGuXJWUn9GLkjYrKj5reM0=WWmLDA@mail.gmail.com",
        "PARENT_ID":32213.0,
        "SUBJECT":"Re: [DISCUSS] official docker image(s) for hadoop",
        "SENT_FROM":"Eric Badger <ebadger@oath.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"definitely think official hadoop docker image possibly per major minor release would positive contributor user hadoop eric"
    },
    "11594":{
        "ID":32213,
        "MESSAGE_ID":"CAD++eC=e2TyQ_Dv43UDQYyEPxqMDxxwVUWwft9-XoHN8PspYDw@mail.gmail.com",
        "PARENT_ID":32212.0,
        "SUBJECT":"Re: [DISCUSS] official docker image(s) for hadoop",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"add hadoop docker image easier testing prototyping going super helpful thanks wangda"
    },
    "11595":{
        "ID":32212,
        "MESSAGE_ID":"CA+oVwZrq=0fZSFLDDPgEZKqYE4hkFS1A_UxwRTq+HNuPAtyTkA@mail.gmail.com",
        "PARENT_ID":32173.0,
        "SUBJECT":"Re: [DISCUSS] official docker image(s) for hadoop",
        "SENT_FROM":"Miklos Szegedi <miklos.szegedi@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"marton thank working think official docker image hadoop would useful lot reason think better coordinated effort production ready base image dependent image prototyping anyone else opinion thank miklos"
    },
    "11598":{
        "ID":32209,
        "MESSAGE_ID":"CA+6Qg=Kt0JkQOC9BT4Y8=iieqY=fSq9TTToUzLQ9MhggpD3uLg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"impersonation in hadoop",
        "SENT_FROM":"Srikrishan Malik <malik.net@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hello trying understand impersonation work hadoop environment found resource like doas proxy user url token url able connect dot wrt full flow operation current understanding user kinit executes end user facing program like beeline spark submit etc program app specific get service ticket hdfs get token service may need job exeution save token hdfs directory program connects job executer using service ticket job executer yarn job info token path job executor get tocken initializes ugi communication hdfs done using token kerberos ticket used high level understanding correct follow query token mecahnism skipped use kerberos layer resource help final aim write spark connector impersonation support data storage system use hadoop token support kerberos thanks regard sri unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "11634":{
        "ID":32173,
        "MESSAGE_ID":"d35436b3-8c3c-a9ac-6344-3383566a9796@anzix.net",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] official docker image(s) for hadoop",
        "SENT_FROM":"\"Marton, Elek\" <hdp@anzix.net>",
        "TAGS":"not-ak",
        "BODY":"tl dr propose create official hadoop image upload dockerhub goal scope would like improve existing documentation easy use docker based recipe start hadoop cluster various configuration image also could used test experimental feature example ozone could tested easily compose file configuration url even configuration could included compose file url would like create separated example compose file federation ha metric usage etc make easier try understand feature context existing jira url itas tool generate production quality docker image multiple type flexible way objection create separated issue create simplified docker image rapid prototyping investigating new feature register branch dockerhub create image automatically background working docker based hadoop spark cluster quite run succesfully different environment kubernetes docker swarm nomad based scheduling etc work available url could handle complex use case eg instrumenting java process btrace read reload configuration consul imho official hadoop documentation itas better suggest use official apache docker image external one could changed please let know comment marton unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11685":{
        "ID":32122,
        "MESSAGE_ID":"302a1bbc-aa16-f6af-454b-f1304fe21be3@cloudera.com",
        "PARENT_ID":null,
        "SUBJECT":"DISCUSS: Hadoop Compatability Guidelines",
        "SENT_FROM":"Daniel Templeton <daniel@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "11692":{
        "ID":32115,
        "MESSAGE_ID":"CAGB5D2b7azWsi1D5NJLOrbAKJb4poDPF11vPNxT1NnZpwsesBQ@mail.gmail.com",
        "PARENT_ID":32086.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi folk landed two beta feature sguard tsv trunk jian sent vote remaining beta feature yarn native service think time branch unblock resource profile merge cut branch since anything urgent need go beta ga cheer andrew"
    },
    "11696":{
        "ID":32111,
        "MESSAGE_ID":"DE9F4D59-CA0A-4CE6-AA6B-47F7433D3CC8@effectivemachines.com",
        "PARENT_ID":32055.0,
        "SUBJECT":"YARN javadoc failures  Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Allen Wittenauer <aw@effectivemachines.com>",
        "TAGS":"not-ak",
        "BODY":"psychic look like yarn crashing jdk javadoc maven stop processing error even giving build error success reverting patch make thing work anyway yetus caught warned continuously still committed unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11721":{
        "ID":32086,
        "MESSAGE_ID":"CANyB6puv=8kS7naq3m8FK3VLU9ZcEONuz22nw+7t2zncU0Hwvg@mail.gmail.com",
        "PARENT_ID":32076.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"\"varunsaxena@apache.org\" <varun.saxena.apache@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi andrew completed merge tsv trunk go ahead branching regard varun saxena"
    },
    "11726":{
        "ID":32081,
        "MESSAGE_ID":"CAGB5D2bAR=s+gaCSg2cSe9x2YZ+CbOj4_+rYuftLG6WSeh9gVQ@mail.gmail.com",
        "PARENT_ID":32080.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi subru basically amending proposal original email chain also immediately create branch beta release branch described wiki update gating merge two feature branch additional testing keep open development url completeness branch version would look like trunk snapshot branch snapshot branch beta beta snapshot branch etc remain best andrew"
    },
    "11727":{
        "ID":32080,
        "MESSAGE_ID":"CAOScs9ZkFDFzFzuneKiQgDs0mbERsF7SvJtnQk9VbF1V6r71dQ@mail.gmail.com",
        "PARENT_ID":32079.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Subramaniam V K <subru.vk@gmail.com>",
        "TAGS":"process",
        "BODY":"andrew first thanks tirelessly pushing release confused comment creating branch understanding jason vinod comment defer creating branch imho consider creating branch necessary sufficient significant incompatible change new feature turned without affecting core component summary feel follow lazy rather eager approach towards creating mainline branch thanks subru"
    },
    "11728":{
        "ID":32079,
        "MESSAGE_ID":"CAD++eCkW-XCvvjYGoM0z9CAUFdWzPub6HhUT4ECkdK-a=g=G3Q@mail.gmail.com",
        "PARENT_ID":32078.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"gotcha make sense hold commit cut two branch tsv get committed thanks wangda"
    },
    "11729":{
        "ID":32078,
        "MESSAGE_ID":"CAGB5D2b8JPCeeS8qORMDExsQWxJ-uo6m+49ci=12gzTzLo5FMg@mail.gmail.com",
        "PARENT_ID":32077.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi wangda cut two branch branch snapshot branch beta beta snapshot way merge ga feature branch branch beta best andrew"
    },
    "11730":{
        "ID":32077,
        "MESSAGE_ID":"CAD++eCmTC9AEx2WQShxwWWd0ji-Xkye=qiUyhxTFvDRW42Pfdw@mail.gmail.com",
        "PARENT_ID":32076.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"process",
        "BODY":"vrushali sure wait tsv merged merge resource profile branch andrew understanding going cut branch beta branch branch used ga well question several feature tsv resource profile yarn targeted merge ga beta branch commit commit also similar alpha cut branch beta correct thanks wangda"
    },
    "11731":{
        "ID":32076,
        "MESSAGE_ID":"CAGB5D2ZKTOQyVT6m09dQKa16F16TKP+6gmDrRbB7tqgXwG5rXw@mail.gmail.com",
        "PARENT_ID":32074.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"sure ping tsv go take care branching still waiting native service sguard merges want hold branching last minute"
    },
    "11733":{
        "ID":32074,
        "MESSAGE_ID":"CAE=b_fYmPV1K=kLm9FYh+PRry-+ewkwFAcjXifDN3mNr5ad_+Q@mail.gmail.com",
        "PARENT_ID":32068.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Vrushali C <vrushalic2016@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi andrew rohith mentioned good tsv side ready go merge tonight pacific time right voting period end varun saxena diligently rebasing likely merge reasonably straightforward wangda resource profile vote end tomorrow could please coordinate merges thanks vrushali"
    },
    "11746":{
        "ID":32061,
        "MESSAGE_ID":"CAGB5D2ZwP5azrGk_X45742UXz3O53+=kThvb7EBgFW4MR5nFeQ@mail.gmail.com",
        "PARENT_ID":32060.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"far seen branching proposal plan execute tomorrow unless feedback regarding discussion think jason essentially opinion hope keeping trunk release branch mean higher bar merges code review general past seen patch committed trunk way passing responsibility future user reviewer help anyone patch committed intent running production would also like repeat thanks many many contributor helped release improvement allen work create release automated change release note essential xiao work license notice file also looking forward marton site improvement address one remaining sore spot release process thing gotten smoother alpha done last year testament everyone work good probability shipping beta ga later year cheer andrew"
    },
    "11748":{
        "ID":32059,
        "MESSAGE_ID":"CEF154E7-210E-4F79-8597-C3972D354ABF@effectivemachines.com",
        "PARENT_ID":32056.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Allen Wittenauer <aw@effectivemachines.com>",
        "TAGS":"process",
        "BODY":"brings back original question place undue burden contributor first incompatible patch prove worthiness happens decided good enough answer understand position least maybe leaning towards yes patch prior branching policy change would gone without notice higher burden major feature prove worthiness process eliminates whole class contributor empowers others thus concern given general acknowledgement compatibility guideline mostly useless reality maybe answer really release wrong would necessarily bad thing moved model incompatible change gradually released instead one big one every seven yes lived walking glass day yahoo realize saying also think rate incompatible change slowed tremendously entire group apis getting tossed every week anymore yup nothing wrong yup agree proposal rarely seem get much actual traction kind fun reading hadoop bylaw compatibility guideline old vote thread realize much stuff actually happen despite everyone generally agree abc good idea circle back bit also agree automation role play anyone accuse imply hypocrite sure someone eventually privately publicly sure folk realize working set problem different angle past year handful people know going attempt release year ago andrew basically beat ran release process mess way much manual work lot undocumented bit violation asf rule etc etc heard complaint hypothesis release process easier getting release based trunk easier automate non vendor non traditional release manager willing roll release people feel comfortable rolling release likelihood release happen likelihood release happening greater chance trunk getting door turned year worth fixing automating lot stuff continual complained never fixed release note change txt chunk build process chunk release tar ball process fixing consistency etc became part yetus work leaked branch point many probably know stuff happening people claimed wasting time focusing important thing press release feature assuming yes would like see proposal would also like challenge community large spend time build process tremendous amount cruft usage maven still nearly primordial implementation shout marton elek great although ambitious idea also kudos andrew putting create release lot change pace early day publicly stepped release know realized walking unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11749":{
        "ID":32058,
        "MESSAGE_ID":"083CEB33-AB3A-4B47-ACC0-55EB888751AA@apache.org",
        "PARENT_ID":32038.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"process",
        "BODY":"andrew proposal release fairly elaborate thread branching compatibility topic one thems jason said incompatible change treated lightly need stop breaking stuff dump trunk major version expensive hesitate asking user move incompatible change without major value proposition incompatible change clear wait others may mandate major release common type incompatible change renaming apis removing deprecated apis renaming configuration property changing default value configuration changing output logging etc today trunk even though actual effort involved minimal compared overhead force maintaining incompatible trunk dependency library update updating guava protobuf etc hadoop break upstreaming application assuming classpath isolation still blocker ga jdk upgrade tried two different way jdk jdk need formal policy managing common breaking change cause le pain end user specifically stay trunk based release avoid incompatible change much possible run bunch minor incompatible change done either make incompatible behavior optional park say parked incompatible change label making optional possible create hit first major incompatible change major next step hadoop need erasure coding number parked incompatible change pass certain threshold unlike jason see threshold case fit reference looking hadoop release url classpath isolation downstream client url thanks vinod"
    },
    "11751":{
        "ID":32056,
        "MESSAGE_ID":"CAMqJVeMqrtL_2XBtTA-S-KqL5gqw8YXv=_pSQDV7YbxG-gRvuA@mail.gmail.com",
        "PARENT_ID":32055.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Jason Lowe <jlowe@oath.com.INVALID>",
        "TAGS":"process, technology",
        "BODY":"allen wittenauer wrote think get back worth committing part feel community collectively decide worth taking hit maintain separate code line imho removing deprecated bit alone reason enough diverge code base additional maintenance come along extra code line new feature traditionally reason diverge something user would actually care enough take compatibility hit moving version also help drive timely release new code line user want feature went think myriad small patch went trunk last year drove instead think simply important enough feature went like erasure coding gathered momentum behind release trunk sat ignored basically year plenty patch went trunk gone least branch well think community contributor favor putting change code line see release long time yes could released sooner help solve issue given complete lack excitement around recently reason happen seems need something interesting enough drive people release relative indicates commit thing interest totally agree better outside automation brought automation since see useful part total solution along better developer education oversight etc thinking specifically tool report public api signature change one aspect compatibility semantic behavior something static analysis tool automatically detect way automate something like end end compatibility testing bigtop may cover testing older version downstream project like hbase hive oozie etc could setup test standup two different hadoop cluster run test verify interop test never exhaustive still need educated committers oversight fill gap mentioned people already breaking compatibility left right wondered really better practice personally would rather find major breakage sooner later since trunk remains active area development time likely community sit take notice something crazy go past trunk really actively deployed area year sort stuff went without people really aware agree everyone need aware new policy large part discussion thread ultimately decide keep trunk line also update howtocommit wiki documentation accordingly along announce thread agreed need better getting release door take significant effort something always happened past mind part motivation keep trunk line accomplishes three thing patch likely see release sooner committed new trunk line patch likely see testing real world deployment sooner committed new trunk line choosing break backward compatibility create line becomes conscious community discussed event convenient developer say trunk break anything breaking backwards compatibility cost imho benefit breakage need pay cost user endure migrate new version otherwise seen another hostility towards user removing deprecated code many popular downstream project still using key example something usually worth cost think direct benefit people contribute code project likely see contribution release deploy sooner new major hadoop release require effort apache hadoop project get released effort side migrate onto believe benefit committers since collectively discus whether new change worth maintaining new separate code line hopefully kickstart discussion release manager get sooner rather later otherwise fear trunk another fire forget patch dumping ground key feature eventually come along drive interest publishing need better totally agree trying keep trunk actively watched released line help sound like agree part disagree specific help trunk remain active given historically trunk languished year hoping proposal would help reduce likelihood happening eventually decide cutting branch make sense make work well would good see concrete proposal avoid problem last year jason"
    },
    "11752":{
        "ID":32055,
        "MESSAGE_ID":"C0EFB928-77C2-4817-8C0C-BBD917BF1306@effectivemachines.com",
        "PARENT_ID":32038.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Allen Wittenauer <aw@effectivemachines.com>",
        "TAGS":"process",
        "BODY":"definition soon patch come remove deprecated bit issue branch getting created correct sure forgetting involved likely would talking code diverging enough automation go far least investigating yetus bug seen enough blatant purposeful ignored error warning convinced effective javadoc compile failure come patch um yes yes pr feature greatly trumped code correctness year case specifically thinking folk commit maybe one two patch year generally pay attention stuff seem like many people actually paying attention get committed break universe yes process decade unless outreach done almost guarantee someone commit something trunk simply know care process changed fwiw hadoop never done semantic versioning large percentage minor really major given follow semantic versioning thing really left technically time either form volunteer saying hey got time cut release employer corporate goal based upon feature release would love pmc define policy guideline say community strive major incompatible change minor change micro fix even teeth would least give people hope contribution lost dustbin history may actually push others work getting release hadoop people made committers based upon feature never gotten stable release needle say people longer contribute actively one really idea release happen situation like see fsck completely untenable amount option thing even option incredibly user unfriendly great example hadoop come hostile user one really know next incompat release going happen code contortion going also terrible see project like map reduce native code sit trunk year go extremely useful nearly irrelevant without ever seeing light day plenty example need better sidenote probably worth mentioning despite lot big moneyed company involved one appears paying anyone dedicated work quality release management like past huge impact open source community particular release cadence unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11769":{
        "ID":32038,
        "MESSAGE_ID":"CAMqJVeO35YbNKswRCCF8eRLia8Bq7XdXMBk=Vtvq00UKCY=mMg@mail.gmail.com",
        "PARENT_ID":32033.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Jason Lowe <jlowe@oath.com.INVALID>",
        "TAGS":"process",
        "BODY":"allen wittenauer wrote burden first go anywhere else change arguably change done lightly anyway backwards incompatible change matter worth committing think perfectly reasonable send dev announce reason trunk diverge cut branch move different andrew recent announcement need separating trunk line based go think make sense pay maintenance overhead two nearly identical line backwards incompatible change need otherwise past trunk behavior indication end mostly enabling people commit trunk forgetting thing committing perfectly valid branch agree trunk branch equivalent incompatible change go trunk pay commit overhead potential accidentally missed commits really necessary many take dam break timeline think threshold count dam soon jira need committed move project forward ship release create branch move trunk timeline going see much baking period need criterion need week cut week year year depends upon change ready go given number committers openly ignore discussion like entity verifying bug get committers hadoop qa bot running test yes know mean inevitable compatibility breakage happen improve automation around compatibility testing possible think magic bullet preventing compatibility bug introduced like one preventing general bug trunk branch separate essentially similar branch make better longer term pmc make sure start major trying semantic versioning regular cadence major release unless regular cadence change break compatibility would hope something would strive towards agree try better shipping release major minor timely manner agree cut simply based duration since last major release release content community desire content dictate release numbering schedule respectively jason"
    },
    "11770":{
        "ID":32037,
        "MESSAGE_ID":"D5C5D458.3C4A8%uma.gangumalla@intel.com",
        "PARENT_ID":32027.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"\"Gangumalla, Uma\" <uma.gangumalla@intel.com>",
        "TAGS":"not-ak",
        "BODY":"plan look good regard uma"
    },
    "11771":{
        "ID":32036,
        "MESSAGE_ID":"CAD++eCmyxB75RmEROAPGb-Kuovo6aj4gusPBN66nm9Bg6Wx6BA@mail.gmail.com",
        "PARENT_ID":32033.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi andrew thanks updating proposal wangda fri aug pm allen wittenauer aw effectivemachines com"
    },
    "11774":{
        "ID":32033,
        "MESSAGE_ID":"37D9CB65-78FF-4699-B0AD-881F7F131ED0@effectivemachines.com",
        "PARENT_ID":32027.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Allen Wittenauer <aw@effectivemachines.com>",
        "TAGS":"process",
        "BODY":"question place undue burden contributor first incompatible patch prove worthiness happens decided good enough many take dam break timeline going given trunk get set given number committers openly ignore discussion like going verify incompatible change get longer term pmc make sure start major release timely fashion word really issue shoot another major throw dart year unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "11776":{
        "ID":32031,
        "MESSAGE_ID":"CAAvsqTr8E5GU+QmAbqEsJ3PbxDvveBPP=uOF_9ueCyfahrSXVg@mail.gmail.com",
        "PARENT_ID":32029.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Rushabh Shah <rushabhs@oath.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"branching proposal"
    },
    "11778":{
        "ID":32029,
        "MESSAGE_ID":"671236991.2413896.1503683774655@mail.yahoo.com",
        "PARENT_ID":32027.0,
        "SUBJECT":"Re: [DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Eric Payne <eric.payne1000@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"branching proposal eric andrew wang common dev hadoop apache org mapreduce dev hadoop apache org hdfs dev hadoop apache org yarn dev hadoop apache org sent friday august pm subject discus branch version hadoop hi folk beta fast approaching wanted go proposed branching strategy early day moving trunk immediately mistake branch trunk virtually identical increased backport complexity need make incompatible change need hadoop version thus proposal branch version trunk snapshot branch beta snapshot branch etc remain lmk question comment etc appreciate attentiveness hoping build consensus quickly since number open vote branch merges thanks andrew"
    },
    "11780":{
        "ID":32027,
        "MESSAGE_ID":"CAGB5D2YewMMqJZ_WqyigH2pykMHkpwBzz8r7rYpW7M=iJXkOAQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Branches and versions for Hadoop 3",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi folk beta fast approaching wanted go proposed branching strategy early day moving trunk immediately mistake branch trunk virtually identical increased backport complexity need make incompatible change need hadoop version thus proposal branch version trunk snapshot branch beta snapshot branch etc remain lmk question comment etc appreciate attentiveness hoping build consensus quickly since number open vote branch merges thanks andrew"
    },
    "11792":{
        "ID":32015,
        "MESSAGE_ID":"CACO5Y4xQf3BZw_BEK5gC79Xgj8x=Spr-Hyf+8f+4VDSopfdf2A@mail.gmail.com",
        "PARENT_ID":31981.0,
        "SUBJECT":"Re: [DISCUSS] Merge HDFS-10467 to (Router-based federation) trunk",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"would definitely support merging trunk implementation almost entirely outside hdfs inigo detailed tested scale branch functional state documentation test"
    },
    "11826":{
        "ID":31981,
        "MESSAGE_ID":"CAB1dGgogTu6kHtkkYeUycmNv-H3RupfPF4Cd7rpuFi6vHGdBLg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Merge HDFS-10467 to (Router-based federation) trunk",
        "SENT_FROM":"I\u00f1igo Goiri <elgoiri@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hi would like open discussion merging router based federation feature trunk last week thread branch would go given yarn federation going might good time merged running router based federation production year meanwhile releasing feature branch hdfs reasonably confident state branch meet criterion merged onto trunk feature feature aggregate multiple namespaces single one transparently user similar architecture yarn federation yarn consists router handle request client forward right subcluster expose api namenode currently use mount table similar viewfs replaced approach router share state state store main advantage client interact router namenode change client required poiting right address addition management moved server side change mount table done without sync client pull push status branch already contains feature required work end end couple open jiras would required merged web ui finished soon running production last year paper detail production deployment production deployment largest one spanning server across subclusters addition guy linkedin started testing router based federation adding security branch modification rest hdfs minimal changed visibility method minidfscluster added utility extract address modified hdfs hdfs cmd start router manager federation modified hdfs default xml everything else self contained federation package addition functionality router disabled default even enabled impact regular hdfs would require configure trust namenode router security enabled continuously rebasing feature branch updated week ago merge straightforward cherry pick problem problem aware following implement clientprotocol anytime new method added would need add router however straightforward add unimplemented method argument naming feature router based federation open better name credit id like thank people microsoft specially jason ricardo chris subru jakob carlo giovanni twitter ming gera linkedin zhe erik konstantin discussion idea special thanks chris douglas thorough review please look branch feedback welcome thanks cheer inigo url url session presentation misra"
    },
    "11837":{
        "ID":31970,
        "MESSAGE_ID":"D5BD2476.3C046%uma.gangumalla@intel.com",
        "PARENT_ID":31794.0,
        "SUBJECT":"Re: [DISCUSS] Merge Storage Policy Satisfier (SPS) [HDFS-10285] feature branch to trunk",
        "SENT_FROM":"\"Gangumalla, Uma\" <uma.gangumalla@intel.com>",
        "TAGS":"not-ak",
        "BODY":"hi andrew discussion jira planned support recursive api well primary use case planned hbase please check next point use case detail please find usecase detail comment jira url thank review summarize discussion jira feedback andrew eddy xiao jira review planned take support recursive api support hdfs rakesh started work xattr optimization hdfs patch available review comment already fixed committed hdfs tracking follow task filed jira hdfs critical merge regard uma"
    },
    "11847":{
        "ID":31960,
        "MESSAGE_ID":"CADZgEPKEEzsCCnfwhfd1zTMR=Y9-e0bi2eTHucJ7UJYkHk54zw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Merge HADOOP-13345 (S3Guard feature branch)",
        "SENT_FROM":"Aaron Fabbri <fabbri@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hello would like open vote day ending august pst merge hadoop feature branch trunk branch contains new sguard feature add metadata consistency feature sa client formatted site documentation found url current patch trunk posted url branch modifies sa portion hadoop tool hadoop aws module feature default care taken insure impact disabled sguard enabled production database backed dynamodb local memory implementation facilitates integration testing without pay database getfilestatus well directory listing consistency implemented thoroughly tested including delete tracking convenient maven profile testing without sguard new failure injection code integration test exercise use timer wrapper around amazon sdk client object force consistency delay occur allows assert sguard work advertised extended type failure injection continue hardening sa client outside hadoop tool hadoop aws sa directory minor change core default xml default documentation sguard parameter couple additional contract test case around rename goody lambdatestutils new cli tool inspecting manipulating sguard feature including backing metadatastore database branch seen extensive testing well use production branch make significant improvement sa test toolkit well performance typically par case better existing sa code without sguard enabled feature developed contribution feedback many people would like thank everyone worked hadoop well contributed feedback work original design document first major apache hadoop project worked start finish really enjoyed please shout missed anything important vote process cheer aaron fabbri"
    },
    "11863":{
        "ID":31944,
        "MESSAGE_ID":"CAOPW3nNF4J_mdf=N79-7UzX=Z8PisoYgWdDAJ1AHWkWxr7vpbA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Merging YARN-5355 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Vrushali Channapattan <vrushali.c@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi id like open discussion merging timeline service yarn trunk week previously completed one merge onto trunk timeline service part hadoop release alpha since working extending capability timeline service feature branch related issue pending actively worked upon tested soon resolved plan starting merge vote within next week goal get hadoop beta paid close attention ensure disabled timeline service impact existing functionality disabled default high level following key feature implemented since alpha security via kerberos authentication delegation token writer yarn timeline server usability improvement timeline server hbase specific improvement atsv hbase rest api addition improvement timeline reader reader side simple authorization via whitelist yarn would love get thought open real voting thread special thanks team folk worked hard contributed towards effort patch review guidance rohith sharma varun saxena haibo chen sangjin lee li lu vinod kumar vavilapalli joep rottinghuis jason lowe jian robert kanter micheal stack thanks vrushali merge trunk url apache org msg html feature branch yarn commits url apache hadoop commits yarn"
    },
    "11964":{
        "ID":31843,
        "MESSAGE_ID":"CANyB6pt68PgNrNN7qPWGmubS3d6n643uB3pztMUO_L6xjL9fZg@mail.gmail.com",
        "PARENT_ID":31754.0,
        "SUBJECT":"Re: [Vote] merge feature branch YARN-2915 (Federation) to trunk",
        "SENT_FROM":"\"varunsaxena@apache.org\" <varun.saxena.apache@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"looking forward regard varun saxena"
    },
    "11968":{
        "ID":31839,
        "MESSAGE_ID":"39971a18-06ff-22bd-cfa4-b8c0aaa01c1c@cloudera.com",
        "PARENT_ID":31754.0,
        "SUBJECT":"Re: [Vote] merge feature branch YARN-2915 (Federation) to trunk",
        "SENT_FROM":"Daniel Templeton <daniel@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"subru sorry last minute contribution looking branch two question first box experience regarding data store expectation user database set ready go state store set schema automatically user see doc second well federation play kerberos anything special need configured make work daniel"
    },
    "12013":{
        "ID":31794,
        "MESSAGE_ID":"CAGB5D2bDbG+9H4k-SWQ883Co6V7RTuKGJCp6Dtv7pzLt=D44qw@mail.gmail.com",
        "PARENT_ID":31785.0,
        "SUBJECT":"Re: [DISCUSS] Merge Storage Policy Satisfier (SPS) [HDFS-10285] feature branch to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi uma great hear would nice define usecases met current version sps handled merge bit detail design doc hbase would use feature would also helpful hbase jira already also spent time design doc posted question jira best andrew"
    },
    "12022":{
        "ID":31785,
        "MESSAGE_ID":"D5A02021.38A76%uma.gangumalla@intel.com",
        "PARENT_ID":31773.0,
        "SUBJECT":"Re: [DISCUSS] Merge Storage Policy Satisfier (SPS) [HDFS-10285] feature branch to trunk",
        "SENT_FROM":"\"Gangumalla, Uma\" <uma.gangumalla@intel.com>",
        "TAGS":"existence",
        "BODY":"hi andrew thanks lot reviewing understanding factor totally right code newly added le portion existing code touched nn rpcs dn message see combined patch stats line uma see item high priority feature user would able use feature current code base api would consider branch perfectly fine going current api much useful hbase scenario hbase case rename file different policy directory set policy always rename file different policy directory simply call satisfystoragepolicy need hybrid api uma related point wanted highlight dynamic activation deactivation feature mean without restarting namenode feature disabled enabled feature disabled impact dynamic enabling feature even initialize thread feature disabled service initialized enabled easy review please look last section documentation archivalstorage html also tiered storage hdfs mount solution want use sps feature url sps upstream would allow hdfs dependent feature proceed say merge reason alone would like mention endorsement feature regard uma"
    },
    "12034":{
        "ID":31773,
        "MESSAGE_ID":"CAGB5D2amGySddLT9SxrBLMjpHZ9FQHfRiMnpa03k8xzjF30Nag@mail.gmail.com",
        "PARENT_ID":31743.0,
        "SUBJECT":"Re: [DISCUSS] Merge Storage Policy Satisfier (SPS) [HDFS-10285] feature branch to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi uma rakesh first like idea feature definitely make hsm easier use rm hat gave patch quick skim looking possible impact feature disabled api stability compat concern high level look like us xattrs rather new edit log ops track file moved new nn rpcs dn message added interact feature almost entirely new code modify gut hdfs much could comment two concern closing beta merge large amount new code make wary still plan make change affect compatibility hybrid rpc bulk dn work mentioned sound like would cut branch first wait merge task finished best andrew"
    },
    "12053":{
        "ID":31754,
        "MESSAGE_ID":"CAOScs9Z1D7cxAXoUDGDgNdnP5cyYcQMPWgLK_8Z2TTqOpqCtaA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[Vote] merge feature branch YARN-2915 (Federation) to trunk",
        "SENT_FROM":"Subru Krishnan <subru@apache.org>",
        "TAGS":"property",
        "BODY":"hi per earlier discussion would like start formal vote merge feature yarn federation yarn trunk vote run day end aug pm pdt developing feature branch yarn reasonably confident state feature meet criterion merged onto trunk key idea yarn centralized design allows strict enforcement scheduling invariant effective resource sharing becomes scalability bottleneck number job node well reaching scale cluster node address limitation developed scale federation based solution yarn architecture scale near linearly datacenter sized cluster partitioning node across multiple sub cluster running yarn cluster thousand node application span multiple sub cluster transparently code change recompilation existing apps thanks layer indirection negotiates multiple sub cluster resource manager behalf application design structurally scalable bound number node rm responsible appropriate policy ensure majority application reside within single sub cluster thus controlling load rm provides near linear scale simply adding sub cluster mechanism enables pooling resource cluster owned operated different team status version would like merge trunk termed mvp minimal viable product feature complete end end application execution flow ability span single application across multiple yarn sub cluster sub task completed part effort every patch reviewed ed committer thanks jian wangda karthik vinod varun arun thorough review federation designed built around yarn consequently minimal code change core yarn relevant jiras modify existing yarn code base yarn yarn also paid close attention ensure federation disabled zero impact existing functionality disabled default found bug went along fixed directly upstream trunk branch continuously rebasing feature branch merge straightforward cherry pick current version rather thoroughly tested currently deployed node federated yarn cluster running upwards job daily reliability idea follow extension improvement tracked umbrella jira yarn documentation quick start guide maven site yarn overall design doc slide deck used talk hadoop summit available umbrella jira yarn credit group effort could possible without idea hard work many folk would like specifically call giovanni botong ellen invaluable contribution also big thanks many folk community sriram kishore sarvesh jian wangda karthik vinod varun inigo vrushali sangjin joep rohith many helped shape idea code insightful feedback comment cheer subru carlo yarn url url yarn url yarn url url rn federation design pdf url yarn federation hadoop summit final pptx yarn url yarn url url"
    },
    "12061":{
        "ID":31746,
        "MESSAGE_ID":"CAPH+nLMfp2EZ=+nt4kCRaujMQyMp2=o3xahtjXbYc699EOwU-g@mail.gmail.com",
        "PARENT_ID":31739.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"status collective radar always interleaving review work challenge"
    },
    "12064":{
        "ID":31743,
        "MESSAGE_ID":"D59C34B0.37CAD%uma.gangumalla@intel.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Merge Storage Policy Satisfier (SPS) [HDFS-10285] feature branch to trunk",
        "SENT_FROM":"\"Gangumalla, Uma\" <uma.gangumalla@intel.com>",
        "TAGS":"existence",
        "BODY":"dear would like propose storage policy satisfier sps feature merge trunk working feature last several month feature received contribution different company feature development happened smoothly collaboratively jiras detailed design document available jira storage policy satisfier hdfs june pdf test report attached jira hdfs sps testreport pdf short description feature storage policy satisfier feature aim distributed hdfs application schedule block movement easily storage policy change happened user invoke satisfystoragepolicy api trigger block storage movement block movement task assigned datanodes movement happen distributed fashion block level movement tracking also distributed dns avoid load namenodes co ordinator datanode track block associated blockcollection send consolidated final result namenode movement result failure namenode schedule block movement development branch hdfs jiras resolved pending jiras think blocker merge posted combined patch easy merge review jenkins job test result looking good combined patch quick stats combined patch file changed insertion deletion added modified testcases thanks helper namely andrew wang anoop sam john du jingcheng ewan higgs jing zhao kai zheng rakesh ramakrishna surendra singh lilhore uma maheswara rao wei zhou yuanbo liu without member effort feature might reached state continue work following future work item presently user set satisfy policy separate rpc call idea provide hybrid api dfs setstoragepolicy src policy set satisfy one rpc call namenode reference hdfs presently blockstoragemovementcommand sends block trackid single heartbeat response block many given trackid example file contains many block bulk information go dn single network call come lot overhead one idea use smaller batch blockmovinginfo block storage movement command reference hdfs build mechanism throttle number concurrent move datanode allow specifying initial delay second source file scheduled satisfying storage policy example hbase interval archive move file different storage delete file large case may required immediately scheduling satisfy policy task sps related metric covered feel branch ready merge trunk please provide feedback objection proceed voting regard uma rakesh"
    },
    "12068":{
        "ID":31739,
        "MESSAGE_ID":"CABsaHTN1e8638ceGMsXHxwzStTHV9tW+68X_tPjUpdDmWhEkCA@mail.gmail.com",
        "PARENT_ID":31732.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"patch available patch available patch available patch available josh want make sure folk duplicating effort status radar regardless appreciate communication thanks unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "12072":{
        "ID":31735,
        "MESSAGE_ID":"CALcD3Pub5DktwUss2Hq_yX=-EjL=vvT4_QHME28-sgbd0=j1Yw@mail.gmail.com",
        "PARENT_ID":31734.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Carlos Rolo <rolo@pythian.com>",
        "TAGS":"not-ak",
        "BODY":"couple big deployment mv production try get help form testing validation best try contribute codebase regard carlos juzarte rolo cassandra consultant datastax certified architect cassandra mvp pythian love data rolo pythian twitter cjrolo skype cjrk linkedin linkedin com carlosjuzarterolo mobile www pythian com"
    },
    "12073":{
        "ID":31734,
        "MESSAGE_ID":"CAPH+nLNM4fGNq2GBySmEbJLxreB+ouH7QpKhzU0KAjg4mE_i2w@mail.gmail.com",
        "PARENT_ID":31733.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"initial contributor jake carl longer active project zhao andres paulo sylvain etc people publicly actively working mv issue atm"
    },
    "12074":{
        "ID":31733,
        "MESSAGE_ID":"CABLEZn4exrT=8z9ugKPyqfcfFdX+TMYrmssgKNpA23i_mawo9Q@mail.gmail.com",
        "PARENT_ID":31732.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi josh case best ben gmt josh mckenzie"
    },
    "12075":{
        "ID":31732,
        "MESSAGE_ID":"CAPH+nLOVGAtesY7DzWe-oRkyyiOGA8g17P+TZyVrsoyLEDNZiA@mail.gmail.com",
        "PARENT_ID":31700.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"not-ak",
        "BODY":"working following mv related issue time frame cassandra cassandra cassandra cassandra cassandra cassandra cassandra also keeping eye cassandra mean exhaustive list hoping help take care pressing critical issue feature automated de normalization dynamo ec architecture hard problem"
    },
    "12107":{
        "ID":31700,
        "MESSAGE_ID":"CAPbVhuP65YgiA2qDb20-r71se0zRSwrnq5XQirxfQebjCdjcGQ@mail.gmail.com",
        "PARENT_ID":31697.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"going best review change zhao making cassandra yeah definitely need committer nominee well note zhao going try address lot current issue listed thanks zhao"
    },
    "12110":{
        "ID":31697,
        "MESSAGE_ID":"CABsaHTOXo-32z4yKKQhqvJeU+c4Swvg05DYnohGsHEn2zzqhoA@mail.gmail.com",
        "PARENT_ID":31682.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"much solution huge thanks kurt excellent summarization benjamin zhaoyang recent development effort unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "12142":{
        "ID":31665,
        "MESSAGE_ID":"CAPbVhuOosRiGndaW6vXJ349i9eXR78fmM0Ca15w9EoTNhd02kA@mail.gmail.com",
        "PARENT_ID":31664.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"existence",
        "BODY":"thanks input benjamin sound like come lot conclusion certainly keen fixing mv really see way could avoid know already widely used production think would much easier time went basic implementation append first know hindsight unfortunately would say kind stuck fixing got really angry userbase jump ship miss central consensus mv business rule central outlined initial development mv general design goal also documented however completely cover current state mv certainly need set proof test support rule moment lot open ticket patch contribute good test cover many case however almost kind defining rule go granted difficult need test every possible write could make cassandra regard tickler colleague working something similar however deemed quite production ready yet released public may useful compare note interested"
    },
    "12143":{
        "ID":31664,
        "MESSAGE_ID":"CABLEZn5CBVYZcawRLQOM6bEFBKHmnkQkEtmHzP71HpMCKNFkYg@mail.gmail.com",
        "PARENT_ID":31663.0,
        "SUBJECT":"Re: State of Materialized Views",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi kurt first thanks elaborate post moment want come solution mv issue would like point quite active time ago pulled back also mentioned different word seems mv orphan started shiny promising feature came mv one reason gave general special try started work mv production willing overcome little obstacle fact quite stable started realize almost support community initial contributor turned back mv remained ready feature lot public documentation disclaimer say please use mv every time discussion pop around mv bottom line involved people much experience mv original contributor involved seems discussion based assumption superficial knowledge real knowledge experience research proof bringing code change difficult reason nobody like take old heritage take responsibility seems nobody feel confident enough bring critical change want touch critical part code path know test initially eager contribute help mv get mature time turned cumbersome frustrating additionally little time left daily routine work decided work solution solved specific problem mv really happy actually work quite well honest also back head write posing similar would really like contribute bring mv forward cost see many problem mv even even mentioned yet want come half baked assumption really lack mv reproducible code based proof work one example question add single column mv pk read argument think quite right somehow incomplete lot argument discussion totally scattered across jira seems every contributor know little bit little bit remember post post already thinking setting super reduced storage mock prove find edge case mv fail repair scenario answer question like code instead sentence like think remember comment unfortunately dtests super painful thing like slow super complicated simulate certain situation also see simple way unit test suite see way boot control multiple storage miss central consensus mv business rule central set proof test support rule proof falsify assumption reproducible way reason already come sth like time frustration see people feel like willing work together find solid solution level frustration could turn motivation last least care one solution created implement version tickler full table scan cl enforce read repair get rid damned built repair simply work well especially mv name number could bring repair time rf hour minute really could believe compaction storm piling compaction queue compaction falling behind sstables piling normal number sstables went noticeable change way reason cassandra even bound mv maybe amplify impact underlying design repair whole cluster node gb load single keyspaces took day finish sometimes took even day reaper many compaction showed problem model data readable due massive tombstone read timeouts someone interested detail ping benjamin gmt kurt greave"
    },
    "12144":{
        "ID":31663,
        "MESSAGE_ID":"CAPbVhuN5Coz9uEW1F3V-7PrbfcSAR=909xiAEbSReMZ_6WuKyA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"State of Materialized Views",
        "SENT_FROM":"kurt greaves <kurt@instaclustr.com>",
        "TAGS":"existence",
        "BODY":"wall text inc tl dr aiming come conclusion mv going make stable production really trying raise awareness involvement mv seems got excess mv bug pretty much make completely unusable production least incredibly risky also limited also appears many people totally across mv either least lack people currently looking avoid forgetting mv would like raise current issue get opinion direction go mv know historically lot discussion seems lot originally involved currently le involved thus making wild change mv might worth going back start think original requirement implementation probably worth summarising original goal mv maintain eventual consistency base table view table provide mechanism repair consistency base view aim keep convergence base view fast without sacrificing availability low mttr goal explicitly mentioned le implied performance must least good enough justify using rolling really tried measure yet measured comparison mv allow user redefine partitioning key also quick summary limitation implementation majority current problem revolve around primary key base table must included view optionally one non primary key column included view primary key column view primary key must declared null base table view one one primary key base map exactly one primary key view therefore never expect multiple row view partition multiple row base summarised bulk outstanding bug may missed notably would useful get decision making happening fixing bug bit involved likely possible solution implication also pretty much touch part code need collaboration across patch part reason trying bring attention cassandra using non pk column view pk mean ttl column base without ttling resulting view row potential solution change definition liveness info view row would probably work make moving away null requirement view pk harder need decide want pursue different solution cassandra inserting key ttl updating ttl column base exist view update liveness row mv thus mv row expires base current proposed solution work increase amount case need read existing data need reviewing would hurt benchmark change cassandra able leave column select including view filter cause serious issue proposed fix force user select column also included clause potentially compatibility issue fine checked mv creation people upgrading affected need reviewing also another issue addressed patch regarding timestamps choice timestamps led row deleted view come back fact allow non pk column view pk need reviewing also related somewhat cassandra issue shadowable tombstone patch sure resolved based zhao last comment another case bringing data back view thus making base view inconsistent need reviewing cassandra cassandra appear instance issue got couple potential solution back problem shadowable tombstone timestamps pretty involved would require depth review decision could greatly impact complexity usefulness mv cassandra node movement cause inconsistency paulo written patch sylvain raised concern use local batchlog confirmed belief eventual consistency guarantee broken need reviewing cassandra people probably aware one losing repaired status mv stream replayed write path potential solution place need commit work around least cassandra touch common repair issue probably look think directly relates mv anymore might worth removing materialized view component ticket probably still deserves bit attention anyone working ticket longer able either update ticket let know either take find poor soul stab would also nice get volunteer familiar mv review ticket another thing sure aiming guarantee eventual consistency base view however even using batchlog understanding achieve without tool synchronise base view however think tool currently exists seems like cassandra agrees anyone clarify actually requirement eventual consistency general advice day user steer clear mv moment however clear plan really stable think change fix mv may potentially require major version change least aim get although still need figure exactly issue interested hear people thought"
    },
    "12161":{
        "ID":31646,
        "MESSAGE_ID":"117596067.27496179.1499856585030.JavaMail.zimbra@redhat.com",
        "PARENT_ID":31643.0,
        "SUBJECT":"Re: Three scripts needed to run the server, Why?",
        "SENT_FROM":"Tomas Repik <trepik@redhat.com>",
        "TAGS":"not-ak",
        "BODY":"thanks guy joining discussion hope mind continue argue bit core intelligence functionality cassandra server lay java class reside jar archive place main functionality update take place ease use class let call wrapper script bin cassandra set environment class provide functionality wrapper us two script one sits bin include etc env file agree file bin edited user following quote wrapper script state opposite serious use case though likely require customization include developer enthusiast put customized include file cassandra sh according include file different environment file would two separate file meant purpose important configure option script user somewhat familiar bash bashy stuff could well hidden user wrapper script configuration option could sitting cassandra yaml file key value pair fashion like one solving issue user run would provide single configuration file maintainer would easily reproduce issue plugging single config file regarding updating wrapper script would updated course user modified config file would stay untouched etc directory speaking flexibility use case upstream default admin specific user specific configuration problem making config file modular would job duplicity case user care configuration want run server box always default option embedded java class think think solution ideal would glad hear assumption wrong tomas original message unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "12162":{
        "ID":31645,
        "MESSAGE_ID":"pony-dfc97369b577dbaa7726947d6048baeaf829911a-f0f803a46ca3912d53b22309b8eb25665bb5da62@dev.cassandra.apache.org",
        "PARENT_ID":31644.0,
        "SUBJECT":"Re: Three scripts needed to run the server, Why?",
        "SENT_FROM":"\"Murukesh Mohanan\"<murukesh.mohanan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"also use bash debug bin cassandra bash source lineno bash bin cassandra print filename file executed sourced line number currently executed easier find happened course bin sh need bash sure equivalent method would dash shell"
    },
    "12163":{
        "ID":31644,
        "MESSAGE_ID":"pony-dfc97369b577dbaa7726947d6048baeaf829911a-3ff5839a7ba0afcfcce0e4459d8cdfcf157a9022@dev.cassandra.apache.org",
        "PARENT_ID":31642.0,
        "SUBJECT":"Re: Three scripts needed to run the server, Why?",
        "SENT_FROM":"\"Murukesh Mohanan\"<murukesh.mohanan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"complain may useful someone else might appreciate added flexibility would personally opposed single script would rather edit something might cause conflict overwritten upgrade location include environment file configurable mean entirely different corner filesystem also think case two configurable file useful example administrator would keep everything cassandra install directory read except upgrade keep common include file user common configuration server let user use cassandra conf directory environment file configure everything else wish running instance cassandra taking advantage common install base setup admittedly common use case modifying bin cassandra wrong imho two file need examined included file environment file simply need override setting use environment file ultimate override since sourced include"
    },
    "12164":{
        "ID":31643,
        "MESSAGE_ID":"7a3778e9-f52d-e68e-a335-3271c3ce2afe@pbandjelly.org",
        "PARENT_ID":31642.0,
        "SUBJECT":"Re: Three scripts needed to run the server, Why?",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"standard unix linux system policy editable configurable file go etc proper edit file bin usr bin path contains bin usr bin file executables run user basic separation runnable file tunable configuration file intended edited may multiple executables bin usr bin use common configuration etc may single purpose configs contained executable script would repeating well possibly creating unexpected result aligned user additionally package manager like apt rpm overwrite configuration file edited hopefully upgrade hose user edited change etc back regardless fundamental change executables usr bin overwritten package manager since user expected edit really basic system administration common policy different software package group common configs meant edited split various configs make sense may utilized various executables user may deviate common practice see fit may also introduce self inflicted problem kind regard michael"
    },
    "12165":{
        "ID":31642,
        "MESSAGE_ID":"427831796.26900432.1499783992435.JavaMail.zimbra@redhat.com",
        "PARENT_ID":31641.0,
        "SUBJECT":"Re: Three scripts needed to run the server, Why?",
        "SENT_FROM":"Tomas Repik <trepik@redhat.com>",
        "TAGS":"not-ak",
        "BODY":"thanks answer help much read several time already know still answer question need three file instead single file mention multiple different config file file le configuration file set environment property server single file one would modify order tweak server need current situation search many different file find place option configured original message unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "12166":{
        "ID":31641,
        "MESSAGE_ID":"pony-dfc97369b577dbaa7726947d6048baeaf829911a-759bde1f62ad2b57f3d84665304f9fcc22b5a33b@dev.cassandra.apache.org",
        "PARENT_ID":31640.0,
        "SUBJECT":"Re: Three scripts needed to run the server, Why?",
        "SENT_FROM":"\"Murukesh Mohanan\"<murukesh.mohanan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"bin cassandra script explanation url convenience fragment sourced order set one variable called include placed number location searched order lowest priority search path directory startup script since location sample project tree almost work box serious use case though likely require customization include production installation recommended copy sample one usr share cassandra cassandra sh usr local share cassandra cassandra sh opt cassandra cassandra sh make modification would rather configure startup entirely environment disable include exporting empty cassandra include ensuring include file exist aforementioned search list aware entirely responsible populating needed environment variable use single environment file wish"
    },
    "12167":{
        "ID":31640,
        "MESSAGE_ID":"1580920776.26893671.1499782129607.JavaMail.zimbra@redhat.com",
        "PARENT_ID":null,
        "SUBJECT":"Three scripts needed to run the server, Why?",
        "SENT_FROM":"Tomas Repik <trepik@redhat.com>",
        "TAGS":"not-ak",
        "BODY":"greeting working cassandra year still wonder one thing run server bash script cassandra us another script cassandra sh us yet another bash script cassandra env sh reason behind single file setting environment running server thanks answer tomas unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "12191":{
        "ID":31616,
        "MESSAGE_ID":"1321524235.2496903.1498850216118@mail.yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"Pre commit builds seem broken",
        "SENT_FROM":"Eric Payne <erichadoop-1@yahoo.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hey anyone know precommit build seem broken try kick one hang long time produce following pendingh label hadoop label hadoop label hadoop label hadoop label hadoop label hadoop label hadoop label hadoop label hadoop label hadoop label hadoop label hadoop label hadoop waiting pending item get node assigned beam label hadoop beam label hadoop beam label hadoop beam label hadoop beam label hadoop beam label hadoop beam label hadoop beam label hadoop cassandra label hadoop cassandra label hadoop cassan"
    },
    "12214":{
        "ID":31593,
        "MESSAGE_ID":"425f83b2-d3a8-89a7-9062-67c50b99345b@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.11.0 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url first release new series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "12215":{
        "ID":31592,
        "MESSAGE_ID":"49bb7a1b-abcc-ab34-48d2-d6741a1812eb@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.14 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url unsubscribe mail dev unsubscribe cassandra apache org additional command mail dev help cassandra apache org"
    },
    "12319":{
        "ID":31488,
        "MESSAGE_ID":"ad585aed-795e-fa40-9b16-706f4921efc5@apache.org",
        "PARENT_ID":31472.0,
        "SUBJECT":"Re: New contribution - Burst Hour Compaction Strategy",
        "SENT_FROM":"Stefan Podkowinski <spod@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hello pedro thanks interested contributing apache cassandra creating new compaction strategy easy task several thing make obvious developer understand first using github change code base done separate branch fork apache repository make possible others quickly compare change current code base using web interface technically using new repo work well convenient others start communicating cassandra branch used basis change talking git would also suggest learn creating git history code easy review may want squash code clean style commits mentioned implementing new compaction strategy quite effort theory motivation behind least interesting actual implementation therefor could good idea design document describing work different abstraction level also make likely get people involved discussion everyone check source code detail stefan"
    },
    "12330":{
        "ID":31477,
        "MESSAGE_ID":"CACUnPaBSUqxx_brL+uKWFp_Fk+jHJdTbcEhV69H1Hifpa-WUxg@mail.gmail.com",
        "PARENT_ID":31476.0,
        "SUBJECT":"Re: Definition of QUORUM consistency level",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"would little weird change definition quorum mean majority mean something majority single use case sound like want introduce new cl half"
    },
    "12331":{
        "ID":31476,
        "MESSAGE_ID":"CAPw3+DiwgfjCKYZsPvgweMeQ4D9HzcoBUDRvOzkhgXZv6z_BbQ@mail.gmail.com",
        "PARENT_ID":31475.0,
        "SUBJECT":"Re: Definition of QUORUM consistency level",
        "SENT_FROM":"Dikang Gu <dikang85@gmail.com>",
        "TAGS":"property",
        "BODY":"justin suggest quorum consistent level block write num replica today read request need access num replica node provide enough strong consistency dikang"
    },
    "12332":{
        "ID":31475,
        "MESSAGE_ID":"CAJGFm2VjkMBacBurxNoJ5OxyMMY85RRUHjSNkMoOR607XwLEjA@mail.gmail.com",
        "PARENT_ID":31474.0,
        "SUBJECT":"Re: Definition of QUORUM consistency level",
        "SENT_FROM":"Justin Cameron <justin@instaclustr.com>",
        "TAGS":"property",
        "BODY":"write read would sufficient achieve strong consistency overlap particular case could potentially use quorum write two read vice versa still achieve strong consistency add additional node future would obviously longer work also benefit dubious since node still need accessible perform writes would also guess unlikely provide significant performance increase justin"
    },
    "12333":{
        "ID":31474,
        "MESSAGE_ID":"CAPw3+Dh2g24ccOnjPHaV2R58Y=2cR6vvisTvjRfeLZdjoh-5Ww@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Definition of QUORUM consistency level",
        "SENT_FROM":"Dikang Gu <dikang85@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hello use case consistent read write request replica cluster according setup interesting read write quorum request blocked replica accessing write read replica quorum request replica think necessary overlap node even replication factor case suggest change quorumfor keyspace code separate case read write request reduce one replica request read path concern thanks dikang"
    },
    "12335":{
        "ID":31472,
        "MESSAGE_ID":"CALVQ-8GcNSBBM2f5bX83jLtyw3_XLkg5Bkgrv74s2UKK_pxKsg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"New contribution - Burst Hour Compaction Strategy",
        "SENT_FROM":"Pedro Gordo <pedro.gordo1986@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hi part msc project done new compaction strategy cassandra called burst hour compaction strategy find jira ticket url nutshell background compaction strategy triggered predefined interval freeing resource time day also try make key unique across sstables key present configurable number table please check jira ticket full description code found url please let know think improvement done idea ticket description since new cassandra imagine lot assumption might best mb maximum table size looking forward working community best pedro gordo"
    },
    "12405":{
        "ID":31402,
        "MESSAGE_ID":"CAPGsmzgLResE0fcpKnyg=cO+NLTk1yPwSFiFzmhUXOQ1zjJvQQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop3.0.0-alpha2-Docker run time launch errors.",
        "SENT_FROM":"Jasson Chenwei <ynjassionchen@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi problem launching docker container hadoop alpha found application failed start initializing docker container caused docker find launch contaienr sh workdir log info classpath private script path home cwei project hadoop alpha yarn temp nm local dir nmprivate application container launch container sh info classpath private token path home cwei project hadoop alpha yarn temp nm local dir nmprivate application container container token info classpath private jar path home cwei project hadoop alpha yarn temp nm local dir nmprivate application container info classpath container container transitioned scheduled running info classpath starting resource monitoring container info classpath container working dir home cwei project hadoop alpha yarn temp nm local dir usercache cwei appcache application container since containerlaunch write launch script well token file yarn temp nm local dir nmprivate application id container id however docker working dir yarn temp nm local dir usercache user appcache application id container id miss match docker locate launch script found launch script initially written temporary directory finally copied workdir logic implemented defaultcontainerexecutor find implemented linuxcontainerexecutor sure configuration issue appreciate help ever tried docker container runtime hadoop alpha wei"
    },
    "12412":{
        "ID":31395,
        "MESSAGE_ID":"CAPGsmzhqj7sNmpTpp5mcC99pmxZgGGtppoUxRnSfKZpP4T4fAg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Errors reported by contianer-executor on Hadoop-3.0.0-alpha2",
        "SENT_FROM":"Jasson Chenwei <ynjassionchen@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi planning launch mapreduce application docker support hadoop alpha execute bin container executor used hadoop launch secured container get usage container executor checksetup container executor mount cgroups disabled container executor tc modify state disabled container executor tc read state disabled container executor tc read stats disabled container executor run docker container executor command command args initialize container appid token nm local dirs nm log dirs cmd app launch container appid containerid workdir container script token pidfile nm local dirs nm log dirs resource disabled launch docker container appid containerid workdir container script token pidfile nm local dirs nm log dirs docker command file resource signal container container pid signal delete user relative path list user relative path clearly container executor run docker disabled default question enable option via building option configuration option appreciate anyone help wei"
    },
    "12489":{
        "ID":31318,
        "MESSAGE_ID":"CO2PR00MB0198056B8ED6351DD9C8181E8BEF0@CO2PR00MB0198.namprd00.prod.outlook.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra 2.1.13: Using JOIN_RING=False",
        "SENT_FROM":"Anubhav Kale <Anubhav.Kale@microsoft.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hello inspiration cassandra summit talk last year trying setup cluster coordinator node setup join ring false env sh disabled auth yaml node able start fine however running problem node marked join ring false continue store data tried python driver whitelistedpolicy notice message like able send query node marked coordinator also changed scala driver support whitelisting see thing missing way concretely tell coordinator node getting request client opscenter thanks debug cassandra cluster control connection removing host found peer metadata info cassandra cluster cassandra host removed debug cassandra cluster removing host debug cassandra cluster control connection removing host found peer metadata info cassandra cluster cassandra host removed debug cassandra cluster removing host debug cassandra cluster control connection removing host found peer metadata info cassandra cluster cassandra host removed debug cassandra cluster removing host debug cassandra cluster control connection finished fetching ring info debug cassandra cluster control connection rebuilding token map due topology change debug cassandra metadata user function table found debug cassandra metadata user aggregate table found debug cassandra cluster control connection created debug cassandra pool initializing connection host debug cassandra pool initializing connection host"
    },
    "12563":{
        "ID":31244,
        "MESSAGE_ID":"CAGB5D2YvkMtWNpwi0uB19-+fj_oNoYhr12PirOgXsyxgr3TkVQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"3.0.0-alpha3 release status update",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk planning releasing alpha next month may th biggest piece work targeted release completing user facing erasure coding change track blocker also need push also written new status update wiki also reproduced url thanks everyone hard work thus far best andrew red flag le month new blocker surfaced need keep pushing miscellaneous blocker hadoop shade guava everywhere progressing though trying resolve curator issue hadoop upgrade protobuf waiting guava shading first hadoop kerby break multiple spn support uncovered secure testing oozie unknown kerby bug lurking yarn fst licensing assignee yet alpha feature erasure coding good burndown remaining blocker alpha seems track hdfs balancer fencing fails writing erasure coded lock file close commit hdfs dfsstripedoutputstream implement syncable api related issue affect yarn hbase beta feature addressing incompatible change yarn compatibility still need automated testing hdfs compatibility still need automated testing classpath isolation hadoop sean yet resumed work still plan complete api related subtasks alpha compat guide hadoop daniel started working"
    },
    "12582":{
        "ID":31225,
        "MESSAGE_ID":"CAF05tLOE7UryofaH39iG=vT3nA6a0qFH4TNpRD4Lv1uj-97ebg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"VHPC at ISC extension - Papers due May 2",
        "SENT_FROM":"VHPC 17 <vhpc.dist@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"call paper th workshop virtualization high performance cloud computing vhpc held conjunction international supercomputing conference high performance june frankfurt germany springer lncs proceeding date june workshop url url paper submission deadline may extended springer lncs rolling abstract submission abstract paper submission link url keynote satoshi matsuoka professor computer science tokyo institute technology john goodacre professor computer architecture university manchester director technology system arm ltd research group chief scientific officer kaleao ltd call paper virtualization technology constitute key enabling factor flexible resource management modern data center particularly cloud environment cloud provider need manage complex infrastructure seamless fashion support highly dynamic heterogeneous workload hosted application customer deploy similarly hpc environment increasingly adopting technique enable flexible management vast computing networking resource close marginal provisioning cost unprecedented history scientific commercial computing various virtualization technology contribute overall picture different way machine virtualization capability enable consolidation multiple underutilized server heterogeneous software operating system os capability live migrate fully operating virtual machine vm short downtime enables novel dynamic way manage physical server level virtualization containerization capability isolate multiple user space environment allow coexistence within kernel promise provide many advantage machine virtualization high level responsiveness performance virtualization allows physical nics hbas take traffic multiple vms container network virtualization capability create logical network overlay independent underlying physical topology ip addressing provides fundamental ground top evolved network service realized unprecedented level dynamicity flexibility increasingly adopted paradigm software defined networking sdn promise extend flexibility control data plane network path publication accepted paper published springer lncs proceeding volume topic interest vhpc program committee solicits original high quality submission related virtualization across entire software stack special focus intersection hpc cloud major topic virtualization supercomputing environment hpc cluster hpc cloud grid level virtualization container docker rkt singularity shifter lightweight specialized operating system unikernels optimization virtual machine monitor platform hypervisors hypervisor support heterogenous resource gpus co processor fpgas etc virtualization support emerging memory technology virtualization enterprise hpc microvisors software defined network network virtualization management deployment virtualized environment orchestration kubernetes workflow pipeline container based composability performance measurement modelling monitoring virtualized cloud workload virtualization data intensive computing big data processing hpc convergence adaptation hpc technology cloud high performance network rdma etc arm based hypervisors arm virtualization extension virtualization cloud based storage system gpu fpga many core accelerator virtualization job scheduling control policy container placement virtualized environment cloud reliability fault tolerance high availability qos sla virtualized environment iaa platform cloud framework apis large scale virtualization domain finance government energy efficient power aware virtualization container security configuration management tool container including cfengine puppet emerging topic including multi kernel approach numa hypervisors workshop virtualization high performance cloud computing vhpc aim bring together researcher industrial practitioner facing challenge posed virtualization order foster discussion collaboration mutual exchange knowledge experience enabling research ultimately provide novel solution virtualized computing system tomorrow workshop one day length composed min paper presentation followed min discussion section plus lightning talk limited minute presentation may accompanied interactive demonstration important date rolling abstract submission may paper submission deadline extended may acceptance notification june workshop day july camera ready version due chair michael alexander chair scaledinfra technology austria anastassios nanos co chair ntua greece balazs gerofi co chair riken advanced institute computational science japan program committee stergios anastasiadis university ioannina greece jakob blomer cern europe ron brightwell sandia national laboratory usa eduardo cesar universidad autonoma de barcelona spain julian chesterfield onapp uk stephen crago usc isi usa christoffer dall columbia university usa patrick dreher mit usa robert futrick cycle computing usa maria girone cern europe kyle hale northwestern university usa romeo kinzler ibm switzerland brian kocoloski university pittsburgh usa nectarios koziris national technical university athens greece john lange university pittsburgh usa che rung lee national tsing hua university taiwan giuseppe lettieri university pisa italy qing liu oak ridge national laboratory usa nikos parlavantzas irisa france kevin pedretti sandia national laboratory usa amer qouneh university florida usa carlos reano technical university valencia spain thomas ryd cfengine norway na zhang vmware usa borja sotomayor university chicago usa craig stewart indiana university usa anata tiwari san diego supercomputer center usa kurt tutschku blekinge institute technology sweden yasuhiro watashiba osaka university japan nicholas wright lawrence berkeley national laboratory usa chao tung yang tunghai university taiwan paper submission publication paper submitted workshop reviewed least two member program committee external reviewer submission include abstract key word mail address corresponding author must exceed page including table figure main font size smaller point submission paper regarded commitment paper accepted least one author register attend conference present work accepted paper published springer lncs volume format must according springer lncs style initial submission pdf author accepted paper requested provide source file format guideline ftp ftp springer de pub tex latex llncs latexe llncse zip abstract paper submission link url lightning talk lightning talk non paper track synoptical nature strictly limited minute used gain early feedback ongoing research demonstration present research result early research idea perspective position interest community submit abstract via main submission link general information workshop one day length held conjunction international supercomputing conference high performance isc june frankfurt germany"
    },
    "12759":{
        "ID":31048,
        "MESSAGE_ID":"etPan.58d2b733.380b803.20b@instagram.com",
        "PARENT_ID":30982.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Fran\u00e7ois Deli\u00e8ge <francois@instagram.com>",
        "TAGS":"process",
        "BODY":"thanks everybody chiming heard concern rule id like move forward concrete step direction first actionable step increase visibility test coverage ideally would integrated jenkins run apache michael shuler something take look let know help second step imho get agreement among committers patch decrease test coverage accepted committer could pmc throw question vote finally used mad data analytics skill look ratio non committers contributor last month turn author committers mentioned testing thread jason started think testing think make sense consider opening non committers today testing time range hour unitests day integration test id like explore throw hardware problem id appreciate pointer talk"
    },
    "12826":{
        "ID":30981,
        "MESSAGE_ID":"CAFmPmDcYZE_a=zVHVQDmue3JeNrOdseoQ1fOrBmN6GsX93QnRQ@mail.gmail.com",
        "PARENT_ID":30970.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Qingcun Zhou <zhouqingcun@gmail.com>",
        "TAGS":"technology",
        "BODY":"wanted contribute unit test case however unit test approach cassandra seems weird looking example sure anyone else feeling usually least java project seen people use mock mockito powermock dependency particular test case verify behavior using junit assert mockito verify however use mockito cassandra reason without easy people think adding unit test case besides lot singleton already handful ticket eliminate maybe missed something seeing much progress anyone actively working maybe related problem unit test case method annotated beforeclass initialization work however initializes direct dependency also indirect one including loading cassandra yaml initializing indirect dependency seems like functional integration test unit test style"
    },
    "12837":{
        "ID":30970,
        "MESSAGE_ID":"908DDC6E-A346-4049-B9C4-6511CB03D991@gmail.com",
        "PARENT_ID":30969.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"url may interesting context regarding worked get rid singleton static initialization"
    },
    "12838":{
        "ID":30969,
        "MESSAGE_ID":"CACUnPaAdEbCyMteRHao89qwYEurhFdxkOu9L1W+MP5K=JvGZ+w@mail.gmail.com",
        "PARENT_ID":30968.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"would like think someone refactors existing code making testable test course acceptable merit fact opinion sometimes make sense type refactorings sole purpose improving stability testability opposed mixing feature referenced issue fixed one early email fix couple line code refactoring codebase make testable would huge effort wish time created cassandra follow intent working compaction purely architectural standpoint think type thing done throughout codebase removing singleton good first step vote rip bandaid move forward"
    },
    "12851":{
        "ID":30956,
        "MESSAGE_ID":"CABLEZn49KkND3KfyXD9RhMcz2En4b1Gb=So=Wn0sai-kLu8Wpg@mail.gmail.com",
        "PARENT_ID":30954.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"process",
        "BODY":"think refactor project little risk increase test coverage needed rule discipline perseverance small iteration small iteration small iteration refactor smallest possible unit split large class smaller one remove god class pulling single method aspect maybe factor method method maintain compatibility build facade adapter proxy object compatibility refactoring process break interface really necessary risky push state corner refactoring single method pas global state parameter single method becomes testable iterate like maybe time likely break much fewer thing big bang refactor make code testable small step global state biggest disease history programming ever seen singleton also supergreat test static method avoided cost contain state tested idempotent static method problem testable depends somehow static method singleton push bad guy corner harm killed without risk end instead calling someclass instance dowhatever spread encapsulated single method like testableclass dowhatever someclass instance dowhatever whole singleton retrieved testableclass getsomeclass either mock hell inject non singleton instance class test runtime gmt jason brown"
    },
    "12852":{
        "ID":30955,
        "MESSAGE_ID":"CAHjqPuJyOtmBfftp9FGkxm9A0r4cej=oO4GmRYuUC34zBbRS6w@mail.gmail.com",
        "PARENT_ID":30954.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"francois point code coverage new code think make lot sense wrt large feature like current work much simpler mentally least isolate changed section show better code coverage report small patch might harder achieve however patch come test unless truly trivial patch might work"
    },
    "12853":{
        "ID":30954,
        "MESSAGE_ID":"CAHjqPu+d=DQDb5OM4oifi3sooy_s0gLhcRi+LeTuwzYk5P6oJA@mail.gmail.com",
        "PARENT_ID":30953.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"someone spent lot time looking singleton topic past blake brings great perspective figuring communicating best test system course incrementally making system easier work test seems like achievable goal"
    },
    "12856":{
        "ID":30951,
        "MESSAGE_ID":"etPan.58cc0fcd.51305f69.33c@apple.com",
        "PARENT_ID":30949.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"existence",
        "BODY":"think getting little ahead talking di framework even becomes something worth talking wed need made serious progress un spaghettifying cassandra first place extremely tall order adding di framework right would like throwing gasoline raging tire fire removing singleton seems come every month usually abandoned people figure difficult remove properly think removing long term goal really need something immediately actionable otherwise nothing going happen well discussion year everyone angry cassandra still ready production year release said reason singleton regularly get brought extensive testing anything cassandra pretty much impossible since code basically big web interconnected global state testing anything isolation done distributed database crazy chronic problem handicap ability release stable database point think pragmatic approach would draft enforce coding standard applied day day development drive incremental improvement testing testability project tested tested write new code talk rest cassandra testable fix bug old code way testable also guideline around refactoring wildly untested section get started etc thought"
    },
    "12860":{
        "ID":30947,
        "MESSAGE_ID":"CAGptfvY7TiaGae=mykQCx6NY7mHP1Y_+7u0LUjppS-BXmOqb-Q@mail.gmail.com",
        "PARENT_ID":30944.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Ryan Svihla <rs@foundev.pro>",
        "TAGS":"technology",
        "BODY":"different di framework different initialization cost even inside spring even depending wire dependency use autowire reflection parse giant xml explicit dependency etc back assertion awhile community benching different di framework perf thing find benchmark galore quick google practical cost also dependent lifecycles used transient versus singleton style example feature used interceptor depending implementation get expensive think quantification cost framework considered something like dagger us codegen wager cost compile time benched looking feature set guess spring know experience even optimal setting slower initialization time di hand minimum sometimes substantial"
    },
    "12864":{
        "ID":30943,
        "MESSAGE_ID":"CAFmPmDfWL8wCPoF9vDOtn_ovEBVZKRns-NnZpbdny7H6YzLgWQ@mail.gmail.com",
        "PARENT_ID":30939.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Qingcun Zhou <zhouqingcun@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"performance consideration valid concern say difficult write unit test case mean sometimes need make method variable package private create package private constructor inject internal state etc like annoying difficult agree good coding practice lead easier unit testing talk code coverage new code encourage people contribute unit test case existing code"
    },
    "12868":{
        "ID":30939,
        "MESSAGE_ID":"CABNXB2BE8qz1vb_pcV6V_SoYkCnw=MJgOv1tpfC=7JNOTvvC_Q@mail.gmail.com",
        "PARENT_ID":30938.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"otherwise difficult write unit test case pull dependency injection framework make unit testing easier generally sign code design issue constructor injection technique enough unit test code without pull external libs"
    },
    "12869":{
        "ID":30938,
        "MESSAGE_ID":"CAHjqPuJMW9VBcUg9PGQrwQQxC+U0qFVnp4Y8Stfi2uCPvc4NXA@mail.gmail.com",
        "PARENT_ID":30937.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"maintainer pretty much framework due performance reason overhead dependency management problem"
    },
    "12870":{
        "ID":30937,
        "MESSAGE_ID":"CAFmPmDc9Cuz_TieUJCQt3srR3bHifDo3dvGfm-0Q=4DRnvUHRg@mail.gmail.com",
        "PARENT_ID":30935.0,
        "SUBJECT":"Re: Code quality, principles and rules",
        "SENT_FROM":"Qingcun Zhou <zhouqingcun@gmail.com>",
        "TAGS":"technology",
        "BODY":"since plan integrate dependency injection framework like dagger otherwise difficult write unit test case"
    },
    "12874":{
        "ID":30933,
        "MESSAGE_ID":"etPan.58cacc26.35085056.245@instagram.com",
        "PARENT_ID":null,
        "SUBJECT":"Code quality, principles and rules",
        "SENT_FROM":"Fran\u00e7ois Deli\u00e8ge <francois@instagram.com>",
        "TAGS":"process",
        "BODY":"hi dev principle implement team evaluating large production deployment noticed broken test working several patch however large part code base wildly untested make new contribution delicate ultimately reduces confidence new release slows adoption future release would like constructive discussion around question principle community place code quality ensuring long term productivity good implementationg rule principle get started initial proposal principle test always pas starting point care test failure stop writing test recurring failing test carry signal better deleted code tested assuming align principle proposal implementation rule new release pass test flakiness patch failing test test touching code path code test fixed prior accepted bug fix one test fails prior fix pass fix new code least test coverage looking forward reading feedback fdeliege"
    },
    "12969":{
        "ID":30838,
        "MESSAGE_ID":"CAGptfvYz+Spxb2nrHHgkjqS6qoALhUvKh9R7z-nb5bAtEYYcew@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Consistency improvement idea for cutting down on the new user ramp up time.",
        "SENT_FROM":"Ryan Svihla <rs@foundev.pro>",
        "TAGS":"existence",
        "BODY":"posted jira already url wanted toss mailing list time get broader feedback supporting user year time conversation week correct consistency level given user depending need use case usually take quite awhile pay bill happy work occurred see three common pattern people want maximum availability throughput care thing inconsistent awhile people want maximum consistency even want able read writes people want mix tolerate able read writes course long tail weird combination cl advanced user admittedly often dig find issue consistency thought process well cutting across goal often grant valid tradeoff outside toss idea global version three arguably come jira may attempt address larger fashion summarize jira remove serial consistency bucket confuses everyone likewise require condition insert serial local serial used new cl set read writes eventually consistent local one highly consistent local quorum transactionally consistent local serial minimize amount people need think cl correct starting point first application would prevented awful escalation seen open name including global level set cqlsh highly consistent default new sysadmins cassandra often using cqlsh spelunk complaint missing data know set higher frequent problem cl one default surprise new user clqsh performance sensitive use often either use cl end goal whatever shape take match people expectation new cassandra consistently require advanced learning distributed theory put way correct cl choice take second often self evident thanks ryan svihla"
    },
    "13023":{
        "ID":30784,
        "MESSAGE_ID":"CABLEZn5f-Lot2nnPR2n3kReVACRDby=5WeriM6-bsM2q1wYzHA@mail.gmail.com",
        "PARENT_ID":30782.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"german saying sometimes see wood lot tree schrieb duyhai doan"
    },
    "13024":{
        "ID":30783,
        "MESSAGE_ID":"CABLEZn5AsZVK45RVFT5DshQ7Jrb4fUR06t-Vw4kYkq4z5-Er_A@mail.gmail.com",
        "PARENT_ID":30781.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"maybe absolutely right bad idea hmpf schrieb benjamin roth"
    },
    "13025":{
        "ID":30782,
        "MESSAGE_ID":"CABNXB2AN9kaC3v9hPg3crA66hN54EDFRXg0_=+k0Mepn-4KfJA@mail.gmail.com",
        "PARENT_ID":30781.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"problem distributed system hard reason got caught many time past"
    },
    "13026":{
        "ID":30781,
        "MESSAGE_ID":"CABLEZn4VLtdT_70Gzyr_SWT07E-O7udcHK4ZbdQX-Wn-9LUU4A@mail.gmail.com",
        "PARENT_ID":30780.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sorry answer fast maybe right schrieb benjamin roth"
    },
    "13027":{
        "ID":30780,
        "MESSAGE_ID":"CABLEZn7_H-KTG=_q+FBE7KbaBh5fS-jov5jGHdCXyvo2w_r67Q@mail.gmail.com",
        "PARENT_ID":30779.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"change partitioner schrieb duyhai doan"
    },
    "13028":{
        "ID":30779,
        "MESSAGE_ID":"CABNXB2AMKcQGRsu4tFxgZXbGViqfGJ6u31+WYQXkCHoxk1CNxg@mail.gmail.com",
        "PARENT_ID":30778.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"DuyHai Doan <doanduyhai@gmail.com>",
        "TAGS":"existence",
        "BODY":"achieved done scientific research yet guess mv partitioner could trick instead applying regular partitioner mv partitioner would calculate pk base table always possible apply regular partitioner main purpose mv avoid drawback nd index architecture scan lot node fetch result mv since give partition key guarantee hit single node put mv data node base table data le thing nd index let take dead simple example create table user user id uuid primary key email text create mv user email select user user id null email null primary key email user id select user email email xxx query find user id corresponds email xxx mv partitioner idea work"
    },
    "13029":{
        "ID":30778,
        "MESSAGE_ID":"CABLEZn65i2R-a28AU3dfXX6=R_vfDbOiMv_kmV690Lby5bH9iA@mail.gmail.com",
        "PARENT_ID":30777.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"existence",
        "BODY":"reading mv paragraph post idea popped problem mv inconsistency inconsistent range movement mv contract broken happens base data replica data reside different host base data replica would stay host rebuild remove would always stream matching part base table mv idea make replica always stay local regardless token mv would point would solve problem rebuild remove node would break mv contract write always stay local mean replication happens sync mean quorum write base table guarantee instant data availability quorum read view save network roundtrips request response handling help keep cluster healthier case bulk operation like repair stream rebuild stream write load stay local spread across whole cluster think make load situation predictable achieved done scientific research yet guess mv partitioner could trick instead applying regular partitioner mv partitioner would calculate pk base table always possible apply regular partitioner create proper jira monday currently sunday family want back thought right feedback appreciated gmt edward capriolo"
    },
    "13032":{
        "ID":30775,
        "MESSAGE_ID":"85F74043-2D38-4354-9059-F5CF32FC236D@gmail.com",
        "PARENT_ID":30773.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"really meant loaded question sincere answer secondary index suck many use case invaluable actual intended purpose idea many time rewritten production ready narrow use case defined cardinality real trigger use case still alternative mv alternative cdc never implemented trigger since level surprise developer"
    },
    "13039":{
        "ID":30768,
        "MESSAGE_ID":"CABLEZn586EqaQLEjUMw8AZOP4_oB2TEEn7T=0yuG9tb8v4uYDg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Consistent vs inconsistent range movements",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi anyone tell difference consistent inconsistent range movement exactly make consistent inconsistent situation occur would great get correct deep understanding mv improvments intuition tell rebuild removenode break mv consistency prove need information also happy code reference tedious read code get overview without prose information thanks advance"
    },
    "13042":{
        "ID":30765,
        "MESSAGE_ID":"CAGX0URiLaZ76kiUL=JHzN28UFD+jK6Yhp4PerZSDCMOVQtavyg@mail.gmail.com",
        "PARENT_ID":30764.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"S G <sg.online.email@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cassandra use trigger internally something would make pretty good case trigger ready production use otherwise would tend neglected feature active developer would good reason add feature make test suite pas"
    },
    "13049":{
        "ID":30758,
        "MESSAGE_ID":"CABs7kweJAy1mqw1copr35fZV-OHwv-ZhT3ON8NuifwPy+U6tsg@mail.gmail.com",
        "PARENT_ID":30757.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"Matija Gobec <matija0204@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"much work done trigger since came basically always marked experimental never got usable production ready state cdc going become new way thing made look trigger jeff said never met heard anyone using trigger production"
    },
    "13050":{
        "ID":30757,
        "MESSAGE_ID":"CA+EmchkEJbJGwBRJBjD+1mEA2oj+Un8QemwoiZpgMb8JsGx3BA@mail.gmail.com",
        "PARENT_ID":30755.0,
        "SUBJECT":"Re: State of triggers",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"far know never met anyone wrote used trigger production imagine number people small regardless version"
    },
    "13052":{
        "ID":30755,
        "MESSAGE_ID":"CAGX0URhLzOCfXVncEjCZutYzK5fYdhY-98ebsZD+F=0zMdoYpw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"State of triggers",
        "SENT_FROM":"S G <sg.online.email@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi able find documentation current state trigger production ready post url new cassandra prototype trigger support say current implementation experimental work trigger cassandra declared final production ready version cassandra expect trigger stable enough requirement develop solution several cassandra user running different version upgrade easily one using version smallest cassandra version production ready trigger would really good know also advice common gotchas cassandra trigger would great know thanks sg"
    },
    "13056":{
        "ID":30751,
        "MESSAGE_ID":"CABLEZn77HHYk_JxMvPDTqa6myRbXQJ-StHUgsz+M8LVTLVAqQA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Need feedback on CASSANDRA-13066",
        "SENT_FROM":"benjamin roth <brstgt@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi guy started working intention offer table setting allows operator optimize mv streaming case simply purpose know mv write path streaming ommitted data append pk added mv stale data created race condition first patch url please consider final test missing logic still missing introducing table option would prefer mv fast stream say maybe even verbose name append tell data filled could also hint future optimization like cassandra would allow tell kind streaming matter treat data also still considered ticket fast streaming mv must repaired separately explicitly write path repair mv must included repair unnecessary repair work could probably break local consistency base table mv manual view normally repaired write path base table least log warning like manually repairing material view may lead inconsistency would really love get feedback putting effort thanks"
    },
    "13078":{
        "ID":30729,
        "MESSAGE_ID":"AT5PR84MB022556C6244CC60678419D119E530@AT5PR84MB0225.NAMPRD84.PROD.OUTLOOK.COM",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop 3.0.0-alpha2 startup issue",
        "SENT_FROM":"\"Pol, Daniel (BigData)\" <daniel.pol@hpe.com>",
        "TAGS":"not-ak",
        "BODY":"hi lab system running ok alpha wanted switch alpha unfortunately run issue trying bring hdfs even reformatting keep getting type error hdfs daemon log error namenode namenode namenode java main failed start namenode java lang abstractmethoderror classpath lorg apache common configuration subsetconfiguration classpath metricsconfig java classpath metricssystemimpl java classpath metricssystemimpl java classpath metricssystemimpl java classpath metricssystemimpl java classpath metricssystemimpl java classpath defaultmetricssystem java classpath defaultmetricssystem java classpath namenode java classpath namenode java info util exitutil exitutil java terminate exiting status wondering seen similar error fix made sure setting point alpha install nice day dani learn le know"
    },
    "13353":{
        "ID":30452,
        "MESSAGE_ID":"CA+zgwZBKKn9Xb-cnMiH0x+p4uG=vYix0CLBcDvt_8cuR5sn+CQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"WriteTimeoutException when doing paralel DELETE IF EXISTS",
        "SENT_FROM":"Jaroslav Kamen\u00edk <jaroslav@kamenik.cz>",
        "TAGS":"not-ak",
        "BODY":"hi would like ask posting new bug trying make simple system distribution preallocated ticket concurrent client using lwts simply one partition containing ticket one domain client read first one try delete conditionally success owns fail try work well start fail wtes load tried make simple test concurrent thread competing one row col running cluster default configuration replication factor surprisingly failed immediately request take longer time le thread even client enough crash wondering problem cassandra normal behaviour bad use lwt thanks jaroslav"
    },
    "13490":{
        "ID":30315,
        "MESSAGE_ID":"etPan.585d86d0.5b0ce90b.36d@apache.org",
        "PARENT_ID":30312.0,
        "SUBJECT":"Re: Configurable password policy in Cassandra...",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"not-ak",
        "BODY":"write patch one create custom authenticator implementation would enforce pluggable like authorizer ay"
    },
    "13491":{
        "ID":30314,
        "MESSAGE_ID":"2C332294-9C48-4C97-ADDA-7D9C1EA07934@r2-dvd.org",
        "PARENT_ID":30313.0,
        "SUBJECT":"Re: Configurable password policy in Cassandra...",
        "SENT_FROM":"Andy Cobley <andy@r2-dvd.org>",
        "TAGS":"not-ak",
        "BODY":"id like take issue sentiment whilst see point exactly sort attitude lead site getting hacked argument go site using cassandra loses million password site admin blame however infosec aware developer point cassandra enforced strong password policy breach would happen kind thinking lead example url andy"
    },
    "13492":{
        "ID":30313,
        "MESSAGE_ID":"1592cc5668e.12b3b7d66342113.7707605736696138617@winguzone.com",
        "PARENT_ID":30312.0,
        "SUBJECT":"Re: Configurable password policy in Cassandra...",
        "SENT_FROM":"Vladimir Yudovin <vladyu@winguzone.com>",
        "TAGS":"not-ak",
        "BODY":"hi actually cassandra public service like mail social network admin responsibility create strong super password front end application allowing user setting password application force password requirement best regard vladimir yudovin winguzone cloud cassandra hosting fri dec prakash chauhan prakash chauhan ericsson com wrote hello apache cassandra strict password policy creating new user new user created password simple abc recommended production use moreover password used configurable password policy cassandra creating new user thought regard prakash chauhan"
    },
    "13493":{
        "ID":30312,
        "MESSAGE_ID":"VI1PR07MB1487C69EE3632338730A44248D950@VI1PR07MB1487.eurprd07.prod.outlook.com",
        "PARENT_ID":null,
        "SUBJECT":"Configurable password policy in Cassandra...",
        "SENT_FROM":"Prakash Chauhan <prakash.chauhan@ericsson.com>",
        "TAGS":"existence",
        "BODY":"hello apache cassandra strict password policy creating new user new user created password simple abc recommended production use moreover password used configurable password policy cassandra creating new user thought regard prakash chauhan"
    },
    "13548":{
        "ID":30257,
        "MESSAGE_ID":"66848ad8-666d-ad54-050e-31f2af2d196b@pbandjelly.org",
        "PARENT_ID":30252.0,
        "SUBJECT":"Re: Committer access to CassCI",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"fyi since someone pinged wishing add server going done behalf someone else online net account wish add resource asf jenkins cassandra label set online net account launch ubuntu amd dedicated server least ram ssd open infra ticket let know would like add pool need root access added infra ssh key initial user see infra blindly add key talk infra ticket linked example experience community follow please coordinate dev desire help adding server account kind regard michael"
    },
    "13549":{
        "ID":30256,
        "MESSAGE_ID":"CAENxBwxkwFNuU-6OpDEvU=E0Wep_jd7M1wvz-x_=mB4WKoVdEQ@mail.gmail.com",
        "PARENT_ID":30252.0,
        "SUBJECT":"Re: Committer access to CassCI",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"take next nyc cassandra meetup fence charging event nice donation piece would pretty cool fuel project also joked creating caseti search extra testing infrastructure building docker would phone home testing work run workstation xboxes"
    },
    "13553":{
        "ID":30252,
        "MESSAGE_ID":"13d25581-fec9-b1b8-e4c5-18786656d465@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"Committer access to CassCI",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"technology",
        "BODY":"sent private couple week ago currently working configuring newly donated asf recommended compute resource asf jenkins environment transferring unit dtests infrastructure running job successfully receiving request new committers receive access cassci interim please note near capacity job starting back also offering new committers assistance setting local environment may give faster turnaround time term test result preference create new cassci account spend effort contribution improving running asf infrastructure added note time jira ticket reviewer may need set dev branch job patch submitter currently fork set cassci goal eventually migrate cassci utilizing asf jenkins main branch job nearly complete compute resource materialize dev branch run asf jenkins great otherwise set model set jenkins house run job asf jenkins job configured via job dsl directly cassandra build git repository url limited jenkins plugins installed asf jenkins base jenkins install job dsl plugin added get jenkins admins running pretty quickly modification running jenkins user repo apache cassandra custom branch relatively straightforward feel free ask help dedicated asf jenkins slave apache cassandra currently support developer branch asf jenkins infrastructure would queue job day week waiting run community member desire donate compute resource asf jenkins add testing capacity background related infra ticket started testing asf adding troubleshooting initial server url url url url url kind regard michael"
    },
    "13653":{
        "ID":30152,
        "MESSAGE_ID":"CACUnPaCEMvFU+csv8zBFpoSkT3cgz+ZSrKKgB2xBe9POBOTL8Q@mail.gmail.com",
        "PARENT_ID":30151.0,
        "SUBJECT":"Re: Failed Dtest will block cutting releases",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"kind silly put advise people put something prod known broken obvious way"
    },
    "13654":{
        "ID":30151,
        "MESSAGE_ID":"CAEPxca0yeJMTcpLiewNdiihjMSboq=F-=9YXQCPYZN9-5YYoJQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Failed Dtest will block cutting releases",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"process",
        "BODY":"hi cut release dtest passing block since discussing please provide feedback thanks sankalp"
    },
    "13723":{
        "ID":30082,
        "MESSAGE_ID":"462f8253-e756-8a3c-6b42-629ac381daff@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.10 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "13802":{
        "ID":30003,
        "MESSAGE_ID":"CAPw3+DgqnrhnvBkiUA1WStV+n0fvFHEP7GoxC4UwDPKcy+z=oQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Slow performance after upgrading from 2.0.9 to 2.1.11",
        "SENT_FROM":"Dikang Gu <dikang85@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"expensive messagingservice incoming db face prio tid xffde nid xcc runnable xfbb java lang thread state runnable classpath integertype java classpath abstractsimplecellnametype java classpath abstractsimplecellnametype java java util treemap put treemap java java util treeset add treeset java classpath serializer deserialize namesqueryfilter java classpath serializer deserialize namesqueryfilter java classpath slicebynamesreadcommand java classpath readcommand java classpath readcommand java classpath messagein java classpath incomingtcpconnection java classpath incomingtcpconnection java classpath incomingtcpconnection java checked git history come jira url thought"
    },
    "13843":{
        "ID":29962,
        "MESSAGE_ID":"CACr06N05wGmU0vWrFXPOmetYZgdbLMSZXweO4J8qUMZLR9kBiw@mail.gmail.com",
        "PARENT_ID":29944.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi mark thanks calm diplomatic email recognise might need apologise start ball rolling always generous interpretation others action certainly contributed escalation wonder would also help get ball rolling reasonable tone give hope topic board member recognise publicly misstepped provides assurance whole asf community board trusted url email chain long ago attempted apply misreading asf guideline non asf individual pointed went silent chain righteous indignation doubt inflamed topic could resolved issue diplomacy also sure excellent intention nevertheless misstep board member quite badly misapplying guideline public recognition left impression unaccountability know others responded think would fantastic board member people position authority lead example began recognising public behaviour missed mark perhaps would promote le lofty position begin greater trust round"
    },
    "13861":{
        "ID":29944,
        "MESSAGE_ID":"d9332015-1306-e42e-6807-5416b81db0f8@apache.org",
        "PARENT_ID":29922.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Mark Thomas <markt@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sake clarity member asf board speaking behalf board email"
    },
    "13864":{
        "ID":29941,
        "MESSAGE_ID":"1926453313.1168573.1478461618714@mail.yahoo.com",
        "PARENT_ID":29935.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Mark Struberg <struberg@yahoo.de.INVALID>",
        "TAGS":"not-ak",
        "BODY":"benedict ride bla said blub baah since least reply yes discussion heated side chris say anything since many post reply sharp really totally personal come back technical discussion please board member tried explain think went wrong single person pretty big group people got dealt board cassandra pmc since month first mail find february recently positive work done datastax cleaner separation cassandra community project company also many trademark fix applied overall pmc many new pmc member company got voted nice word got followed sanction honest seen project people around year good commits still get invited become pmc member usually alarming sign seen pmcs acting owner project defending influence past asf want aim real community project benevolent dictatorship projecs got fixed well liegrue strub"
    },
    "13870":{
        "ID":29935,
        "MESSAGE_ID":"CACr06N3JYNLK+sav8ndZjMx9KvPAZp1i=GyAK0xJ6b-46=ABDQ@mail.gmail.com",
        "PARENT_ID":29933.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cherry picked usual possible universe dropping hammer threat email thread following game throne youtube clip alright ideal world power would entail corresponding duty care consideration action least kind behaviour inappropriate board member see indeed bigger problem seem suffer double standard wrong direction far offensive language board member completely justifiable nothing frustration experience far le incendiary language completely inexcusable obviates rest message"
    },
    "13872":{
        "ID":29933,
        "MESSAGE_ID":"51E48C70-BBFD-4EB5-B7A4-81DB9E5DA809@jaguNET.com",
        "PARENT_ID":29931.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Jim Jagielski <jim@jaguNET.com>",
        "TAGS":"not-ak",
        "BODY":"well written cogent topic reasoned rebuttal keep using word think mean think data point lot extra power like feeling quite like though hotheaded impulsive antagonising immature possible universe frankly would appropriate greeter walmart warrant consider well written cogent topic reasoned fear discussion really worthless"
    },
    "13874":{
        "ID":29931,
        "MESSAGE_ID":"CACr06N3wmmebftcmh55qYmqLjDn03qO0uwQ+hY5w69gaN0Bv-Q@mail.gmail.com",
        "PARENT_ID":29925.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"jim would love could take time explain arrived diagnosis trolling aleksey made well written cogent topic criticism ongoing behaviour well reasoned rebuttal absurd claim power inherent position think many people know explicitly topic discussion mounting evidence misbehaviour definition discussion trolling much like chess comment appears attempt shut substantive discussion unsuitability role board member"
    },
    "13880":{
        "ID":29925,
        "MESSAGE_ID":"0997F900-3E74-434B-8D66-66FC4CEF73F0@jaguNET.com",
        "PARENT_ID":29922.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Jim Jagielski <jim@jaguNET.com>",
        "TAGS":"not-ak",
        "BODY":"sorry people took reply pompous certainly within right take anyway want meant way vein within right take response way want took simple trolling troll thermonuclear war winning move play"
    },
    "13881":{
        "ID":29924,
        "MESSAGE_ID":"634978D0-BA0C-43D1-9578-AB3F68CDB71F@internalcircle.com",
        "PARENT_ID":29922.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"thanks jeff thoughtful comment sent iphone"
    },
    "13883":{
        "ID":29922,
        "MESSAGE_ID":"CA+Emchk3S=bPoweFbUmSfDMBivx0MJech01=MzhXkUTF7DimnA@mail.gmail.com",
        "PARENT_ID":29920.0,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hope member board take note response similar reaction dev today datastax violated trademark acknowledged worked correct credit tried right thing pmc failed enforce problem acknowledged worked correct perfect trying member board openly violate code conduct condescending disrespectful auspex enforcing rule protecting community breaking rule damaging community nobody seems willing acknowledge work correct isolated link example useful time trying right thing protect project community unfortunate high ranking long time member within asf actively work undermine trust community flaunting code conduct requires friendliness empathy professionalism rest board silent matter"
    },
    "13885":{
        "ID":29920,
        "MESSAGE_ID":"51231669-e781-d565-89d4-5b533bbac9d1@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Re: Review of Cassandra actions",
        "SENT_FROM":"Dave Brosius <dbrosius@apache.org>",
        "TAGS":"not-ak",
        "BODY":"take response second time pompous way trivialize response others point point meaningless either explain mean accept fact chris exactly people claiming abnoxious bully interested throwing weight around causing havoc destroying community rather actually motivated improving asf"
    },
    "13937":{
        "ID":29868,
        "MESSAGE_ID":"CABsaHTN3owQb_K_nknm2Feb65aUyQEnc5BRR+u0qkBVfKR4Nig@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Broader community involvement in 4.0 (WAS Re: Rough roadmap for 4.0)",
        "SENT_FROM":"Nate McCall <zznate.m@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"moved new thread topic important excellent point thanks bringing hard question regard ticket listed goal list large potentially breaking change would necessitate move major release unfortunately context type issue huge surface area requires experience code review meaningful way kind trap gossip ticket people feel comfortable enough give jason feedback patch effectively replaced necessarily going seven year edge case fix baked current implementation stuff hard first place completely sure answer tell experience excellent way get familiar code concept would look large ticket detail go changed ask question choice made community based participation conversation exchange knowledge involvement day day exchange learn healthier thing become huge pile backlogged ticket unresolved patch available going testing reviewing submitting patch even pinging status rebasing needed would awesome frankly need help another thought would like add go excellent conversation start mail list url completely agree per anyone feel like chime ticket community effort particularly operator thought experience opinion matter least like developer think anything operational end user impact think anything new large surface area already well underway maybe thing tabled point really need focus stability via community involvement"
    },
    "13975":{
        "ID":29830,
        "MESSAGE_ID":"CAP9B7DbUXhuD-Ab4S0-z7HF-RKfHNVCiOgVJj4kEvE1Wd9ujpg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"DataStax role in Cassandra and the ASF",
        "SENT_FROM":"Kelly Sommers <kell.sommers@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think community need clarification going really concerning shift going story really blurry heard kind wild claim going heard people say asf pushing datastax like much control cassandra heard people say datastax asf getting along heard one person pull friend asf complained feature getting considered also go correct path proposing kicked screamed started ball rolling control change know going doubt truth truth probably somewhere former cassandra mvp builder larger cassandra cluster last year concerned really happy jonathan datastax role cassandra community think done great job investing time money towards good interest project think unavoidable single company bootstrap large project like popularity company investment give ability grow diversity later stage committer list opinion diverse ever apple big player think reducing datastax role sake diversity smart grow diversity opening new opportunity others grow committer list perhaps mentor new people join list kick someone curb hope thing improve add may way seeing much go gossip ahaha asf meeting note datastax blog post august th asf changed apache cassandra chair url board expressed continuing concern pmc acting independently one company undue influence project august th jonothan elli step chair url november nd datastax move committers dse cassandra url really concerned indeed asf trying change control diversity organization reducing datastax role said earlier really happy direction datastax jonathan taken project would much prefer see additional opportunity along side grow instead subtracting ultimate question really important whether datastax jonathan steering project right direction answer yes really anything broken answer change happen opinion someone asf please clarify going asf meeting note concerning thank listening kelly sommers"
    },
    "14189":{
        "ID":29616,
        "MESSAGE_ID":"CAA=6J08K6d7OWxV_EtBDfXG1YjD9jO_LUd7Y5KRanzw7C-effA@mail.gmail.com",
        "PARENT_ID":29602.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Ben Bromhead <ben@instaclustr.com>",
        "TAGS":"not-ak",
        "BODY":"fyi everywhere strategy waiting accepted url"
    },
    "14193":{
        "ID":29612,
        "MESSAGE_ID":"4d63b6f5-2b87-ed88-941b-bc67b2ceab41@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.16 released",
        "SENT_FROM":"Michael Shuler <mshuler@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "14203":{
        "ID":29602,
        "MESSAGE_ID":"157a5703b36.c739435e38212.827188542606476593@winguzone.com",
        "PARENT_ID":29601.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Vladimir Yudovin <vladyu@winguzone.com>",
        "TAGS":"not-ak",
        "BODY":"well useful scenario temporary table nearest node best regard vladimir yudovin winguzone hosted cloud cassandra azure softlayer launch cluster minute"
    },
    "14204":{
        "ID":29601,
        "MESSAGE_ID":"7E69D3F1-C74F-4320-B942-C14A84F9E17F@gmail.com",
        "PARENT_ID":29600.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sure meant disagree sound useful jeff jirsa"
    },
    "14205":{
        "ID":29600,
        "MESSAGE_ID":"157a55b6ada.ea47914737979.1058141090183439998@winguzone.com",
        "PARENT_ID":29599.0,
        "SUBJECT":"Re: Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Vladimir Yudovin <vladyu@winguzone.com>",
        "TAGS":"not-ak",
        "BODY":"far understand edward meant option determinate actual storage node client side driver disregarding key hash token mechanism best regard vladimir yudovin winguzone hosted cloud cassandra azure softlayer launch cluster minute"
    },
    "14206":{
        "ID":29599,
        "MESSAGE_ID":"1589F7F9-7F12-4654-8F98-2A8699A56AA4@gmail.com",
        "PARENT_ID":29598.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Jeff Jirsa <jjirsa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sound awful especially since could use simplestrategy rf bootstrap decom would handle resharding expected jeff jirsa"
    },
    "14207":{
        "ID":29598,
        "MESSAGE_ID":"CAENxBwypCTdXcF-KMqXquF1qhaqx5sxV9ML2tePyx1nzgRerqA@mail.gmail.com",
        "PARENT_ID":29593.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"contemplated using localstrategy client side sharding system"
    },
    "14212":{
        "ID":29593,
        "MESSAGE_ID":"157a29501fe.10891b8f429488.5703095671999062279@winguzone.com",
        "PARENT_ID":29580.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Vladimir Yudovin <vladyu@winguzone.com>",
        "TAGS":"not-ak",
        "BODY":"hi prasenjit would like get replication factor key space using strategy way get replication factor simple networktopology actually localsarategy replication factor select system schema keyspaces keyspace name system system schema keyspace name durable writes replication system true class classpath system schema true class classpath used internal table accessible user create keyspace excel replication class localstrategy configurationexception unable use given strategy class localstrategy reserved internal use best regard vladimir yudovin winguzone hosted cloud cassandra azure softlayer launch cluster minute"
    },
    "14222":{
        "ID":29583,
        "MESSAGE_ID":"CACiW-BgKkrKS0ufgaY0kjt2C+5naPNoYMrBepqeg0tmNtMm5tg@mail.gmail.com",
        "PARENT_ID":29582.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Prasenjit Sarkar <prasenjit.sarkar@datos.io>",
        "TAGS":"not-ak",
        "BODY":"thanks jemeriah aware change use jiras contribute back community prasenjit"
    },
    "14223":{
        "ID":29582,
        "MESSAGE_ID":"79201111-6DD4-4881-B98A-D39C074B9A9D@gmail.com",
        "PARENT_ID":29580.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"\"J. D. Jordan\" <jeremiah.jordan@gmail.com>",
        "TAGS":"technology",
        "BODY":"python driver support supported custom strategy one implement url make class fly sure else want suggestion improvement specific driver open ticket driver jira jeremiah"
    },
    "14225":{
        "ID":29580,
        "MESSAGE_ID":"CACiW-BiKLYhdC3oAzFqRmoCovH7O8NfVKcyJX-hCHWzX0VcL_A@mail.gmail.com",
        "PARENT_ID":29579.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Prasenjit Sarkar <prasenjit.sarkar@datos.io>",
        "TAGS":"existence",
        "BODY":"thanks vlad jeremiah question support let address detail look latest cassandra python driver support localstrategy limited code snippet shown support everywherestrategy non existent limited mean cassandra python driver provides name strategy localstrategy much else would like happy help cassandra python driver provide support local everywhere extent provided simple networktopology understand token aware routing applicable either strategy would like get replication factor key space using strategy way get replication factor simple networktopology hope help prasenjit class localstrategy replicationstrategy def init self option map pas def make token replica map self token host owner ring return def export schema self return string version replication option suitable use create keyspace statement return class localstrategy def eq self return isinstance localstrategy"
    },
    "14226":{
        "ID":29579,
        "MESSAGE_ID":"639416C7-AA49-4399-B968-5F37BD9DB22C@gmail.com",
        "PARENT_ID":29577.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"property",
        "BODY":"kind support thinking driver support already driver care replication strategy except trying token aware routing since anyone make custom replication strategy driver token aware routing need handle falling back token aware routing replication strategy know use open source driver know support strategy already jeremiah"
    },
    "14227":{
        "ID":29578,
        "MESSAGE_ID":"157a057fc98.d08185da18753.3468348104454991485@winguzone.com",
        "PARENT_ID":29577.0,
        "SUBJECT":"Re: Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Vladimir Yudovin <vladyu@winguzone.com>",
        "TAGS":"not-ak",
        "BODY":"mean classpath yes standard cassandra strategy use system system schema keyspaces best regard vladimir yudovin winguzone hosted cloud cassandra azure softlayer launch cluster minute fri oct prasenjit sarkar prasenjit sarkar datos io wrote hi everyone best understanding datastax proprietary replication strategy local everywhere part open source apache cassandra project know plan open source cassandra driver community support two replication strategy would datastax licensing concern open source driver community supported strategy fairly new would like understand dynamic thanks prasenjit"
    },
    "14228":{
        "ID":29577,
        "MESSAGE_ID":"CACiW-BiWQH6Sh9_D5_nHKenNA5Xw5SXQot-Nw+vmqzTe2ntg8w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Proprietary Replication Strategies: Cassandra Driver Support",
        "SENT_FROM":"Prasenjit Sarkar <prasenjit.sarkar@datos.io>",
        "TAGS":"not-ak",
        "BODY":"hi everyone best understanding datastax proprietary replication strategy local everywhere part open source apache cassandra project know plan open source cassandra driver community support two replication strategy would datastax licensing concern open source driver community supported strategy fairly new would like understand dynamic thanks prasenjit"
    },
    "14304":{
        "ID":29501,
        "MESSAGE_ID":"CANsFX07xE0FqLD59UhK-C8A-p1idnMEVxmxeGg0cm7BLybZJJw@mail.gmail.com",
        "PARENT_ID":29500.0,
        "SUBJECT":"Re: [RELEASE] Apache Cassandra 3.9 released",
        "SENT_FROM":"Dorian Hoxha <dorian.hoxha@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"documentation work example interested change data capture appreciate work done"
    },
    "14305":{
        "ID":29500,
        "MESSAGE_ID":"85f16c52-f452-d531-4c98-01f029d2fc9f@pbandjelly.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.9 released",
        "SENT_FROM":"Michael Shuler <michael@pbandjelly.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "14307":{
        "ID":29498,
        "MESSAGE_ID":"c9037517-40db-2005-7935-d1f940a26c9a@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.8 released",
        "SENT_FROM":"Michael Shuler <mshuler@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy change txt url news txt url url"
    },
    "14438":{
        "ID":29367,
        "MESSAGE_ID":"CALamAD+9tD7QbQ5aodnCB=s9YXELtoGNCNADdVtrBAqhQgWnrA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.9 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "14449":{
        "ID":29356,
        "MESSAGE_ID":"CAPC70Q_-GuZpm7jp4UAGZQMtpganLtbkPMvVxc58OZGRrgWUaQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Permission bit 12 in getFileInfo response",
        "SENT_FROM":"John Zhuge <jzhuge@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi guru anyone know meaning bit permission field getfileinfo response understanding bit sticky bit along lower bit user group following trace perm field oct trace ipc protobufrpcengine response namenode getfileinfo filetype dir path length permission perm owner user group supergroup modification time access time block replication blocksize fileid childrennum storagepolicy thanks john zhuge software engineer cloudera"
    },
    "14461":{
        "ID":29344,
        "MESSAGE_ID":"CAENxBwzHdeZG8DiRcJUQTqjUGaCrHQtAJiatOTJUpSbdVKgExg@mail.gmail.com",
        "PARENT_ID":29342.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"never seen movie grandma boy suggest url one funny seen product project person say something like game ready fixed bug people made movie probably think coder dance dance revolution funny funniest part movie summary statement bug fixed agree sylvain cutting branch really nothing quality quality like production ready hard define phrasing next part question encourage deep thought jerk someone jokingly said said break everything release fix everything release would mean would need new feature month vast network amazon machine test thing jepsen hour integration test run ca operation across multi node mixed version cluster chaos monkey node could keep busy month looking code fix bug mr cheezle could fix bug day feature feature feature sit join unjoin node day running stress end use map reduce export prove single datum lost"
    },
    "14464":{
        "ID":29341,
        "MESSAGE_ID":"CACUnPaBiaJgxWGFFp5Qebm4jAfAifdcVCLb+uQbkJPzD=wzOcA@mail.gmail.com",
        "PARENT_ID":29340.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"yep progress made trunk recently excellent continue spirit tick tock stable trunk change release cycle support human comfortable maintaining deploying"
    },
    "14466":{
        "ID":29339,
        "MESSAGE_ID":"etPan.57dc2500.5f1fb5c6.3eac@apple.com",
        "PARENT_ID":29337.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Blake Eggleston <beggleston@apple.com>",
        "TAGS":"not-ak",
        "BODY":"even sure reasonable expect software even le open source project based volunteering saying would amazing would believe realistic postgres pretty good job sort thinking self fulfilling prophecy going clearly get point right away definitely goal"
    },
    "14467":{
        "ID":29338,
        "MESSAGE_ID":"CACUnPaBYstdsrw79haLwpO4SWJcx1+XHx24ehZ51SqjQpDR75A@mail.gmail.com",
        "PARENT_ID":29337.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"trying suggest goal trunk always releasable alpha release would mean testing goal always releasable move towards achieving goal improving modularity test coverage test granularity yes difficult prove piece software completely free bug would expect nasa put cassandra space shuttle said prioritizing stability software development process front cost maintaining older branch time decrease velocity project increase original goal tick tock jon"
    },
    "14470":{
        "ID":29335,
        "MESSAGE_ID":"CAENxBwyeWUePiCMHpR5SkpLT4jCkaqg=bLJw8SmOaY-95Gti6A@mail.gmail.com",
        "PARENT_ID":29333.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"historical trend cassandra codebase test minimally throw code wall get feedback people putting prod run issue summit brandon couple others making fun range tombstone thrift url added thrift support based code already trunk something ugly bit far line someone else stuck edge case fix actually added number test unit test nosetests sure range tombstone also set test storage level brandon making fun thinking well make bug made possible others find helping next time submit thrift patch going write unit test jk"
    },
    "14471":{
        "ID":29334,
        "MESSAGE_ID":"CACUnPaAW4SB37Rwq5RUi0p4Obx-hhuKFQdPRf3bZ164WK_XPCg@mail.gmail.com",
        "PARENT_ID":29333.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"sorry tl dr forgot release frequent alpha nightly weekly whatever schedule want"
    },
    "14472":{
        "ID":29333,
        "MESSAGE_ID":"CACUnPaAt23uBuxhjfPgnwnN3jG88L692xfF7reW6W6r4KWdnEQ@mail.gmail.com",
        "PARENT_ID":29330.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"worked project branch new stuff went merging master trunk described reminds lot git flow url although quite verbose email minimize reader assumption goal release cycle descending order priority minimize bug introduced change allow codebase iterate quickly get caught ton back porting bug fix significant benefit releasable trunk different trunk constantly released releasable trunk simply mean test always pas pmc committers feel confident could actually put prod project actually matter always releasable test pas etc mean people least test db sample data evaluate release happens get feedback team bug different mentality feature branch implied time acceptable stable historical trend cassandra codebase test minimally throw code wall get feedback people putting prod run issue experience found general purpose feature branch result poorly quality codebases share lot problem year release cycle previously thing getting merged attempt stabilize later improving state testing trunk catch bug satisfying naturally lead reducing bug get released happen time suggestion supported feature release every month could well mixed benedict idea frequent non supported release tagged alpha supported release get month worth bug fix done right decrease time due hopefully stable codebase agree mick semver make sense framework major minor patch well understood pretty standard throughout world think need reinvent versioning tl dr release every month support keep stable trunk new feature get merged trunk standard code quality testing need property defined something closer production ready rather let poor user figure jon"
    },
    "14475":{
        "ID":29330,
        "MESSAGE_ID":"CAKkz8Q3K=NivtHk-rHZ8+_L4BuCrjLczuXZJNA=0yWa+eanJBA@mail.gmail.com",
        "PARENT_ID":29326.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Sylvain Lebresne <sylvain@datastax.com>",
        "TAGS":"process",
        "BODY":"probably pretty much everyone point agree tick tock experiment working well probably worth course correcting happen thinking quite bit already turn going share reasoning suggestion even though going pretty long hope useful current thinking good cycle accommodate main constraint useful user realistic limit friction development side let develop mean point slightly first think user mostly want thing release schedule want clearly labeled stable branch know run production want new feature improvement let clarify different user want different degree variation time believe mainly combination"
    },
    "14479":{
        "ID":29326,
        "MESSAGE_ID":"CADectgZJCXc6TkNzcFd_t2RXyKb8oq71EUhQ4uXzN2JuMuPyQA@mail.gmail.com",
        "PARENT_ID":29319.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Mick Semb Wever <mick@thelastpickle.com>",
        "TAGS":"process",
        "BODY":"totally agree frustration felt jon tl dr proposal beyond put together comment benedict jon tyler jeremy ed keep bimonthly feature release revert tick tock semver numbering scheme release vote also vote quality label feature branch start alpha first patch release beta accept every feature release default initially supported branch might never maintain ga branch one time accept going oldest ga branch necessarily reach eol first background rationale going problem tick tock introduces two separate concept incremental development limiting patch release first concept bimonthly tocks made development incremental needed improvement coincidence time tick tock introduced also lot effort put testing qa framework second concept bimonthly tick limited one patch release per tock release real benefit reduce effort involved maintenance required frequent tock release consequence instability gone banana jon clearly demonstrates someone went let monkey quick comparison tick tock tick tock month development took time frame month patch release stabilise tick tock month development could expected time frame month adoption dictated user developer period patch release stabilise seemed fool errand force patch release one month seems notion incremental development applied developer waterfall model applied qa production user note taking account advantage incremental development improved qa framework move towards stable master question remains many release community afford support realistic much effort relies upon commercial entity around community example year support mean support feature release probably people power also mean effect release actually supported month since took get production ready typical apache release process new major release get voted alpha beta patch release made ascertained whether enough people using eg production quality label appropriately raised either beta ga quality label proposed vote left voted upon everyone quality label part version number version number follow strict semver community say example support ga branch permit major release never make ga others hang bit longer something community get feel appreciating user actor around number branch supported depends community sustain including new non ga branch community also becomes bit honest quality release proposal example embrace incremental development release often mentality keeping realistic flexible approach many branch supported cost supporting branch still real pushing stable master mean feature branch cut without passing everything qa framework belief put user production return thinking feature branch place ongoing stabilisation effort alpha beta label onus work put upon developer maintain branch feature targeted master community stabilise support feature branch way anyone figured whether tick tock represents feature release probably got wrong mck"
    },
    "14484":{
        "ID":29321,
        "MESSAGE_ID":"CAENxBwwyahgWvpzjX6ebYj6QS4sftC+yb9zY=ZAMPMnu6z0xeg@mail.gmail.com",
        "PARENT_ID":29309.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"process",
        "BODY":"funny say tick tock started based big bang broke everything release brain battle short term reward long term goal url normalization deviance software broken practice become standard url something really long written summarized thought huge generalization coming group gb data gb disk going switch level db see happens yolo db group gb data gb disk switch level db way impact current user way fill disk controlled way might take day user gravitate toward group move become risk adverse going want upgrade twice year see risk upgrade group upgrading tester become group think new metric system would fun readme txt testadded dtestadded feature fix ninja fix refactor version ddffbbbbbbrrrrrttttdddddd version fbbbbbbbbbbrrrrttdd time gravitate toward ftd know headed wrong direction"
    },
    "14486":{
        "ID":29319,
        "MESSAGE_ID":"CACUnPaBkMvQsb_ez6wD2HS5F8a6w=DM1-8MTUzrh53Ad+xNJkQ@mail.gmail.com",
        "PARENT_ID":29317.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"release tagged alpha beta people accidentally put prod least le would totally reasonable"
    },
    "14487":{
        "ID":29318,
        "MESSAGE_ID":"CACr06N1oJUgyYV7iiLt3sPRDqh7V=3=k4PjWa9ZPVrPeQbsRyw@mail.gmail.com",
        "PARENT_ID":29317.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yes agreed advocating different cadence random cadence"
    },
    "14488":{
        "ID":29317,
        "MESSAGE_ID":"CAAam9svpvZx-_TcBE9gKcoXHFyX-3qP5YGzH5JpqXZi8F96qUA@mail.gmail.com",
        "PARENT_ID":29316.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Tyler Hobbs <tyler@datastax.com>",
        "TAGS":"process",
        "BODY":"thu sep pm benedict elliott smith"
    },
    "14489":{
        "ID":29316,
        "MESSAGE_ID":"CACr06N0efHT5Kf5h_kvQw1v09rgaap1eRhCw3m-SYn6JA76-rA@mail.gmail.com",
        "PARENT_ID":29315.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"feature release cadence bug fix naturally different beast stick monthly feature release mark every third sixth supported release get quarterly update quarter"
    },
    "14490":{
        "ID":29315,
        "MESSAGE_ID":"CAAam9ssYvVWhqDUohwyNYVSBqdPFnTvbqkWHSPg9=rO5ht3CQw@mail.gmail.com",
        "PARENT_ID":29312.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Tyler Hobbs <tyler@datastax.com>",
        "TAGS":"process",
        "BODY":"agree regular monthly release smaller frequent feature release best part tick tock downside tick tock mentioned enough time user feedback testing catch new bug next feature release would personally like see hybrid proposal jon mention new feature release every three month plus month bugfixes release seems like like good balance"
    },
    "14491":{
        "ID":29314,
        "MESSAGE_ID":"8BBF8BD8-5D16-4170-A126-971A245FEC3C@gmail.com",
        "PARENT_ID":29312.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"right think like jake others said seems appropriate something point would clearer liberal backport policy odd version worthwhile find footing jeremiah said seem like big bang release caused much baggage facing combine slow uptake specific version far least partly newness release model hard thing month release get larger untested feature release originally supposed get away essence would nothing see liberal backport policy line revisit get tick tock tock tock sort model sort lts go back drawing board go back old model think earlier number imply confidence thinking behind tick tock would acceptable see line current release model need something extensive stage"
    },
    "14493":{
        "ID":29312,
        "MESSAGE_ID":"CACUnPaA5egfGDn6XW3f0ynFBnk2prA_LApbnwHKTXoow+R0uZw@mail.gmail.com",
        "PARENT_ID":29308.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"think binary year long insanity bleeding edge crazyness release every month release accepting month patch oldstable newstable also provide nightly build stick idea stable trunk issue number bug fix given release get bug fix release new feature terrible community whole despises system lowering confidence project jon"
    },
    "14496":{
        "ID":29309,
        "MESSAGE_ID":"7653159C-FCF6-4FA4-AC9D-D8394E998010@gmail.com",
        "PARENT_ID":29308.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"tick tock started based big bang broke everything release think judge wether working another month aka would releasing next big bang release right lot bug given tick tock release bug introduced even bug mentioned tick tock bug bug"
    },
    "14497":{
        "ID":29308,
        "MESSAGE_ID":"CALamADLDZppDbcdyw1SjNoBOS6Sky05Nngc0RiqsE+k=cD2+eQ@mail.gmail.com",
        "PARENT_ID":29307.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jake Luciani <jakers@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"pretty sure everyone agree tick tock go well need change problem going back old way sound great part tick tock really like example cadence limited scope per release know summit lot idea thrown around regurgitate perhaps people thinking would like chime present idea jake thu sep pm benedict elliott smith benedict apache org url"
    },
    "14498":{
        "ID":29307,
        "MESSAGE_ID":"CACr06N2r8soU1wF_Zuw2ifQ+FKwuqiNKpdg=BT3pM=xy1rM9fg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"agree tick tock failure two reason going ultimately user real tester take release percolate wild feedback reality release tire properly kicked least three month cut tocks completely unwed tick probably happen cadence keep labour utility probably still one tock per tick promised resource improved process never happened even reached parity release recently failing dtests"
    },
    "14499":{
        "ID":29306,
        "MESSAGE_ID":"CAPbVhuM5BhJ8Znr0a6+CAS2R_dhF9=YKAFJ1+9NiZGBgSpkJ2Q@mail.gmail.com",
        "PARENT_ID":29302.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"kurt Greaves <kurt@instaclustr.com>",
        "TAGS":"process",
        "BODY":"another user perspective someone manages many cluster tick tock really make sense unless point stop ticking expect release feature constantly stable product every tock unless really high development code review testing standard even probably dreaming impossible one person enough knowledge account every possible implication feature bug fix matter seriously work people running tock release obvious choice reality majority bug fix latest tock release bug fix latest feature release likely bug fix feature hardly anyone would running feature may well introduced bug get picked well used production throw idea may warrant discussion negative nancy tick tock tock release version would questionable suppose minimise confusion could jump even number second tock kind keep release cycle least user could confident latest tock release however still suffers flaw unlikely bug fix relevant feature another alternative eventually stop ticking altogether may tick tock pushing feature next major release case month feature would stop would month bugfixes user looking stability wait onwards whilst risk taker people development phase start earlier release people would waiting month last version previous major upgrading year total get new feature stand moment typically would recommend critical production load telling people better waiting later assuming number new feature introduced slows also opinion start going back minor release backporting patch defeated purpose tick tock entirely may well away think better marking release unstable pushing new stable release fast possible obviously complicated next logical release may tick risk introducing new bug case would say critical fix necessary skip tick"
    },
    "14500":{
        "ID":29305,
        "MESSAGE_ID":"CACr06N1bAMqRD1SxtcDV9Lm_W2mFJWyoxewNe96XL3XTJjinHA@mail.gmail.com",
        "PARENT_ID":29304.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"worth noting clearly arbitrary point time release affected backport seems like get treatment recall commitment backport critical fix exactly bar never well defined also see would added confusion"
    },
    "14501":{
        "ID":29304,
        "MESSAGE_ID":"3790144D-6FBE-42AC-9E95-5C3DCA9DC7C3@apple.com",
        "PARENT_ID":29301.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Dave Lester <dave_lester@apple.com>",
        "TAGS":"not-ak",
        "BODY":"would cutting release possibly confuse user software would easy document change send release note given bug critical nature minor fix non binding new release dave"
    },
    "14503":{
        "ID":29302,
        "MESSAGE_ID":"CAENxBwxMPAs42Mf3YJ2Gnuw8TX1iC_m=irzqR8pbCVVC3+9rnA@mail.gmail.com",
        "PARENT_ID":29294.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"property",
        "BODY":"come came place would say probably want run reach one thing cassandra get situation go forward example update version version version might start writing new version sstables sstables sstables scary operation side bring system back running version data unreadable seem place say problem trunk given day go trunk last tt release url get investing significant effort making trunk always releasable goal release least odd numbered bugfix release usable production support releasable trunk qualifying statement least odd number release undoes assertion always releasable trying nit pick realize may hard get desired state releasable trunk short time anecdotally notice lot movement class name name function generally look stack trace piece software bring line number github dead fairly close line code recently tried version fairly close together seen drastic change know thing personally like lack stable ish api codebase use singleton rather simple dependency injection like even constructor based injection imho fit well release often always produce high quality release love concept bug fix release would mind waiting longer feature long could high trust factor working right first time take feature like trickle description sound like clear optimization win default description say turn ssd elsewhere configuration disk optimization strategy ssd tuning ssd default false tested wild covered trusted test many test think concept trickle added feature set false possibly gain real world coverage comforting want turn get weird issue one else running would rather added default extreme confidence added"
    },
    "14504":{
        "ID":29301,
        "MESSAGE_ID":"07D194A5-D3BC-4F69-B17A-83478EF19CE2@gmail.com",
        "PARENT_ID":29300.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"jeff bug fix already released fix since fix applies cleanly anyone free put top like see reason put right confuse people jeremiah"
    },
    "14505":{
        "ID":29300,
        "MESSAGE_ID":"CACUnPaCuqz5iZKgEiUMZ-WBEnKzEY5EHJXXj-tv6zpaTeh=+Pg@mail.gmail.com",
        "PARENT_ID":29294.0,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"follow suppose advocating fix odd release sadly tick tock versioning misleading tick tock continue much currently work whole even feature odd fix thing need stop soon possible confuse people follow following semver people know bug fix jon"
    },
    "14511":{
        "ID":29294,
        "MESSAGE_ID":"CACUnPaCwW-GoRP8VuE79KvWX+=-Upj96NyEzOrMsdC46N6Aq9w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Proposal - 3.5.1",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"particular case would say adding bug fix release every version affected would right thing issue easily reproducible likely result massive data loss anyone us date type easy reproduce start cassandra create keyspace test replication class simplestrategy replication factor use test create table fail id int primary key date delete fail id stop cassandra start cassandra get startup fail error exiting due error processing commit log initialization classpath commitlogreplayexception unexpected error deserializing mutation saved var folder gpcnydkx wklndyrgn mutationdat may caused replaying mutation table name incompatible schema exception follows classpath expected byte long date mean come easy fix cleanly merges probably release requires little investment anyone"
    },
    "14524":{
        "ID":29281,
        "MESSAGE_ID":"CAB51Vx4Vh2yLoeAbArF9pctmOLhS8yhiR9gzjRjf1TSvEtbA8Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Active NameNode Image Download and Edit Log Roll Stuck in FileChannel Force\/Truncate",
        "SENT_FROM":"Joey Paskhay <joey.paskhay@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"reposting see hdfs developer good insight deep dive original message gist upgrading node cluster active nn fsimage download edit log roll seem get stuck native filechannel force call sometimes filechannel truncate lead zkfc health monitor failing rpc handler thread back waiting fsnamesystem fslock released edit log roll process active nn get killed happens occasionally system idle day frequently run distcp every minute believe saw every month two log file rolled since last time confirm exact issue seems much frequent help guidance would much appreciated thanks joey hey process upgrading hadoop cluster currently testing pre prod backup cluster seeing lot active namenode failovers sometimes often every minute especially running distcp copy data production cluster user test seen similar failovers occasionally running nearly often every month two able verify exact root version since file log rolled since last time happened chain event found far hoping someone provide direction standby namenode checkpointing process succeeds locally issue image put request transferfsimage uploadimage active namenode finish downloading fsimage ckpt file try issue fo getchannel force true call transferfsimage receivefile seems get stuck native code standby namenode get sockettimeoutexception happens second last modification time see stat output fsimage ckpt file active namenode pulled right time happening sec last modification fsimage ckpt file see similar issue edit log roll standby namenode editlogtailer trigger rolling edit log active namenode see active namenode enter rolleditlog process either see endcurrentlogsegment call get stuck editlogfileoutputstream close fc truncate fc position call startlogsegment call get stuck editlogfileoutputstream flushandsync fc force true call get stuck native code looking last modification time stat output edits file see second later standby namenode rpc call time rolleditlog end holding onto fsnamesystem write lock fslock cause rpc call pile trying acquire read lock zkfc time health monitor signal namenode killed patched sshfencebytcpport code issue kill get thread dump kill active namenode running centos using ext noatime using kernel fsimage file typically gb edits file typically mb mb cluster running node running jdk compiled jdk specific patch see relevant stack filechannel code getting stuck native code also provide full thread dump relevant configs needed tried looking jira online see anything directly related insight whether bug hadoop side effect something else cluster mostly idle everything seems fine dev test cluster issue upgrade node le little load thanks joey example getting stuck force call qtp daemon prio prio tid xfdcbc nid xf runnable xfbfcd java lang thread state runnable sun nio ch filedispatcherimpl force native method sun nio ch filedispatcherimpl force filedispatcherimpl java sun nio ch filechannelimpl force filechannelimpl java classpath receivefile transferfsimage java classpath handleuploadimagerequest transferfsimage java classpath run imageservlet java classpath run imageservlet java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath imageservlet java javax servlet http httpservlet service httpservlet java javax servlet http httpservlet service httpservlet java classpath servletholder java classpath cachedchain dofilter servlethandler java classpath authenticationfilter dofilter authenticationfilter java classpath authenticationfilter dofilter authenticationfilter java classpath cachedchain dofilter servlethandler java classpath quotinginputfilter dofilter httpserver java classpath cachedchain dofilter servlethandler java classpath nocachefilter java classpath cachedchain dofilter servlethandler java classpath nocachefilter java classpath cachedchain dofilter servlethandler java classpath servlethandler java classpath securityhandler java classpath sessionhandler java classpath contexthandler java classpath webappcontext java classpath contexthandlercollection java classpath handlerwrapper java classpath server java classpath httpconnection java classpath requesthandler content httpconnection java classpath httpparser java classpath httpparser java classpath httpconnection java classpath selectchannelendpoint java classpath poolthread run queuedthreadpool java ipc server handler daemon prio prio tid xfdc nid xd runnable xfbfbaf java lang thread state runnable sun nio ch filedispatcherimpl force native method sun nio ch filedispatcherimpl force filedispatcherimpl java sun nio ch filechannelimpl force filechannelimpl java classpath flushandsync editlogfileoutputstream java classpath flush editlogoutputstream java classpath flush editlogoutputstream java classpath create editlogfileoutputstream java classpath startlogsegment filejournalmanager java locked xfcbeb classpath namenode filejournalmanager classpath journalandstream startlogsegment journalset java classpath apply journalset java classpath mapjournalsandreporterrors journalset java classpath startlogsegment journalset java classpath startlogsegment fseditlog java locked xfbac classpath namenode fseditlog classpath rolleditlog fseditlog java locked xfbac classpath namenode fseditlog classpath fsimage java classpath rolleditlog fsnamesystem java classpath rolleditlog namenoderpcserver java classpath slatorpb rolleditlog namenodeprotocolserversidetranslatorpb java classpath namenodeprotocolservice callblockingmethod namenodeprotocolprotos java classpath server protobufrpcinvoker call protobufrpcengine java classpath server call rpc java classpath handler run server java classpath handler run server java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath handler run server java example rolleditlog getting stuck truncate call transferfsimage getting stuck force call qtp daemon prio prio tid nid xa runnable xfdacd java lang thread state runnable sun nio ch filedispatcherimpl force native method sun nio ch filedispatcherimpl force filedispatcherimpl java sun nio ch filechannelimpl force filechannelimpl java classpath receivefile transferfsimage java classpath handleuploadimagerequest transferfsimage java classpath run imageservlet java classpath run imageservlet java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath imageservlet java javax servlet http httpservlet service httpservlet java javax servlet http httpservlet service httpservlet java classpath servletholder java classpath cachedchain dofilter servlethandler java classpath authenticationfilter dofilter authenticationfilter java classpath authenticationfilter dofilter authenticationfilter java classpath cachedchain dofilter servlethandler java classpath quotinginputfilter dofilter httpserver java classpath cachedchain dofilter servlethandler java classpath nocachefilter java classpath cachedchain dofilter servlethandler java classpath nocachefilter java classpath cachedchain dofilter servlethandler java classpath servlethandler java classpath securityhandler java classpath sessionhandler java classpath contexthandler java classpath webappcontext java classpath contexthandlercollection java classpath handlerwrapper java classpath server java classpath httpconnection java classpath requesthandler content httpconnection java classpath httpparser java classpath httpparser java classpath httpconnection java classpath selectchannelendpoint java classpath poolthread run queuedthreadpool java ipc server handler daemon prio prio tid xfdbbdc nid runnable xfdead java lang thread state runnable sun nio ch filedispatcherimpl truncate native method sun nio ch filedispatcherimpl truncate filedispatcherimpl java sun nio ch filechannelimpl truncate filechannelimpl java locked xfbfce java lang object classpath editlogfileoutputstream close editlogfileoutputstream java classpath journalandstream closestream journalset java classpath apply journalset java classpath mapjournalsandreporterrors journalset java classpath finalizelogsegment journalset java classpath endcurrentlogsegment fseditlog java locked xfff classpath namenode fseditlog classpath rolleditlog fseditlog java locked xfff classpath namenode fseditlog classpath fsimage java classpath rolleditlog fsnamesystem java classpath rolleditlog namenoderpcserver java classpath slatorpb rolleditlog namenodeprotocolserversidetranslatorpb java classpath namenodeprotocolservice callblockingmethod namenodeprotocolprotos java classpath server protobufrpcinvoker call protobufrpcengine java classpath server call rpc java classpath handler run server java classpath handler run server java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath handler run server java"
    },
    "14537":{
        "ID":29268,
        "MESSAGE_ID":"CAM=XDd84J_90BwvLCaW7gB1dQSsg_Tubq=bz+JGqnFRjmyHoDQ@mail.gmail.com",
        "PARENT_ID":29161.0,
        "SUBJECT":"Re: Add MongoDB to Tajo Storage",
        "SENT_FROM":"Hyunsik Choi <hyunsik.choi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sound cool congrats"
    },
    "14623":{
        "ID":29182,
        "MESSAGE_ID":"CAFeKATcS778F7wHiPmS5D5xhfzSba51jOufzO4cZqBE46Tr9Yg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"CQL Collections appear slow",
        "SENT_FROM":"Ben Frank <ben@airlust.com>",
        "TAGS":"not-ak",
        "BODY":"hi posted question stackoverflow issue cql collection anyone got insight url playing around storing data cassandra finding significant performance problem cql collection started schema create table test date date tranche text id int property map primary key date tranche id run query data partition select test date tranche third tracing report take second load row entry map wall clock time python second seems really slow load one partition tried schema instead used message pack store entire map single cell create table test date date tranche text id int property blob primary key date tranche id query take reported tracing wall clock time using python get map version seems like unexpected performance degradation one oddity noticed testing case tracing reported returning cell corresponds number row would expect second schema understanding element map stored cell current version cassandra bit surprised using version cassandra datastax python driver anyone got insight happening ben"
    },
    "14644":{
        "ID":29161,
        "MESSAGE_ID":"CA+bENd5LKnP9jFRs_NjsBctsEo=dBtnhJsLvsr5x2kaPws6NQg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Add MongoDB to Tajo Storage",
        "SENT_FROM":"Janaka Thilakarathna <bjchathuranga@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everyone within past month time almost finished implementing mongodb storage module tajo today got final evaluation result gsoc passed want thank help application period coding period without help would never make specially jaehwa jihoon mentor helped lot thank lot plan make pr merge code main branch within next week hope help process would like contribute apache tajo future maybe implementing another storage module familiar thank regard janaka janaka chathuranga thilakarathna undergraduate computer science engineering department university moratuwa sri lanka mobile email janaka cse mrt ac lk bjchathuranga gmail com skype janaka chathurangat website janakact wordpress com public profile image facebook image linkedin"
    },
    "14799":{
        "ID":29006,
        "MESSAGE_ID":"CABtPRagLm0sRjWS8QQObatWGqBZRHHd+vo=AwknAtvX2nk1Zag@mail.gmail.com",
        "PARENT_ID":28986.0,
        "SUBJECT":"Re: CASSANDRA-10993 Approaches",
        "SENT_FROM":"Stefan Podkowinski <spodxx@gmail.com>",
        "TAGS":"technology",
        "BODY":"strategic option integrate reactive stream overall cassandra architecture point future reactive stream would allow design back pressure fundamentally different compared current work queue based execution model think optimization currently deployed walk thin line throughput latency gc pressure lack coordination individual process compaction streaming client request effect hope client back due latency aware policy stream eventually timeout compaction hopefully get enough work done point even tell people tune batch size overwhelm node cluster squeezing performance test nice going also address get control using system resource reactive stream based approach could help url"
    },
    "14819":{
        "ID":28986,
        "MESSAGE_ID":"CALamADL40B_W6b3Ww=eJPQF2qin5MdGjQEXyoxRsUPH0Bh_8AQ@mail.gmail.com",
        "PARENT_ID":28985.0,
        "SUBJECT":"Re: CASSANDRA-10993 Approaches",
        "SENT_FROM":"Jake Luciani <jakers@gmail.com>",
        "TAGS":"property",
        "BODY":"think outlined tradeoff see roll use reactive framework url view try utilize existing start writing even write keep reactive since reactive apis going adopted java spec entire community thinking asynchronous programming tap buy argument yet rx library lack control need fact apis quite extensible"
    },
    "14820":{
        "ID":28985,
        "MESSAGE_ID":"CAAam9svatb0Z-YUYO6E2tKNYL8nc+3KkNQ03xA+e1Kv50sMQPg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"CASSANDRA-10993 Approaches",
        "SENT_FROM":"Tyler Hobbs <tyler@datastax.com>",
        "TAGS":"existence, technology",
        "BODY":"spirit recent thread discussing large change dev ml would like talk cassandra first step thread per core work goal transform read write path event driven model powered event loop mean request handled single thread although typically broken multiple step depending locking old mutation read thread pool removed far prototyped couple approach first approach model request state machine composition state machine example single write request encapsulated writetask object move series state portion write complete allocating commitlog segment syncing commitlog receiving response remote replica state transition triggered event emitted commitlogsegmentmanager event loop manages task event timeouts scheduling custom currently closely tied netty event loop couple example class take look writetask url eventloop url second approach utilizes rxjava observable pattern would wait emitted event state machine approach instead depend observable push data result awaiting scheduling handled rx scheduler customizable code change required overall le intrusive quick example look like high level operation url far benchmarked approach memory read get idea upper bound performance approach throughput appears similar branch consideration debate approach go would appreciate input first performance concern going rx something similar may limit peak performance eventually attain couple way first much control event loop scheduling chunking task state machine approach writing totally control rx lot thing customizable already decent tool may come short critical way second overhead observable machinery may become significant bottleneck removed course writetask et al overhead control second consideration code style ease understanding think approach downside different area state machine explicit upside also verbose somewhat disjointed complex operation cassandra cleanly represented single state machine logically multiple state machine operating parallel local write path remote write path writetask working prototype found state machine harder logically follow hoped perhaps could come better abstraction pattern current state thing rx side downside behavior much le explicit additionally find difficult mentally follow flow execution based past work large twisted python codebase agree tough get used unmanageable experience good coding pattern third consideration code reuse big advantage rx come many tool transforming observables handling multiple observables error handling tracing state machine approach would need write equivalent scratch non trivial amount work might make project take significantly longer complete combining fact rx approach would le invasive seems like would easier time introducing incremental change code base rather big bang commit boil concern one tradeoff want expend effort explicit code complete control want piggyback rx work give control hopefully get next deeper optimization sooner thanks input topic tyler hobbs datastax"
    },
    "14831":{
        "ID":28974,
        "MESSAGE_ID":"1BADC1BD-5351-4112-9661-D9C6E2091BE3@gmail.com",
        "PARENT_ID":28973.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"process",
        "BODY":"think separate mailing list ticket creation would nice well think many filter commits list happen place proposed change would make easier people follow new issue creation go follow comment etc issue interested"
    },
    "14834":{
        "ID":28971,
        "MESSAGE_ID":"CACr06N0f-975XfHkOdxF3H3xUdWv1tEMnGAwHXUaQbi77=+YDA@mail.gmail.com",
        "PARENT_ID":28970.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"like many difficult problem easier point suggest improvement anyway proposing change mechanism communication excusing simplification view problem avoid ending quagmire topic great example email inadequacy innocuous little textual act resulted instead different quagmire first potential quagmire still play email minefield textual interaction exhausting people tap without fully expressing retain life sanity"
    },
    "14836":{
        "ID":28969,
        "MESSAGE_ID":"CACr06N2qi-ohhT2u1Hy0AtTO8+RCt+Op+gdiCS=DfSzNFwa3Rg@mail.gmail.com",
        "PARENT_ID":28968.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"think complex nuanced especially emotive topic challenging discus textual medium due thing like attention span reader difficulty structuring text especially hoop jumped minimise potential misinterpretation well correcting inevitable misinterpretation happen anyway major side track deviate"
    },
    "14838":{
        "ID":28967,
        "MESSAGE_ID":"CAKmMYa9p05TKPL75EX6xVf2u3VgX3Og6PP9wj__4=iLNWYWDhg@mail.gmail.com",
        "PARENT_ID":28957.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Nate McCall <nate@thelastpickle.com>",
        "TAGS":"not-ak",
        "BODY":"non binding thanks jeremiah moving right direction"
    },
    "14840":{
        "ID":28965,
        "MESSAGE_ID":"CACr06N2+uggMnqV3Y1H5_erTadz1tgKpdLCwoweYNvp=OAeVjQ@mail.gmail.com",
        "PARENT_ID":28960.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"much intention imply thought crafted email carefully imply topic complex fully exploring detail would onerous email datastax opinion consciously try good citizen however emergent property system imbalance conscious suboptimal unreasonable apache apparatus try rectify imbalance personally support principle think going brilliantly right also doubt success endeavour given difficult problem however think project could improve welcoming area jon mention also much effort put mentoring newcomer responding technical question project far unwelcoming mentoring costly success dayjob measured code contribute clearly take priority know change far conscious action concerned personally witnessed datastax try put effort well trying drum new external contributor bootcamps effort limited success"
    },
    "14843":{
        "ID":28962,
        "MESSAGE_ID":"CACUnPaAfFU18x5C7WpdnumYfza7Mg2UypQ8nvZ2LD6=a0anLUA@mail.gmail.com",
        "PARENT_ID":28959.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"know everyone else big deterrent contributing code cassandra last year massive amount ramp need happen order get started working something meaningful come variety form understanding test failure actually failure corrected lack comment example url date wiki semi retired still source misinformation class name make sense historically massive amount tribal knowledge required contribute significant way going jira history asking people wrote feature way find supposed going let forget fact distributed database add issue fact getting thing right miraculous achievement order get people contributing project need significant effort making approachable suspect project continues move faster become ever harder new contributor join unless paid work cassandra full time people deploying tick tock release purpose bug fix release exactly scream reassurance sorry folk going scratch itch fixing bug eventually contributing feature need likely going drop time leaf full time paid position employed datastax logical place go interested working cassandra"
    },
    "14845":{
        "ID":28960,
        "MESSAGE_ID":"7a1479148609c1106fe4dc431548ef20@baybroadband.net",
        "PARENT_ID":28959.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Dave Brosius <dbrosius@mebigfatguy.com>",
        "TAGS":"not-ak",
        "BODY":"agree generally misleading come across like datastax dictating excluding others participating perhaps discouraging others whatever truth whenever someone come along independent interested developing apache cassandra welcomed participate develop soon become datastax employee always course common pattern make sense datastax hire people interested capable developing apache cassandra truth whole lot le sinister inference dave associated datastax"
    },
    "14846":{
        "ID":28959,
        "MESSAGE_ID":"CACr06N1OBB7jp+6TJiFvGD9Q9Tm=BYK+NCQ-OdCSPLyYc1+Epw@mail.gmail.com",
        "PARENT_ID":28956.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"much useful focusing discussion opinion seemed city hall focusing narrow definition project health would first say project need improve challenging sure anyone really know go end local minimum discussion minutia jira replication project really need board chomping bit diversity fact right datastax substantive development project make decision internal community outweighs apache community emphasise clearly ex colleague making value judgement clarifying crux discussion everyone seems dancing around question done project need lot new highly productive independent contributor capable meaningfully shaping project direction problem know achieve"
    },
    "14847":{
        "ID":28958,
        "MESSAGE_ID":"e3479c0d68d9af0ab0d5816819ea170b@baybroadband.net",
        "PARENT_ID":28957.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Dave Brosius <dbrosius@mebigfatguy.com>",
        "TAGS":"not-ak",
        "BODY":"would like"
    },
    "14848":{
        "ID":28957,
        "MESSAGE_ID":"8D8843DB-8F22-4D14-92BA-BB44C4705D18@gmail.com",
        "PARENT_ID":28894.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"process",
        "BODY":"back topic hand first let establish stuff happening mailing list jira update sent commits reply set dev jira still list need decide would like best make use list propose keep dev fairly low volume people feel need filter inbox thus possibly miss important discussion someone care much name list stuff happens propose make dev announce happens replace commits dev dev dev announce start forwarding jira stuff dev order keep dev low volume higher currently mostly volume lately propose following someone major feature would like discus major feature every day bug fix etc make jira thing want discus aka post thing commits post link jira short description dev discussion jira aka commits new thing major change question jira people feel need extra discussion involvement email dev question link back jira discussion jira aka commits new thing something else come go back step process decision making keep title description field jira aka commits date actually happening ticket thing settle make sub task follow ticket actually implementing thing linked initial ticket would keep dev list informed going new feature proposal keep discussion jira ticket easily referenced kept one place easy get easy jeremiah"
    },
    "14849":{
        "ID":28956,
        "MESSAGE_ID":"00bc01d1f7da$b0c53360$124f9a20$@acm.org",
        "PARENT_ID":28951.0,
        "SUBJECT":"RE: A proposal to move away from Jira-centric development",
        "SENT_FROM":"\"Dennis E. Hamilton\" <dennis.hamilton@acm.org>",
        "TAGS":"not-ak",
        "BODY":"orcmid please read especially section community consensus building independence apache project expected govern pmcs responsible pmc chair officer foundation accountable board project striving toward maturity occasion deviation notable objection folk run around policing project occasion concern project gone astray one maturity factor might emphasized enough sustainability transparency project conduct inclusiveness operation visibility way growth turnover accommodated since looking motto community code come mind project freedom bit like freedom drive mph arterial highway occassionally infraction becomes worthy attention even road block spike strip individual preference discussed agree pertinent top posting versus bottom posting lacking broad discussion community incumbent karma privileged overall community one sustains thriving project strives maturity folk concerned managing mail stream choosing matter might want discus way operating list support concern position enough question might workable inside practice policy water apache project swim dennis orcmid alternative must fit within overall principle however deviate weaken opening arbitrary conduct major exception required project deliberate matter agree desired exception justification take appropriate venue ratification useful keep mind exception precedent others cherry pick also case pmc indeed chair although consensus always better set policy project must explicit documented available would really great stop fighting city hall instead start inquiry principle behind practice accomplished project way operating"
    },
    "14854":{
        "ID":28951,
        "MESSAGE_ID":"CAORswtw4o9wSEXrenvuuYnwFtNNf6kqBh40xto__z=KwN20ihw@mail.gmail.com",
        "PARENT_ID":28948.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Eric Stevens <mightye@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"agree benedict really getting legalese debate subject however happen brought hammer conversation multiple time think important put rest pretty clear cut project free disregard advice happen motto rule per asf newbie faq referenced someone else earlier thing asf project section includes gem presented general guideline hard rule benedict point even preceded guideline suggesting developer free seek alternative since reference incubator code conduct list motto asf policy best source could find mirror newbie faq provides additional insight objective motto transparency spirit motto meant dictate technology choice merely indicate discussion happen open space able participate motto authored time list real option jira absolutely meet design goal motto direction community chooses clear source individual community work free find path best url url"
    },
    "14858":{
        "ID":28947,
        "MESSAGE_ID":"CACr06N312c1oHq1y7Pmb=fauw42f3nmXCDUizFANT8sQJ932RQ@mail.gmail.com",
        "PARENT_ID":28946.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"unfortunately rulebooks consulted shape kind discussion ambiguity begin show mean something happen mailing list must loose interpretation clearly many thing happen mailing list code development commits codebase well infinitude micro decision made implementor thing clearly happen though also worth pointing prior rule presumably take precedence let work make decision rule perhaps even discus mailing list may encroaching right decide clouded fact quoting newbie faq place different snappy phrase used everything everything inside apache world occurs reflected email emphasis mine email happen official sounding committer guide indicate commits receiving jira comment mean comment happen although know speaker second quote perhaps end specific inbox anyway point let get legalistic discussion even legalese rule referred motto code faq guideline interpreted generosity even seems suggestion noncompliance stretch let try agree best policy"
    },
    "14859":{
        "ID":28946,
        "MESSAGE_ID":"CALznzY6Pe=-7TOPSvM-f9w=B7=Uabgk07=8JD2-QXoL=y7LmSg@mail.gmail.com",
        "PARENT_ID":28942.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"James Carman <james@carmanconsulting.com>",
        "TAGS":"process",
        "BODY":"thing true irrelevant asf clear policy happen policy discussion decision project must done mailing list may disagree policy many feel free take power policy change adhere reason chose mailing list iiuc somewhat least common denominator would suggest instead sending email dev list saying hey folk go jira look stuff opposite let discussion mailing list jira would link email thread supporting documentation ticket"
    },
    "14863":{
        "ID":28942,
        "MESSAGE_ID":"CAORswtwjyzTg3nQ7dL3vkq=sWe9hTUSEiUOrm6qmsG9-K7r5Dw@mail.gmail.com",
        "PARENT_ID":28941.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Eric Stevens <mightye@gmail.com>",
        "TAGS":"process",
        "BODY":"strength discussion ticketing system mailing list mailing list fundamentally designed early state art user experience perspective barely advanced since mailing list tend end fragmented thread large discussion subject change conversation restarts topic fork simple etiquette error make difficult locate entire discussion related feature single source interested party study thoroughly understand entire conversation rather scavenger hunt way certain covered territory example would ended numerous parallel thread people forked conversation side discussion offer alternative way ticket would ever simply single massive email thread fork mailing list allow selective subscription find ticket interesting watch ticket follow along conversely importantly find uninteresting wade discussion progress think want follow ticket possible likewise want watch ticket involve certain component certain milestone certain label even certain contributor create subscription get email accordingly also subscribe feed add news reader prefer approach better tremendous amount control given user want see want see concern chris voiced open web browser participate actually true unless apache jira install well configured reply email notification jira appear comment ticket exclude anyone even want participate somehow motivated create account ticketing system could bothered figure arcane mailing list subscription incantation permalinking conversation important capability possible mailing list nontrivial want create permalink must first locate discussion nonprimary interface online archive involves lot effort historically also seen existing permalinks become invalidated mailing list archive software switched upgraded lead next point one simple hugely valuable feature jira short memorable ticket number several people thread mentioned care conversation know id heart casual conversation want bring someone attention issue mention id without try remember original thread subject participant also hopefully remember maybe locate later write number napkin find issue know right one similar unrelated conversation ticketing system maintain summarized version conversation ticket description shortcut want know current state without read potentially month back history catch event log model event log great way capture changing state horridly inefficient option start replay entire log particularly lot contributor long winded"
    },
    "14864":{
        "ID":28941,
        "MESSAGE_ID":"CALdd-zgGOG+kQ=eL92d9HwwU1MLVH2O_xcq-yqNzx+jfqM1Jhw@mail.gmail.com",
        "PARENT_ID":28940.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"process",
        "BODY":"important note take approach need careful summarize conclusion discussion also approach examined found unviable otherwise people looking ticket cross reference back much harder follow discussion list archive"
    },
    "14866":{
        "ID":28939,
        "MESSAGE_ID":"CAPH+nLPzviUNLydH7YgTjj6irPyAD9WEjPabDQkStORkms1Zeg@mail.gmail.com",
        "PARENT_ID":28938.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"process",
        "BODY":"thought would hate see daily test email getting lost flood jira ticket opening commenting trivial day day work already email filter jira feed could also set filter list extra burden participation new contributor opinion add value current project workflow would great candidate discussed mailing list rather jira made point front load design still ran unforeseen consequence design might prevented wide spread discussion opinion would made sense initial discussion take place mailing list design settled worked design day day back forth jira bringing back mailing list ran problem design personally favor discussion ticket hit dev mailing list essentially already list however believe make better use dev list"
    },
    "14867":{
        "ID":28938,
        "MESSAGE_ID":"CAKmMYa-C8mGjg3h1Shpz9cLJMdG5TfbWjGCZQv28P0T4NgunGA@mail.gmail.com",
        "PARENT_ID":28894.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Nate McCall <nate@thelastpickle.com>",
        "TAGS":"process",
        "BODY":"goal mitigate case necessary noise bloated cassandra others good example case cassandra tupshin posted summary first would streamlined discussion josh circled back around ml finding implementation opposed jira would clear understand ongoing development sure raising thinking good point made concern traffic fragmentation refocus discussion seem general agreement large contribution design idea would make sense announce ml inherently inspire level discussion linking back relevant ml announcement jira good practice feel like starting would good first step towards higher engagement ml blowing traffic potentially bit streamlining biggest issue thought nate"
    },
    "14872":{
        "ID":28933,
        "MESSAGE_ID":"D4EB6700-ED17-4744-AC06-CE8515A64350@snazy.de",
        "PARENT_ID":28931.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Robert Stupp <snazy@snazy.de>",
        "TAGS":"process",
        "BODY":"separating jira change new issue ml mail start design discussion jira dev ml fwiw coding many many year seen lot attempt organise discussion within business public discussion made mailing list tool work day email never still definitely reliable medium email sometimes get lost massively delayed transport nature email email instant messaging necessarily arrive order common consistent ordered view discussion important going jira provides view tool made track issue mean jiras dynamic state email see whether issue closed instantly see whether email discussion closed started contribute apache cassandra really liked use jira made much easier get ticket topic interesting still active newbie read whole discussion something already done obsolete find something interesting nowadays look ticket updated commits go jira see whole picture additionally got dashboard setup need probably advantageous frequent contributor committers going jira medium best signal noise ratio filter watch individual jiras mailing list always nothing robert stupp snazy"
    },
    "14875":{
        "ID":28930,
        "MESSAGE_ID":"B2B40F88-2A1E-4E71-957B-3467E5FC4016@apple.com",
        "PARENT_ID":28929.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Dave Lester <dave_lester@apple.com>",
        "TAGS":"not-ak",
        "BODY":"interesting thanks pointing distinction perhaps breaking issue commits list would help make easier folk subscribe future least within apache mesos apache aurora project seen people subscribe issue list commits list fwiw cassandra commits list heathy following already subscriber number greater contributed code apache cassandra apache id mailing list subscriber metric browsable using reporter tool url dave"
    },
    "14876":{
        "ID":28929,
        "MESSAGE_ID":"CACr06N06V6efz62Yk9dmR9EDbUAQE=zo6iyvxc3kiU6yfmDvvg@mail.gmail.com",
        "PARENT_ID":28926.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Benedict Elliott Smith <benedict@apache.org>",
        "TAGS":"not-ak",
        "BODY":"definition cassandra project already compliant commits mailing list behaves describe would personally like see reform thing work mostly commits rarely going subscribed anybody working full time project painfully noisy would hate dev become similarly noisy though"
    },
    "14877":{
        "ID":28928,
        "MESSAGE_ID":"7B8F49E0-AE50-481E-982A-02F69CFA4F69@datastax.com",
        "PARENT_ID":28926.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"anyone want follow stream apache cassandra commits setup url"
    },
    "14879":{
        "ID":28926,
        "MESSAGE_ID":"3FF80221-EBB0-4175-8002-D521D111DEE9@apple.com",
        "PARENT_ID":28923.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Dave Lester <dave_lester@apple.com>",
        "TAGS":"process",
        "BODY":"apache project mailing list source truth see happen mailing list happen url response jason question two thing seen work well apache mesos community id suggest setting issue cassandra apache org mailing list post change jira ticket comment issue reassignment status change could subscribed like mailing list list would high volume increase transparency happening across project apache mesos issue mesos list url purpose hugely valuable keeping tab happening project interest creating cassandra link original infra ticket reference url apache mesos formalized process design document feature development encourage community discussion prior committed discussion take place mailing list often le merit particular patch much overall design relationship dependency usage larger issue direction feature discussion belong mailing list keep discussion design document connected jira attach link jira issue example url design doc approach formalization jonathan originally proposed dave"
    },
    "14880":{
        "ID":28925,
        "MESSAGE_ID":"2C87269F-5EE7-4427-96D0-12ECF4662A74@gmail.com",
        "PARENT_ID":28924.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Russell Bradberry <rbradberry@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"apache software foundation democracy meritocracy mean appointed asf board pmc actually right vote say anything people added pmc board based perceived knowledge merit performance mr mattmann representative governing body"
    },
    "14881":{
        "ID":28924,
        "MESSAGE_ID":"CALgxWCVvP16XL7LGvOn_RRWiBAKTMJ1m0-xCSZzW+B-jwBs_Bw@mail.gmail.com",
        "PARENT_ID":28913.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"San Luoji <sanluoji@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"source truth period since dictatorship becomes part culture apache cassandra community dictatorship diktadrship diktadrship noun government dictator forty year dictatorship synonym absolute rule undemocratic rule despotism tyranny autocracy autarchy authoritarianism totalitarianism fascism country governed dictator plural noun dictatorship synonym absolute rule undemocratic rule despotism tyranny autocracy autarchy authoritarianism totalitarianism fascism absolute authority sphere"
    },
    "14882":{
        "ID":28923,
        "MESSAGE_ID":"CAHjqPuJspY7mq+MRs38Q64O-f9BEv_=XJCZXLqo=HtLR8Y3f8w@mail.gmail.com",
        "PARENT_ID":28921.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"chris give example healthy apache project feel would good example note trying bait conversation genuinely interested successful project thanks jason"
    },
    "14883":{
        "ID":28922,
        "MESSAGE_ID":"AB5E3782-7277-4233-91D2-290B9AD64243@gmail.com",
        "PARENT_ID":28921.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"committer pmc member dev list follower contributor working different apache project year often follow filter asf list interested individual ticket often care decision made though may important auditing purpose project care implemented easy way link want give others easy way watch vote feature also found list pain want contribute something discussion join list often want join list project care insofar relates want universal jira account watch vote comment ticket within apache ecosystem much simpler follow list per project"
    },
    "14884":{
        "ID":28921,
        "MESSAGE_ID":"85782C0E-AB45-4856-8ABE-70B661EDA9FD@jpl.nasa.gov",
        "PARENT_ID":28920.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Chris Mattmann <mattmann@apache.org>",
        "TAGS":"not-ak",
        "BODY":"dev list follower one disconnect emboldened powerful pmc everyone else"
    },
    "14885":{
        "ID":28920,
        "MESSAGE_ID":"04FCACD9-DB06-49A5-9C77-A986E99436B9@gmail.com",
        "PARENT_ID":28918.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"process",
        "BODY":"regarding high level linking irc slack hipchat mailing list thread easy reference jira id chat program link bot bring various detail think hash id mailing list simple memorable feature mailing list thread go different direction easily burden harder follow future trying sort implementation detail high level discussion mailing list great getting actual work discussion focused work tool like jira come reference able change txt thing think approach proposed jonathan nice way keep dev list follower informed keeping ticket detail focused"
    },
    "14886":{
        "ID":28919,
        "MESSAGE_ID":"AF227541-0161-4116-8811-1DA6FB8136FB@gmail.com",
        "PARENT_ID":28918.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"\"J. D. Jordan\" <jeremiah.jordan@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"interaction people actively involved think much easier follow jira link start involved discussion get link mail archive figure get discussion people used mailing list get people understand getting account website posting like facebook software discussion"
    },
    "14887":{
        "ID":28918,
        "MESSAGE_ID":"9981D157-FFDF-4A91-8DB3-67C10C472D6D@jpl.nasa.gov",
        "PARENT_ID":28896.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Chris Mattmann <mattmann@apache.org>",
        "TAGS":"not-ak",
        "BODY":"harder point someone mail seen list apache org specifically url"
    },
    "14888":{
        "ID":28917,
        "MESSAGE_ID":"877967664.13222941.1471284643918.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":28894.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Anuj Wadehra <anujw_2003@yahoo.co.in.INVALID>",
        "TAGS":"process",
        "BODY":"hi think tracking thing tool would better mailing list jira make feature jiras easier comprehend close every jira discussion attached design proposal mandatory design frozen complete one start implementation sure jira customizations possible would good could customize jira ticket keep discussion isolated approved design within single jira ticket personally find tough go long jira discussion understand final design concluded problem feature discussing initial thought pain area improvement etc done dev mailing list thanksanuj"
    },
    "14889":{
        "ID":28916,
        "MESSAGE_ID":"1BC4F3F7-CE4A-40E0-B2E7-365BE46FBBDD@internalcircle.com",
        "PARENT_ID":28914.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"get email day filter dev like stay engaged list becomes noisy everyone filter black hole sad sent iphone"
    },
    "14890":{
        "ID":28915,
        "MESSAGE_ID":"57566D72-A9E0-430D-BB1B-FF1888EC4EF8@jpl.nasa.gov",
        "PARENT_ID":28914.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Chris Mattmann <mattmann@apache.org>",
        "TAGS":"process",
        "BODY":"want put word jonathan mouth guess he trying strike balance apache cassandra almost exclusive use jira like nil conversation dev list incremental way get term moving project actually use dev list discussion effort kill jira jira fine tool mean ground truth project ground truth always continue future mailing list project decision made mailing list normally easy concept new project grok come incubator become apache project sometimes project need instructed case seen many time however seems fundamental disconnect apache cassandra project mentored apache way versus way long way going long mean correct way asf"
    },
    "14891":{
        "ID":28914,
        "MESSAGE_ID":"09F85CD5-4DF4-4A84-B1C2-DEBAFDC9F360@gmail.com",
        "PARENT_ID":28913.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Russell Bradberry <rbradberry@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"point elli proposal discussion never choice matter first place"
    },
    "14892":{
        "ID":28913,
        "MESSAGE_ID":"61B79307-BEE0-4434-9FFC-5E21E6C557D4@jpl.nasa.gov",
        "PARENT_ID":28912.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Chris Mattmann <mattmann@apache.org>",
        "TAGS":"process",
        "BODY":"sorry massively confused believe asf mailing list source truth optional asf project mailing list source truth period"
    },
    "14893":{
        "ID":28912,
        "MESSAGE_ID":"537DA486-A0FA-46E9-92BA-D53BB6B4E231@internalcircle.com",
        "PARENT_ID":28911.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"process",
        "BODY":"big fan mailing list google make issue findable new people project jira get indexed able find thing email get project first place mailing list good broad discussion bringing specific issue attention broader community never source truth best kjellman sent iphone"
    },
    "14894":{
        "ID":28911,
        "MESSAGE_ID":"7A232475-8468-4D0D-974B-BA3721EA6553@jpl.nasa.gov",
        "PARENT_ID":28907.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Chris Mattmann <mattmann@apache.org>",
        "TAGS":"not-ak",
        "BODY":"realize committers pmc member already pmc developing project engage entire community including yet committer pmc roster future current lifeblood project mailing list unfortunate necessity apache project lifeblood apache project"
    },
    "14896":{
        "ID":28909,
        "MESSAGE_ID":"668EC164-7B9E-4AD3-B013-4D6392585C4C@gmail.com",
        "PARENT_ID":28902.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"process",
        "BODY":"jiras lot easier follow focused single item work come id lot easier reference remember high level discussion list fine link initial discussion referenced jira already mentioned narrowing discussion list going jira seems reasonable"
    },
    "14897":{
        "ID":28908,
        "MESSAGE_ID":"099E0580-3E4A-4CE0-A60C-EE1305DFD5BF@jpl.nasa.gov",
        "PARENT_ID":28903.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Chris Mattmann <mattmann@apache.org>",
        "TAGS":"not-ak",
        "BODY":"depends environment right may friendly folk apache account yet familiar cross linking specific term apache cassandra jira issue taught graduate academic level many year nasa jpl year tell newcomer software development participating open source tend trouble se tool system start startup cost reap much benefit end realize time may lost contributor famous quote prior asf director board member henri yandell amazon word live project begin thinking software engineering business realize recruiting business committers consensus driving flatter committer pmc ratio tool business recruitment url url thought"
    },
    "14898":{
        "ID":28907,
        "MESSAGE_ID":"CAAafH9QVP3d1d8oSUg_okFcaGtjXa2asW7hLwyy6+5uitOP+Vg@mail.gmail.com",
        "PARENT_ID":28906.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"use method quite bit almost every single day"
    },
    "14899":{
        "ID":28906,
        "MESSAGE_ID":"CAGM0Up82ZmNP1QkrDfb1CKKbpaPA1Wtxf8Uu7hxkoJFqBMq+Sw@mail.gmail.com",
        "PARENT_ID":28905.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Yuki Morishita <mor.yuki@gmail.com>",
        "TAGS":"process",
        "BODY":"active committer important thing able look design discussion decision easily later often look git history change txt change interested look jira following jira ticket number written comment text move dev mailing list would request post permalink thread posted jira think one extra step necessary simply use jira post jira link dev list"
    },
    "14900":{
        "ID":28905,
        "MESSAGE_ID":"EA08D40D-9D2E-4C67-96F5-0488F63E50E2@jpl.nasa.gov",
        "PARENT_ID":28901.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Chris Mattmann <mattmann@apache.org>",
        "TAGS":"not-ak",
        "BODY":"good outward flow info dev list however need inward flow conversation dev list good start hope see inclusivity"
    },
    "14902":{
        "ID":28903,
        "MESSAGE_ID":"58387595-930E-48DC-A3EC-C30A9F7CB9BA@gmail.com",
        "PARENT_ID":28902.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Russell Bradberry <rbradberry@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would also like add posterity sake jira much friendly people want understand reasoning behind change made like default ggc kept discussion jira ticket implemented feature navigating endless email dev list making sense extremely tedious difficult get full picture around decision made"
    },
    "14903":{
        "ID":28902,
        "MESSAGE_ID":"8DE175AB-8BA2-4A4F-BC4E-A4255F75CA97@gmail.com",
        "PARENT_ID":28900.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"process",
        "BODY":"proposed send link design lira dev list see jira dedicated specific issue high noise single jira much lower noise conversation around specific ticket conversation happening dev list seems much higher noise jeremiah"
    },
    "14904":{
        "ID":28901,
        "MESSAGE_ID":"etPan.57b1fb4b.2aa25335.36e@apache.org",
        "PARENT_ID":28900.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"process",
        "BODY":"well read carefully jeremiah proposed would issue notable major change would start dev think summary link jira maybe attached spec doc need follow jira feed watch dev announcement start watching invidual jira ticket interested creates least amount noise miss nothing important time receiving mail dev individual comment including proposal care currently could probably ay"
    },
    "14905":{
        "ID":28900,
        "MESSAGE_ID":"F82936E6-BE6F-4820-8D8F-7E76CC752CA3@jpl.nasa.gov",
        "PARENT_ID":28898.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Chris Mattmann <mattmann@apache.org>",
        "TAGS":"not-ak",
        "BODY":"discussion belongs dev list putting discussion jira fine realize lot noise signal people may may watching jira list fact see jira sent dev list basically forking conversation high noise list putting jira"
    },
    "14907":{
        "ID":28898,
        "MESSAGE_ID":"etPan.57b1f7c0.773f704.36e@apache.org",
        "PARENT_ID":28896.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"process",
        "BODY":"feel like would sufficient announce major jiras dev list keep discussion jira belongs need follow every ticket way subscribe dev start watching select major jiras care ay"
    },
    "14908":{
        "ID":28897,
        "MESSAGE_ID":"CAEPxca2QiO5HM_eWpbMeEXeZoCLeZNK-_69uPZKys0+=C-au9g@mail.gmail.com",
        "PARENT_ID":28896.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"process",
        "BODY":"large contribution also link dev discussion thread jira reference"
    },
    "14909":{
        "ID":28896,
        "MESSAGE_ID":"C091A9B7-B212-4FA7-B9CF-06675A56352E@gmail.com",
        "PARENT_ID":28894.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah.jordan@gmail.com>",
        "TAGS":"process",
        "BODY":"like keeping thing jira everything one place easy refer someone future agree jira ticket bunch design discussion pocs get pretty long convoluted really like idea moving discussion email make harder point someone maybe better idea would design poc jira implementation jira way could still keep thing jira final decision would kept clean though would nice people would send email dev list proposing design jiras everyone time follow every jira ever made see new design jira created might interested participating jeremiah"
    },
    "14910":{
        "ID":28895,
        "MESSAGE_ID":"CACUnPaBBupa1YaU8ndNOKjZiM7O3Y_GWHUCp3AingCTi90q1Og@mail.gmail.com",
        "PARENT_ID":28894.0,
        "SUBJECT":"Re: A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"not-ak",
        "BODY":"non binding"
    },
    "14911":{
        "ID":28894,
        "MESSAGE_ID":"CALdd-zh4j8y3Lb9kSrOV72CSVY1GtWBuWEhoQY1f00X4NYVj9A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"A proposal to move away from Jira-centric development",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"process",
        "BODY":"long time ago proponent keeping development discussion jira ticket self contained threadless nature help keep discussion getting sidetracked cassandra lot smaller grown become necessary separate signal discussion new feature major change noise routine bug report propose take advantage dev list perform separation major new feature architectural improvement discussed first consensus design achieved moved jira implementation review think also help problem initial idea prof unworkable get revised substantially later much discussion difficult figure conclusion review comment start pile afterwards discussion list summarizing jira would mitigate jonathan elli project chair apache cassandra co founder url spyced"
    },
    "14922":{
        "ID":28883,
        "MESSAGE_ID":"732DB60A-844D-4FA3-822B-08DB587DEB9B@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 2.7.3 RC1",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi created release candidate rc apache hadoop discussed next maintenance release follow rc available validation url rc tag git release rc maven artifact available via repository apache org url release note inside tar ball location hadoop common project hadoop common src main doc releasenotes html hosted home apache org vinodkv hadoop rc releasenotes html quick perusal may noted issue rc forced rc long fix cycle license notice issue hadoop caused along every hadoop release slip quite bit release related discussion thread linked please try release vote vote run usual day thanks vinod vote release apache hadoop rc url release plan url"
    },
    "14960":{
        "ID":28845,
        "MESSAGE_ID":"CAPz5eN7uUTAxNOUimao+hzx0hjwzVfZZz=vQE4PCVjimu8SSVQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[Release thread] 2.6.5 release activities",
        "SENT_FROM":"Chris Trezzo <ctrezzo@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"based sentiment discus line release thread moved forward initial effort creating release forking thread dedicated release thread gone git log gathered list jiras branch missing branch limited different issue commit date cut branch around date url presumably issue committed branch already looked part collected issue spreadsheet given initial triage whether candidate backport spreadsheet sorted status issue potential backport candidate top link spreadsheet url identified potential backport candidate please take look list let know think list one think missed initial high level triage could definitely issue miss labeled side note still need look pre commit build follow addendum hadoop thanks everyone chris trezzo"
    },
    "15023":{
        "ID":28782,
        "MESSAGE_ID":"8AD4EE147886274A8B495D6AF407DF698F11A353@blreml502-mbx",
        "PARENT_ID":null,
        "SUBJECT":"Issue in handling checksum errors in write pipeline",
        "SENT_FROM":"Brahma Reddy Battula <brahmareddy.battula@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"hello come across one issue write failed even dn available due network fault one datanode last pipeline similar hdfs scenario dn fault min repl write pipeline dn dn dn dn give error checksum ack dn marked bad dn dn dn dn give error checksum ack dn marked bad time dn last pipeline continued till datanodes construct pipeline thinking handle like instead throwing ioexception error checksum ack downstream send back pipeline ack client side replace dn dn new node decide network problem please give view possible fix brahma reddy battula"
    },
    "15073":{
        "ID":28732,
        "MESSAGE_ID":"CAOTuNWVKvGibkPFvaXzpQaqvcJsw3+pMahZsWoXcorPJNYx=mQ@mail.gmail.com",
        "PARENT_ID":28650.0,
        "SUBJECT":"Re: Improving recovery performance for degraded reads",
        "SENT_FROM":"Rakesh Radhakrishnan <rakeshr@apache.org>",
        "TAGS":"existence",
        "BODY":"hi roy request fetch instead chunk surviving chunk part answer hope know write path adding detail support read explanation part writing ec file dfs client writes data stripe kb cellsize multiple datanodes schema client writes data block first datanodes parity block remaining datanodes say one stripe cellsize cellsize data reading client fetch order read stripe stripe datanodes data block first fetched datanodes parity block le ec block reconstruction work needed internally dfs client read whole stripe one one contact datanodes parallelly stripe failure contact parity datanodes reconstruction fly dfsstripedinputstream supported positional read read entire buffer filesize buffer previously attached ppr paper answer hdfs open jira discus caching striped block datanode perhaps caching logic could utilized similar qfs reconstruction choose datanodes already cached data memory open improvement task probably reduce chunk size hence answer yes striping done dividing block several chunk call cellsize kb one stripe block group comprises several stripe would suggest read blog url understand stripe cell block group terminolgy etc reeading answer blk blk blk cell cell cell get data multiple stripe rebuild image display hd image would always read together stripping distributing different node ignoring delay answer since stripe contact datanodes assume slow datanodes dead datanodes data block stripe affect read performance afaik large file contiguous layout suitable supported phase design discussion still going please see hdfs jira"
    },
    "15155":{
        "ID":28650,
        "MESSAGE_ID":"CACHrkBAmozH1w+Vir-yszg+_GLzYeeaFPTMwuVnf5abY9iP2yw@mail.gmail.com",
        "PARENT_ID":28624.0,
        "SUBJECT":"Re: Improving recovery performance for degraded reads",
        "SENT_FROM":"Roy Leonard <roy.leonard.jr@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi rakesh thanks sharing thought update last email sure meant submitting read request fetch instead chunk surviving chunk optimization place decide data node part caching done proposed qfs previously attached ppr paper mentioned stripping done assume probably reduce chunk size hence object size large super hd image would get data multiple stripe rebuild image display client think stripping would still help possibility since know segment hd image would always read together stripping distributing different node ignoring special temporal locality increase associated delay wanted know thought looking forward future performance improvement hdfs regard"
    },
    "15181":{
        "ID":28624,
        "MESSAGE_ID":"CAOTuNWXK6YgsAHV_cPwVfiXqOzdq6qy5m-Nwq_HCLVeHx6BgBA@mail.gmail.com",
        "PARENT_ID":28623.0,
        "SUBJECT":"Re: Improving recovery performance for degraded reads",
        "SENT_FROM":"Rakesh Radhakrishnan <rakeshr@apache.org>",
        "TAGS":"existence",
        "BODY":"adding one point previous mail reply explained striped block reconstruction task triggered namenode identifying missing bad block similarly case hdfs client read failure currently hdfs client internally submitting read request fetch chunk belonging stripe failed chunk data node perform decoding rebuild lost data chunk client side regard rakesh"
    },
    "15182":{
        "ID":28623,
        "MESSAGE_ID":"CAOTuNWUV9adkfDaDa-s0_QKLtAa=OfNf1f_WfovpWb4_Yd+jfg@mail.gmail.com",
        "PARENT_ID":28622.0,
        "SUBJECT":"Re: Improving recovery performance for degraded reads",
        "SENT_FROM":"Rakesh Radhakrishnan <rakeshr@apache.org>",
        "TAGS":"existence",
        "BODY":"hi roy thanks interest hdfs erasure coding feature helping making feature attractive user sharing performance improvement idea presently reconstruction work implemented centralized manner reconstruction task given one data node first pipeline example erasure code schema assume one chunk say byte lost disk server failure byte data need retrieved server recover lost data reconstructing data node fetch chunk belonging stripe failed chunk different server perform decoding rebuild lost data chunk yes factor increase network traffic cause reconstruction slow iiuc implementation time point come think priority given supporting basic functionality first could see quite jira task hdfs hdfs discussed distributing coding work data node includes converting file striped layout reconstruction error handling etc feel still room discussing implementing new approach get better performance result shared doc mentioned partial parallel repair technique successfully implemented top quantcast file system qfs support based erasure coded storage got promising result really encouraging factor gone doc deeply would really great folk could come thought discus implement similar mechanism hdfs well mostly kick start performance improvement activity much awaiting alpha release replica much idea part probably folk pitch share thought regard rakesh"
    },
    "15183":{
        "ID":28622,
        "MESSAGE_ID":"CACHrkBBgtd+BZaobRr-uHZLdLTT21yt8zeA97N1TagG3G3ByTw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Improving recovery performance for degraded reads",
        "SENT_FROM":"Roy Leonard <roy.leonard.jr@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"greeting evaluating erasure coding hdfs reduce storage cost however degraded read latency seems like crucial bottleneck system exploring strategy alleviating pain degraded read latency found tree like recovery technique might useful described following paper partial parallel repair ppr distributed technique repairing erasure coded storage eurosys url question already tree like recovery implemented hdfs ec plan add similar technique near future also would like know others done sustain good performance even failure keeping fail replica regard"
    },
    "15190":{
        "ID":28615,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B66621D3046F@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":28605.0,
        "SUBJECT":"RE: Setting JIRA fix versions for 3.0.0 releases",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"humble feeling almost regarding urgent need alpha release considering ec script rewriting etc significant change interested user want evaluate ec storage method alpha release definitely help lot allowing user try new feature expose critical bug gap may take quite time important build confidence preparing solid release understand vinod concern need lining release effort work multiple release avoided mentioning alpha different best would allow parallel going speed ec like meanwhile release hurry pushed release thanks consideration regard kai"
    },
    "15195":{
        "ID":28610,
        "MESSAGE_ID":"73918F59-AC57-485D-B217-C026E168EB2A@apache.org",
        "PARENT_ID":28605.0,
        "SUBJECT":"Re: Setting JIRA fix versions for 3.0.0 releases",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"arguing need alpha release question wait till get done orthogonally report incompatible change like one generated branch release using late jdiff work li lu etc fix inadvertant incompatibility without seeing list incompatibility even make alpha release force downstream component discover issue identified running report similarly list feature enabling alpha would good may update roadmap wiki thing like classpath isolation part original roadmap still done bunch going busy finishing zero sum predicate involved looking even though interested obviously making case issue happen ever fact already happened parallel release precisely avoided major confusion lining behind etc vinod unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "15198":{
        "ID":28607,
        "MESSAGE_ID":"CAGHyZ6KHwm4BX_8bbbkaeyKA3oU4uVBMQwaTaGi8g13ZVuZ6fA@mail.gmail.com",
        "PARENT_ID":28605.0,
        "SUBJECT":"Re: Setting JIRA fix versions for 3.0.0 releases",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"bit confused folk wanting invest time getting multiple major branch working correctly hadoop community hat see struggle maintaining multiple maintenance line within worry going going downstream hbase community hat pretty sure still need still release afaik hbase community made plan abandon hadoop version next major release would sad future feature needed added hdfs forced user upgrade across major version"
    },
    "15200":{
        "ID":28605,
        "MESSAGE_ID":"CAGB5D2Z+TAVKRkOC+TGJhe7TbCgHVgm0p=0ySm+ApwcB5KahGQ@mail.gmail.com",
        "PARENT_ID":28602.0,
        "SUBJECT":"Re: Setting JIRA fix versions for 3.0.0 releases",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"really really want alpha soon possible since basically impossible downstreams test incompat change new feature without release artifact test build branch alpha ready rc besides possibly fix version issue worried splitting community bandwidth following reason alpha explicitly alpha mean quality compatibility guarantee need le vetting release given still alpha many true showstopper bug blocker see also apply well community bandwidth zero sum particularly applies people working feature present trunk like ec script rewrite etc longer term assume line ending would still issue thing committed appearing first time alpha assuming script exists fix jiras incrementally work also fix unreleased version best andrew"
    },
    "15203":{
        "ID":28602,
        "MESSAGE_ID":"666A8BE9-1F45-4407-ADD3-84E57931808C@apache.org",
        "PARENT_ID":28600.0,
        "SUBJECT":"Re: Setting JIRA fix versions for 3.0.0 releases",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"fix went working push running nexus issue go ill immediately like requested one thread line alpha right behind simplifies confusion avoid splitting bandwidth community fixing blocker vetting concurrent release waiting little alpha avoid worth going thanks vinod unsubscribe mail mapreduce dev unsubscribe hadoop apache org additional command mail mapreduce dev help hadoop apache org"
    },
    "15205":{
        "ID":28600,
        "MESSAGE_ID":"CAGB5D2YN=rtVZ6yB7ZDXncv5oY0+6GKguRc=0wo+hMrQQJ6zDA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Setting JIRA fix versions for 3.0.0 releases",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi since planning spin release branch trunk changelog alpha based jira information accurate historically set fix version etc released whole bunch change show first time alpha think write script carefully add alpha jiras figured would give head case anyone felt differently also update howtocommit page match thanks andrew"
    },
    "15217":{
        "ID":28588,
        "MESSAGE_ID":"CAHjqPu+m_kYhVpdjEwrYgBZd4BHTcHyhJrR9MyhzZb2RvqKHhQ@mail.gmail.com",
        "PARENT_ID":28586.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"oh late respond going comment leaving non critical commits probably ok point deed already done long agree become rigorous future critical bug bug minor enhancement major feature version land"
    },
    "15219":{
        "ID":28586,
        "MESSAGE_ID":"CALdd-zhcr36L2HArEbrwLLj-yBsVwWO5p=Fg9fPSdbrtf7L-nw@mail.gmail.com",
        "PARENT_ID":28568.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sound like consensus handle reverts update jira"
    },
    "15237":{
        "ID":28568,
        "MESSAGE_ID":"etPan.5790133e.11fb5139.b4e@apache.org",
        "PARENT_ID":28557.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"not-ak",
        "BODY":"keep revert rest sound reasonable ay"
    },
    "15248":{
        "ID":28557,
        "MESSAGE_ID":"CAEPxca3D6a3PBRp5UB-Gn50_CKbxYChzEmC8OcAnXdFzdJSTfw@mail.gmail.com",
        "PARENT_ID":28556.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"allowing critical bug fix agree sylvain cassandra border line critical bug would vote cassandra critical since streaming big issue well also fine taking internal patch since already maintain internal branch bug fix"
    },
    "15249":{
        "ID":28556,
        "MESSAGE_ID":"CAH6kTvz1X_xA4gCMnO-nsedS7WQNwb5PDfzR6dy21B=C7FVGmw@mail.gmail.com",
        "PARENT_ID":28548.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Fabien Rousseau <fabifabi95@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi reporter cassandra bit history big pain point streaming really important week repair increased data size percent give example one cluster node cf around gb data per node compaction reduced gb fully understanding problem doubled cluster size issue node node spotted problem november one cluster without hint happening first knew lot streaming repair ie mb data quite high ratio mismatch read repair putting production cluster completely different data model continued observe pattern without finding correlation took time identify issue fix note reported issue stopped repairing affected cf know bad practice temporary solution bare metal server quite stable would say surprised reported people data model nothing particular maybe people affected paid attention phenomenon please note patch affect sstables serialized digest computed thus reduces risk conclude critical may help people wild nevertheless live patch included maintaining package migrate gmt sylvain lebresne"
    },
    "15257":{
        "ID":28548,
        "MESSAGE_ID":"CAKkz8Q1MEEpcsvJacL0Eor6BO3fzg74-Y_TBiKQMHyrr4gd3sg@mail.gmail.com",
        "PARENT_ID":28545.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Sylvain Lebresne <sylvain@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"definitively agrees cassandra cassandra critical fact marked improvement minor blame commit mea culpa defense long advocated stricter sticking critical fix old release long felt sentiment really shared practice devs committers could fault getting wrong impression lost track number time devs committers argue time really simple question cam partly gave arguing happy get consistent reverting think cassandra one possibly debatable fabien ticket seemed suggest cluster bug make repair unmanageable day filing bug decided temporarily stop repairing table heavily impacted bug mention particular seen around hundred mismatch patch hundred thousand without suppose one could make case repair stream order magnitude case critical ish note would oppose reverting fully meet definition critical willing accept definition stronger side thing leave sylvain"
    },
    "15260":{
        "ID":28545,
        "MESSAGE_ID":"etPan.578f98ce.72893045.b4e@apache.org",
        "PARENT_ID":28513.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"not-ak",
        "BODY":"see resistance either ay"
    },
    "15292":{
        "ID":28513,
        "MESSAGE_ID":"CALdd-zj_HAhckiB1+Oz+HwDgY=6LXu27Kbq0XG0TGuYok=NnsQ@mail.gmail.com",
        "PARENT_ID":28512.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"except really patch submitter want reviewer okay exactly bar looking consider performance fix critical example really need show least new workload found able live way everyone else previous release note committer even said sure agree critical point simple enough somewhat vetted going argue consider putting bad cop hat opening argument"
    },
    "15293":{
        "ID":28512,
        "MESSAGE_ID":"8F1AB062-BAE8-4E96-AA35-B9A9F4397615@datastax.com",
        "PARENT_ID":28511.0,
        "SUBJECT":"Re: Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Jeremiah D Jordan <jeremiah@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"looking ticket three critical fix question came jira discussion decided indeed critical enough commit"
    },
    "15294":{
        "ID":28511,
        "MESSAGE_ID":"CALdd-zjg+a73VncPkU2rw_UpFPVsw0yNwO-yBqUQfK8H8FpiKw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Reminder: critical fixes only in 2.1",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"stage release cycle committing critical fix branch many people depend working reliably worth risk introducing regression performance improvement think patch committed far meet bar reverted include summary people live leave unfixed url repair suffers false negative tree mismatch overstreams data url reduced performance insert read thrift client url reduced performance read workload range tombstone anyone want make case critical appear reverted jonathan elli project chair apache cassandra co founder url spyced"
    },
    "15323":{
        "ID":28481,
        "MESSAGE_ID":"CALVQ-8HkCSYU7aMvEci9BG1-xREGrsw=JAriVVFOOOZpvvqAHw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Compaction strategy contribution",
        "SENT_FROM":"Pedro Gordo <pedro.gordo1986@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi finishing msc final project implement new compaction strategy cassandra discussed main point strategy community member received valuable feedback however understand tough challenge someone never worked cassandra getting know technology found fascinating mixed always wanting contribute ope source project led chose topic msc project first time contributing open source project question proceed correctly looking contribute page see supposed create ticket starting working create one strategy usefulness need validated someone case proceed implement something else finally correct mailing list asking sort question code case question like using abstract class compaction class method supposed ask best course action learn detail code cassandra already saw comment probably enough strategy mind simple finish msc improve feature feedback got moment rely time interval probably scheduled specific hour maybe time le traffic system time interval row made unique across sstables prior analysis find row exists certain number sstables certain threshold suppose naive strategy aim give experience course happy take suggestion probably use idea delivering project moment need keep simple otherwise never able deliver project sorry long email thanks help advance excited project look forward part community best regard pedro gordo"
    },
    "15345":{
        "ID":28459,
        "MESSAGE_ID":"CALamADK0AO5FqKDDGqODjdaDPJqM8L86DN-MsNQegAXNYtoK-A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.8 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "15346":{
        "ID":28458,
        "MESSAGE_ID":"CALamADKQmZiSxKzpp4aTbRPajomJuhNCSXM_fOUp1DKvA1mMrw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.7 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "15347":{
        "ID":28457,
        "MESSAGE_ID":"CALamADJRkM3R5yhYvALkpGWTiCYYQuXiS6W8WDJY7wnMDU2=9A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.15 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "15390":{
        "ID":28414,
        "MESSAGE_ID":"CADbBEnvcVoFCuUkd1RRZsHNixuTiXE=RAce5Ayd94O+kB_kO3Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] merge feature branch YARN-2928",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi folk per earlier discussion would like start formal vote merge feature branch yarn timeline service trunk vote run day end july pdt developing feature feature branch yarn reasonably confident state feature meet criterion merged onto trunk would love folk get hand test capacity provide valuable feedback make production ready nutshell timeline service delivers significant scalability usability improvement based new architecture browse requirement design doc storage schema doc new entity data model yarn documentation also discussion subsequent milestone yarn would like merge trunk termed alpha milestone feature complete end end read write flow able start setting testing high level following key feature implemented distributed writer collector nm aux service hbase storage new entity model includes flow setting flow context via yarn app tag real time metric aggregation application level flow level rich rest api support filter complex conditionals limit content selection etc yarn generic event system metric integration distributed mapreduce total subtasks completed part effort paid close attention ensure disabled timeline service impact existing functionality disabled default special thanks go folk worked real hard feature li lu junping du vinod kumar vavilapalli naga varun saxena vrushali joep rottinghuis regard sangjin url url url"
    },
    "15392":{
        "ID":28412,
        "MESSAGE_ID":"CADbBEntfZfhF2qeEO0gqmad3eWwJSZF+doohuXseS0BbmjTLfA@mail.gmail.com",
        "PARENT_ID":28360.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks everyone chiming discussion since blocker raised go ahead start vote thread regard sangjin"
    },
    "15444":{
        "ID":28360,
        "MESSAGE_ID":"CADaA6Kv67OQv12ZrpRbaqo7pzeSMhk_ze9J8zFp30N9Ogz08hw@mail.gmail.com",
        "PARENT_ID":28356.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"\u4fca\u5e73\u5835 <junping_du@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks sangjin li sharing point also yes original point bind merge yarn trunk alpha release short term actually at merge case see value keeping trunk independent short term release bar trunk merging different alpha release let discus alpha release plan scope thread focus merging at trunk big merge at trunk gmt li lu"
    },
    "15445":{
        "ID":28359,
        "MESSAGE_ID":"CADbBEnv32n6o5iMRf1OK+SCQ3xZNpvQ3z9N_=5w1M9pNqpkJGQ@mail.gmail.com",
        "PARENT_ID":28356.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yes course discussion solely merge trunk thanks sangjin"
    },
    "15449":{
        "ID":28355,
        "MESSAGE_ID":"CADbBEnvs78TBXJMfhL+A4TmVQPkQ-+Cg0wz+5xPfWoNEBiZ28g@mail.gmail.com",
        "PARENT_ID":28354.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks junping raising good point yes fact security implemented current version definitely concern fyi timeline service documentation attached yarn make clear alpha used testing evaluation make explicit documentation warn user specifically security implemented sound also understanding implication merging trunk would included alpha unless alpha get cut merge right thanks sangjin"
    },
    "15450":{
        "ID":28354,
        "MESSAGE_ID":"CAAD07O+qwNLVaoRHHREdKCAtsciUA7Y1=peBfHy492rHS0m2Jg@mail.gmail.com",
        "PARENT_ID":28353.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi junping thanks good suggestion right document clarify still alpha security feature also think at support security feature good production document officially thanks tsuyoshi"
    },
    "15451":{
        "ID":28353,
        "MESSAGE_ID":"CADaA6KuJtb2uT2uykU=ObNMMC1otbEoEfGpa8VzVSUKjZU7ugg@mail.gmail.com",
        "PARENT_ID":28352.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"\u4fca\u5e73\u5835 <junping_du@apache.org>",
        "TAGS":"property",
        "BODY":"big merging at trunk however concern release alpha even alpha feature provide security support at yet enabling feature without understanding risk could disaster end user even test cluster kudos everyone contributes patch include sangjin li vrushali naga varun joep zhijie thanks junping gmt sangjin lee"
    },
    "15452":{
        "ID":28352,
        "MESSAGE_ID":"CADbBEnsxnkVttVSB9nMkh6sSFDW_fY6-qO3TGO5nM9KoyUkA2w@mail.gmail.com",
        "PARENT_ID":28337.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks folk good discussion going keep open day would love get feedback people thinking opening voting thread right hadoop summit next week objection thanks regard sangjin"
    },
    "15467":{
        "ID":28337,
        "MESSAGE_ID":"1D2C958D-185E-4E3D-AD2C-DBAB0274B701@hortonworks.com",
        "PARENT_ID":28335.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Li Lu <llu@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"agree non hbase impls may attract potential user at actually remember jiras hdfs implementation regard aggregation yes option storage implementation really need find way describe implication different kind aggression idea group chat break at talk may good candidate li lu"
    },
    "15468":{
        "ID":28336,
        "MESSAGE_ID":"CALwhT94J7GFc_gh8CV+TRmm3KEhi2jrvdGAx5QiJZRUewXSMfQ@mail.gmail.com",
        "PARENT_ID":28335.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"catch meant hadoop summit next week"
    },
    "15469":{
        "ID":28335,
        "MESSAGE_ID":"CALwhT95G4BoWF6i+6H31QsJB8gWZUnikPMJd4mg_9jo_aOo7AQ@mail.gmail.com",
        "PARENT_ID":28331.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"reason asking alternate implementation ease trying yarn devs iteration bug fix improvement ease trying app writer user figure use at personally see necessary merge adoption test implementation would enough would partially address substantial implementation would nice guess need look roi decide whether adding good idea"
    },
    "15473":{
        "ID":28331,
        "MESSAGE_ID":"3184966A-1FF1-48F5-96BB-2711EFC306FE@hortonworks.com",
        "PARENT_ID":28330.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Li Lu <llu@hortonworks.com>",
        "TAGS":"existence, property",
        "BODY":"hdfs non hbase implementation helpful focus implementation first milestone would like one working version starting point certainly add implementation feature get mature said one concern building storage implementation completeness added lot support data aggregation today part aggregation flow run aggregation may performed hbase coprocessors implementing comparable storage impls worth noting one may want provide equivalent thing perform aggregation really make one implementation complete enough interchangeable existing hbase impl li lu"
    },
    "15474":{
        "ID":28330,
        "MESSAGE_ID":"CADbBEnvQqHeNy6EHC3ocDWwdsSOJeW45NcaCf5hsrFkViaH0Hg@mail.gmail.com",
        "PARENT_ID":28329.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks karthik tsuyoshi regarding alternate implementation would like get better sense thinking interested strictly test implementation perfectly fine single node setup substantial implementation may scale need work realistic setup regard sangjin"
    },
    "15475":{
        "ID":28329,
        "MESSAGE_ID":"CAB7mwtEwt86XqfWPPsSH5PD_gsACVuUOxuih-VK+DVV83BYR8Q@mail.gmail.com",
        "PARENT_ID":28327.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"\"J. Rottinghuis\" <jrottinghuis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks karthik tsuyoshi bringing good point opened url track discussion capture merit challenge one single place thanks joep"
    },
    "15477":{
        "ID":28327,
        "MESSAGE_ID":"CAAD07OJRKkP47mqQ5rvFsy1+J2q96b1X4ePR49vuQG3DLcUi_A@mail.gmail.com",
        "PARENT_ID":28326.0,
        "SUBJECT":"[DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks sangjin starting discussion merged would release version mentioned think reasonable target trunk alpha backend user try addition hbase leveldb implementation hdfs based implementation alternate non production use apache big data na user also mentioned need hdfs implementation currently pending varun tried work support hdfs backend yarn karthik mentioned useful early user try apis though scale imho useful small cluster smaller machine merging current implementation trunk interested resuming yarn work maybe varun also interested regard tsuyoshi"
    },
    "15478":{
        "ID":28326,
        "MESSAGE_ID":"2ED0064611895E45832B046CE339DE100114C9D93C@SZXEMI503-MBX.china.huawei.com",
        "PARENT_ID":28324.0,
        "SUBJECT":"RE: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Varun saxena <varun.saxena@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"thanks karthik sharing view regard merging would help clear documentation setup use at documentation others interested check yarn latest documentation related jira atsv slightly unrelated merge plan support simpler backend user try addition hbase leveldb file system based implementation strictly test purpose write data local file support feature timeline service well regarding leveldb timeline service distributed writer level db writes data log file sstable file local file system mean easy way leveldb based implementation would know read data especially fetching flow level information however potentially change local file system based implementation hdfs based implementation alternate non production use potential need based community feedback however would discussed team regard varun saxena"
    },
    "15480":{
        "ID":28324,
        "MESSAGE_ID":"CALwhT96ypr3078yLi7BYqQT1_DW0N7NPWd6EDbB4Cr4jnL-rgw@mail.gmail.com",
        "PARENT_ID":28314.0,
        "SUBJECT":"Re: [DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"firstly thanks sangjin others driving major feature merging trunk including alpha seems reasonable give early access downstream user regard merging would help clear documentation setup use at slightly unrelated merge plan support simpler backend user try addition hbase leveldb understand would scale would help initial adoption feedback early user"
    },
    "15490":{
        "ID":28314,
        "MESSAGE_ID":"CADbBEns7UULXG-PGKQzOFu2hS-1gNgtfsuFbGxqY3h=9i8k9MQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] merging YARN-2928 (Timeline Service v.2) to trunk",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"existence, property",
        "BODY":"hi id like open discussion merging timeline service feature trunk yarn mapreduce developing feature feature branch yarn reasonably confident state feature meet criterion merged onto trunk would love folk get hand provide valuable feedback make production ready nutshell timeline service delivers significant scalability usability improvement based new architecture browse requirement design doc storage schema doc new entity data model yarn documentation also discussion subsequent milestone yarn would like merge trunk termed alpha milestone feature complete end end read write flow able start setting testing high level following key feature implemented distributed writer collector nm aux service hbase storage new entity model includes flow setting flow context via yarn app tag real time metric aggregation application level flow level rich rest api support filter complex conditionals limit content selection etc yarn generic event system metric integration distributed mapreduce total subtasks completed part effort paid close attention ensure disabled timeline service impact existing functionality disabled default would like call couple thing discus particular first merge vote approved branch merged would release version preference would merged branch trunk part alpha approved since alpha active progress wanted get thought second timeline service introduces dependency hbase yarn cyclical dependency hbase really depend yarn however version hadoop hbase currently support lag behind hadoop version timeline service based potential subtle dependency conflict made effort isolate issue see hbase folk also responsive keeping trunk much nonetheless something keep mind would love get thought open real voting thread thanks regard sangjin yarn url mapreduce url yarn commits url yarn url yarn url"
    },
    "15496":{
        "ID":28308,
        "MESSAGE_ID":"CY1PR08MB1740F842FD77A5676436EB91F52A0@CY1PR08MB1740.namprd08.prod.outlook.com",
        "PARENT_ID":null,
        "SUBJECT":"Schema Disagreement vs Nodetool resetlocalschema",
        "SENT_FROM":"Michael Fong <michael.fong@ruckuswireless.com>",
        "TAGS":"not-ak",
        "BODY":"hi recently encountered several schema disagreement issue upgrading cassandra one case node cluster idled minute schema remain unsynced due logic flow cassandra restarted hence need come alternative fly thinking nodetool resetlocalschema force schema synchronization safe method need disable thrift gossip protocol performing function enable back resync completes thanks advance sincerely michael fong"
    },
    "15499":{
        "ID":28305,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B66621CFB2C5@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":28269.0,
        "SUBJECT":"RE: A top container module like hadoop-cloud for cloud integration modules",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"thanks steve feedback thought look like people want move around related module may add much real value fine may provide better thought later learn aspect deeper regard kai"
    },
    "15529":{
        "ID":28275,
        "MESSAGE_ID":"CAPH+nLOH3f2xDqLdjHhoxEhbDcAQBEaXBGKf0vUKcgrC-dDATw@mail.gmail.com",
        "PARENT_ID":28266.0,
        "SUBJECT":"Re: Better code review",
        "SENT_FROM":"Josh McKenzie <jmckenzie@apache.org>",
        "TAGS":"technology",
        "BODY":"pretty long conversation topic dev list awhile ago search discussion reviewing larger ticket mailing list think final conclusion back forth via jira helped codify design decision took place implementation review could lost using external tool extra overhead raw tooling perspective pro outweighed con"
    },
    "15535":{
        "ID":28269,
        "MESSAGE_ID":"D8B1844B-FC4C-4DA5-8DCE-B91571FD2011@hortonworks.com",
        "PARENT_ID":28226.0,
        "SUBJECT":"Re: A top container module like hadoop-cloud for cloud integration modules",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"kind right reason separate hadoop aws hadoop openstack module always permit module use apis exclusive cloud infrastructure structure downstream dependency allow people like emr team swap closed source version think anyone though also let completely isolate testing module test run credential right hadoop common cross work test go hint reviewer hadoop needed think could start classpath package split compilation ordering merit add dependency hadoop common spark added downstream test sa azure spark show sa hadoop get blocksize wrong listing split byte wrong work dy think downstream test spark hive etc would really round cloud infra testing put hadoop build dag prevents review spark needed way system test aliyun perhaps gfs connector would need go bigtop place discussed cloud integration test stick common think would make sense feature went good committer object store would example depends mr library go common today would go hadoop mapreduce bad long apis us hadoop common thing get complex matter unsubscribe mail common dev unsubscribe hadoop apache org additional command mail common dev help hadoop apache org"
    },
    "15538":{
        "ID":28266,
        "MESSAGE_ID":"CABokNM6a_5=qDmFzQCSRPmsML4pj4_JbbE1zn8zxrJF0kXi7vQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Better code review",
        "SENT_FROM":"Mahdi Mohammadi <mahdix@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi today noticed url website used code review use even better use github pr code review facility best regard"
    },
    "15548":{
        "ID":28256,
        "MESSAGE_ID":"CALamAD+MsmeTXOKqevbTgJWRte31R=QfeRfq5QMo=uT0A+gbKA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.7 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version tick tock bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "15549":{
        "ID":28255,
        "MESSAGE_ID":"CALamADKDyfCMzmnRrCGeW7fY4Pv=6H1+R7enYpWDfjTc2pejEg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.7 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "15578":{
        "ID":28226,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B66621CF2775@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":null,
        "SUBJECT":"A top container module like hadoop-cloud for cloud integration modules",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"existence",
        "BODY":"hi noticed obvious trend hadoop supporting cloud platform suggest top container module hold integration module like one aws openstack azure upcoming one aliyun rational simple besides trend existing module mixed hadoop tool becomes little big module cloud specific one grouped together separated making sense future abstraction common spec code sharing could easier thereafter allowed common testing approach could defined together example mechanism discussed chris steve allen hadoop documentation hadoop cloud sure needed already section hadoop compatible file system sound good change would good fit hadoop even though change involve big impact avoid affecting artifact may cause inconvenience current development effort though comment welcome thanks regard kai"
    },
    "15684":{
        "ID":28120,
        "MESSAGE_ID":"CALamAD+Hp-4_kz4Hf=fHNsfXnEr=_i7O_=VMLycf+1tqCpafdw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.6 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version tick tock feature release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "15694":{
        "ID":28110,
        "MESSAGE_ID":"1465223008024.45875@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"Why there are so many revert operations on trunk?",
        "SENT_FROM":"Junping Du <jdu@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi andrew noticed revert commits trunk last friday hadoop hdfs hdfs hdfs hadoop hdfs hadoop hdfs hadoop hdfs see comment jira email discussion think legally allowed even committer pmc member explain intention way thanks nicolas revert illegal revert operation thanks junping"
    },
    "15898":{
        "ID":27906,
        "MESSAGE_ID":"CACZfFK7HkL5F2gRfnJcCLo=uFAsj28PnttA_1CL89XV=t89BKg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Changed Fragment Interface",
        "SENT_FROM":"Jihoon Son <jihoonson@apache.org>",
        "TAGS":"existence",
        "BODY":"hi guy previous fragment interface problem improved url highlight recaped fragment consistent interface abstracted common variable fragment added fragmentserde user defined fragment serialization deserialization changed fragment configuration property storage default xml fragment fragment serde specified tablespace detail please updated wiki url thanks jihoon"
    },
    "15976":{
        "ID":27828,
        "MESSAGE_ID":"CALamAD+f22Z=zz_0SkHhERkBQpH9amMj1bUnpJeXJ1oniC8Cjg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.6 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "16196":{
        "ID":27608,
        "MESSAGE_ID":"CALamADJYO34sqGaAGT-2ZYaukNrGVZF5un0psLV1Arexo-_V4g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.6 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "16197":{
        "ID":27607,
        "MESSAGE_ID":"CALamADJaD2bUUqAScWTzAutQGckKNs35cQzRX=HzyLATh39=vw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.14 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "16260":{
        "ID":27544,
        "MESSAGE_ID":"878C428C-CC65-4125-A75A-59B63A008FDC@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Apache Hadoop YARN Committers\/Contributors meetup # 1 (Redux)",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi hope well id like kickstart committers contributor meetup focused apache hadoop yarn back preferably periodically every month ill shepherd bay area one coordinate others time zone id like propose bay area meetup starting one first week may tuesday may hortonworks host santa clara office great america parkway santa clara ca take care organizing location etc first one go well continue periodic calendar expected audience contributing apache hadoop yarn project directly indirectly right audience non audience community meeting lot direct discussion series tech talk involved apache hadoop yarn project looking general tech talk hadoop yarn wrong place specific agenda tbd webex detail remote tbd meetup url url thanks vinod"
    },
    "16288":{
        "ID":27516,
        "MESSAGE_ID":"CALamADJKwCfPLbYT44-rg_N3FG7MZ5YnkcgT+niGKqSCGP2oyw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.5 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "16310":{
        "ID":27494,
        "MESSAGE_ID":"CALamADK5G9Tr47UUsM0uNMe_+8CZ6KM_xAAtJ=3HEx7KqYhLQA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.5 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "16580":{
        "ID":27223,
        "MESSAGE_ID":"CALamADK-kiv7g=NCXgLHbMJv84rwcMhTgvcJ9dmGLpsT0cqTLQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.4 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "16581":{
        "ID":27222,
        "MESSAGE_ID":"CALamADJdnmUcD=uJ7VOp=XK0cK8L=oYwsEFNj3A9ZmxwMfH0=g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.4 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version feature release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "16597":{
        "ID":27206,
        "MESSAGE_ID":"CAD++eC=RzEo_LJUrPRw_gBCxqEZq8TwWwp-LtNmkdJWBBLNexw@mail.gmail.com",
        "PARENT_ID":27177.0,
        "SUBJECT":"Re: node.js and more as dependencies",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"haihui colin thanks suggestion agree pro con lightweight framework ember framework like react since new framework continuously released spend year finalize framework would like revisit choice framework contributor side project several yarn contributor pretty new understand ember better others want get basic runnable work done make projection ready try make code framework specific much possible alleviate painful switching framework steve unit testing visible part hard first change lot developing spend hour write test htmlunit line layout code change could lead rewrite entire test think need test invisible part like translate rest response model smoke test visible part like basic layout table rendering error handling etc manually test required complex ui logic like svg chart rendering etc thanks wangda"
    },
    "16626":{
        "ID":27177,
        "MESSAGE_ID":"CA+qbEUN7=q_4=jz7no5-VrZyrYUYurD=AkBZyQvOxASK+B4-kQ@mail.gmail.com",
        "PARENT_ID":27170.0,
        "SUBJECT":"Re: node.js and more as dependencies",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"technology",
        "BODY":"framework double edged sword"
    },
    "16627":{
        "ID":27176,
        "MESSAGE_ID":"F31F371B-4D5D-4E4A-B3DE-0C8ECD77D24D@hortonworks.com",
        "PARENT_ID":27170.0,
        "SUBJECT":"Re: node.js and more as dependencies",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"still need plan testing web ui mix lot harder static html htmlunit able handle us jvm javascript engine interpret code anyone looked using test new uis"
    },
    "16633":{
        "ID":27170,
        "MESSAGE_ID":"CAHpOOhFamu_EKbCTJiZh-Ggaga4nZ89PMckUJG1Z0++Moxsy7w@mail.gmail.com",
        "PARENT_ID":27161.0,
        "SUBJECT":"Re: node.js and more as dependencies",
        "SENT_FROM":"Haohui Mai <ricetons@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"adding npm gulp mocha part build dependency runtime main benefit modularity example hdfs ui manually duplicate navigation bar footer unit test due lack infrastructure opinion introducing npm effectively bridge gap however entirely convinced ember argument understand might provide better integration ambari clear trend industry moving reactive ui design think decision using ember exclusively might worth revisiting make sense move hdfs yarn towards react go haohui"
    },
    "16642":{
        "ID":27161,
        "MESSAGE_ID":"CAD++eC=T2KkdfLJtALkYjKRz-GA7vu4bNcj2O+C7njLK19D_Aw@mail.gmail.com",
        "PARENT_ID":27157.0,
        "SUBJECT":"Re: node.js and more as dependencies",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi colin thanks comment think concern valid also arguable first yarn ui different hdfs ui much complex many data model app container system node etc ui hdfs like file explorer plan add rich data visualization yarn ui make admin easier identify happened example using sunburst map render usage breakdown cluster queue user app etc need get data different source different format example application running container information store rm finished container information store timeline server need get data daemon normalize data rest api different aggregate ember could simplify lot great data store design easily normalize data model different source different format adapter easily bind data model view change data store like application status updated trigger page rendering without additional work besides binding data view also bind data computed property example property model relies another model property model updated altogether integrates bower broccoli watchman help package management build development benefit please refer ember slide plan nextgen yarn ui inherit prettify existing yarn ui hope let user get deep insight happens cluster said simple framework also achieve want using well designed framework avoid reinvent wheel regarding concern compilation compaction think conflict open source source folder git repository code readable compilation compaction code exists released code agree need obfuscation source code compaction could increase performance lot could heavy rendering task visualization status application like java code hadoop user try get source code running cluster make sure integration maven le possible need one single sub module limit change module please let know concern thanks wangda"
    },
    "16646":{
        "ID":27157,
        "MESSAGE_ID":"CA+qbEUMjs9wCLrEUBBwemcy0p3zr2oZRcXUrOAKQstMwSg_tXw@mail.gmail.com",
        "PARENT_ID":27142.0,
        "SUBJECT":"Re: node.js and more as dependencies",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"technology",
        "BODY":"hmm devil advocate really need build main use case build seem want minimize obfuscate given open source code obfuscation seems unnecessary given low traffic management interface minimizing seems like premature optimization hdfs user interface based dust requires file copied correct location perhaps advantage ember missing also big advantage manage node build system separate maven cmake think best colin"
    },
    "16661":{
        "ID":27142,
        "MESSAGE_ID":"CAD++eCnhEVErHB7phtr65MCe1QPEcR1d5gF=2w+V1eAEo5OfAQ@mail.gmail.com",
        "PARENT_ID":27140.0,
        "SUBJECT":"Re: node.js and more as dependencies",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi allen yarn using ember ember depends npm node package manager manage package one thing clarify npm dependency required build stage build stitching source file renaming variable build completes dependency node server rm need run http server host file browser take care page rendering like hdfs spark mesos ui couple apache project using ember tez ambari ember help front end developer easier manage model page event package thanks wangda"
    },
    "16663":{
        "ID":27140,
        "MESSAGE_ID":"3D198210-E4D7-4B1A-888D-BF930B84F76F@altiscale.com",
        "PARENT_ID":null,
        "SUBJECT":"node.js and more as dependencies",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"hey folk looked yarn adding node bunch stuff dependency ui good idea seem significantly heavyweight hard going operationally manage"
    },
    "16680":{
        "ID":27123,
        "MESSAGE_ID":"D2F20519.136E0%uma.gangumalla@intel.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [crypto][chimera] Next steps",
        "SENT_FROM":"\"Gangumalla, Uma\" <uma.gangumalla@intel.com>",
        "TAGS":"not-ak",
        "BODY":"thanks valuable feedback discussion reply question mark wrote depends care le quality code community come form around strong community fix code issue great code save weak community uma nice point fully agreed jochen wrote therefore suggest provide least fallback implementation pure java used jni based stuff available whatever reason uma thank suggestion jochen understand point right yes hadoop develop jira hadoop fall back aesctrcryptocodec implementation openssl jce non native support chimera apache crypto benedikt still concern ip since seems intel codebase necessary experience say would right way gut feeling tell go incubator wdyt jochen wrote intel codebase problem question available license uma would fix ip issue sooner see code file license header apache license file current repo package structure name intel check haifeng resolution jochen wrote chimera project attempt resolve quickly possible fine still incubator possibility uma agree would resolve point sooner regard uma"
    },
    "16729":{
        "ID":27074,
        "MESSAGE_ID":"CAMs9kVjGhYLXAfzYci4ezFCzb3pkyEANBJFxOoj=vnDPRXt09A@mail.gmail.com",
        "PARENT_ID":27072.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Ravi Prakash <ravihadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"plan start cutting alpha release thanks initiative andrew"
    },
    "16731":{
        "ID":27072,
        "MESSAGE_ID":"2A2D6842-CD6C-41F7-827F-46A1B614CD93@hortonworks.com",
        "PARENT_ID":27071.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"property, technology",
        "BODY":"time start suspect take stabilise look forward new script already one thing want alpha release make clear compatibility policy protocol may change requirement first release compatible alpha something missed alpha process least repeated often enough sound like good time status update fb work anything people test would appreciated includes testing ipv system especially ipv system kerberos turned mit ad kerberos server time ipv support ought something could added opinion timescale anything related classpath isolation careful bump version dependency fixing outstanding java migration issue especially big jersey patch updated switching jira created release note slider release recently clear lot automating release process step release runbook turned target special ant release xml build file calling maven gpg etc think something like significantly benefit release phase future release slider one url replace maven instead choreographs along step signing checksumming artifact publishing voting includes refusing release git repo modified making various git branch tag push operation issuing various mvn version update command signing publishing via asf svn using get call verify artifact made generating vote vote result email even count vote recommend included part release process make difference cut new release human intervention editing property file running different target process go release vote phase steve"
    },
    "16735":{
        "ID":27068,
        "MESSAGE_ID":"56C67DBC.5090108@oss.nttdata.co.jp",
        "PARENT_ID":27065.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"release plan continuing release thinking consider stopping new minor release reach ga thanks akira"
    },
    "16736":{
        "ID":27067,
        "MESSAGE_ID":"CAGB5D2YYtu46P=DvYKwTA_V7SPDLwwq-DA9jq69Ptc6d99SY-A@mail.gmail.com",
        "PARENT_ID":27064.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi kai sure open new major release allowed make kind big change idea behind extended alpha cycle downstreams give feedback way anything radical address next alpha downstreams test best andrew"
    },
    "16738":{
        "ID":27065,
        "MESSAGE_ID":"D2EBB00D.C271%uma.gangumalla@intel.com",
        "PARENT_ID":27063.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"\"Gangumalla, Uma\" <uma.gangumalla@intel.com>",
        "TAGS":"not-ak",
        "BODY":"yes think starting release alpha good idea would get time reach beta ga plan compatibility purpose current stable version continue release anyway thanks andrew starting thread regard uma"
    },
    "16739":{
        "ID":27064,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B666148A4899@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":27063.0,
        "SUBJECT":"RE: Looking to a Hadoop 3 release",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"existence",
        "BODY":"thanks andrew driving wonder good chance hadoop deprecate remove writeablerpcengine note incompatible change feel better done major release regard kai"
    },
    "16740":{
        "ID":27063,
        "MESSAGE_ID":"CAGB5D2Z+v1Fp55NBPMdn_pGiuuNKWEHQify_ajvn-YjOwbZxNw@mail.gmail.com",
        "PARENT_ID":27062.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi kihwal think still value continuing release come incompatible bump jdk runtime also fact beta ga number month meanwhile would good keep putting regular stable release best andrew"
    },
    "16741":{
        "ID":27062,
        "MESSAGE_ID":"1730597427.5140749.1455835803311.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":27061.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Kihwal Lee <kihwal@yahoo-inc.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"moving hadoop forward sound fine ec one main motivation getting rid branch kihwal andrew wang common dev hadoop apache org cc yarn dev hadoop apache org mapreduce dev hadoop apache org hdfs dev sent thursday february pm subject looking hadoop release hi reviving thread seen renewed interest trunk release since hdfs erasure coding yet made branch along jdk script rewrite many improvement think time revisit hadoop release plan overall plan still original email series regular alpha release leading beta ga alpha release make easier downstreams integrate code making regular mean feature included ready know incompatible change waiting wing hdfs making filestatus pb rather writable hadoop bumping dependency version would good get change like please set target version mark incompatible use jira query track url release related stuff need sorted namely new change txt release note generation yetus would tentatively like roll first alpha month third week march best andrew"
    },
    "16742":{
        "ID":27061,
        "MESSAGE_ID":"CAGB5D2Z3F49ZoJR9Y6qWVeDhk0QVuGF2g1uP7NuugNUNpZ4rsQ@mail.gmail.com",
        "PARENT_ID":23554.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"existence",
        "BODY":"hi reviving thread seen renewed interest trunk release since hdfs erasure coding yet made branch along jdk script rewrite many improvement think time revisit hadoop release plan overall plan still original email series regular alpha release leading beta ga alpha release make easier downstreams integrate code making regular mean feature included ready know incompatible change waiting wing hdfs making filestatus pb rather writable hadoop bumping dependency version would good get change like please set target version mark incompatible use jira query track url release related stuff need sorted namely new change txt release note generation yetus would tentatively like roll first alpha month third week march best andrew"
    },
    "16744":{
        "ID":27059,
        "MESSAGE_ID":"D2EA6B89.C1A2%uma.gangumalla@intel.com",
        "PARENT_ID":27055.0,
        "SUBJECT":"Re: Chimera as new component in Apache Commons",
        "SENT_FROM":"\"Gangumalla, Uma\" <uma.gangumalla@intel.com>",
        "TAGS":"not-ak",
        "BODY":"hi benedikt thanks offering great help benedikt wrote crypto expert help apache common related task like moving code apache common setting maven build publishing project website etc uma thank would love work step based guidance aspect benedikt wrote would love see moving chimera uma thanks acceptance benedikt wrote apache sub community apache common community mean separat mailing list new component important understand community maintaining number component group sub community uma got thanks information benedikt wrote apache common versioning guide line restrictive put great effort binary compatibility expect component reused lot project try best avoid jar hell often mean greater refactorings simply implemented since would break usually problem major component problem young component uma right benedikt wrote apache common component usually boring descriptive name rather fancy one reason renamed apache common sanselan zu apache common imaging people able tell looking name component component imho chimera fall fancy name category maybe discus name uma ok naming self descriptive issue regard uma apache hadoop pmc member"
    },
    "16746":{
        "ID":27057,
        "MESSAGE_ID":"3E657120E422654A9EB626F537B8AA9114100023@shsmsx102.ccr.corp.intel.com",
        "PARENT_ID":27055.0,
        "SUBJECT":"RE: Chimera as new component in Apache Commons",
        "SENT_FROM":"\"Chen, Haifeng\" <haifeng.chen@intel.com>",
        "TAGS":"process",
        "BODY":"thanks benedikt support really great help make sense sub module share common community conflict fact sub module release cycle versioning yes keeping stable api important shared library apache common component usually boring descriptive name rather fancy one reason renamed apache common sanselan zu apache common imaging people able tell looking name component component imho chimera fall fancy name category maybe discus name problem chimera renamed something like crypto thanks haifeng"
    },
    "16748":{
        "ID":27055,
        "MESSAGE_ID":"CAB917RJ5=Uss11N6uExwWBrMp3kZ3gEJ4NsGwXfZsVAJH=kqaA@mail.gmail.com",
        "PARENT_ID":27054.0,
        "SUBJECT":"Re: Chimera as new component in Apache Commons",
        "SENT_FROM":"Benedikt Ritter <britter@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hello uma welcome apache common dev list great see two project get together share code via apache common gmt gangumalla uma sound pretty useful crypto expert help apache common related task like moving code apache common setting maven build publishing project website etc would love see moving chimera however thing would like make aware apache sub community apache common community mean separat mailing list new component important understand community maintaining number component group sub community apache common versioning guide line restrictive put great effort binary compatibility expect component reused lot project try best avoid jar hell often mean greater refactorings simply implemented since would break usually problem major component problem young component apache common component usually boring descriptive name rather fancy one reason renamed apache common sanselan zu apache common imaging people able tell looking name component component imho chimera fall fancy name category maybe discus name hope blocker thank interest effort bringing new code apache common best regard benedikt url url url url"
    },
    "16749":{
        "ID":27054,
        "MESSAGE_ID":"D2E8D65E.C131%uma.gangumalla@intel.com",
        "PARENT_ID":null,
        "SUBJECT":"Chimera as new component in Apache Commons",
        "SENT_FROM":"\"Gangumalla, Uma\" <uma.gangumalla@intel.com>",
        "TAGS":"existence",
        "BODY":"hi devs recently worked spark community implement shuffle encryption implementing realized code apache hadoop encryption code implementation code duplicated lead idea create separate reusable library named chimera url optimized cryptographic library provides java api cipher level java stream level help developer implement high performance aes encryption decryption minimum code effort know java cipher implementation need optimized cryptographic library performance critical encryption decryption jdk cipher implementation aes yet optimized modern hardware example optimized implementation faster jdk implementation mode cbc decryption ctr gcm even optimization included jdk jdk still gap optimized implementation java stream based api cryptographic data stream cipher api powerful lot code need written layered stream processing application design pattern common modern application hadoop spark chimera originally based hadoop crypto code improved generalized lot supporting wider scope data encryption need component community encryption related code hadoop developed year far running well feel code part stable enough already propose contribute chimera optimized encryption library code apache common wanted independent release cycle module like module apache common module basically provides java based interface encryption based io native based aes ni encryption integration code already discussed proposal apache hadoop dev list discussion conclusion positive contribute module apache common need help support adopting code make apache common sub module establish making development community course discus factor thread hadoop spark two visible project use expect project using apache common pmc agreed place module common work getting interested developer etc establishing chimera development community part next step please help process regard uma apache hadoop pmc member"
    },
    "16815":{
        "ID":26988,
        "MESSAGE_ID":"CALamADJJ8hanmM25KviQN+Cz9piK1XmJjH-q8LxUcP7MFMEPAA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.3 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version release contains critical bug series installed version need run nodetool upgradesstables node receive fix apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url url"
    },
    "16816":{
        "ID":26987,
        "MESSAGE_ID":"CALamAD+RvWF=jxcBr+UrLG2nYHq_BGKRZk7GnPOA_zKn7em3Nw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.3 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version release contains critical bug series installed version need run nodetool upgradesstables node receive fix apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url url"
    },
    "16853":{
        "ID":26950,
        "MESSAGE_ID":"CALamADKOmz9a=n7KOuix3fFtoAbvbp2YHsSEMw009f7HUHQwsQ@mail.gmail.com",
        "PARENT_ID":26949.0,
        "SUBJECT":"Re: [RELEASE] Apache Cassandra 2.1.13 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"apology send wrong changelog news link correct one url change txt url news txt"
    },
    "16854":{
        "ID":26949,
        "MESSAGE_ID":"CALamADKFs2D+-A5COHTyr-nW67GPJcbtD3g5Hh8p1exnM1cy2A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.13 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "16859":{
        "ID":26944,
        "MESSAGE_ID":"CAF05tLMogmys2So5bKWYiZSAPRptQd4eL5ooFtVruk2Z_u3+PA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Fwd: Virtualization in High-Performance Cloud Computing (VHPC '16)",
        "SENT_FROM":"VHPC 16 <vhpc.dist@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"call paper th workshop virtualization high performance cloud computing vhpc held conjunction international supercomputing conference high performance june frankfurt germany date june workshop url url lightning talk abstract registration deadline february paper publishing track abstract registration deadline march paper submission deadline april call paper virtualization technology constitute key enabling factor flexible resource management modern data center particularly cloud environment cloud provider need manage complex infrastructure seamless fashion support highly dynamic heterogeneous workload hosted application customer deploy similarly hpc environment increasingly adopting technique enable flexible management vast computing networking resource close marginal provisioning cost unprecedented history scientific commercial computing various virtualization technology contribute overall picture different way machine virtualization capability enable consolidation multiple underutilized server heterogeneous software operating system os capability live migrate fully operating virtual machine vm short downtime enables novel dynamic way manage physical server level virtualization containerization capability isolate multiple user space environment allow coexistence within kernel promise provide many advantage machine virtualization high level responsiveness performance virtualization allows physical nics hbas take traffic multiple vms container network virtualization capability create logical network overlay independent underlying physical topology ip addressing provides fundamental ground top evolved network service realized unprecedented level dynamicity flexibility increasingly adopted paradigm software defined networking sdn promise extend flexibility control data plane network path topic interest vhpc program committee solicits original high quality submission related virtualization across entire software stack special focus intersection hpc cloud topic include limited virtualization supercomputing environment hpc cluster cloud hpc grid level virtualization including container runtimes docker rkt et al lightweight compute node operating system vmms optimization virtual machine monitor platform hypervisors qos sla hypervisors network virtualization cloud based network system management sdn nfv management deployment monitoring virtualized environment virtual per job demand cluster cloud bursting performance measurement modelling monitoring virtualized cloud workload programming model virtualized environment virtualization data intensive computing big data processing cloud reliability fault tolerance high availability security heterogeneous virtualized environment virtualized accelerator gpus co processor optimized communication library protocol cloud hpc cloud topology management optimization distributed virtualized application adaptation emerging hpc technology high performance network rdma etc storage virtualization virtualization aware file system job scheduling control policy virtualized environment checkpointing migration vm based large compute job cloud framework apis energy efficient power aware virtualization workshop virtualization high performance cloud computing vhpc aim bring together researcher industrial practitioner facing challenge posed virtualization order foster discussion collaboration mutual exchange knowledge experience enabling research ultimately provide novel solution virtualized computing system tomorrow workshop one day length composed min paper presentation followed min discussion section plus lightning talk limited minute presentation may accompanied interactive demonstration important date february lightning talk abstract registration march paper publishing track abstract registration april full paper submission may acceptance notification june workshop day july camera ready version due chair michael alexander chair tu wien austria anastassios nanos co chair ntua greece balazs gerofi co chair riken advanced institute computational science japan program committee stergios anastasiadis university ioannina greece costa bekas ibm research switzerland jakob blomer cern ron brightwell sandia national laboratory usa roberto canonico university napoli federico ii italy julian chesterfield onapp uk stephen crago usc isi usa christoffer dall columbia university usa patrick dreher mit usa robert futrick cycle computing usa robert gardner university chicago usa william gardner university guelph canada wolfgang gentzsch ubercloud usa kyle hale northwestern university usa marcus hardt karlsruhe institute technology germany krishna kant templte university usa romeo kinzler ibm switzerland brian kocoloski university pittsburgh usa kornilios kourtis ibm research switzerland nectarios koziris national technical university athens greece john lange university pittsburgh usa nikos parlavantzas irisa france kevin pendretti sandia national laboratory usa che rung roger lee national tsing hua university taiwan giuseppe lettieri university pisa italy qing liu oak ridge national laboratory usa paul mundt adaptant germany amer qouneh university florida usa carlos reano technical university valencia spain seetharami seelam ibm research usa josh simon vmware usa borja sotomayor university chicago usa dieter sue tu wien austria craig stewart indiana university usa anata tiwari san diego supercomputer center usa kurt tutschku blekinge institute technology sweden amit vadudevan carnegie mellon university usa yasuhiro watashiba osaka university japan nicholas wright lawrence berkeley national laboratory usa chao tung yang tunghai university taiwan gianluigi zanetti cr italy paper submission publication paper submitted workshop reviewed least two member program committee external reviewer submission include abstract key word mail address corresponding author must exceed page including table figure main font size smaller point submission paper regarded commitment paper accepted least one author register attend conference present work format must according springer lncs style initial submission pdf author accepted paper requested provide source file format guideline ftp ftp springer de pub tex latex llncs latexe llncse zip abstract paper submission link url lightning talk lightning talk non paper track synoptical nature strictly limited minute used gain early feedback ongoing research demonstration present research result early research idea perspective position interest community submit abstract via main submission link general information workshop one day length held conjunction international supercomputing conference high performance isc june frankfurt germany"
    },
    "16903":{
        "ID":26900,
        "MESSAGE_ID":"CAM=XDd83M7iM_Lg6RK8J56LGbbzaPJ6kESTNRAjAuhBZ7ngqnw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[ANNOUNCE] Apache Tajo 0.11.1 Released",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"apache tajo team pleased announce release apache tajotm apache tajotm big data warehouse system various data source provides distributed scalable sql analytical processing apache hadooptm release available immediate download url minor release resolved issue including bug fix minor feature performance improvement highlight fix globalengine npe tajo fix hbasestorage npe tajo fix memory leak physical operator tajo fix client timezone bug tajo fix wrong message tsql tajo fix invalid sort order witn null first last tajo fix invalid null handling parquet scanner tajo fix memory bug bstindex tajo reduce memory usage hash shuffle tajo reduce memory usage querymaster range shuffle tajo improve join optimization statistic stored catalog tajo complete list new feature fixed problem please see release note url would like thank many contributor made release possible regard apache tajo team"
    },
    "16963":{
        "ID":26840,
        "MESSAGE_ID":"git-pr-70-hadoop@git.apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[GitHub] hadoop pull request: Branch 2.8",
        "SENT_FROM":"hadooping <git@git.apache.org>",
        "TAGS":"not-ak",
        "BODY":"github user hadooping opened pull request url branch merge pull request git repository running git pull url branch alternatively review apply change patch url close pull request make commit master trunk branch least following commit message close commit fffefffcfeeffdf author xiaoyu yao date hdfs webhdfs getfilestatus return locatedblock storage type info contributed xiaoyu yao cherry picked commit edbcfbbedeedfceeca commit cefafdfcfcbcaefdd author konstantin shvachko date hdfs testfiletruncate use fixed nn port contributed brahma reddy battula commit cfbefeebeaefffb author jing zhao date hdfs fix data race accessing writelockheldtimestamp fsnamesystem contributed mingliang liu cherry picked commit ecbfecdacfdb commit cdfdaeacefabaaaa author robert kanter date mapreduce multibyte delimiters linerecordreader duplicate record wilfreds via rkanter cherry picked commit fdbdbbdafdbaaecae commit bbfbadfdacccdfceeea author robert kanter date mapreduce archive log tool change log ownership yarn user using defaultcontainerexecutor rkanter cherry picked commit dccbefefdebfceff commit fceaadff author vinod kumar vavilapalli date adding release change txt cherry picked commit dfdccfdaecbdaadff commit efaefaadebbcdcbaaa author vinod kumar vavilapalli date reverting previous commit added entry need branch revert adding release change txt reverts commit fceaadff commit ddbcbbbeefcedf author cnauroth date hadoop filecontext abstractfilesystem annotated stable interface contributed chris nauroth cherry picked commit bccbcedaeafacefc cherry picked commit ceedebbeefde commit dfdaebfeaeadf author andrew wang date hdfs encryption zone root loaded fsimage nn restart xiao chen via wang cherry picked commit bebdecbeabce cherry picked commit ceceeaccefdbeecb commit ccbbcebaa author akira ajisaka date hdfs deletesnapshot throw npe snapshotname null contributed brahma reddy battula cherry picked commit cbbffdbcccaefca cherry picked commit afdbcdcce commit aadcbfabebbcfbbdf author allen wittenauer date hadoop expose calculated path aw commit adbcbfbcefbfccdbd author jing zhao date hdfs make blockmanager removefromexcessreplicatemap accept blockinfo instead block contributed mingliang liu cherry picked commit ebaaafecefeccbfeeecaa cherry picked commit eaadcdcbcdbbcbfe commit febadefbeaacccecafa author zhe zhang date hdfs update documentation wrapper fuse dfs contributed wei chiu chuang conflict hadoop hdfs project hadoop hdfs change txt change id idebdbdabccfdeebdfceefb commit bbfffdbbaaadbefbcf author kihwal lee date hdfs rollingupgrade finalization backward compatible contributed kihwal lee cherry picked commit cdcdbbaffcceefadebee conflict hadoop hdfs project hadoop hdfs src main java org apache hadoop hdfs protocolpb datanodeprotocolclientsidetranslatorpb java hadoop hdfs project hadoop hdfs src main java org apache hadoop hdfs protocolpb datanodeprotocolserversidetranslatorpb java hadoop hdfs project hadoop hdfs src main proto datanodeprotocol proto cherry picked commit fddaefcfcafaa commit baadaffbfaeaaf author yongjun zhang date hadoop partial group resolution failure result user lockout wei chiu chuang via yongjun zhang cherry picked commit eabccddbbcddcd cherry picked commit abecfeabbadbbaee commit aeadaccceeea author arpit agarwal date hadoop fix intermittent failure testdecayrpcscheduler contributed masatake iwasaki commit dbebdcdcbbeabdbc author arpit agarwal date hdfs testbpofferservice testbasicfunctionalitytest fails intermittently contributed wei chiu chuang commit fbbccbbafaaafdda author junping du date add release entry change txt commit adecaebbcdbccebc author colin patrick mccabe date hdfs test testdfsadminwithha intermittently fail eofexception xiao chen via colin mccabe cherry picked commit ebfecfbfcbabbfc cherry picked commit baabfafeeda commit decadaeaef author akira ajisaka date hadoop replace dsa rsa ssh key type singlecluster md contributed mingliang liu cherry picked commit fedcfcbefaffe cherry picked commit cfcfebafcceff commit afbcfdadadaca author junping du date yarn fix issue nodemanager still report negative running container contributed robert kanter cherry picked commit ebcbbafcbfadec cherry picked commit ebafadaefcfbeae commit afcebaaffbabacaccbecf author tsz wo nicholas sze date hdfs dfsclient deadlock close file failed renew lease contributed brahma reddy battula commit ddafacabeababbdeacfeb author yongjun zhang date hdfs testpipelinesfailover fail printing debug message john zhuge via yongjun zhang cherry picked commit dbebedccabdcfcaba commit dadfdfdbbbbcdafdaeaecbaa author arpit agarwal date hdfs support reconfiguring dfs datanode balance max concurrent move without dn restart contributed xiaobing zhou commit bfefebbeeebefffba author arpit agarwal date hdfs add missing license header commit dbcfdabcdbdecb author arun suresh date yarn reservation system improve relationship sharingpolicy reservationagent carlo curino via asuresh cherry picked commit efdbbdfcf commit ebacfadbefe author rohithsharmaks date yarn improve handling incomplete timelineentities varun saxena via rohithsharmaks cherry picked commit abccbdadddfdbdae commit fedabfdbfccacfaacc author date yarn rest api submit update delete reservation curino cherry picked commit caecbecfaceedcd cherry picked commit aceebbaaebfb commit bfeceede author vinod kumar vavilapalli date hdfs moving change section reflect backport commit ddebccabecfaddeefb author chris douglas date yarn followup patch adding asf licence exclusion json test file cherry picked commit feddccadffbcaffbadcb cherry picked commit bfecffdccddbf project set reply email reply appear github well project feature enabled wish feature enabled working please contact infrastructure infrastructure apache org file jira ticket infra"
    },
    "17066":{
        "ID":26737,
        "MESSAGE_ID":"CALamADK5Ck0GNs=hzyK-NzFj-MmXrZbzQ4pyxhkh47LYcy=big@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.2.1 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "17142":{
        "ID":26661,
        "MESSAGE_ID":"CALamADKr2-4-ZKhxcF=sjjnw5-0XBTUm+cVx9a=ojY_c9GXTuA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.2 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "17155":{
        "ID":26648,
        "MESSAGE_ID":"CALwhT95-G3QzBOXDcVTHtocO12oCJ+=Vi2P7UspSubLUCn=UTA@mail.gmail.com",
        "PARENT_ID":26622.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"process",
        "BODY":"received email today infra force push allowed relevant excerpt first forced commit pushed subsequent commit email contain forced update subject line hope draw extra attention situation project community aware take appropriate action needed second changed protected portion git primarily focus ref tag rel thus tag rel entire commit history provides provenance asf need release still giving project ability mold repository way see fit"
    },
    "17162":{
        "ID":26641,
        "MESSAGE_ID":"CACVCA=dnFiHu7AFdON6ZBR34PGc5f00VoAOT2ND9nNO=67_AZg@mail.gmail.com",
        "PARENT_ID":26375.0,
        "SUBJECT":"Re: Google Cloud Storage connector into Hadoop",
        "SENT_FROM":"jay vyas <jayunit100.apache@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"see also hcfs wiki page url attempt explain stuff community maybe need update well looked moved onto working product nowadays"
    },
    "17181":{
        "ID":26622,
        "MESSAGE_ID":"CADbBEnucaf+HEiUA2WWUmxhibU2okOuf2+ogNvCXQmbvRRUgRA@mail.gmail.com",
        "PARENT_ID":26621.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"infra email back december"
    },
    "17182":{
        "ID":26621,
        "MESSAGE_ID":"CALwhT96R_6owzQ7YVnHq5G_VsEZs8OuY92+BX0ZXgRjq--uhxA@mail.gmail.com",
        "PARENT_ID":26174.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"sangjin steve others curious guy figured way address workaround hurdle able delete force push reach infra"
    },
    "17222":{
        "ID":26581,
        "MESSAGE_ID":"git-pr-60-cassandra@git.apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[GitHub] cassandra pull request: Pull request for fixing lhf #CASSANDRA-875...",
        "SENT_FROM":"alshopov <git@git.apache.org>",
        "TAGS":"not-ak",
        "BODY":"github user alshopov opened pull request url pull request fixing lhf cassandra discussion patch jira url currently pull request review merge pull request git repository running git pull url alternatively review apply change patch url close pull request make commit master trunk branch least following commit message close commit dcbcaffbedeaa author alexander shopov date add unit test verify current behavior order check change signed alexander shopov commit acdbeafaeeacafeddc author alexander shopov date trivial speedup string operation string split fast path single char two char combination fail case char regex meta mainly character use stringutils split convert string replaceall static final pattern usage le throwaway pattern using precompiled version replace front back whitespace removal trim remove unused import changed file signed alexander shopov project set reply email reply appear github well project feature enabled wish feature enabled working please contact infrastructure infrastructure apache org file jira ticket infra"
    },
    "17273":{
        "ID":26530,
        "MESSAGE_ID":"CALamADKtsvdyT9h184mg8W=G1+5T+hP9d4ZwG_FEKKptHZqpAQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.2 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "17398":{
        "ID":26405,
        "MESSAGE_ID":"git-pr-59-cassandra@git.apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[GitHub] cassandra pull request: CASSANDRA-10855: Use Caffeine for on-heap ...",
        "SENT_FROM":"ben-manes <git@git.apache.org>",
        "TAGS":"not-ak",
        "BODY":"github user ben mane opened pull request url cassandra use caffeine heap cache caffeine url java cache author concurrentlinkedhashmap guava cache previously used key counter cache clhm based cache remains fallback needed deprecated scheduled removal clhm guava us lru policy due simplicity decent hit rate known characteristic caffeine us near optimal policy tinylfu url significantly higher hit rate url particular hit rate paper show substantial gain database search workload performance clhm caffeine cache similar possible gain write throughput significant gain may observed guava due never porting optimization improve read throughput avoid creating garbage side effect brief overview see article url pull request tracked cassandra url jbellis snazy merge pull request git repository running git pull url caffeine alternatively review apply change patch url close pull request make commit master trunk branch least following commit message close commit aabeeeddfefddf author ben mane date use caffeine key counter heap cache caffeine java cache author concurrentlinkedhashmap previously used cache remains fallback needed deprecated scheduled removal clhm us lru policy due simplicity decent hit rate known characteristic caffeine us near optimal policy tinylfu significantly higher hit rate particular hit rate paper show substantial gain database search workload performance two cache similar possible gain write throughput caffeine url tinylfu url overview url commit acfbfebefceccdfba author ben mane date switch usage guava cache caffeine project set reply email reply appear github well project feature enabled wish feature enabled working please contact infrastructure infrastructure apache org file jira ticket infra"
    },
    "17407":{
        "ID":26396,
        "MESSAGE_ID":"2DCC96F5-3925-4281-AA39-2C83E364AEC5@hortonworks.com",
        "PARENT_ID":26395.0,
        "SUBJECT":"Re: Integrating Flink's web UI with YARN Timeline Server",
        "SENT_FROM":"Li Lu <llu@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"hi stephan yes yarn at definitely worth trying one thing notice continuous effort improve scalability at may want take look recent effort at yarn new writer apis proposed better scalability general new at apis allow application selectively put detailed timeline data onto hdfs read required price using api application need provide simple plugin tell at read request detailed timeline data tez community actively working using timeline targeting add feature progress work timeline project separate feature branch feature yarn api may land soon main line codebase welcome check branch let know suggestion apis problem please feel free open jira ping anyone jiras would fine thanks li lu"
    },
    "17408":{
        "ID":26395,
        "MESSAGE_ID":"D8A04025-2BF9-4FB2-8063-E93CDE7D1298@hortonworks.com",
        "PARENT_ID":26394.0,
        "SUBJECT":"Re: Integrating Flink's web UI with YARN Timeline Server",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"stephan exactly scala spark every app attempt entity at id attempt id every event recorded serailized another piece json queued posting various bit metadata added updated every post app name user start end update time version counter ease checking update batching post request ease load handle outage read stuff grab metadata rendered existing spark history server app attempt state incomplete complete done query metadata entity given type spark app time interval since last incomplete app onwards inclusive user want actual history attempt entire history app retrieved single get json event played back history payload playback process fairly expensive at side well client hard part extra complexity deal queuing buffering post dropping surplus packet needed at client avoid oom client still kerberos aware rest client at one hadoop kerberos general obviously good news perhaps take mine split generic jersey spnego delegation token aware client timeline client use url able unwind spark lib dependency primarily around logging scalatest attempt write kerberos token rest client gain nothing take one email direct question"
    },
    "17409":{
        "ID":26394,
        "MESSAGE_ID":"CANC1h_tjvs6roLYhpor7NynkFWaqBk-ffS2HMFA8ECvcA3+agg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Integrating Flink's web UI with YARN Timeline Server",
        "SENT_FROM":"Stephan Ewen <sewen@apache.org>",
        "TAGS":"technology",
        "BODY":"hi looking option integrate apache flink monitoring web frontend yarn timeline server flink web frontend monitoring analyzing running job web frontend show lot flink specific stuff addition tast start end time flink run yarn web frontend server life part app master metric kept app master metric web frontend gone job finish app master quits wondering could store flink monitoring data yarn timeline server visualize make past job data accessible seen timeline server allows application store generic data fully understood allows though illustrate looking let give bit background flink web frontend structured flink web frontend structured simple way job done dynamic data handler needed server side everything static file json object specific relative url set static html cs file implement visualization json object static data job complete pre defined url example path job beeecaabcf exception would return static response root exception java io ioexception file already exists tmp abzs tat classpath sense would need key value store key url value json object small file post run hook flink would call set post request store json object file url calling index html specific url job would run flink rendering job metric time know bit long shot would timeline server support something like greeting stephan"
    },
    "17417":{
        "ID":26386,
        "MESSAGE_ID":"CAKMxYvKZnWK9KVC9MqK+3kaeAAxUv444x2mT+EuNryYkAAKang@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Feedback of my Phd work in Cassandra Project",
        "SENT_FROM":"Igor Wiese <igor.wiese@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi cassandra community name igor wiese phd student brazil investigating two important question make two file change together predict going co change tried investigate question cassandra project collected data issue report discussion commits using machine learning technique build prediction model collected total commits pair file changed together could correctly predict commits useful information predicting co change file number line code added number line code removed sum number line code added modified removed number word used describe discus issue median value closeness social network measure obtained issue comment illustrate consider following example analysis release file cassandra tool nodecmd java cassandra tool nodeprobe java changed together commits another commits first file changed second collecting contextual information commit made first file previous release able predict commits file changed together release issued false positive pair file important contextual information number line code added removed modified commit number word used describe discus issue number comment issue result surprise think explanation result think rate prediction good enough used building tool support software community suggestion done improve change recommendation visit webpage inspect result detail url best igor wiese phd candidate"
    },
    "17425":{
        "ID":26378,
        "MESSAGE_ID":"CALamADLf5GA+o+5bj_SKphYpfDjff5Nrq7haCHGOE+PBJv=S+A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.1 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version first release new tick tock release process contains bugfixes release apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url url"
    },
    "17426":{
        "ID":26377,
        "MESSAGE_ID":"CALamADJ69Pd3=KtE4d10A70vnb9Ea0ofytF7wGyzgzh1T=ezjw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.1 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "17428":{
        "ID":26375,
        "MESSAGE_ID":"762A7BEC-125B-4749-8621-FDE5A05B5362@hortonworks.com",
        "PARENT_ID":26369.0,
        "SUBJECT":"Re: Google Cloud Storage connector into Hadoop",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"chris say go abstract contract test find troublespots code like way seek appears entertaining result happens operation closed file etc help identify semantics varies hdfs need stay version artifact hadoop codebase troublespots protobuf frozen guava shipping code must run someone upgrade problematic may want discus versioning issue colleague see url detail object store get undertested jenkins touch patch review nightly run give jenkins right credential setting jenkins server build hadoop version flag problem would great contribution also help release testing someone patch hadoop gc module review test would great stop patch neglected could scale test object store test creating many thousand small file etc contribution welcome could lot downstream testing thing like hive spark io object store especially via orc parquet helping write test would stop regression stack help tune hadoop finally afraid get involved rest codebase get better"
    },
    "17434":{
        "ID":26369,
        "MESSAGE_ID":"CA+=KJmsB9dxK=Hx+j843QmkLMOGrriCoPL1GjCCtYRvZGQLn3Q@mail.gmail.com",
        "PARENT_ID":26367.0,
        "SUBJECT":"Re: Google Cloud Storage connector into Hadoop",
        "SENT_FROM":"James Malone <jamesmalone@google.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"haohui chris sound great thank much cut jira get everything lined best james"
    },
    "17436":{
        "ID":26367,
        "MESSAGE_ID":"D28B5837.34573%cnauroth@hortonworks.com",
        "PARENT_ID":26366.0,
        "SUBJECT":"Re: Google Cloud Storage connector into Hadoop",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"hi james sound great thank considering contributing code seconding haohui said existing precedent alternative implementation hadoop filesystem codebase currently similar plugins azure openstack swift additionally suite filesystem contract test test designed help developer alternative file system ass closely match semantics expected hadoop ecosystem component many hadoop user accustomed using hdfs instead alternative file system none alternative default hadoop classpath immediately deployment instead code one separate module hadoop tool directory source tree user need use alternative file system take extra step post deployment add classpath necessary achieves dependency isolation needed example user never use azure plugin accidentally pick transitive dependency azure sdk jar recommend taking quick glance existing module azure openstack likely ask new filesystem implementation follow pattern feasible consistency would include thing like using contract test provision execute test offline mocked live integrated real service providing documentation page explains configuration end user please feel free file hadoop jira proposal work detail discussion jira something else follow licensing concern see project already us apache license appears existing body code initially developed google might require software grant agreement something hashed discussion jira create url url url url system testing html url chris nauroth"
    },
    "17437":{
        "ID":26366,
        "MESSAGE_ID":"CAHpOOhFK=Oet50AURo5PvVx6ByjLMpWryeAdTCwE-Xa3j03FHQ@mail.gmail.com",
        "PARENT_ID":26365.0,
        "SUBJECT":"Re: Google Cloud Storage connector into Hadoop",
        "SENT_FROM":"Haohui Mai <ricetons@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi thanks reaching would great see hadoop ecosystem hadoop aws support going address similar use case thus think relatively straightforward adopt code catch head right properly isolate dependency code need put separate module many hadoop application also depend different version guava think might problem need attention beginning please feel free reach question regard haohui"
    },
    "17438":{
        "ID":26365,
        "MESSAGE_ID":"CA+=KJmv0k7RFSoKTB9p642ErOJ_rEvMU4nw4QaxZg1=GPpLDYg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Google Cloud Storage connector into Hadoop",
        "SENT_FROM":"James Malone <jamesmalone@google.com.INVALID>",
        "TAGS":"existence, technology",
        "BODY":"hello team within google cloud platform focused os data technology especially hadoop spark cut jira something wed like wanted reach list ask two quick question describe proposed action check major objection proposed action hadoop connector info google cloud storage gc building maintaining time clean code test conform requirement would like contribute hadoop many customer using connector high throughput production hadoop cluster wed like make easier faster use hadoop gc timeline presently working beta google cloud dataproc limit time bit targeting late creating jira issue adapting connector code needed quick question need take non coding action beyond submitting jira ready front concern question need address thank james malone behalf google big data os engineering team link url url url url"
    },
    "17441":{
        "ID":26362,
        "MESSAGE_ID":"CALamAD+9UhAtGJxpOq_MSs++2T4Sqe0QO4B=dr5sC3Q2hq77VQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.4 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "17442":{
        "ID":26361,
        "MESSAGE_ID":"CALamADJDFHneok-TGWe5bb2pkUTxd+cov15v1KPr5Qde6-J5nQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.12 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "17495":{
        "ID":26308,
        "MESSAGE_ID":"20151201063021.GA38185@usxxshaporm1.corp.emc.com",
        "PARENT_ID":null,
        "SUBJECT":"FOSDEM 2016 - take action by 4th of December 2015",
        "SENT_FROM":"Roman Shaposhnik <rvs@apache.org>",
        "TAGS":"not-ak",
        "BODY":"probably know fosdem biggest free open source developer conference right around corner url hope asf booth would love see many asf project possible present various track aka developer room url year first time running dedicated big data hpc developer room given much open source development done asf would great folk submit talk url cfps different developer room follow slightly different schedule submit end week fine finally want fish cfp submission url url question please email directly hope see many possible two month thanks roman"
    },
    "17612":{
        "ID":26191,
        "MESSAGE_ID":"CALwhT953MmPkyuohnJ4Pzd6+dpLC6LP0f7z0X=dvrs0yDDh6GQ@mail.gmail.com",
        "PARENT_ID":26182.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"patch complicated destabilizing concern"
    },
    "17621":{
        "ID":26182,
        "MESSAGE_ID":"CABd3sAxnFFNZNfXdw7OpeN5UHaPT7J4zSATvtWBxOTbe0zqBxQ@mail.gmail.com",
        "PARENT_ID":26166.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Sunil Govind <sunil.govind@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi vinod karthik yarn trying fix irregularity getting used queue resource proportionalpremptionpolicy complicated patch fix critical issue preemption policy used drc pcpp earlier get used capacity total resource multiplied absolutecapacity per queue instead could get resource information direct api curqueue getqueueresourceusage getused partition using extra calculation using drc found totalresource absolutecapacity may normalize total resource either memory vcore avoid could directly get used capacity per queue per partition rest patch drc support test code proportionalpremptionpolicy wangda kindly share thought thank sunil"
    },
    "17629":{
        "ID":26174,
        "MESSAGE_ID":"6F1CAA0A-8098-4583-8B1C-FCCB733F1784@altiscale.com",
        "PARENT_ID":26173.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"process",
        "BODY":"everyone world including outside asf want magic branch matching happening way yetus yetus added flag jira plugin patch file naming stuff happens make personality setting potentially yes yetus hadoop important remember requesting addition"
    },
    "17630":{
        "ID":26173,
        "MESSAGE_ID":"CADbBEnsC4fG3kb3kOV48Fz0+Y-LBOGgtSjRr__8WkydqQtE6+A@mail.gmail.com",
        "PARENT_ID":26172.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"process",
        "BODY":"think proposing project specific rule would recognition git branch name prefix feature file name hadoop hadoop patch hadoop feature jira git branch feature hadoop yetus find branch named hadoop also look feature hadoop failing build hadoop branch jira"
    },
    "17631":{
        "ID":26172,
        "MESSAGE_ID":"4C8580EE-5263-4862-8C49-EEA718AD2885@altiscale.com",
        "PARENT_ID":26171.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"implementing project specific patch identification rule definitely trivial fwiw documented ruleset yetus support url although reality code support sort weird looking etc"
    },
    "17632":{
        "ID":26171,
        "MESSAGE_ID":"CADbBEnuFO0xh06EJLfPqHeH4+TCYCyz3mxKfCM8tsJjXrah88w@mail.gmail.com",
        "PARENT_ID":26169.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"process",
        "BODY":"suppose would fine yetus need add feature git branch name fails find would require little work yetus guess pretty trivial"
    },
    "17634":{
        "ID":26169,
        "MESSAGE_ID":"DBAC27A5-D685-4FD7-A837-AD928ECC4623@hortonworks.com",
        "PARENT_ID":26167.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"aah follow would hadoop patch enough"
    },
    "17636":{
        "ID":26167,
        "MESSAGE_ID":"CADbBEnsNpn84Q5BX3V6RSzg54KxA9NOihu57H9Q+RRfRu3=Uow@mail.gmail.com",
        "PARENT_ID":26157.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"process",
        "BODY":"yes completely understand git branch naming practice fact normally commenting hadoop patch naming convention supposed use patch name patch used feature hadoop git branch name subtask jira hadoop example patch file name would hadoop feature hadoop patch would doable work would need kind escaping convention jenkins user follow"
    },
    "17637":{
        "ID":26166,
        "MESSAGE_ID":"CALwhT96qKjGm1f_pKkWRf8aSfi0nfCBw-xzA0xCEN3btcZ_dVA@mail.gmail.com",
        "PARENT_ID":26057.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"yarn complicated patch comfortable including de stabilizing fine otherwise might make sense include later cloudera hat inclusion exclusion really matter apache hat way inspire confidence user increasingly stable maintenance release know harping lot"
    },
    "17646":{
        "ID":26157,
        "MESSAGE_ID":"3D9E3DF7-9017-45F1-AFDB-C82A6073E6FD@hortonworks.com",
        "PARENT_ID":26147.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"spark uis get treated subdirectory easier manager try something like sourcetree"
    },
    "17656":{
        "ID":26147,
        "MESSAGE_ID":"CADbBEnsBDpZtxpRitQ=7UY04K3YNfh=uF91Z+d-dF8jK35VkLA@mail.gmail.com",
        "PARENT_ID":26134.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"process",
        "BODY":"use feature branch naming convention pose issue patch naming due separator character feature"
    },
    "17669":{
        "ID":26134,
        "MESSAGE_ID":"EB84BE83-FAB6-4A95-82D4-3A87A6F4AF43@hortonworks.com",
        "PARENT_ID":26133.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Anu Engineer <aengineer@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"ran issue filed infra jira url git control back thanks anu"
    },
    "17670":{
        "ID":26133,
        "MESSAGE_ID":"24B40D0D-1ADF-4AD7-910D-586D4F571BED@hortonworks.com",
        "PARENT_ID":26131.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"process",
        "BODY":"asked exemption branch called feature earlier today consistent git flow branch naming feature branch go people working free rebase choose"
    },
    "17671":{
        "ID":26132,
        "MESSAGE_ID":"CADbBEnuHX9SfFdhd+P_Zi=+xFyK951M3bpyHwrP0-6enD-aLTg@mail.gmail.com",
        "PARENT_ID":26131.0,
        "SUBJECT":"Re: Need for force-push on feature branches",
        "SENT_FROM":"Sangjin Lee <sjlee@apache.org>",
        "TAGS":"not-ak",
        "BODY":"already opened infra jira specific issue infra also sent email steve loughran made aware lockdown reuse jira discussion mind following later blocked yarn need change branch naming convention think might need vote also deleting branch also disabled would another avenue rebase closed sangjin"
    },
    "17672":{
        "ID":26131,
        "MESSAGE_ID":"CALwhT94_OW-Dg1F5wiBZBHTYgtyrEFLnzy+Yecyo6XL8BP8suQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Need for force-push on feature branches",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi folk recently infra disabled force push non fast forward push branch avoid accidental overwrites deletion propose reach infra ask exemption since workflow feature branch involves deletion force push likely wait day hear concern request also someone volunteer following going away vacation shortly limited access internet email karthik"
    },
    "17742":{
        "ID":26061,
        "MESSAGE_ID":"AD354F56741A1B47882A625909A59C692BE3C376@SZXEML505-MBX.china.huawei.com",
        "PARENT_ID":26032.0,
        "SUBJECT":"RE: 2.7.2 release plan",
        "SENT_FROM":"\"Naganarasimha G R (Naga)\" <garlanaganarasimha@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"thanks wangda looking list change riskier hoping get earlier naga wangda tan wheeleast gmail com sent monday november naganarasimha naga cc yarn dev hadoop apache org tsuyoshi ozawa vinod vavilapalli hdfs dev hadoop apache org common dev hadoop apache org vinod kumar vavilapalli subject release plan hi naga vinod tsuyoshi karthik looked list iirc patch afraid change number many risky minor release issue besides yarn le change web ui rest api look like enhancement instead bug fix marked yarn candidate suggest delay change release thought regard wangda"
    },
    "17745":{
        "ID":26058,
        "MESSAGE_ID":"E041AC22-FD49-49E4-B4F6-E92508A2CC85@hortonworks.com",
        "PARENT_ID":26032.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Vinod Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"feel free go ahead get still waiting couple jiras thanks vinod"
    },
    "17746":{
        "ID":26057,
        "MESSAGE_ID":"98525141-F4D2-4FE9-A69D-43790D80DA44@hortonworks.com",
        "PARENT_ID":26035.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Vinod Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"yarn look like bit non trivial change late requested wangda offline punt thanks vinod"
    },
    "17768":{
        "ID":26035,
        "MESSAGE_ID":"CABd3sAxRv3S_Pqed=W0ZWLDRoU7P5mXbVmZLO4DOeorBuF48xg@mail.gmail.com",
        "PARENT_ID":26034.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Sunil Govind <sunil.govind@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank help backport thank sunil"
    },
    "17769":{
        "ID":26034,
        "MESSAGE_ID":"CAD++eCnN2OdPgErAdhD4r8DOvOiEgCbmhKM90Nm2H54hp=HjrQ@mail.gmail.com",
        "PARENT_ID":26033.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"back port marked candidate"
    },
    "17770":{
        "ID":26033,
        "MESSAGE_ID":"CABd3sAxfCRRUoQ6F-UAypoZp-fVkjf3Rzaw=ptSSndgPaJouhQ@mail.gmail.com",
        "PARENT_ID":25970.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Sunil Govind <sunil.govind@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank wangda sorry pitch late feel yarn also good candidate bug fix drc preemption thank sunil"
    },
    "17771":{
        "ID":26032,
        "MESSAGE_ID":"CAD++eC=p4_9ra3J24==ujrnw+Sg23OYa9RioYyK08+VKjA3rBw@mail.gmail.com",
        "PARENT_ID":25970.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi naga vinod tsuyoshi karthik looked list iirc patch afraid change number many risky minor release issue besides yarn le change web ui rest api look like enhancement instead bug fix marked yarn candidate suggest delay change release thought regard wangda"
    },
    "17833":{
        "ID":25970,
        "MESSAGE_ID":"AD354F56741A1B47882A625909A59C692BE3A3FB@SZXEML505-MBX.china.huawei.com",
        "PARENT_ID":25964.0,
        "SUBJECT":"RE: 2.7.2 release plan",
        "SENT_FROM":"\"Naganarasimha G R (Naga)\" <garlanaganarasimha@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"thanks sharing important viewpoint sub list nodelabels jiras selected minimal modification core code try increase usability nodelabels fix bug add missing necessary feature additional feature done nodelabels like distributed scheduling delegated centralized included may wangda could better judge scrutinize list select even add intention make node label usable long delay heard approximate date regard naga karthik kambatla kasha cloudera com sent thursday october yarn dev hadoop apache org cc tsuyoshi ozawa vinod vavilapalli hdfs dev hadoop apache org common dev hadoop apache org vinod kumar vavilapalli wangda tan subject release plan would like make sure later maintenance release stable previous one going increasing stability important timing release adding patch reduce stability going yes leave"
    },
    "17839":{
        "ID":25964,
        "MESSAGE_ID":"CALwhT96hkHVaC1TsOhNQEd9CKofyXFbMchZ7n-zGnF23hrQU0Q@mail.gmail.com",
        "PARENT_ID":25960.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"process",
        "BODY":"would like make sure later maintenance release stable previous one going increasing stability important timing release adding patch reduce stability going yes leave"
    },
    "17841":{
        "ID":25962,
        "MESSAGE_ID":"583675318.8095.1446067995644.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":25954.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Kihwal Lee <kihwal@yahoo-inc.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"try get bug daryn hdfs seem new bug kicked kihwal vinod vavilapalli common dev hadoop apache org kihwal lee cc hdfs dev hadoop apache org chris nauroth yarn dev hadoop apache org mapreduce dev hadoop apache org vinod kumar vavilapalli ming sent wednesday october pm subject release plan see already put hdfs hdfs good please pas hdfs may help nudge daryn hdfs hdfs hdfs thanks vinod"
    },
    "17843":{
        "ID":25960,
        "MESSAGE_ID":"AD354F56741A1B47882A625909A59C692BE3A254@SZXEML505-MBX.china.huawei.com",
        "PARENT_ID":25958.0,
        "SUBJECT":"RE: 2.7.2 release plan",
        "SENT_FROM":"\"Naganarasimha G R (Naga)\" <garlanaganarasimha@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"yes vinod tsuyoshi within week merging would difficult start backporting ported faster also shall apply candidate label naga tsuyoshi ozawa ozawa apache org sent wednesday october vinod vavilapalli cc yarn dev hadoop apache org hdfs dev hadoop apache org common dev hadoop apache org vinod kumar vavilapalli wangda tan tsuyoshi ozawa naganarasimha naga subject release plan vinod thank taking care checked list change result agree enough time backport change weekend fast move better suggestion backport ticket best tsuyoshi"
    },
    "17845":{
        "ID":25958,
        "MESSAGE_ID":"CAAD07OKKRwkM6BmAS0tTdUK7YjAeRjq9HPp1287XhcNzuLJPgg@mail.gmail.com",
        "PARENT_ID":25955.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"not-ak",
        "BODY":"vinod thank taking care checked list change result agree enough time backport change weekend fast move better suggestion backport ticket best tsuyoshi"
    },
    "17848":{
        "ID":25955,
        "MESSAGE_ID":"9FC1F956-7C15-4FF9-841F-1E0E5C6AC05C@hortonworks.com",
        "PARENT_ID":25950.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Vinod Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"tsuyoshi wangda naga look big list cut rc weekend per plan id suggest fast move thing think low risk enough punt everything else next release thanks vinod"
    },
    "17849":{
        "ID":25954,
        "MESSAGE_ID":"3E97891B-9C69-4589-B1DF-3726718E2931@hortonworks.com",
        "PARENT_ID":25934.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Vinod Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"see already put hdfs hdfs good please pas hdfs may help nudge daryn hdfs hdfs hdfs thanks vinod"
    },
    "17853":{
        "ID":25950,
        "MESSAGE_ID":"AD354F56741A1B47882A625909A59C692BE3A0C9@SZXEML505-MBX.china.huawei.com",
        "PARENT_ID":25948.0,
        "SUBJECT":"RE: 2.7.2 release plan",
        "SENT_FROM":"\"Naganarasimha G R (Naga)\" <garlanaganarasimha@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"thanks tsuyoshi required even pitch additional added support mapreduce label mapreduce regard naga tsuyoshi ozawa ozawa apache org sent wednesday october yarn dev hadoop apache org cc hdfs dev hadoop apache org common dev hadoop apache org vinod kumar vavilapalli wangda tan subject release plan thank reporting naganarasimha vinod wangda help backport change best tsuyoshi"
    },
    "17855":{
        "ID":25948,
        "MESSAGE_ID":"CAAD07OK6D0_Ad1Vpa3JmsG99h0fdQfYdD2hbcO3GTZXoPtp84g@mail.gmail.com",
        "PARENT_ID":25944.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thank reporting naganarasimha vinod wangda help backport change best tsuyoshi"
    },
    "17859":{
        "ID":25944,
        "MESSAGE_ID":"AD354F56741A1B47882A625909A59C692BE39FD9@SZXEML505-MBX.china.huawei.com",
        "PARENT_ID":25934.0,
        "SUBJECT":"RE: 2.7.2 release plan",
        "SENT_FROM":"\"Naganarasimha G R (Naga)\" <garlanaganarasimha@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"hi vinod wangda think would good backport following jira related nodelabels improve debug ability usability nodelabels key summary yarn yarn rmnodelabels manager need verify replace node label modified node label mapping request yarn yarn capacityscheduler add resource usage partition queue capacity partition rest api yarn yarn rm container allocation delayed incase app submitted nodelabel partition yarn yarn expose app queue node label expression rm web ui cli rest api yarn yarn rmwebservices api use updated api commonnodelabelsmanager get nodelabel object yarn yarn add label type improve default partition node label page yarn yarn support nodelabel object instead plain string yarnclient side yarn yarn deprecate directlyaccessnodelabelstore rmadmincli yarn yarn commonnodelabelsmanager support nodelabel instead string label name getting node label label label mapping yarn yarn nodeheartbeatrequest registernodemanagerrequest use nodelabel object instead string yarn yarn support return structured nodelabel object rest api yarn yarn add node label usage rm capacityscheduler web ui yarn yarn support restful api getlabelstonodes yarn yarn max resource percentage respect node label yarn yarn gettransferredcontainers bottleneck registration please inform support required backport regard naga kihwal lee kihwal yahoo inc classpath sent tuesday october hdfs dev hadoop apache org common dev hadoop apache org cc chris nauroth yarn dev hadoop apache org mapreduce dev hadoop apache org vinod kumar vavilapalli ming subject release plan think need hdfs hdfs easy backport cherry pick hdfs hdfs nice ming chime kihwal tsuyoshi ozawa common dev hadoop apache org cc chris nauroth yarn dev hadoop apache org hdfs dev hadoop apache org mapreduce dev hadoop apache org vinod kumar vavilapalli sent tuesday october subject release plan vinod chris thanks reply also backport bug fix also documentation think includes help user lot best tsuyoshi"
    },
    "17869":{
        "ID":25934,
        "MESSAGE_ID":"621877812.236842.1445958775552.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":25927.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Kihwal Lee <kihwal@yahoo-inc.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"think need hdfs hdfs easy backport cherry pick hdfs hdfs nice ming chime kihwal tsuyoshi ozawa common dev hadoop apache org cc chris nauroth yarn dev hadoop apache org hdfs dev hadoop apache org mapreduce dev hadoop apache org vinod kumar vavilapalli sent tuesday october subject release plan vinod chris thanks reply also backport bug fix also documentation think includes help user lot best tsuyoshi"
    },
    "17873":{
        "ID":25930,
        "MESSAGE_ID":"CACZfFK5PZ0a_wWgWF=h77=vYyQ8NAHAB37grGrvdextkQQgHbg@mail.gmail.com",
        "PARENT_ID":25928.0,
        "SUBJECT":"Re: The Apache Software Foundation announces Apache(tm) Tajo(tm) v0.11.0",
        "SENT_FROM":"Jihoon Son <ghoonson@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"great thanks hyunsik others effort best regard jihoon hyunsik choi hyunsik apache org"
    },
    "17875":{
        "ID":25928,
        "MESSAGE_ID":"CAM=XDd-Ur_0PZRHa9yy3eWUvNMtOs4xRZyu9U1qrer1v_==FFw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Fwd: The Apache Software Foundation announces Apache\u2122 Tajo\u2122 v0.11.0",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi folk happy announce tajo release best regard hyunsik forwarded message sally khudairi date mon oct pm subject apache software foundation announces apachetm tajotm apache announce list mature efficient sql hadoop engine used advanced data warehousing analysis forest hill md october apache software foundation asf volunteer developer steward incubator open source project initiative announced today availability apachetm tajotm advanced open source data warehousing system apache hadoop apache tajo provides ability rapidly extract intelligence hadoop deployment third party database commercial business intelligence tool tajo reflects numerous new feature improvement include nested record type support orc file support improved resultset fetch performance jdbc tajoclient tablespace support similar rdbms jdbc storage support projection filter push enabling tajo efficiently process rdbms table without etl multi query support python udf udfa support additionally tajo includes improved join optimization better query response nearly bug fix tajo represents important milestone introduced critical feature function let build modern data warehouse system said hyunsik choi vice president apache tajo research director gruter inc especially query federation tablespace feature help enterprise user easily integrate existing database nosql store tajo hadoop based analytical system congratulation apache tajo release leading online mobile developer popular mmorpg game tera process ton log data analyze various usage pattern said sung min ahn head platform development department bluehole adopted tajo game log analytics system large scale data processing tajo made work simple direct json data format support ansi sql support also helped data analyst crunch big data learning curve adopted apache tajo replace old hive setup performance stability tajo led expand use mission critical analysis workload depended commercial dw solution tajo help maintain dw system cost efficient way said byunghwa yun planning team loen entertainment interested enhanced hbase tablespace support tajo data integration various storage would way easier wider planet largest dsp company based korea team processing hundred terabyte data everyday hadoop hive thanks business growth size data increasing rapidly trouble processing time cost server said sudong chung cto wider planet inc former principal program manager microsoft china glad tested tajo promising alternative hive test showed significant improvement processing time service reliability based test result changing plan hadoop footprint would highly recommend testing tajo serious hive user provide service analyzes usage pattern electronic power house provides household customer informative analysis result used apache tajo analysis said young park project manager lab encored technology pleased see tajo release make job even productive tajo super fast provides required feature udf multi query processing availability oversight apache tajo software released apache license overseen self selected team active contributor project project management committee pmc guide project day day operation including community development product release downloads documentation way become involved apache tajo visit url apache software foundation asf established volunteer foundation oversees leading open source project including apache http server world popular web server software asf meritocratic process known apache way individual member committers successfully collaborate develop freely available enterprise grade software benefiting million user worldwide thousand software solution distributed apache license community actively participates asf mailing list mentoring initiative apachecon foundation official user conference training expo asf charitable organization funded individual donation corporate sponsor including bloomberg budget direct cerner citrix cloudera comcast facebook google hortonworks hp ibm inmotion hosting isigma matt mullenweg microsoft pivotal produban wandisco yahoo information visit url follow theasf twitter apache software foundation apache tajo apache tajo hadoop apache hadoop hive apache hive apachecon registered trademark trademark apache software foundation united state country brand trademark property respective owner note receiving message subscribed announce apache org distribution list unsubscribe send email recipient account announce unsubscribe apache org word unsubscribe subject line"
    },
    "17876":{
        "ID":25927,
        "MESSAGE_ID":"CAAD07OLQGADW1xYCAfYyuDmDdqMX_Cw7sv=U6c1+1KBikYij6w@mail.gmail.com",
        "PARENT_ID":25904.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"not-ak",
        "BODY":"vinod chris thanks reply also backport bug fix also documentation think includes help user lot best tsuyoshi"
    },
    "17899":{
        "ID":25904,
        "MESSAGE_ID":"A310858B-6F6D-4DAF-9F87-33CF5FDF246C@hortonworks.com",
        "PARENT_ID":24985.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Vinod Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks vinod"
    },
    "17908":{
        "ID":25895,
        "MESSAGE_ID":"572205983.846728.1445637667617.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":25894.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"Kihwal Lee <kihwal@yahoo-inc.com.INVALID>",
        "TAGS":"property",
        "BODY":"think lot client side test use minidfscluster know mechanical division possible test coverage kihwal haohui mai hdfs dev hadoop apache org kihwal lee cc common dev hadoop apache org sent friday october pm subject hadoop hdfs client splitoff going break code test need spin minidfscluster need stay hadoop hdfs client test moved hadoop hdfs client module tracked hdfs haohui"
    },
    "17909":{
        "ID":25894,
        "MESSAGE_ID":"CAHpOOhFYm=+90boCe5c8n4=BaNX+9Z6QQXfcT48c1H5Ur2sEjA@mail.gmail.com",
        "PARENT_ID":25893.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"Haohui Mai <ricetons@gmail.com>",
        "TAGS":"process",
        "BODY":"test need spin minidfscluster need stay hadoop hdfs client test moved hadoop hdfs client module tracked hdfs haohui"
    },
    "17910":{
        "ID":25893,
        "MESSAGE_ID":"1445354661.2371743.1445634844285.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":25849.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"Kihwal Lee <kihwal@yahoo-inc.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"sure whether mentioned anyone buti noticed client change trigger running anytest hdfs precommit hadoop hdfs client nothave test kihwal colin mccabe hdfs dev hadoop apache org cc common dev hadoop apache org sent monday october pm subject hadoop hdfs client splitoff going break code thanks proactive steve think good example change done branch rather done directly trunk regard colin"
    },
    "17945":{
        "ID":25858,
        "MESSAGE_ID":"99B01FB8-A9CD-4C5D-8D9A-1226C19FF244@hortonworks.com",
        "PARENT_ID":25849.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"building downstream thing caught failure spark build trunk one liner import deprecated auth exception given size change convincedt yes hadoop client split branch offer ability choose merge hadoop release feature going visible going add testing expect cause thing surface release process also need consider going policy turn break something prepared roll back"
    },
    "17954":{
        "ID":25849,
        "MESSAGE_ID":"CA+qbEUO-BCp9wcc3dEKhBUxU-3amimY-9TTFu7Kyz9r132UJDQ@mail.gmail.com",
        "PARENT_ID":25781.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks proactive steve think good example change done branch rather done directly trunk regard colin"
    },
    "17960":{
        "ID":25843,
        "MESSAGE_ID":"CALamADJc=YDh4M5hneQEqRCk8xkgck9=-oESVv5fO4NF7Evu4g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.0-rc2 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version rc apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version release candidate series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "17962":{
        "ID":25841,
        "MESSAGE_ID":"20151019213804.Horde.Qz1UFLIFHPC5V3eVtAN5Ew2@www.ehu.eus",
        "PARENT_ID":null,
        "SUBJECT":"Modelling Cassandra's Availability",
        "SENT_FROM":"CARLOS PEREZ <carlos.perezm@ehu.eus>",
        "TAGS":"not-ak",
        "BODY":"dear cassandra developer recently published paper cassandra availability made context phd thesis work developed two different theoretical model cassandra availability one persistent failure another transient failure using model cassandra user could obtain accurate value availability different cassandra configuration use obtain best configuration cassandra system term availability result work found journal parallel distributed computing title modeling availability cassandra work made supervision professor jose miguel alonso alexander mendiburu university basque country read url url hope find useful finally would like thank work cassandra information available cassandra made possible work best regard carlos perez miguel"
    },
    "17986":{
        "ID":25817,
        "MESSAGE_ID":"F827089A-B8A1-4662-86F8-AAB92FBB843A@altiscale.com",
        "PARENT_ID":null,
        "SUBJECT":"Status: hadoop-common precommit",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"literally month worth difference test patch trunk apache yetus many change list highlight impactful hadoop yetus branch downloaded github prior every run allow yetus team make quick workarounds need fix appear next run configured hadoop common deployed hdfs mr yarn yet likely happen later verify thing good knocked bigger bug multi jdk mode enabled jdk jdk see prev message effectively make runtime surprise right multiple maven repos enabled repos per project per branch per jenkins instance first run given repo dir add minute test time build cache repos repos used daily nightly build anyone else really put end conflict code place purge old repos time ton fix would make take much time mention biggest one new file added patch properly analyzed fixed help tremendously thing like weird findbug error magically appearing commit build order much actually built slightly different order speed certain test improve test coverage usually mean slower run ramification likely flag actual issue hidden like mr unit test leaving file laying around asf rat check pick pom dependency correctly break may need tune ordering bit case vast majority native code getting compiled system warning added native code whitespace error tab well space xml validated patch format handling completely rewritten tolerant mentioning github pull request url certain way cause test patch pull github output way different due major internal structural difference support multiple project multiple language multiple build tool etc etc obvious one going output bigger lot detail access various log vast majority people care much easier consistent"
    },
    "18002":{
        "ID":25801,
        "MESSAGE_ID":"CALamADL58MrswhCbwKpsuGYqPkWS30d899wMrmNnggKir=0DiA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.11 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18017":{
        "ID":25786,
        "MESSAGE_ID":"F92579F6-BA07-4078-9B46-89D564A8996E@hortonworks.com",
        "PARENT_ID":25781.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"Mingliang Liu <mliu@hortonworks.com>",
        "TAGS":"property",
        "BODY":"jira tracking issue url option think make sense make hadoop client directly depend hadoop hdfs depends hadoop hdfs client ciao mingliang liu member technical staff hdfs hortonworks inc mliu hortonworks com"
    },
    "18019":{
        "ID":25784,
        "MESSAGE_ID":"CALte62x_Zeq24N_pFxj__GbnUwQmyjhZHv9jvH6dd861OnbprA@mail.gmail.com",
        "PARENT_ID":25782.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"Ted Yu <yuzhihong@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"option"
    },
    "18020":{
        "ID":25783,
        "MESSAGE_ID":"CAHpOOhF509fzMxuXuEchgDbQiYPbFwKy39E3-YM6QdXiCErn-w@mail.gmail.com",
        "PARENT_ID":25782.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"Haohui Mai <ricetons@gmail.com>",
        "TAGS":"property",
        "BODY":"option sound good might make sense make hadoop client directly depends hadoop hdfs haohui"
    },
    "18021":{
        "ID":25782,
        "MESSAGE_ID":"CACRbFyiEYvbUVRH=p8oUbqymKC6a=ddj3qAG_gZEak9_SA8R3Q@mail.gmail.com",
        "PARENT_ID":25781.0,
        "SUBJECT":"Re: hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"larry mccay <lmccay@apache.org>",
        "TAGS":"existence, property",
        "BODY":"interesting long provides full backward compatibility ability explicitly exclude server dependency seems best way go would get non binding perhaps could add another artifact called hadoop thin client would backward compatible point"
    },
    "18022":{
        "ID":25781,
        "MESSAGE_ID":"8E19C6FE-9EDF-4199-BA4F-DDDD547FAF85@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"hadoop-hdfs-client splitoff is going to break code",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"process, property",
        "BODY":"fyi split hadoop hdfs client server going break thing know code broken dfsconfigkeys path hdfsconfiguration class loading force pickup hdfs site xml missing hadoop client pom depends hadoop hdfs client hadoop hdfs thing referencing gone particularly sad dfsconfigkeys everybody us one hard coded resource hdfs constant hdfs covering issue making public something sitting around year fixing build explicitly adding hadoop hdfs dependency application used stuff declared server side going compile appear break compatibility guideline adopted specifically hadoop client artifact maven groupid artifactid stay compatible within major release url need one agree change considered acceptable according policy mark incompatible hdfs change txt change pom add hdfs client hdfs server hadoop client downstream user free exclude server code unintentionally caused similar grief move sn client hadoop aws hadoop something picked time know problem going arise let explicitly make decision time share user steve"
    },
    "18093":{
        "ID":25710,
        "MESSAGE_ID":"D23C2141.2EEB4%cnauroth@hortonworks.com",
        "PARENT_ID":25709.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"alan thank picking hadoop think needed strong use case kick back action maybe solaris support use case join discussion jira chris nauroth"
    },
    "18114":{
        "ID":25689,
        "MESSAGE_ID":"2618A60C-EF53-4184-BC7D-8FDADB67F7B5@hortonworks.com",
        "PARENT_ID":25684.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"ok noticed bridge fire"
    },
    "18119":{
        "ID":25684,
        "MESSAGE_ID":"D2394DE2.2E98E%cnauroth@hortonworks.com",
        "PARENT_ID":25683.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"spotted one hadoop field removed java layer still could get referenced older version native layer backwards compatible version patch would preserve old field java layer full disclosure one committed patch miss code review chris nauroth"
    },
    "18120":{
        "ID":25683,
        "MESSAGE_ID":"D2393D8D.2E979%cnauroth@hortonworks.com",
        "PARENT_ID":25682.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"alan would please list specific patch jira issue broke compatibility reviewing native code lately would help catch quickly already know specific patch introduced problem patch currently reside trunk branch yet shipped apache release would still opportunity fix avoid dropping match shipping yes aware binary compatibility go beyond function signature data layout semantics chris nauroth"
    },
    "18124":{
        "ID":25679,
        "MESSAGE_ID":"07AEC5F7-6436-4E00-AC68-211E79E4D8E3@hortonworks.com",
        "PARENT_ID":25665.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"done simply retaining older method entry point moving static instance specific bigger change old entry point retained even us ripped hadoop code new method get used old stuff still link mean jni code built java guaranteed work java something knew something worry arises whenever try deploy yarn application containing directly indirectly inside spark assembly jar hadoop java class previous java version libhadoop path far end app uploads hadoop jar moment something try use jni backed method get see stack trace url look patch kind thing would like see address solaris issue covered bridge petrol quite dropped match hadoop improve versioning compatibility support native library downstream hadoop common user say need better probably way packaging native libs look compatibility statement say anything native binary linking url managed avoid addressing issue date hadoop problem caught shipped patch put without setting immutable guarantee compatibility going forward want light bridge lot user side steve"
    },
    "18135":{
        "ID":25668,
        "MESSAGE_ID":"CA+qbEUP4PHNM=ppGX_8eNfjN9==-efYReBzMEwcniBnXCFQ93Q@mail.gmail.com",
        "PARENT_ID":25665.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"technology",
        "BODY":"hi alan chris commented earlier main use domainsocket transfer file descriptor datanode dfsclient know something done domain socket inet socket support passing data domain socket practice rarely turn since seen performance advantage see different option getting working solaris get domainsocket working solaris rely legacy short circuit read instead poorer security guarantee require domain socket add line code failing junit test skip solaris use separate timer wheel thread implement coarse grained timeouts calling shutdown domain socket active long thread could global one per jvm implement poll select loop discussed earlier steve commented would easier adding new function rather changing existing one think ifdef skid mark necessary since poll select supported linux forth well solaris would need code domainsocket java select appropriate implementation runtime based since commented solaris implementing timeout support future approach could placeholder finished agree formal libhadoop compatibility policy frustrating issue want run jar compiled multiple different version hadoop yarn instance discussed past never really come great solution best approach really would bundle libhadoop inside hadoop jar file could integral hadoop version however nobody done work make happen second best approach would include hadoop version libhadoop name would libhadoop hadoop forth anyway think solve particular issue without going rathole best colin"
    },
    "18136":{
        "ID":25667,
        "MESSAGE_ID":"CALamADKDNYr2_6K5PLL71KYok3OoPsBrC2d8JOfDsbvBSX091Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.2 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18137":{
        "ID":25666,
        "MESSAGE_ID":"CALamAD+iAL2G9H8xQrYeBxq1DRJfQJ0jDiL3npBbMVJ2ySRtZA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.10 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18139":{
        "ID":25664,
        "MESSAGE_ID":"6497004D-E751-4643-8871-066BCD0A8A47@hortonworks.com",
        "PARENT_ID":25656.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"think anyone would object change except one big caveat lot would like binary file backwards compatible hadoop jar able link libhadoop whatever get changed old method still going hang around"
    },
    "18170":{
        "ID":25633,
        "MESSAGE_ID":"D23159CD.2E010%cnauroth@hortonworks.com",
        "PARENT_ID":25632.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"interesting find though think would able swap inet socket part code use unix domain socket share open file descriptor datanode process hdfs client process client read directly open file descriptor think file descriptor sharing capability unix domain socket inet socket said would expect throughput unix domain socket bottleneck little data transferred chris nauroth"
    },
    "18172":{
        "ID":25631,
        "MESSAGE_ID":"D231536C.2DFF7%cnauroth@hortonworks.com",
        "PARENT_ID":25630.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"alan also meant say understand comment production seems domainsocket le commonly used current implementation short circuit read definitely utilizes domainsocket common enable production cluster documentation page mentioned includes discussion legacy short circuit read implementation utilize unix domain socket legacy implementation rarely used practice chris nauroth"
    },
    "18173":{
        "ID":25630,
        "MESSAGE_ID":"D2315149.2DFE8%cnauroth@hortonworks.com",
        "PARENT_ID":25626.0,
        "SUBJECT":"Re: DomainSocket issues on Solaris",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hello alan think sound like reasonable approach recommend file jira proposal copy paste content email comment wait day starting work earnest see anyone else want discus first also recommend notifying colin patrick mccabe jira would good get second opinion since original author much code chris nauroth"
    },
    "18177":{
        "ID":25626,
        "MESSAGE_ID":"560B99F6.6010408@oracle.com",
        "PARENT_ID":null,
        "SUBJECT":"DomainSocket issues on Solaris",
        "SENT_FROM":"Alan Burlison <Alan.Burlison@oracle.com>",
        "TAGS":"not-ak",
        "BODY":"hadoop native code build solaris chipping away test failure failure involve domainsocket either directly indirectly seems mainly test use domainsocket single node testing whereas production seems domainsocket le commonly used url particular problem solaris socket read write timeouts sndtimeo rcvtimeo socket option supported unix domain pf unix socket option however supported pf inet socket socket implementation solaris split roughly two part inet socket stream socket stream implementation lack support sndtimeo rcvtimeo aside performance socket use loopback host ip slightly better unix domain socket solaris investigating getting timeouts supported pf unix socket added solaris meantime also looking might worked around hadoop one way would implement timeouts wrapping read write send recv etc call domainsocket either poll select basic idea add two new field domainsocket hold read write timeouts platform support sndtimeo rcvtimeo would unused setsockopt would used set socket timeouts platform solaris jni code would use value implement timeouts appropriately prevent code domainsocket becoming ifdef hairball current socket io function call accept send read etc would replaced macro hd accept platform provide timeouts would expand normal socket function platform support timeouts would expand wrapper implement timeouts caveat code anything pf unix socket would always via domainsocket far tell issue would borne mind change made area set approach seem reasonable thanks alan burlison"
    },
    "18273":{
        "ID":25530,
        "MESSAGE_ID":"BLU437-SMTP93AB182A239C3B21EE95B0B9440@phx.gbl",
        "PARENT_ID":null,
        "SUBJECT":"Test on load balancing policy with datastax java driver",
        "SENT_FROM":"Jun Wu <wuxiaomin98@hotmail.com>",
        "TAGS":"not-ak",
        "BODY":"dear experiment load balancing policy cassandra version using datastax java driver version basically want test reading writing latency performance metric sure could available possible could someone give hint using different load balancing policy default policy tokenaware wrapped dcawareroundrobin however like latencyaware roundrobin know dcawareroundrobin roundrobin suitable multi dc single dc id like know combine different policy get different result currently deployed cassandra amazon ec single region multiple region used maven work java driver one ec instance write different number row ranging default policy know wrap different policy anyone could give hint thanks steven"
    },
    "18307":{
        "ID":25496,
        "MESSAGE_ID":"CALamADLdizDFzsV5kRi2Q043+TcQ75mtRSJvtq6RfYux-S7_3w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.0.17 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version likely final release release series apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18420":{
        "ID":25383,
        "MESSAGE_ID":"CAMyYaRJV=Mk1snWtdw+0KjP=LKC4R6DxUFwXa-73Hz1dbc0XGQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 2.6.1 RC1",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi nearly month long toil load help sangjin lee akira ajisaka rc rc commits later created release candidate rc hadoop rc rc opened closed vote last week ui fix issue sangjin raised yarn dependency yarn yarn additional fix avoid incompatibility yarn ui bug yarn yarn miniyarncluster issue right patch yarn jeff zhang raised rc available url rc tag git release rc maven artifact available via repository apache org url note release process sangjin moved bunch item pending non committed desired patch already big late standard definitely include next release wiki page capture context patch pushed given number fix pushed make bunch change original plan added improvement helped backport patch easier many case made backports possible dropped make sense hdfs hdfs hdfs hdfs hdfs hdfs ran unit test surprisingly passed except one pointed missing fix hdfs discussed release first point release id like use starting release week follow please try release vote vote run usual day thanks vinod hadoop rc vote url hadoop release process thread url pending ticket url wiki page url working note list patch pushed url label candidate planning hadoop release url note branch base fix yet go plan rebase branch based additional patch rc got way yet done followup"
    },
    "18510":{
        "ID":25293,
        "MESSAGE_ID":"CAMyYaR+wtZuStZjFcB8LJMPQKBS3REpOW03WvZzsHBo9=q2VBA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Hadoop 2.6.1 RC0",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi nearly month long toil load help sangjin lee akira ajisaka commits later created release candidate rc hadoop rc available url rc tag git release rc maven artifact available via repository apache org url note release process sangjin moved bunch item pending non committed desired patch already big late standard definitely include next release wiki page capture context patch pushed given number fix pushed make bunch change original plan added improvement helped backport patch easier many case made backports possible dropped make sense hdfs hdfs hdfs hdfs hdfs hdfs ran unit test surprisingly passed except one pointed missing fix hdfs discussed release first point release id like use starting release week follow please try release vote vote run usual day thanks vinod hadoop release process thread url pending ticket url wiki page url list patch pushed url planning hadoop release url note branch base fix yet go plan rebase branch based patch got way yet done followup"
    },
    "18528":{
        "ID":25275,
        "MESSAGE_ID":"CALamADKT4LH21AX_kfLEhF_9j_b+uRLks9wnRx5DJsYgkhde3A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.0-beta2 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version beta apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version beta release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18552":{
        "ID":25251,
        "MESSAGE_ID":"CALamADLeCaamxvhbs-okYK+kZO_01=CbCe3_QvBbZpwrF0Z+6w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.1 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18571":{
        "ID":25232,
        "MESSAGE_ID":"CALamAD+G4MPDR0=mxnEMrE8aavr9BOXPoN_H2a2qDOMzUVnstA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.9 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18711":{
        "ID":25092,
        "MESSAGE_ID":"CALdd-zhu-X3Eh52sacHbyvUwf-iJEY9g+3G5VnpqLMW+U-JLRg@mail.gmail.com",
        "PARENT_ID":25090.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"saying yes"
    },
    "18713":{
        "ID":25090,
        "MESSAGE_ID":"B32E0456-1140-4B80-926E-E39A906B4B5B@gmail.com",
        "PARENT_ID":25088.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Marek Lewandowski <marekmlewandowski@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"basically saying even developed something provide serializable cross partition transaction still nobody care nobody want would complex sure performant enough want hear crystal clear talk supervisor redirect effort something useful guy like ramp example"
    },
    "18715":{
        "ID":25088,
        "MESSAGE_ID":"CALdd-zixvecLuJEuc+sV_hgJE7Qk_8Xmixj89EavHkikSf1-Ww@mail.gmail.com",
        "PARENT_ID":25087.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"lot interest ramp dependency requiring unique timestamp id bitch zero interest committing maintaining heavyweight framework get way serializable cross partition transaction"
    },
    "18716":{
        "ID":25087,
        "MESSAGE_ID":"AA7FDD05-E6FE-4B9D-8BD9-4CC53E5C0A2A@gmail.com",
        "PARENT_ID":25086.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Marek Lewandowski <marekmlewandowski@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi jonathan heard read indeed offer something interesting read blog post paper comment jira need digest bit let sink thanks letting know tell something status feature would like see discussion stopped year ago minor priority seem like hot subject everyone awaits maybe incorporate building block something functional reading noticed concept resemble thinking obviously much detailed specified need digest"
    },
    "18717":{
        "ID":25086,
        "MESSAGE_ID":"CALdd-zj_k2C31MYd-1bGu-Dm3=bxyVdPgPwa8DrN8C0gPWPPqw@mail.gmail.com",
        "PARENT_ID":25085.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"technology",
        "BODY":"seen ramp transaction think much better fit fully linearizable operation cross partition url"
    },
    "18718":{
        "ID":25085,
        "MESSAGE_ID":"CAG5mTuoKzSzCgDQE=ZNVH4Y21QacHQqYRVDu0esReOrz9s0sPQ@mail.gmail.com",
        "PARENT_ID":25084.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Marek Lewandowski <marekmlewandowski@gmail.com>",
        "TAGS":"existence",
        "BODY":"actually also thinking something like redundant execution transaction single active thing executes transaction also redundancy form follower try execute transaction like dry run upon detection failure single active thing one could pick transaction execution finish still little bit vague need lot detail system could recover failure single active thing think gmt robert stupp marek lewandowski"
    },
    "18719":{
        "ID":25084,
        "MESSAGE_ID":"0A89AF19-041C-4786-B1C5-44A3B2A1A256@snazy.de",
        "PARENT_ID":25083.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Robert Stupp <snazy@snazy.de>",
        "TAGS":"property",
        "BODY":"point single thing single thing single point failure sorry reply drastically absolute go every node must equal special special robert stupp snazy"
    },
    "18720":{
        "ID":25083,
        "MESSAGE_ID":"CAG5mTurKHx9Md9URykAOEWeT=5NQbY8dex4D8o=+3DNAzZJ5vA@mail.gmail.com",
        "PARENT_ID":25082.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Marek Lewandowski <marekmlewandowski@gmail.com>",
        "TAGS":"existence",
        "BODY":"hey robert thanks reply yes understood correctly although think quite necessary provide full acid support concretely could eventual supported cassandra long replica think would focus multiple statement still piece work le possible although worked big cluster smaller one understand typical use cassandra wild unreliability network tried incorporate thinking process also believe solution developed like opt end user end user accept degraded performance transaction retries transaction side work without proper handling client level mean business logic level answer question done one transaction manager longer reachable abort transaction raise issue client side let crash let client handle default handling supported driver level support common scenario client like retry later timeout need think detail point hide everything client client know distributed transaction aware fallacy opinion think global lock transaction manager agree idea central piece single point failure thought single guy elected managing transaction however call need coordinate stuff node found way around anywho question one would accompany journey developing solution give feedback awesome gladly present detailed solution discussion try end might turn failure fine experiment marek gmt robert stupp marek lewandowski"
    },
    "18721":{
        "ID":25082,
        "MESSAGE_ID":"63956C40-C421-4C01-A16F-3AA99411A2DD@snazy.de",
        "PARENT_ID":25081.0,
        "SUBJECT":"Re: I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Robert Stupp <snazy@snazy.de>",
        "TAGS":"not-ak",
        "BODY":"hey marek put lot effort proposal first thanks understood right proposal full acid support able handle multiple statement single transaction cassandra database used distributed environment server sitting nearby server side globe connected via probably le reliable network connection cassandra also database handle many million operation per second say imagine one transaction manager longer reachable client coordinator involved replica node mean might able implement going way around global lock transaction manager acid could optimize thing take load central instance end coordinating stuff transaction manager implementing distributed lock nightmare especially lock span whole world proposing transaction full acid would need thorough concept covering little nice edge case happen huge distributed system also deal problem arise many client think client fail stuck node fail stuck network get broken partitioned flappy etc etc robert robert stupp snazy"
    },
    "18722":{
        "ID":25081,
        "MESSAGE_ID":"CAG5mTupgfP+7HWMH8mLm3avHH+uYLjvdGK1Dy2uZcku4DPs=wQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"I want to develop transactions for Cassandra and I want your feedback",
        "SENT_FROM":"Marek Lewandowski <marekmlewandowski@gmail.com>",
        "TAGS":"existence",
        "BODY":"hello everyone tl dr want develop transaction similar relational one cassandra idea would like hear feedback long story short want develop prototype solution feature transaction spanning multiple cassandra partition resembling relational database understand cassandra world transaction quite bit different relational db world prototype research subject master thesis time since dancing around subject postponing understood process anything useful hidden community feedback want provide feedback idea also power changing completely first foremost want develop something actually useful get master degree scare anyone huge wall text post brief description idea longer block text describing see committing rolling back data detailed description prepared already want share page text one go scope project assuming alone experiment production ready solution experiment use tool possible actually perform baseline idea asynchronous execution think akka actor non blocking execution message passing completely transparent end user solution may enforce certain workflow interacting introduce new concept like akka message instead cql binary protocol far reading lot thinking even two idea would like share idea brief description detail come later idea event streaming imagine every modiifcation represented event imagine group event event group imagine group time series data imagine read group stream event think reactive stream idea need lock data sure one else compete guy called cursor read event stream executes event group one one advacing position stream event group executed seems like system transaction given time many area optimize allow however stop idea locking data us additional table acquire read write lock seperate table append modification rollback appending seperate table support different isolation level traditional approach kind translation traditional locking cassandra reality common part two approach commit rollback rollback commit two idea rollback like nd one simpler potentially faster rollback query rewriting modifies original data copy original data state restored failure detected modification query rewritten original data restored query rewriting seems like complex functionality tried simple little bit complex statement general basic stuff algorithm complicated support everything cql offer might hard still transactional system might restriction cql statement used first someone want transaction already want something non standard skip detail approach rollback appending seperate table image table want transaction requires another table tx schema clustering column new column tx additionally clustered transaction id new column committed boolean rolledback boolean applied boolean general idea transaction append change xxx tx table rollback nothing need done besides cleaning xxx tx table useless data scheduled rollback commit row xxx tx marked committed done using batch update row affected transaction committed change eventually merged back original row committed change visible query query select table query xxx table query table also xxx tx get committed data merge result return client committed data eventually land proper row read background process example applied column result merged inserted original row plus additionally modification marked applied uncommitted data also eventually cleaned important note since partitioning key stay xxx table xxx tx table data reside node query application data done locally happens next assuming get feedback post detailed description two approach would love hear feedback whole subject begin discussion pick interest think heavy transaction experiment sense regard marek lewandowski"
    },
    "18723":{
        "ID":25080,
        "MESSAGE_ID":"CALwhT95H8VFB-FUxb8rrxg6PRN7B+f3g6-7L6kGpYtBwofrLPw@mail.gmail.com",
        "PARENT_ID":25070.0,
        "SUBJECT":"Re: \"Reservation\" ambiguity",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"existence",
        "BODY":"thinking kind agree chris vinod removing old metric hadoop would reasonable keep around deprecate mess internal variable could changed better readability irrespective might end fairscheduler anyhow"
    },
    "18733":{
        "ID":25070,
        "MESSAGE_ID":"8D1008E1-F4CF-4ED5-8713-CD647E8339E6@hortonworks.com",
        "PARENT_ID":25069.0,
        "SUBJECT":"Re: \"Reservation\" ambiguity",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"confusing given know internals see would mind existed long time internal reservation resource individual container within application newer feature user driven reservation resource application workload granularity newer metric add make distinction explicit numuserreservedresources agreeing others warrant break existing metric even next major release thanks vinod"
    },
    "18734":{
        "ID":25069,
        "MESSAGE_ID":"5368eb19d43f47b780767b0d7ee54fa7@DFM-TK5MBX15-05.exchange.corp.microsoft.com",
        "PARENT_ID":25066.0,
        "SUBJECT":"RE: \"Reservation\" ambiguity",
        "SENT_FROM":"Carlo Curino <ccurino@microsoft.com>",
        "TAGS":"existence",
        "BODY":"keeping name reservation user visible top external internal argument chris make completely agree noticed following developing spoke lot lot folk industry academia term reservation evocative intuitive within second people using refer functionality easily grasping idea hand every time spoke using keyword reservation add bunch context expand explain even people naturally drawn refer hoarding resource large container large container management alternative name could hoarded prefecthed resource cent cheer carlo"
    },
    "18737":{
        "ID":25066,
        "MESSAGE_ID":"CALwhT955Zx8kbc2cVviijdxAtPO=2jySA3YGeq=tNHf5incNOA@mail.gmail.com",
        "PARENT_ID":25064.0,
        "SUBJECT":"Re: \"Reservation\" ambiguity",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"existence",
        "BODY":"inline"
    },
    "18739":{
        "ID":25064,
        "MESSAGE_ID":"CACO5Y4xH=CK7CQDsTt3_wxvmDpxzJxcUE6b9x021zwKry6qG=w@mail.gmail.com",
        "PARENT_ID":25029.0,
        "SUBJECT":"Re: \"Reservation\" ambiguity",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"existence",
        "BODY":"visible reservation internal implementation detail exposed metric explain edge case create user typically aware sla reservation user visible express contract user operator symmetrically concept renaming would require user breaking code change unless discussing intersection effect reservation reservation usually clear context would rather avoid breaking anyone listening metric hadoop maybe reservation could named session collided application already used similar concept"
    },
    "18748":{
        "ID":25055,
        "MESSAGE_ID":"CADPoNvwF2JweLQx-TTNbaG0ZAeeedDjcgtHVgdo+k-0nR=gstQ@mail.gmail.com",
        "PARENT_ID":25029.0,
        "SUBJECT":"Re: \"Reservation\" ambiguity",
        "SENT_FROM":"Ray Chiang <rchiang@cloudera.com>",
        "TAGS":"existence",
        "BODY":"sorry delayed response two cent hold ambiguity word since noun verb using hold sentence confusing documentation alternative sadly lot word quite long could painful coding accomodation allowance booking prerequisite settlement withholding ray"
    },
    "18750":{
        "ID":25053,
        "MESSAGE_ID":"CALamAD+XvQ2myvsYehJki24LWgZL6_mz763KLkpSk2thvTghAA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 3.0.0-alpha1 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version alpha first test build cassandra includes new storage engine new sstable format materialized view expect bug release test report issue please apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version alpha release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18774":{
        "ID":25029,
        "MESSAGE_ID":"CALwhT95xt+i-VJoj4euDSip2hotk-YX+6f_CAQjHOidaktuZgQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"\"Reservation\" ambiguity",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"existence",
        "BODY":"hi folk use word reservation mean reservation node avoid starvation big container asks recent sla work confusing developer end user wondering people open calling first one hold second one reservation change terminology code add new metric hold branch remove metric reserved hadoop thought"
    },
    "18795":{
        "ID":25008,
        "MESSAGE_ID":"CALamADK9+ZiNTUFZqAn6UMBRfZXtX9m_Cthpw=L44pB7HWbkFA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.0 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version read release url apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version first release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18816":{
        "ID":24987,
        "MESSAGE_ID":"EAC73CC7-84C5-4C32-9C46-3DDAAC1EC3FC@hortonworks.com",
        "PARENT_ID":24983.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"example yarn timelineclientimpl swallow exception url want change retries time rethrows original exception convert interruptedexception interruptedioexception throw change explicit binary signature code change get thrown timeout well text message would rate patch happy put"
    },
    "18818":{
        "ID":24985,
        "MESSAGE_ID":"D1CD18F3.272A8%cnauroth@hortonworks.com",
        "PARENT_ID":24972.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"process",
        "BODY":"would comfortable inclusion doc patch minor release lot value end user pushing documentation fix quickly possible bear risk regression incompatibility code change chris nauroth"
    },
    "18828":{
        "ID":24975,
        "MESSAGE_ID":"CADoWKTDfJRZzhs6CJ=WpRq3mOCWVnm87ajAxCh7y034QUbKDJA@mail.gmail.com",
        "PARENT_ID":24974.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Vinayakumar B <vinayakumarb@apache.org>",
        "TAGS":"not-ak",
        "BODY":"steve suggestion agree completely everything finalized committing vinay"
    },
    "18829":{
        "ID":24974,
        "MESSAGE_ID":"9158CE0A-932C-4129-8FA7-46AD2945294C@hortonworks.com",
        "PARENT_ID":24968.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"process",
        "BODY":"agree bar patch going high always risk subtle regression patch higher risk traumatic update like idea list proposed candidate patch reviewed discussed going link url maybe guideline going get except special case change classpath dependency change signature api including exception type text change wire format could also consider driving patch based downstream redistributors hadoop felt important enough backport cloudera well amazon filed jiras microsoft others ideally patch tested released high chance regression would surfaced already broke hbase change vinod already hadoop example course security issue patch go overall expectation patch go default unless viewed critical ruthless people commit thing without getting approval others steve"
    },
    "18831":{
        "ID":24972,
        "MESSAGE_ID":"CAAD07OKHn5Hc59SKyzJeviCPhpa3D6fGXFdi-Kd3RzTvHXmDSw@mail.gmail.com",
        "PARENT_ID":24971.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"process",
        "BODY":"hi thank starting discussion release feature improvement committed yarn improvement documentation thought documentation page fit branch included easily revert merging patch fit criterion instead trunk sure try best vinod mentioned also apply major bug fix branch thanks tsuyoshi"
    },
    "18832":{
        "ID":24971,
        "MESSAGE_ID":"55A754CA.6060301@oss.nttdata.co.jp",
        "PARENT_ID":24951.0,
        "SUBJECT":"Re: 2.7.2 release plan",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"process",
        "BODY":"thanks vinod starting release plan adopt plan karthik mentioned additional maintenance release hadoop version thread way include blocker also critical bug fix release addition branch special case first stable release therefore thinking include major bug fix well regard akira"
    },
    "18835":{
        "ID":24968,
        "MESSAGE_ID":"4BA313A9-EC42-441C-892D-E83EB64DE462@hortonworks.com",
        "PARENT_ID":24965.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"close loop one created label candidate list patch url order make progress issue still hot discussion continuing release planning thread thanks vinod"
    },
    "18838":{
        "ID":24965,
        "MESSAGE_ID":"CA+RK=_AHG+em+EeWzu_QU9Wk16+QZP4ezXCjnQjo0QYPBTriUw@mail.gmail.com",
        "PARENT_ID":24964.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"inline"
    },
    "18839":{
        "ID":24964,
        "MESSAGE_ID":"2E577F62-BF6F-4302-8C4C-25998ECA4CA4@hortonworks.com",
        "PARENT_ID":24963.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"understand sort newish question hbase dev already well laid release management process people want learn work please head url term release management stuck lack volunteer rm originally driving akira recently volunteered separate thread totally missed participating enough help clearly acknowledged demand figure mechanic agreeing reasonable common list fix start tx feedback far hbase dev agree karthik earlier let continue discussion hadoop dev release thread thanks vinod planning hadoop release url discus maintenance release url"
    },
    "18840":{
        "ID":24963,
        "MESSAGE_ID":"CADcMMgFDH_NshzYRCNrUi2NaCNC1su6PQ+iNx18_1zPVr4cqBA@mail.gmail.com",
        "PARENT_ID":24960.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Stack <stack@duboce.net>",
        "TAGS":"not-ak",
        "BODY":"anyone interested volunteering run release akira would get help especially bar set high critical bug fix allowed feature perf fix jar update st ack"
    },
    "18841":{
        "ID":24962,
        "MESSAGE_ID":"CA+RK=_AH6U7ToB07oE9qBy8QJUujpLFy1ZK3-2h+-53GJxpPwA@mail.gmail.com",
        "PARENT_ID":24960.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hbase committers volunteer release runner whole release line would use word appoint necessarily arrangement informal communal practice written anywhere policy codified bylaw helpful data point another community rm line hbase release think help one committer pmc able specialize particular release line know back porting nit back port decision predicated user demand sometimes user ask change come back sometimes find something relevant especially bug fix solution operational wart proactively pick back run production sometimes contribution user devs running course need fix ultimately arrive next release help process possible may spend couple day every couple week carefully picking back porting change every month spin new release candidate ask pmc judge worthy volunteer rms course infinitely scale could argued good side effect many active release line capable focusing pmc example want throw hat ring time arrives may ask consensus retiring first"
    },
    "18842":{
        "ID":24961,
        "MESSAGE_ID":"D1CC2808.31FBF%chris.a.mattmann@jpl.nasa.gov",
        "PARENT_ID":24960.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"\"Mattmann, Chris A (3980)\" <chris.a.mattmann@jpl.nasa.gov>",
        "TAGS":"not-ak",
        "BODY":"chris right chris mattmann ph chief architect instrument software science data system section nasa jet propulsion laboratory pasadena ca usa office mailstop email chris mattmann nasa gov www url adjunct associate professor computer science department university southern california los angeles ca usa"
    },
    "18844":{
        "ID":24959,
        "MESSAGE_ID":"CALvzVW1Az+Ye-H64TUtX-zUbRT3e5jbLrbjP1Z7pQQCdyDUw4g@mail.gmail.com",
        "PARENT_ID":24958.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Elliott Clark <eclark@apache.org>",
        "TAGS":"not-ak",
        "BODY":"people concerned regression install new version install vendor tested stable version giving user choice good thing stability"
    },
    "18845":{
        "ID":24958,
        "MESSAGE_ID":"CADbBEnuLH4GwMX9Tn9wYaXSxaF+-CVFmaks7nrLateC6W5315A@mail.gmail.com",
        "PARENT_ID":24957.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think bar making maintenance release set reasonably high main reason concern stability regression unfortunately case seemingly innocuous bug fix introduced regression small large defeat purpose maintenance release"
    },
    "18846":{
        "ID":24957,
        "MESSAGE_ID":"CALwhT94Z-HFGWqzpDVc31Nh3jiXZFSX7PMPZiBuaVeX9mTL2Jg@mail.gmail.com",
        "PARENT_ID":24956.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"every new patch potentially brings new bug want limit kind potential bug introduced point release might want limit get would nice make sure point release stable previous point release line"
    },
    "18847":{
        "ID":24956,
        "MESSAGE_ID":"CAGHyZ6K7SLbydy59LOLN3o1MfMKa-z9-28R0MtXRZO7s+DW55A@mail.gmail.com",
        "PARENT_ID":24955.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"process",
        "BODY":"include backwards compatible bug fix alternatively appoint release manager minor release line allow arbitrate disagreement inclusion worked well hbase community"
    },
    "18848":{
        "ID":24955,
        "MESSAGE_ID":"CALwhT971Sym5W2RY+m1+gYst0=zuViyE5cHmytb+vFFSijA-Wg@mail.gmail.com",
        "PARENT_ID":24953.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"process",
        "BODY":"proposed thread adopting following model release blocker critical major bug fix applied next minor release release blocker critical bug fix applied next minor release release blocker bug fix applied next minor release assuming security fix urgent release could apply approach onwards adhoc release"
    },
    "18850":{
        "ID":24953,
        "MESSAGE_ID":"8EEFDE39-D690-4F16-A48F-26C93DD7E8ED@hortonworks.com",
        "PARENT_ID":24948.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"yeah started thread back one url many offline discussion biggest problem found offline bug fix acceptable everyone wishing consume given number bug fix went branch figuring set patch acceptable everyone huge challenge kind stalled attempt thanks vinod"
    },
    "18851":{
        "ID":24952,
        "MESSAGE_ID":"CAGHyZ6KXYFQkUJKjXKwXkzPcv16kvoEh3LzsfLJ-KSovAr9UGQ@mail.gmail.com",
        "PARENT_ID":24949.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"discussion seems integral matter maintenance release version"
    },
    "18852":{
        "ID":24951,
        "MESSAGE_ID":"CAMyYaR++-i8etK8Dh3g8y4bTc9ogdCdvuAP6ASo53348z0FeRg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"2.7.2 release plan",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@apache.org>",
        "TAGS":"process",
        "BODY":"hi thanks everyone push branch open commits release jira also version sub project continuing previous thread steady maintenance release follow within week earlier tried week cycle seems impractical given community size propose target release end week starting release close within week focus obviously blocker issue bug fix feature improvement need help committers automatically merging patch fit criterion instead trunk thought thanks vinod release follow url release blocker url"
    },
    "18854":{
        "ID":24949,
        "MESSAGE_ID":"CALwhT957XWLub0aDxJj9fHn8jVbWk3=uNuisgJLFMfh3ck78Eg@mail.gmail.com",
        "PARENT_ID":24948.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"believe general consensus maintenance release witnessed thread discussion go etc think clear proposal would nice put together committers know commit patch otherwise release manager look branch pull fix either approach fine would nice start discus thread go taker"
    },
    "18855":{
        "ID":24948,
        "MESSAGE_ID":"CADbBEnssHr4Wz+QqwEPRWTLpii-SLHx9hXtji_V8W4gcVoHu_Q@mail.gmail.com",
        "PARENT_ID":24942.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"strong release understand vinod trying get effort going stalled little bit would good rekindle effort company big hadoop deployment including mine always tried stabilize release testing collecting researching critical issue release would come set fix backport would also communicate via offline channel hadoop summit thought would great came together create public stability bugfix release top example critical issue fixed thanks sangjin"
    },
    "18861":{
        "ID":24942,
        "MESSAGE_ID":"CAAD07O++yptmTgrxb6vhtVbfyeABCjEgiWg6PCYSPq=LEx0GcQ@mail.gmail.com",
        "PARENT_ID":24937.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thank notification trying back port bug fix tsuyoshi"
    },
    "18862":{
        "ID":24941,
        "MESSAGE_ID":"55A5F218.3070905@oss.nttdata.co.jp",
        "PARENT_ID":24937.0,
        "SUBJECT":"Re: [DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"thanks sean starting thread started almost discussion obviously creating release would like start work soon possible url regard akira"
    },
    "18866":{
        "ID":24937,
        "MESSAGE_ID":"CAGHyZ6J+PC9BAa0zg516YKdMsmNV=2cdPSF1ceJ5F6rH2aPG+w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Additional maintenance releases for Hadoop 2.y versions",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi hadoopers hbase discussing impact dependency downstream user fundamental dependency hadoop play big role operational cost running hbase instance currently hbase release line support hadoop drop hadoop minor release line minor release unlikely remove anything set hbase probably end start currently plan continue supporting least hbase lately discussing updating shipped binary hadoop following stability testing part community unfortunately particular couple bug could destroy hbase cluster user decide turn hdfs encryption installation instruction tell folk replace jar version hadoop actually running user follow instruction want minimize pain regular maintenance release key keeping operational burden low downstream user want forced choose living broken system stomaching risk upgrade across minor major version number looking back three aforementioned hadoop version patch release since came nov last patch release well hadoop look year without release discussion shipping hadoop binary one pmc member mentioned continued work line planning additional release earlier minor version hbase community request hadoop pick making bug fix patch release regular schedule preferably line preferably monthly realize given time gap since likely take big get together take much le effort continue url url hbase hadoop hadoop url url url sean"
    },
    "18877":{
        "ID":24926,
        "MESSAGE_ID":"CAGHyZ6+MaVyE1sTdW11HpgSC=Ewq0V6789NjHcWGPJyvefHuYg@mail.gmail.com",
        "PARENT_ID":24777.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"mentioned hadoop incubator style proposal url"
    },
    "18885":{
        "ID":24918,
        "MESSAGE_ID":"CALamADJtRF_nvjfsjRjf22XzvuCZHKW4ZS4kw3S6US_9mo+e8Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.0-rc2 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version rc apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version release candidate series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18886":{
        "ID":24917,
        "MESSAGE_ID":"CALamADJ-424bL-xeHEyVUdM64jXnVCrN0gUg3-qmNrxSVCqwjw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.8 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "18949":{
        "ID":24854,
        "MESSAGE_ID":"CA+RK=_BZft0xt-oV4YoiG+5dniWu-4Zr9hUwGG5OC-6C5d+G3A@mail.gmail.com",
        "PARENT_ID":24758.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sure qualify big user fwiw upgrading hadoop based application critical bugfix patch went branch later salesforce scary tagged ready production may eat data sign hanging subsequent release point along branch history even using come trepidation know hdfs encryption feature added release destroy hbase installation turned"
    },
    "19001":{
        "ID":24802,
        "MESSAGE_ID":"CAGB5D2aSPmPqBKM9QxApZnj8NUW_jP--=rYDd9_5-eywpL64AA@mail.gmail.com",
        "PARENT_ID":24758.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"read previous thread topic allen compatibility concern dropping change txt branch release allen still concern mentioned written script parse change txt written script similar task turned git log jira change txt wondering relic svn day since svn log dog slow git log quite bit better inclination drop change txt entirely including branch already release note jira well per release webpage talk new feature change txt also never reliable source information doubt many consumer best andrew"
    },
    "19003":{
        "ID":24800,
        "MESSAGE_ID":"25C0019913686A44A0DED4637876DCE60133379C@YYZEML703-CHM.china.huawei.com",
        "PARENT_ID":24799.0,
        "SUBJECT":"RE: Node Label, partition or an attribute of node?",
        "SENT_FROM":"Lei Guo <leiguo@huawei.com>",
        "TAGS":"existence",
        "BODY":"fully understand challenge customized user defined resource related enforcement consumable resource maybe extend current resource modeling little bit non consumable resource first like node label admin define via cli without major protocol change use resource leave scheduling plug example capacity scheduler use node label partitioning fair scheduler may use label job constraint lei"
    },
    "19004":{
        "ID":24799,
        "MESSAGE_ID":"CAD++eCn86DacWbrNmLYPzz-X9b3Nz52eTwr=TRVLB24BC6vRww@mail.gmail.com",
        "PARENT_ID":24798.0,
        "SUBJECT":"Re: Node Label, partition or an attribute of node?",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi lei interesting topic lot discussion many folk resource label major concern accepting user provided resource type resource vector may simply work dominate resource fairness deal node different set resource vector node gpu enforce example node gpus allocate process one get one get yarn ensure nobody us allocated adding new vector need lot refactoring protocol scheduler etc yarn figured yet currently yarn plan short term accept user provided resource type resource vector adding controllable resource like io bandwidth etc road map short term non controllable resource put node label enforce resource sharing via partition binding requirement via attribute thought wangda"
    },
    "19005":{
        "ID":24798,
        "MESSAGE_ID":"25C0019913686A44A0DED4637876DCE60133374E@YYZEML703-CHM.china.huawei.com",
        "PARENT_ID":24797.0,
        "SUBJECT":"RE: Node Label, partition or an attribute of node?",
        "SENT_FROM":"Lei Guo <leiguo@huawei.com>",
        "TAGS":"existence",
        "BODY":"hi wangda actually two type node label causing confusion scheduling system find best match resource workload via different policy node partition node constraint scheduling policy node label part resource attribute used two different policy position node label way one type node label related define abstract resource yarn currently cpu memory extending disk network bandwidth considered resource node mentioned summit slide gpu could also resource consumable resource attribute provided node node label non consumable resource attribute provided node lei"
    },
    "19006":{
        "ID":24797,
        "MESSAGE_ID":"CAD++eCn6+Aqk6EYAi98NdUQg7GD09OYa2mf+-qK7SSg0zHOZ5w@mail.gmail.com",
        "PARENT_ID":24795.0,
        "SUBJECT":"Re: Node Label, partition or an attribute of node?",
        "SENT_FROM":"Wangda Tan <wheeleast@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi lei clarify node label two type one node partition supported already another node constraint also call node attribute still design string typed node label including partition attribute either per application level per container level supported api already take look summit slide url may help better understand partition constraint relationship thanks wangda"
    },
    "19008":{
        "ID":24795,
        "MESSAGE_ID":"25C0019913686A44A0DED4637876DCE6013336CD@YYZEML703-CHM.china.huawei.com",
        "PARENT_ID":null,
        "SUBJECT":"Node Label, partition or an attribute of node?",
        "SENT_FROM":"Lei Guo <leiguo@huawei.com>",
        "TAGS":"existence",
        "BODY":"definition label yarn pretty clear node label label describes node node multiple label label expression logical combination label using definition without considering implementation node label could treated boolean type attribute node assuming administrator define label label label system associate node label label mean value attribute label label node true value attribute label false node current yarn implementation seems resource partitioning treated primary use case node label design implementation node label mainly consider partitioning case even multiple label support disabled yarn cover workload resource request use case yarn proposed description example constraint node label yarn seems like string type attribute node instead boolean type anymore got confused node label comment lei guo senior architect huawei canada research centre"
    },
    "19026":{
        "ID":24777,
        "MESSAGE_ID":"CAGHyZ6KeN+OxLDgPuywccgFmumsDWs5uaVWJDoJQpwhCeDVJfg@mail.gmail.com",
        "PARENT_ID":24699.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk work feature branch tracked hadoop"
    },
    "19027":{
        "ID":24776,
        "MESSAGE_ID":"D1EE5170-53FB-4094-A57D-674E4EF3C219@gmail.com",
        "PARENT_ID":24752.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Nigel Daley <nige.daley@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"separate project going directly tlp possible hadoop split nutch language discussion tlp cheer nigel"
    },
    "19046":{
        "ID":24757,
        "MESSAGE_ID":"CAGB5D2ZffQWhvW_fXB2DH9tMWrvjHXi3DapUDHwyHSXuUodF4g@mail.gmail.com",
        "PARENT_ID":24756.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"reason choose xor willing rms enough pmcs vote release reason maintain however based discussion hadoop summit yahoo twitter interest primarily daryn mentioned need get stable move want help big user seems like focus maintaining allen also brought issue jdk see option ranked best worst eye add multi jdk support test patch keep using jdk precommit keep eye nightly jdk run drop support jdk since one using anymore easiest probably fine user big compat break would want kick stable release line bad want wait finally issue karthik mentioned hadoop summit change txt maintenance becomes huge burden backports initial commit backporting something branch would potentially need update change txt trunk branch branch move jira right version either automated dropped change txt process would much smoother best andrew"
    },
    "19047":{
        "ID":24756,
        "MESSAGE_ID":"5589597D.1040002@oss.nttdata.co.jp",
        "PARENT_ID":24753.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"thanks tsuyoshi comment targeting look good however would like maintenance branch also half year since released want abandon relatively new branch"
    },
    "19048":{
        "ID":24755,
        "MESSAGE_ID":"55893BFB.7030103@oss.nttdata.co.jp",
        "PARENT_ID":24744.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"thanks allen reminding supporting jdk target commmiter need check bug fix patch cherry picking trunk thinking need decide release another thread okay discus"
    },
    "19049":{
        "ID":24754,
        "MESSAGE_ID":"5589398D.7070707@oss.nttdata.co.jp",
        "PARENT_ID":24737.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"thanks karthik comment approach ensure stability"
    },
    "19050":{
        "ID":24753,
        "MESSAGE_ID":"CAAD07O+KqbzZsrTZEmMYNZgmZOQs_xByojBLLQJ5WuY0YPssJA@mail.gmail.com",
        "PARENT_ID":24750.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thank clarification karthik would also like work stable release management community thinking speedy release branch making community feedback faster current next version cherry picking releasing useful work user know code base freezing currently would love work release possible cheer tsuyoshi"
    },
    "19053":{
        "ID":24750,
        "MESSAGE_ID":"CA+qbEUOgXDXe6LDnLrjZFmLnm7WC25bS2+_gqkUQs4tMb+1Wyw@mail.gmail.com",
        "PARENT_ID":24732.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"not-ak",
        "BODY":"creating maintenance release rapid release cadence effort put stability backports think would really great project colin"
    },
    "19054":{
        "ID":24749,
        "MESSAGE_ID":"CA+qbEUMVWBhfo-MU6U6taBowL1RZ7k1h6L7swLQ+XRfXoKmmwA@mail.gmail.com",
        "PARENT_ID":24675.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"existence, technology",
        "BODY":"making separate project always struggled lot fork test patch code perhaps project help create something work well multiple project bypassing incubator seems kind weird know option let people experience asf comment mentioned project focused script guess based existing test patch code allen lot good work area recently curious evaluated language python node use case script get little tricky beyond certain size"
    },
    "19055":{
        "ID":24748,
        "MESSAGE_ID":"CALamADJW4vorGqauTJv3XVa9zhFG=nof7tF6Z1K3Jcavm5xTdQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.7 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "19056":{
        "ID":24747,
        "MESSAGE_ID":"CALamAD+yw8SjVhT1BNhWufrvFepRJrkO+BFJWpQvx9Nz-K3i-w@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.0.16 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "19058":{
        "ID":24745,
        "MESSAGE_ID":"CADoWKTAzGPY74c778-esTFfd-pk4tYxPhTpNYjdFsNBMV5c+fw@mail.gmail.com",
        "PARENT_ID":24744.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Vinayakumar B <vinayakumarb@apache.org>",
        "TAGS":"not-ak",
        "BODY":"idea maintenance release considering amount code change done trunk branch cherry picking may easy straight forward issue would love help cherry picking fix reviewing would also love help release process regard vinay"
    },
    "19059":{
        "ID":24744,
        "MESSAGE_ID":"82515C59-4E0E-4C9E-A6ED-EA3DBA94F5C0@altiscale.com",
        "PARENT_ID":24737.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"process",
        "BODY":"target someone verify cherry picked patch actually work jdk since pmc voted officially kill backward compatibility minor release going easier probably smarter fix really desired frankly id rather see effort spent stabilizing trunk ditching broken branch approaching year anniversary release later begat already past year mark hard claim health long since branch trunk cut turned something official kengo hard work getting multijdk testing working yetus quite ready prime time could certain help stable yet"
    },
    "19066":{
        "ID":24737,
        "MESSAGE_ID":"CALwhT97p2RRj9Ch0g1_Hk2sOUAop5DjQco5TQ8ga82Sc0YT9OQ@mail.gmail.com",
        "PARENT_ID":24733.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"process",
        "BODY":"thanks starting thread akira maintenance release stable upstream release avoids duplicating cherry pick work across consumer vendor show maturity project user see value backporting blocker critical issue mixed feeling major minor trivial issue going every commit non zero potential introduce bug depending kind fix say documentation might okay include non critical fix one approach could allow bug fix blocker critical blocker something along line ensure increasing stability maintenance release also committer picking rm duty maintenance release healthy people participate release process long method maintenance release madness committer yet pmc member could release manager vote binding release rm ed release committer rm ing release voting non binding could good way remind pmc include committer pmc cheer karthik"
    },
    "19067":{
        "ID":24736,
        "MESSAGE_ID":"CAGHyZ6+Ak3Kz+oygcGjQDXCh+m4qWhDdduVrkz4nYoNaGg6QGg@mail.gmail.com",
        "PARENT_ID":24733.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"maintenance release would excellent going make release line please consider backporting hadoop without hbase unusable top hdfs encryption inconvenient fix available non production release line sean"
    },
    "19070":{
        "ID":24733,
        "MESSAGE_ID":"CAAD07OKOgbsUDHKED12BV8HwDqTgiVQu04p_o4PxsEAvST60=Q@mail.gmail.com",
        "PARENT_ID":24732.0,
        "SUBJECT":"Re: [DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi akira thank starting interesting topic idea maintenance release old branch would good activity coupled apache yetus user way know one committers pmc release manager anyone know described detail follows url thanks tsuyoshi"
    },
    "19071":{
        "ID":24732,
        "MESSAGE_ID":"5587D8AD.9070306@oss.nttdata.co.jp",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] More Maintenance Releases",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"process",
        "BODY":"hi everyone hadoop summit joined hdfs bof heard jason lowe apache hadoop developer yahoo twitter non distributor work hard maintenance hadoop cherry picking patch branch want share work community cherry pick bug fix patch maintenance release would happy user also developer work hard stabilizing branch maintenance release propose two change major minor trivial bug fix cherry picked roughly monthly maintenance release would like start work branch change accepted community willing work maintenance release manager best regard akira"
    },
    "19104":{
        "ID":24699,
        "MESSAGE_ID":"CAGHyZ6+vNJrRspstWHFPxjnpyO1ctn0Ec037k8TOUSxO9ZYHDg@mail.gmail.com",
        "PARENT_ID":24650.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"process",
        "BODY":"look like consensus start drafting proposal next board meeting july th work name submit podlingnamesearch jira track due diligence whatever pick mean time hadoop pmc would willing host branch start prepping thing would want branch commit right proposed new pmc sean"
    },
    "19119":{
        "ID":24684,
        "MESSAGE_ID":"CADPoNvyk=BK81TnhJJ3qOaCahWwuJM9jsDbTNY-YhyNFdG6gNQ@mail.gmail.com",
        "PARENT_ID":24679.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Ray Chiang <rchiang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"word beginning yale mythical animal elephant boar quick googling apparently originally documented pliny elder got beer related connotation downside might get confused university name yare adj quick agile lively yucca noun plant elephant could eat yair scottish term fish trap also hebrew name enlighten ray"
    },
    "19124":{
        "ID":24679,
        "MESSAGE_ID":"8CA4B1BA-3DA5-4884-8EC9-CF9EBCE63A2B@hortonworks.com",
        "PARENT_ID":24675.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"apache youbrokethebuild would thought yeti couple software project product called already complete list thing live alongside elephant tanzania nothing beginning url pick one list may photo slide"
    },
    "19128":{
        "ID":24675,
        "MESSAGE_ID":"CAGHyZ6KtVz9Dp8eC_sf1=6gFb4bzd-SyHXO6AzfJaYnYj5mNUw@mail.gmail.com",
        "PARENT_ID":24673.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"process",
        "BODY":"going try responding several thing apology miss anyone sorry long email"
    },
    "19130":{
        "ID":24673,
        "MESSAGE_ID":"E6913645-1E51-48A2-AF2C-433E45618064@hortonworks.com",
        "PARENT_ID":24669.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"think good general build test process project share pulling get help others regarding incubation lot work especially something house tool artifact release redistribute use apache lab build project repo work want incubate may want nominate hadoop project monitoring pmc rather incubator steve"
    },
    "19134":{
        "ID":24669,
        "MESSAGE_ID":"2C3CADA4-3F36-4D47-8008-43CE80E28D38@altiscale.com",
        "PARENT_ID":24668.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"process, technology",
        "BODY":"since couple people brought think release question probably one big question mark tar ball something like actually get used downstream test patch particular thought short term project want move right would modify jenkins job checkout yetus repo preferably well known tag branch one directory project repo another directory matter passing correct flag test patch pretty much personally running test patch month jenkins seen work nifi incubating already create stub version test patch project could check repo replacing existing test patch stub version would git clone either asf github execute test patch accordingly demand correct smart could make sure cached version prevent continual clone longer term toying idea ab using java repos packaging transportation layer either addition combination something like maven plugin something like would clearly better offline usage lower network traffic probably worth pointing plugins get sucked outside yetus dir structure project specific bit remain project would mean ambari decides want change dependency ordering ambari metric always get built first completely doable without yetus project getting involved particularly relevant thing like dockerfile project would almost certainly want dictate build test time dependency"
    },
    "19135":{
        "ID":24668,
        "MESSAGE_ID":"CAAD07OKVqPaea=nS-wcUGPudVKCtvV4tnCqZRxGa-ZVpu9eSrQ@mail.gmail.com",
        "PARENT_ID":24650.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"existence",
        "BODY":"idea would great test dependency management multiple branch distributed environment done project one discussion point hadoop depends yetus including development cycle good time rethink done making hadoop better thanks tsuyoshi"
    },
    "19136":{
        "ID":24667,
        "MESSAGE_ID":"CANZa=GuRa71KZbL7aD2KHrte8pSvPW-Ur+yVJ5Mzcyz4pvYvHg@mail.gmail.com",
        "PARENT_ID":24650.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Nick Dimiduk <ndimiduk@apache.org>",
        "TAGS":"existence, technology",
        "BODY":"think great idea gone process getting phoenix speed precommits would really nice place go fork hack someone else work project recently integrated first daemon service meant adding bunch servicy python code multi platform support required sort trust would great explicit resource kind thing ecosystem expect calcite kylin following along shortly since tossing name apache bootstrap meta project help project get ground"
    },
    "19138":{
        "ID":24665,
        "MESSAGE_ID":"CAEhbgSLM67xFEEqOw42rooYidAOMk7Y+RZ-9YVO1rcWgjFALWA@mail.gmail.com",
        "PARENT_ID":24657.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Kengo Seki <sekikn@gmail.com>",
        "TAGS":"property",
        "BODY":"user viewpoint recent improvement test patch made work really efficient example quick feedback due avoiding unnecessary test automated build environment setup due docker support automated patch download jira automated shellcheck whitespace checker etc believe worth spreading idea tlp project problem long qa process gmt chris douglas"
    },
    "19146":{
        "ID":24657,
        "MESSAGE_ID":"CACO5Y4y9esaPCgTn16dx9vh83A+_btL_HnQrHdZNSO2F=MvVbA@mail.gmail.com",
        "PARENT_ID":24650.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"existence",
        "BODY":"separate project sound great would great standard tooling across ecosystem practical matter project consume release"
    },
    "19147":{
        "ID":24656,
        "MESSAGE_ID":"D1A50244.24F32%cnauroth@hortonworks.com",
        "PARENT_ID":24655.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"process",
        "BODY":"zookeeper another project expressed interest improving pre commit process lately understand allen success applying zookeeper build small caveat around quirk build xml think resolve interested defining release model work project like current model forking checking directly multiple project lead fragmentation bug described earlier thread another possible model something dynamic like bootstrap script capable checking release git tag launching pre commit interested hear various project would like integrate chris nauroth"
    },
    "19148":{
        "ID":24655,
        "MESSAGE_ID":"557F9EC0.2080104@apache.org",
        "PARENT_ID":24654.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Josh Elser <elserj@apache.org>",
        "TAGS":"existence",
        "BODY":"talking sean private subject seems appropriate voice public support would interested accumulo slider accumulo come far way without pre commit build primarily due ctr process seen repeated question run test automated workflow would help going think slider could benefit reason would also giddy see recent improvement hadoop trickle project allen already mentioned take record would happy try help possible sean busbey wrote"
    },
    "19149":{
        "ID":24654,
        "MESSAGE_ID":"CAGHyZ6+rP4oLa2WiNNZ=giewqkW+KKt8NfSJb3zkJaZJz03EjA@mail.gmail.com",
        "PARENT_ID":24653.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"existence",
        "BODY":"thank making digestible version allen interested soliciting feedback project created asf short link thread common dev hbase url url agree important get feedback asf project might find useful say recently involved non asf project ycsb pretest better stuff would immensely useful"
    },
    "19150":{
        "ID":24653,
        "MESSAGE_ID":"2B4EB033-08FE-4613-8FBB-CE1FC64F100E@altiscale.com",
        "PARENT_ID":24650.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"existence, technology",
        "BODY":"clearly idea part rewrite hadoop test patch amazing see far wide bit code spread see consolidating everyone effort huge win large number project esp considering many saw suffering variety identified bug think important people involved project speak voice opinion whether useful summarize short term single location get use precommit patch tester rather everyone building supporting spare time fwiw already got code base modified pluggable written basic simple plugins support hadoop hbase tajo tez pig flink hbase flink include custom check adding support project hard simple project take almost time seeing basic pattern think worthwhile highlighting mean support jira github well ant maven code base longer term well clearly idea thing want adding feature test patch review board gradle obvious teasing apart generalizing bit project common library building cli tool fault injection release documentation creation tool would even like see get advanced run program auto generate daemon stop start bit chat people idea hadoop summit truly exciting idea people realized kind problem trying solve always amazing problem project could solved type solution let stop hiding cool toy area feedback idea area yay nay"
    },
    "19153":{
        "ID":24650,
        "MESSAGE_ID":"CAGHyZ6+7Bzn4pObODRztGy4xbw=QTAqd38YEn5iUprud2NR++Q@mail.gmail.com",
        "PARENT_ID":24596.0,
        "SUBJECT":"Re: [DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"existence, technology",
        "BODY":"oof meant push life got way june board meeting upon sorry everyone event end contentious hopefully one copied community give branch work know everyone busy short version email would like move code currently hadoop test patch new tlp focused qa tooling sure best format priming conversation orc filled incubator project proposal template sure much confused issue start write hoping accomplish general term software development project community based accepting outside contribution face common qa problem vetting coming contribution hadoop fortunate enough sufficiently popular weight problem drove tool development test patch tool generalizable enough bunch tlps adopted fork unfortunately project kind qa work enabler rather primary concern often tooling worked ad hoc little shared improvement happen across project since tooling never primary concern made rarely reused outside asf project last couple month working generalizing tooling present hadoop code base mature various project reached point think start bringing downstream user mean need start establishing thing like release cadence grow new contributor handle project responsibility personally think mean time move hadoop drive thing community eventually hope community help draw group folk traditionally underrepresented asf project namely qa operation folk think test patch enough scope justify project solid set build tool customizable fit norm different software community bunch work making work well context automated test system like jenkins individual developer even work could easily also take maintenance thing like shelldocs since test patch primary consumer currently generally useful tooling addition test patch think proposed project future growth potential given adoption test patch prove utility project could build tie make start building tool help project longer run testing note talking tool build qa process particular set tested component specifically think chaosmonkey work hbase generalizable fault injection framework either based code something like arbitrary software obviously difficult part easing make favor tooling allow project operational glue look namely work done hadoop function sh would great foundational layer could bring good daemon handling practice whole slew software project event framework tool get adopted part hadoop ecosystem could make job bigtop substantially easier reached folk involved current test patch work expressed interest helping getting used project right proposed pmc would alphabetical last name andrew bayer asf member incubator pmc bigtop pmc flume pmc jclouds pmc sqoop pmc around jenkins expert sean busbey asf member accumulo pmc hbase pmc nick dimiduk hbase pmc phoenix pmc chris nauroth asf member incubator pmc hadoop pmc andrew purtell asf member incubator pmc bigtop pmc hbase pmc phoenix pmc allen wittenauer hadoop committer pmc give several member bunch folk familiar asf combined code already existing apache space think give sufficient justification direct board proposal planned project name apache yetus archaic genus sea snail project focused script mean hadoop community would rely new tlp hope release evaluated would enough benefit strongly encourage mostly focused scope community issue would love talk feedback additionally point folk want make sure covered resolution"
    },
    "19189":{
        "ID":24614,
        "MESSAGE_ID":"D19F7FA2.397C8%nramesh@linkedin.com",
        "PARENT_ID":null,
        "SUBJECT":"Ordering of ResourceRequest handling in the RM",
        "SENT_FROM":"Navina Ramesh <nramesh@linkedin.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"hi yarn devs trying utilize yarn host affinity feature apache samza samza question regarding order resource request executed rm today make successive request say container deploying samza job look like request container hostx request container hosty request container hostz implementing callback oncontainerallocated samzaappmaster associate allocated container corresponding containerrequest way yarn associate allocated container request correct assume rm handle request fifo manner hence order oncontainerallocated callback invoked request order information useful samza implement host affinity deployment model please let know thanks navina"
    },
    "19201":{
        "ID":24602,
        "MESSAGE_ID":"CALamADLF3eToSF6hAbQ2XU6DvVZu=gX8VfXDjWdy0G_a5zORvw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.2.0-rc1 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version rc apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version release candidate series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "19207":{
        "ID":24596,
        "MESSAGE_ID":"CAGHyZ6JeGJxE-9+isD6Ng5LMc7nQeGnmOWFb_SGPTsdZRK7yxA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] project for pre-commit patch testing (was Re: upstream jenkins build broken?)",
        "SENT_FROM":"Sean Busbey <busbey@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"sorry resend figured deserves discus flag"
    },
    "19364":{
        "ID":24439,
        "MESSAGE_ID":"CALamADKQZY+RSAkgs-n8BdZEP8HWYXu5Zui4RdKZgcCuagOMWg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.0.15 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "19617":{
        "ID":24186,
        "MESSAGE_ID":"CALamADJ_R_w0v4kHZQZGLwuSoenaC54NxKUXP4eSM61GvLEy4Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.5 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "19661":{
        "ID":24142,
        "MESSAGE_ID":"D15FCFA5.20640%cnauroth@hortonworks.com",
        "PARENT_ID":24138.0,
        "SUBJECT":"Re: fsck output compatibility question with regard to HDFS-7281",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"allen thank calling aware part compatibility guideline committed one fsck change hdfs see flagged issue incompatible agrees compatibility guideline changing path command removing renaming command line option order argument command return code output break compatibility may adversely affect user intuitively make sense even ignorant compatibility guideline would known push back patch change path remove rename existing option change order argument hdfs example output change find part compatibility guideline much challenging need able evolve cli output within release line"
    },
    "19668":{
        "ID":24135,
        "MESSAGE_ID":"CAA0W1bRq8M=x_1RrF6-i4NnXJOqJRZGJZW6LHe+Stv3CXsMdxg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"fsck output compatibility question with regard to HDFS-7281",
        "SENT_FROM":"Yongjun Zhang <yzhang@cloudera.com>",
        "TAGS":"existence",
        "BODY":"hi hdfs making change fsck report change corrupt file missing block missing size corrupt block default replication factor average block replication corrupt block missing replica number data node number rack fsck ended tue apr edt millisecond change corrupt file missing block missing size corrupt block corrupt size default replication factor average block replication missing block corrupt block missing replica number data node number rack fsck ended tue apr edt millisecond basically adding two additional line report highlighted theoretically tool par existing fsck report expects corrupt block entry right average block replication entry change would fail tool really concern guess really concern think change incompatible would anyone please comment thanks way thanks ming reporting working issue yongjun"
    },
    "19791":{
        "ID":24012,
        "MESSAGE_ID":"DC50631822150346AFC9838FC02283552C152028@xmb-aln-x01.cisco.com",
        "PARENT_ID":24006.0,
        "SUBJECT":"RE: 3.0 and the Cassandra release process",
        "SENT_FROM":"\"Chuck Allen -X (charlall - RANDSTAD NORTH AMERICA LP at Cisco)\"\t<charlall@cisco.com>",
        "TAGS":"not-ak",
        "BODY":"yea bgl green without impending risk additionally yellow project lwr mtv path lead green coming week folk"
    },
    "19797":{
        "ID":24006,
        "MESSAGE_ID":"CALdd-zjs9-kc4qVV5tr8-VTF3rhjUSsh_EZWNPJh8uuzAdqp7A@mail.gmail.com",
        "PARENT_ID":24003.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"process",
        "BODY":"short answer yes longer answer pasted reply jon haddad elsewhere thread moving away designating major release like special marker compatibility fact moving away major release entirely release much smaller digestible unit change ultimate goal every even release production quality mean bug pile compound bug slip affect le user stabilizes people try release yielding better quality yielding even people trying virtuous cycle happen wishing serious investing energy would spent backporting fix stable branch improving qa process test coverage short list progress feature may make cutoff come mind willing virtually pause new feature development entirely make happen"
    },
    "19800":{
        "ID":24003,
        "MESSAGE_ID":"CA+7gEcg2mphE9XwF9XhOZn1qPQC87R1Q2NY=P_r=XOHQLYH-3Q@mail.gmail.com",
        "PARENT_ID":23988.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Phil Yang <ud1937@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi jonathan long tick tock release maintained user upgrade new even release new feature fix bug older even release gmt jonathan elli thanks phil yang"
    },
    "19912":{
        "ID":23891,
        "MESSAGE_ID":"C14CB4D0-E14D-45F2-B19F-BCD6A1B4DD5D@clark.ws",
        "PARENT_ID":23890.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Colin <colin@clark.ws>",
        "TAGS":"not-ak",
        "BODY":"hey jonathan hoping approach year one reason left datastax due feeling quality always backburner never really taken seriously marketing driven release sincerely hope approach revers perceived trend colin skype colin clark"
    },
    "19913":{
        "ID":23890,
        "MESSAGE_ID":"CALdd-zh+GoPJkwPjT=EmCEFB8M_up_mTeDrknZM13YvCBV6heQ@mail.gmail.com",
        "PARENT_ID":23889.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"process",
        "BODY":"moving away designating major release like special marker compatibility fact moving away major release entirely release much smaller digestible unit change ultimate goal every even release production quality mean bug pile compound bug slip affect le user stabilizes people try release yielding better quality yielding even people trying virtuous cycle happen wishing serious investing energy would spent backporting fix stable branch improving qa process test coverage short list progress feature may make cutoff come mind willing virtually pause new feature development entirely make happen patience necessary first release point people used six month waiting new major stabilize let give try still materially stabilized need go back drawing board optimistic"
    },
    "19914":{
        "ID":23889,
        "MESSAGE_ID":"CACUnPaAS0N=E7TiMYd0h_=O-1DuoaQ8z15-9OGjA650Z8aYX5g@mail.gmail.com",
        "PARENT_ID":23843.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"tick tock cycle still long term release maintained meant production bug fix back ported stable new stuff going forward"
    },
    "19930":{
        "ID":23873,
        "MESSAGE_ID":"1037E90A-EB23-455B-A9B1-FAC25CADD3F5@datastax.com",
        "PARENT_ID":null,
        "SUBJECT":"March 2015 QA retrospective",
        "SENT_FROM":"Ariel Weisberg <ariel.weisberg@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hi time first retrospective familiar part development process discus working come making reliable release go thing worked thing work change going make forum discussing individual bug bug fixed release due successful process although cite one discus could done differently catch even bug released caught wrong way blind luck think process would caught bring well expect retrospective productive already know far behind several area passing utests dtests running utests dtests commit running larger black box system test many issue circle back around addressed one three developer review thing committed reviewed past month ask met criterion done agreed including adding test existing untested code usually thing missed better discovering definition done flawed released preventible bug one retrospective reach back something already released feel passionate point utest dtest caught still missing add list thing test would go cassandra triage missing test coverage root jira making trunk always releasable lot fall cassandra run stress nightly trunk way validates root new kitchen sink style test validates entire feature set together black box fashion philip thompson basic job running close tipping point doneness criterion every ticket need include making sure job cover thing added changed going add coverage need justify reviewer breaking something separate file jira indicating coverage missing one already exist make sure link see already reported reason say might tipping point job ironed stress something new act container validating multiple feature especially environment thing like cluster node failure topology change occur retrospective supposed include preceding paragraph funnel discussion separate email thread retrospective solicit information push information went well positive response definition done lot manpower qa progress test infrastructure went poorly wanting add validation kitchen sink style test able yet way know effectively implementing definition done without waiting bug feedback change coordinate philip thompson see get developer able add validation kitchen sink style test regard ariel"
    },
    "19935":{
        "ID":23868,
        "MESSAGE_ID":"7C7B9A9B-E432-4C80-A8B2-C77C37158D83@code-house.org",
        "PARENT_ID":23867.0,
        "SUBJECT":"Re: [discuss] Modernization of Cassandra build system",
        "SENT_FROM":"\u0141ukasz Dywicki <luke@code-house.org>",
        "TAGS":"not-ak",
        "BODY":"hey tyler thank much coming back already lost faith get reply fine code relocation moving constant one place circular dependency cool thing currently cassandra us ant maven functionality deploying pom xml repository dependency information us also maven type artifact repository easily flipped maven call ant task part made existing maven plugins simplest example url see ant task definition embedded maven pom xml thing made moment via maven plugins apache rat plugin url maven thrift plugin url antlr maven plugin url antlr maven plugin url maven gpg plugin url maven cobertura plugin url day jacoco java agent instrumentation perfoms better already made evaluation impact big code separated different source root easy even keeping current artifact structure cassandra cassandra thrift clientutil cyclic dependency prepare src root dependency declared push cassandra fork able verify continue relocation like new build creating new module source root maven simple could possibly extract predefined artifact package root let know interested kind regard lukasz"
    },
    "19936":{
        "ID":23867,
        "MESSAGE_ID":"CAAam9suy6DtnrdERh5qq5SnpjXv7x1Vxyjh0tbpE4msUBJJyMQ@mail.gmail.com",
        "PARENT_ID":23830.0,
        "SUBJECT":"Re: [discuss] Modernization of Cassandra build system",
        "SENT_FROM":"Tyler Hobbs <tyler@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hi ukasz familiar build system try respond serializer dependency classpath almost certainly us server current version server version constant represent native protocol version use affect certain type serialized constant could easily moved marshal dependency mapserializer abstracttype could easily replaced java util comparator case necessarily opposed improving build system make error apparent would proposal still allow build ant change way artifact built"
    },
    "19946":{
        "ID":23857,
        "MESSAGE_ID":"CA+qbEUO20OARhDuA1OtuXqowrjRc2HKDArrS0x0owQ2k+iqKHQ@mail.gmail.com",
        "PARENT_ID":23854.0,
        "SUBJECT":"Re: Hadoop Common: Why not re-use the Security model offered by SELINUX?",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"technology",
        "BODY":"atm steve already commented selinux really comparable existing hadoop security framework two thing different function hadoop security framework need deal authenticating user network managing kerberos active directory using abstraction like authentication token perform remote auth selinux work single node context set constraint action daemon perform essentially detailed list rule list rule go beyond traditional posix permission model even posix extended attribute feel selinux policy hadoop could provide defense depth certain case however realize thing lot linux security vulnerability kernel level vulnerability selinux mitigate give bad guy ability run arbitrary code linux box pretty likely get rooted something like cve cve etc without selinux selinux policy complex need change time daemon behavior configuration change reason usually maintained linux distribution maintainer software maintainer almost impossible write reasonable selinux policy arbitrary yarn job know job need hard write detailed list rule something arbitrary user defined behavior hadoop written java compromising hadoop daemon buffer overflow etc biggest threat probably compromise pretty much cf area colin"
    },
    "19949":{
        "ID":23854,
        "MESSAGE_ID":"BAEB161C-31BF-41A3-BDDB-C2AD09ACF55B@hortonworks.com",
        "PARENT_ID":23853.0,
        "SUBJECT":"Re: Hadoop Common: Why not re-use the Security model offered by SELINUX?",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"selinux nothing hadoop cluster security data layer tool top lock system provide better data governance thing come tainted merging sensitive data etc etc could good allow hadoop node secure intranet another layer defense depth story standard linux service system ssh ntpd get compromised damage partially limited home server selinux enforced example reduce impact anything malicious trying run yarn scheduled app moot kerberos whole hdfs visible se linux could restrict damage privilege esclated yarn job could local host still reasonably confident given ability run container hadoop cluster hour could portscan intranet smb sharepoint host execute enough tcp open connection overload service getting hadoop run selinux think mainly lazy going keep hadoop stored data safe lock network apps help mitigate intentional unintentional damage hadoop code intranet rest organisation aw nicholas attest damage running network traffic cpu intensive code taking network power supply rest datacentre"
    },
    "19950":{
        "ID":23853,
        "MESSAGE_ID":"CACVCA=f5S=De=-CsqqAN0zpJ4Tc36nELmBVVCrXBJtLBeU1SoQ@mail.gmail.com",
        "PARENT_ID":23847.0,
        "SUBJECT":"Re: Hadoop Common: Why not re-use the Security model offered by SELINUX?",
        "SENT_FROM":"jay vyas <jayunit100.apache@gmail.com>",
        "TAGS":"technology",
        "BODY":"tool like freeipa synergistic first step road making hadoop enterprise friendly example let freeipa manage user kerberos pave way road selinux well since tool able work together think general hadoop work linux community rather rebuilding solution easier integrate broader broader deployment theory working run selinux hadoop together probably win win"
    },
    "19956":{
        "ID":23847,
        "MESSAGE_ID":"CA+4052n47_3nG=ZLFjWZi3hb6gZF7yQ4qhgFu6P+w_7dvmZong@mail.gmail.com",
        "PARENT_ID":23845.0,
        "SUBJECT":"Re: Hadoop Common: Why not re-use the Security model offered by SELINUX?",
        "SENT_FROM":"\"Aaron T. Myers\" <atm@cloudera.com>",
        "TAGS":"technology",
        "BODY":"addition everything allen already said entirely agree also point much focus hadoop security related authentication somewhat recently providing advanced authorization capability readily admit knowing much se linux capability impression would much able help authentication within hadoop hence would realistic option hadoop security work started many year ago aaron myers software engineer cloudera"
    },
    "19958":{
        "ID":23845,
        "MESSAGE_ID":"9FCB101B-6702-4B19-B0F9-AA96DF0123F1@altiscale.com",
        "PARENT_ID":23844.0,
        "SUBJECT":"Re: Hadoop Common: Why not re-use the Security model offered by SELINUX?",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"technology",
        "BODY":"hadoop started year ago first started getting security bit place year ago se linux immature extremely broken many way still true like lot linux commercial competitor plus considering hadoop written java never made sense integrate hadoop tightly interface also worth pointing se linux also help protecting thing inside hdfs since user land file system mounted vfs layer number contortion required get support would interesting time progressed project evolved someone might interested exploring possibility worth pointing large portion hadoops security model pluggable would like take work feel free"
    },
    "19959":{
        "ID":23844,
        "MESSAGE_ID":"OFDBEB3F48.6F017196-ON65257E14.004D6060-65257E14.005102D7@tcs.com",
        "PARENT_ID":23842.0,
        "SUBJECT":"Re: Hadoop Common: Why not re-use the Security model offered by SELINUX?",
        "SENT_FROM":"Madhan Sundararajan <madhan.sundararajan@tcs.com>",
        "TAGS":"technology",
        "BODY":"allen unlike unix veteran however used hadoop briefly observed anomaly yes highlighted applicable non linux platform hadoop security layer made use selinux policy remote policy server ease application policy centralised policy server hadoop made use role based access control provided selinux addition hadoop daemon subjected fine grained access policy selinux use linux server resource regard madhan sundararajan devaki tata consultancy service limited kumaran nagar sholinganallur old mahabalipuram chennai tamil nadu india cell mailto madhan sundararajan tc com website url experience certainty service business solution consulting allen wittenauer common dev hadoop apache org date pm subject hadoop common use security model offered selinux would propose use selinux feature support security especially distributed manner client might different administrative control non linux platform hadoop run"
    },
    "19960":{
        "ID":23843,
        "MESSAGE_ID":"CANeABpfyiJymCFw-1nbi4xjGELSPfzmQOhhPKOnBHZZOVtsH-Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"process",
        "BODY":"hey jason think pretty much everybody board monthly release cycle keeping trunk releasable time personal tick tock mechanism detail bug fix policy maintained stable line fleshed proceed believe explained better concern mostly entirely go away ay"
    },
    "19961":{
        "ID":23842,
        "MESSAGE_ID":"B631F6BF-DED1-485F-B62D-D5A80CF0237C@altiscale.com",
        "PARENT_ID":23841.0,
        "SUBJECT":"Re: Hadoop Common: Why not re-use the Security model offered by SELINUX?",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"technology",
        "BODY":"would propose use selinux feature support security especially distributed manner client might different administrative control non linux platform hadoop run"
    },
    "19962":{
        "ID":23841,
        "MESSAGE_ID":"OF4E0A1A35.93BC2FCD-ON65257E14.003ADB0B-65257E14.003B2B99@tcs.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop Common: Why not re-use the Security model offered by SELINUX?",
        "SENT_FROM":"Madhan Sundararajan <madhan.sundararajan@tcs.com>",
        "TAGS":"technology",
        "BODY":"team selinux introduced bring robust security management linux distribution hadoop cloudera hortonworks one pre installation checklist item disable selinux node cluster use security model offered selinux setting instead inventing scratch sentry knox etc regard madhan sundararajan devaki tata consultancy service limited kumaran nagar sholinganallur old mahabalipuram chennai tamil nadu india cell mailto madhan sundararajan tc com website url experience certainty service business solution consulting notice information contained mail message attachment may contain confidential privileged information intended recipient dissemination use review distribution printing copying information contained mail message attachment strictly prohibited received communication error please notify reply mail telephone immediately permanently delete message attachment thank"
    },
    "19973":{
        "ID":23830,
        "MESSAGE_ID":"287F5EBC-3C2E-44FE-B652-D0A267646ABF@code-house.org",
        "PARENT_ID":null,
        "SUBJECT":"[discuss] Modernization of Cassandra build system",
        "SENT_FROM":"\u0141ukasz Dywicki <luke@code-house.org>",
        "TAGS":"technology",
        "BODY":"dear cassandra commiters development process follower would like bring important topic build process cassandra external user community point view however walking around various project close cassandra past year even worrying lot cassandra publishing artifact many problem reported due first want note born enemy ant never used also aware problem custom build made maven however really want discus particular replacement yet want note cassandra jira project contains issue related somehow maven url project cassandra text maven depends point view might lot little simple statistic around issue year almost issue month many breaking maintanance major release user point view hand bad considering project built current structure big disadvantage one source root multiple artifact published maven repository copying class jar compiled obviously ant copy task follow import statement include dependant class example making test relocation extraction clientutil jar master branch separate source root found bug listserializer depends classpath package clientutil mapserializer depends classpath package leading fact used without cassandra present classpath luckily cassandra cql new interface reduces thrift clientutil usage reducing amount issue reported around however hide real problem previous paragraph found handy tool made graph circular dependency cassandra jar graph result found url see graph multiple level solving simple task afraid current way building packaging cassandra create huge hiccup come code rafactorings entire cassandra become house card restructuring project smaller piece also beneficiary community since solving bug smaller unit definitelly easier end mail would like propose moving cassandra build system forward regardless tool choosen personally volunteer maven related change extract cassandra thrift cassandra clientutil cassandra make regular maven build might seen switch one big xml couple smaller depends cassandra developer decission devide source root kind regard ukasz dywicki luke code house org twitter ldywicki blog url code house url"
    },
    "19974":{
        "ID":23829,
        "MESSAGE_ID":"5511AF71.2030508@gmail.com",
        "PARENT_ID":23717.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Chris Burroughs <chris.burroughs@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"broadly contributor operator like idea frequent release always stable master first customer ship quality time little concerned specific tick tock proposal could devolve devodd style feature release becomes thing one want run production however master always stable really matter release cut master stable larger problem detail release cadence say give shot url"
    },
    "19991":{
        "ID":23812,
        "MESSAGE_ID":"CAHjqPuJ+QFuqB3eusbr1=tndvdBLyBNC3Dkhw-YP465zUwAh0w@mail.gmail.com",
        "PARENT_ID":23809.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hey hallway conversation folk last week expressed concern proposal attempt summarize argument believe could ample justice strongly encouraged individual speak heard thread know watching thanks jason"
    },
    "19994":{
        "ID":23809,
        "MESSAGE_ID":"CAGa65S3WsfH+J-AKNY9CF3QEjyC+w3nHccuGUK52Ev1V_jzEQA@mail.gmail.com",
        "PARENT_ID":23782.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"\u66f9\u5fd7\u5bcc <cao.zhifu@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ranger tsao gmt ryan mcguire"
    },
    "20021":{
        "ID":23782,
        "MESSAGE_ID":"CAPKffWu5ZhquFyEuZGuNeea8gexvEwu=MQH_9cZv1C1nAsbOkg@mail.gmail.com",
        "PARENT_ID":23760.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Ryan McGuire <ryan@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"taking note infrastructure doc wrote action item team url image datastax logo png ryan mcguire software engineering manager test ryan datastax com image linkedin png image twitter png thu mar pm ariel weisberg ariel weisberg datastax com"
    },
    "20024":{
        "ID":23779,
        "MESSAGE_ID":"CAEj1Ex6qjRGr2B8ZP=FgeHLtXqSH5StkW9F_HpQCLoU5D+Lb9w@mail.gmail.com",
        "PARENT_ID":23777.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jihun Kang <ykrips@gmail.com>",
        "TAGS":"existence",
        "BODY":"first considering support http scheme rest api however implementing rest api task pretty much bigger expected decided separate two http http scheme support http support uploaded near future tajo task finished later one look like implementing authentication rest api also considering http basic auth using http token based authentication decide yet selecting authentication method would affected future implementation security module gmt dongjoon hyun"
    },
    "20026":{
        "ID":23777,
        "MESSAGE_ID":"CAFu6yH072rD-hi8if0CGue-smHxgEA8XCb9xXLoNegn9JmkZkA@mail.gmail.com",
        "PARENT_ID":23776.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Dongjoon Hyun <dongjoon@apache.org>",
        "TAGS":"existence",
        "BODY":"great two question sure think already supporting http together supporting optional password request message supporting future proof username tajo user userpassword password databasename default warmly dongjoon"
    },
    "20027":{
        "ID":23776,
        "MESSAGE_ID":"CAEj1Ex68o6njm3W4fwKnHP+3ybHGWUYrrpm+jFYU9+P45zVcRQ@mail.gmail.com",
        "PARENT_ID":23701.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jihun Kang <ykrips@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hello tajo rest api design page created tajo wiki page please feel free give comment design find detail following link url gmt hyunsik choi"
    },
    "20043":{
        "ID":23760,
        "MESSAGE_ID":"CAEUE-qFiggpP-RAuyNg1uRhaCSUpg1rLLwO_-5oXGGPTkztmKA@mail.gmail.com",
        "PARENT_ID":23757.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Ariel Weisberg <ariel.weisberg@datastax.com>",
        "TAGS":"process",
        "BODY":"hi realized one document send infrastructure side change looking one maybe little rougher first one wrote subject url goal infrastructure give developer close immediate feedback possible code merge feedback delayed merging trunk come day two product owner michael shuler responsible making sure issue addressed quickly qa going help providing developer better tool writing higher level functional test explore function together along configuration space without developer work plugging functionality exercise validate something specific kind harness hard get right make reliable expressive work cut going iterative process test improve new work introduces missing coverage bug regression drive introduction new test monthly retrospective planning first month also going help refine testing development process ariel"
    },
    "20046":{
        "ID":23757,
        "MESSAGE_ID":"CAHjqPuJHTQ0BuiF-nJKYzO+ht9yKsXy0Mw6WYLT7BGRmF2kBjg@mail.gmail.com",
        "PARENT_ID":23756.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"general proposal think time finally come try something new sound legit thanks"
    },
    "20047":{
        "ID":23756,
        "MESSAGE_ID":"CA+7gEchfMOpK6a=A8Niu1Ry=MnmLj_MTovjd16AY=FCBwTKyTA@mail.gmail.com",
        "PARENT_ID":23751.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Phil Yang <ud1937@gmail.com>",
        "TAGS":"process",
        "BODY":"regard odd version development preview even version production ready going database infrastructure project stable important kind project lts good idea support non lts release enough time fix bug user non lts release may upgrade new major release fix bug may handle new bug new feature afraid eventually people would think lts one gmt pavel yaskevich thanks phil yang"
    },
    "20055":{
        "ID":23748,
        "MESSAGE_ID":"EBF0FFED-AF9D-4B77-B9E8-C475ED64EE82@internalcircle.com",
        "PARENT_ID":23746.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"process",
        "BODY":"life lived software bleeding edge personally professionally maybe personal weakness guess get thrill problem solving aspect recently came bit epiphany closer keep daily build generally happier daily basis bug happen part aside show stopper bug pain point given daily build generally debugged maybe root cause fixed hour life better next day comparison old waterfall model generally mean taking official release point waiting poor soul developer actually run thing matter good qa team actually used real world bug found organization wait hour number bug discovered people actually started using thing end usable build around holy grail minor release cassandra love idea lts model jonathan describes mean code get real testing bake longer instead sitting largely unused git repository datacenter far far away lot code changed trunk today code diverged point write something stable major branch currently available merging forward generally mean rewriting thing come smaller delta loc deployable version branch develop qa focused think massive win something like cassandra need baking time even many risky change project made would want run build cassandra anytime soon hundred change blocked likely many containing new bug exposure even involved developer really think huge win project super thankful sylvian ariel jonathan aleksey jake guiding change much sustainable release model entire community best kjellman"
    },
    "20057":{
        "ID":23746,
        "MESSAGE_ID":"9C5281E6-9952-4762-95D4-0D20B25D4667@datastax.com",
        "PARENT_ID":23744.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Ariel Weisberg <ariel.weisberg@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"hi keep mind bug fix release every month feature release every two month development really two month cycle bug fix backported one release developer want get something release two month sizing piece large task ship least every two month ariel"
    },
    "20058":{
        "ID":23745,
        "MESSAGE_ID":"68A8789E-9BA2-498A-A8B9-D1CC1D2B8412@datastax.com",
        "PARENT_ID":23741.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Ariel Weisberg <ariel.weisberg@datastax.com>",
        "TAGS":"process",
        "BODY":"hi long lived feature branch already thing orthogonal going release frequency goal developer implement larger feature smaller tested component already shipped time mean working le destructive fashion always ship working implementation everything mixed bag developer able put work trunk faster know merge impact change emphasizing jenkins run commits trunk branch want testing performed branch close testing performed trunk something merged trunk want tested going get within day two part releasing frequently getting away relying developer tester running thing moving towards automated testing exercise database way user expectation correctness also address process issue causing test demonstrate trunk releasable regular basis ariel"
    },
    "20059":{
        "ID":23744,
        "MESSAGE_ID":"CANgLLXj=1i0AO-gBN4FYrXZT4U3bb8OcKC+gLG__y4zBKjVZfQ@mail.gmail.com",
        "PARENT_ID":23741.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Terrance Shepherd <tscanausa@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"like idea agree every month bit aggressive say would say release year instead month new feature month bug squashing per release th quarter bug would also proposed year lts release release th quarter everyone could get new feature release every quarter stability super major version year"
    },
    "20062":{
        "ID":23741,
        "MESSAGE_ID":"3de6513e7b954658ccfa46c9656518f2@baybroadband.net",
        "PARENT_ID":23736.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Dave Brosius <dbrosius@mebigfatguy.com>",
        "TAGS":"process",
        "BODY":"would seem practical implication would significantly development branch potentially significant delay merging branch would imply jenkins server would need set handle auto testing branch feature work spends time external branch likely le tested even accident le developer would working branch feature blessed make release tracked branch would become exposed majority developer tester etc normal running playing testing knock idea anyway wanted mention think outcome would dave"
    },
    "20067":{
        "ID":23736,
        "MESSAGE_ID":"CACUnPaCxoLhVuhV1DdVsaVWsRGydsj3hjaagJ+Rs+9Mvdnp3jw@mail.gmail.com",
        "PARENT_ID":23731.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Jonathan Haddad <jon@jonhaddad.com>",
        "TAGS":"process",
        "BODY":"every release bug fix release would versioning go feature release bug fix release eventually seems like might possible able push bug fix release frequently month"
    },
    "20074":{
        "ID":23729,
        "MESSAGE_ID":"CALTRSKkNCVxXrH_j_MB0Wfh4XjZC4wBYh4Qp1SXaD63i9m5e8A@mail.gmail.com",
        "PARENT_ID":23717.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Gary Dusbabek <gdusbabek@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sound like step better direction gary"
    },
    "20075":{
        "ID":23728,
        "MESSAGE_ID":"etPan.550967b0.66334873.121@AY15rMBP.local",
        "PARENT_ID":23717.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Aleksey Yeschenko <aleksey@apache.org>",
        "TAGS":"not-ak",
        "BODY":"ay"
    },
    "20079":{
        "ID":23724,
        "MESSAGE_ID":"F8BDBA19-2C69-4368-9A5B-C779751B5CA0@snazy.de",
        "PARENT_ID":23717.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Robert Stupp <snazy@snazy.de>",
        "TAGS":"not-ak",
        "BODY":"also appreciate ariels effort improved ci integration great able run huge amount test different platform one development branch huge improvement robert stupp snazy"
    },
    "20084":{
        "ID":23719,
        "MESSAGE_ID":"E0402E09-2482-4D6F-B11A-FA3DE6D7632E@me.com",
        "PARENT_ID":23717.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Jacob Rhoden <jacob.rhoden@me.com>",
        "TAGS":"not-ak",
        "BODY":"thanks everyone hard work perseverance cassandra truly amazing really make redundancy much easier making life far le stressful surely awesomeness creates demand feature first place great problem certainly product user base continually encourages people use current major version situation could improved something attempt improve current process better example nothing modelling process based another company proven strategy seems better making go suggest anyone would minus one also need include alternate proposal change status quo thanks jacob sent iphone"
    },
    "20085":{
        "ID":23718,
        "MESSAGE_ID":"19649232-4345-4722-8CE9-D5DFA6946E0A@internalcircle.com",
        "PARENT_ID":23717.0,
        "SUBJECT":"Re: 3.0 and the Cassandra release process",
        "SENT_FROM":"Michael Kjellman <mkjellman@internalcircle.com>",
        "TAGS":"not-ak",
        "BODY":"kjellman"
    },
    "20086":{
        "ID":23717,
        "MESSAGE_ID":"CALdd-zjAyiTbZksMeq2LxGwLF5LPhoi_4vsjy8JBHBRnsxH=8A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"3.0 and the Cassandra release process",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"process",
        "BODY":"cassandra released september mean track stated goal six month release would done instead even delivered beta immediate time blocking reality nobody really surprised something always come averaged nine month since taking entire year could make theory align reality acknowledging nine month natural release schedule think better broadly speaking two constituency cassandra release first user building porting application cassandra user want newest feature make job easier bug end world time wait stabilize write code would like see deliver six month schedule even faster second user application production user boss want cassandra stable possible assuming deploy stable release like want touch would like see release le often mean le upgrade remaining backwards compatibility window current big release every month model user need tension discussed six month ago ended tried four month release cycle would guarantee crucially added whether reasonable depends fast stabilize release unfortunately even datastax hired half dozen full time test engineer continued proud tradition unready production use wait upgrading looking like good guideline starting think entire model write bunch new feature try stabilize release broken trying year empirically speaking evidence work either stability standpoint even shipping time big reason take long stabilize new release major release cycle long super tempting slip one new feature bugfix release guilty anyone similar reason difficult meaningful freeze big feature release look show coming also significant work done finished meaningful improvement address demonstrated user pain keep choice either delay finish stabilize wait nine month year next release either way one constituency get disappointed id like try something different think right track shorter release compatibility id like throw twist intel cut risk tick tock schedule new architecture process shrink instead trying something similar one month release period done wait every release accepts bug fix one month release going dramatically reduce complexity testing debugging new release bug slip past affect smaller percentage user avoiding big release bunch bug one seen pretty much everyone hit something scenario adding second rule think real chance make quantum leap stable production ready release every two month proposal ready start serious review done branch cut beta release candidate whatever done wait unlike prior beta accept bug fix branching one month ship new feature time branch new feature trunk go branch get bug fix maintain backwards compatibility eventually le year pick release drop deprecated feature old backwards compatibility otherwise nothing special designation note odd release new feature even release bug fix policy actually stable larger feature continue developed separate branch way worked today committed trunk ready saying limited feature build single month thing change dev process better particular one month commit new feature room committing sloppy work stabilizing later trunk stable time asked ariel weisberg put together thought separately worked team voltdb apply cassandra see email friday tldr redefine done include automated test infrastructure run test github branch merging trunk new test harness long running regression test optimistic improve process way even release become increasingly stable skip sub minor release entirely focus keeping release train moving meantime continue delivering stability release entirely smooth transition particular noticed get month worth new feature stabilize last old way thing patience order try later year good idea working make adjustment warranted jonathan elli project chair apache cassandra co founder url spyced"
    },
    "20102":{
        "ID":23701,
        "MESSAGE_ID":"CAM=XDd86Y41UNCja6Qezyy6bzz2grf1Cxjo1GOLfQmq7FCd=Tw@mail.gmail.com",
        "PARENT_ID":23699.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi charsyam thank suggestion yes rest api updated please see attach file url jihun already wrote first draft rest api best regard hyunsik"
    },
    "20104":{
        "ID":23699,
        "MESSAGE_ID":"CAMrLSE6=zGtx1UoQBiJFEsGxuOSwa1=7NLE714spoEMysADRBg@mail.gmail.com",
        "PARENT_ID":23698.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"CharSyam <charsyam@gmail.com>",
        "TAGS":"process",
        "BODY":"yes think need good doc rest api also client developer gmt hyunsik choi"
    },
    "20105":{
        "ID":23698,
        "MESSAGE_ID":"CAM=XDd_3Qr4-a=Qb72+JicdmKW_oqVAPszN_AsPNoB_c8za8Bg@mail.gmail.com",
        "PARENT_ID":23626.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"existence",
        "BODY":"according vote result let focus rest remote api best regard hyunsik"
    },
    "20108":{
        "ID":23695,
        "MESSAGE_ID":"CA+qbEUP5TuyhKJ_rJ2X3Uov6bE6PKYkGpbSAtCd8OUtnBveLxQ@mail.gmail.com",
        "PARENT_ID":23690.0,
        "SUBJECT":"Re: about CHANGES.txt",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"process",
        "BODY":"branch merges made hard access change history subversion sometimes read tale woe url excerpt prior subversion file branch file trunk copy subversion keep track svn log specific file across branch think custom change txt started cargo culted forward git era despite serving much purpose day opinion best colin"
    },
    "20113":{
        "ID":23690,
        "MESSAGE_ID":"1144382093.988431.1426549797825.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":23674.0,
        "SUBJECT":"Re: about CHANGES.txt",
        "SENT_FROM":"Ravi Prakash <ravihoo@ymail.com>",
        "TAGS":"process",
        "BODY":"automating information contained change txt change go without jiras sometimes cf eg like git log absolute source truth cryptographically secure audited distributed yadadada could always use git hook force commit message format cherry pick message default original sure branch merger would problem whoop missed something previous commit would happen hook smartishd identification type commit without hooking jira anyway would format commit message either way think would improvement thanks idea folk"
    },
    "20129":{
        "ID":23674,
        "MESSAGE_ID":"CA+qbEUNk6giX-q8UQh8LkN6X5RGYG8KFVyHhwZRZin5p3wzGKg@mail.gmail.com",
        "PARENT_ID":23649.0,
        "SUBJECT":"Re: about CHANGES.txt",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"process",
        "BODY":"generating change txt jira git part making release dropping altogether keeping version control creates lot false conflict whenever submitting patch generally make committing minor change unpleasant colin"
    },
    "20130":{
        "ID":23673,
        "MESSAGE_ID":"CALamAD+dOhc-BdaBjL_j8qJuoNw0A_RB3zKAqoff-hBt+kz70A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.0.13 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "20153":{
        "ID":23650,
        "MESSAGE_ID":"8D4F36C8-222A-4341-A30C-5545B9C71FD5@altiscale.com",
        "PARENT_ID":23649.0,
        "SUBJECT":"Re: about CHANGES.txt",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"process",
        "BODY":"probably worth mentioning howtocommit wiki instruction actually say exactly need snip always set fix version point please set single fix version earliest release change appear special case committing non mainline branch branch branch atm please set fix version either appropriately snip yes mean discipline set fix version anything actually committed back port branch merges issue marked appropriately etc good part pretty good job way also highlight biggest problem using pure git log matter handle program written need entirety git log history mainline branch would need compare commits build hash index cherry pick resolution etc etc get messy fast analysis jira significantly faster smaller easier write extremely high confidence jira knowledge correct october ish fairly good shape well would need verify alpha beta course anything missing fixversion likely thing marked alpha actually trunk hadoop"
    },
    "20154":{
        "ID":23649,
        "MESSAGE_ID":"CAA0W1bShBB3owk_ThPeRnxef-HNRg-aCTJP07vYNpO67Wg5H7A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: about CHANGES.txt",
        "SENT_FROM":"Yongjun Zhang <yzhang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi allen thanks lot input look like problem listed bad assuming solve pulling info jira sean pointed problem branch merger seems real one approach using jira system build change txt reasonably good way count update jira accurately since update manual process possible inconsistency may bad since mistake found remedied fixing jira side refreshing result wonder community switch using way save committer effort taking care change txt quite save going hope people share thought thanks yongjun"
    },
    "20177":{
        "ID":23626,
        "MESSAGE_ID":"CAM5pAEwcrOSZNQFdbAYdgZZmb+T38okbNBG37DG01eR4L0CAsQ@mail.gmail.com",
        "PARENT_ID":23625.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jaehwa Jung <blrunner@apache.org>",
        "TAGS":"existence",
        "BODY":"discussion started avoid duplicated effort impov choice rest thrift may complex maintain tajo code gmt jung yousun"
    },
    "20178":{
        "ID":23625,
        "MESSAGE_ID":"e67385a5863c4189a5c1f1f7573e893d@skt-tnetpmx4.SKT.AD",
        "PARENT_ID":23624.0,
        "SUBJECT":"RE: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"\uc815\uc720\uc120(JUNG YOUSUN) <jerryjung@sk.com>",
        "TAGS":"existence",
        "BODY":"yep think support multiple language client mentioned critical issue performance thrift anyway think good discussion remote interface tajo sincerely yousun jeong"
    },
    "20179":{
        "ID":23624,
        "MESSAGE_ID":"CAM=XDd9CtaiaUzJAZQFb0=1Y2Ucwp1M28xz0XKdag8Vq8SrDkQ@mail.gmail.com",
        "PARENT_ID":23617.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"existence",
        "BODY":"hi jerry much faster lightweight rest luckily thrift may faster msec rest per call note tajo analytical system target response time tajo usually second hour speed come wired protocol much trivial purpose client apis link introduce hbase know hbase oltp like system process thousand transaction per second speed lightweight important tajo mentioned rest api portable dependency many language think important factor client apis best regard hyunsik"
    },
    "20180":{
        "ID":23623,
        "MESSAGE_ID":"CACZfFK4fmtgD9EJnpT7fe9MFJZ1v3Wv3OL9hwZcPU1mctoFitA@mail.gmail.com",
        "PARENT_ID":23622.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jihoon Son <jihoonson@apache.org>",
        "TAGS":"existence",
        "BODY":"sorry misunderstanding still plan support thrift interface sincerely jihoon"
    },
    "20181":{
        "ID":23622,
        "MESSAGE_ID":"CACZfFK6tTisP8zAL5XW15eRyYBz3Yg7o34W7tv9n0u0NADtCHQ@mail.gmail.com",
        "PARENT_ID":23621.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jihoon Son <jihoonson@apache.org>",
        "TAGS":"existence",
        "BODY":"missed one thing true provide thrift interface provide thrift interface using rest sincerely jihoon"
    },
    "20182":{
        "ID":23621,
        "MESSAGE_ID":"CACZfFK4sgvdyiEakpjP56SopR32pGwMgUsD0UyJL4Ra-_q5ssQ@mail.gmail.com",
        "PARENT_ID":23620.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jihoon Son <jihoonson@apache.org>",
        "TAGS":"existence, property",
        "BODY":"jerryjung thanks suggestion said thrift faster lightweight rest however native protocol faster rest reason using thrift alternatively maintaining various type protocol option however cause much greater maintenance cost even though link gave comparing performance thrift rest protocol paragraph follows two main approach one thrift interface indicated rest good candidate support various language program addition think performance client apis matter contribution entire query performance little welcome argument sincerely jihoon"
    },
    "20183":{
        "ID":23620,
        "MESSAGE_ID":"4ac1fb64a5d74d82bed61041e115009c@skt-tnetpmx4.SKT.AD",
        "PARENT_ID":23617.0,
        "SUBJECT":"RE: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"\ucd5c\uc2b9\uc6b4 <seungun.choe@sk.com>",
        "TAGS":"not-ak",
        "BODY":"give maintain rest thrift best regard seungun dev tajo apache org discussion portable remote client apis suggest another option think two option remote interface thrift faster lightweight rest please refer article url describes various way access interact hbase giving developer wide choice language program use best regard yousun jeong"
    },
    "20185":{
        "ID":23618,
        "MESSAGE_ID":"etPan.55026d5b.6b8b4567.4820@CERNERASP-KEPLER186",
        "PARENT_ID":23617.0,
        "SUBJECT":"RE: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Ethan <castivesdev@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hey folk one attending apachecon austin tx next month thanks ethan"
    },
    "20186":{
        "ID":23617,
        "MESSAGE_ID":"f4fa0f74d0824e12a43ee2543e0c94da@skt-tnetpmx4.SKT.AD",
        "PARENT_ID":23603.0,
        "SUBJECT":"RE: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"\uc815\uc720\uc120 <jerryjung@sk.com>",
        "TAGS":"existence",
        "BODY":"suggest another option think two option remote interface thrift faster lightweight rest please refer article url describes various way access interact hbase giving developer wide choice language program use best regard yousun jeong"
    },
    "20198":{
        "ID":23605,
        "MESSAGE_ID":"CAFu6yH0DgBVwQNbYW3Hrp-6DVzP4fg65MNpuEQqGWUoQ_x_Siw@mail.gmail.com",
        "PARENT_ID":23603.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Dongjoon Hyun <dongjoon@apache.org>",
        "TAGS":"not-ak",
        "BODY":"give rest api best regard dongjoon"
    },
    "20200":{
        "ID":23603,
        "MESSAGE_ID":"CAM=XDd8UU7MBUTpDev69vdWv_eJEhZSJP8EVTFpQLgAKFfeHDg@mail.gmail.com",
        "PARENT_ID":23601.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"seem get consent use rest api wait one day decide issue best regard hyunsik"
    },
    "20202":{
        "ID":23601,
        "MESSAGE_ID":"CANpXwBBsZYUYr4X+p9TYRYq1vo+qZ0Y2XH3a36OXsPCd0ftvQw@mail.gmail.com",
        "PARENT_ID":23597.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Hyoungjun Kim <babokim@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi give rest api think rest common warm regard hyoungjun jihun kang"
    },
    "20206":{
        "ID":23597,
        "MESSAGE_ID":"CAEj1Ex700+sepBJBVOm68sNQjNqiwmF23MrbSDEOduueQTF-tQ@mail.gmail.com",
        "PARENT_ID":23596.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jihun Kang <ykrips@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hello would give rest api implementation even protobuf thrift give flexibility extensibility programmer entry barrier framework extremely high also want make another client implementation programming language need figure framework code generator feature programming language gmt jaehwa jung"
    },
    "20207":{
        "ID":23596,
        "MESSAGE_ID":"CAM5pAExMa5fyAA9AMx3d9MeGZ170iNiykmCtvQD-RSWUzftWUg@mail.gmail.com",
        "PARENT_ID":23595.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jaehwa Jung <blrunner@apache.org>",
        "TAGS":"existence",
        "BODY":"hi guy hyunsik suggestion rest api may efficient code maintenance various client implementation cheer jaehwa restful api code maintenance jinho best regard gmt charsyam"
    },
    "20208":{
        "ID":23595,
        "MESSAGE_ID":"CAH=F5dn4gabPF1a0azUwUGZG5+kjGhcaJBW=LcMHPZtrSo_p4w@mail.gmail.com",
        "PARENT_ID":23594.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jinho Kim <jhkim@apache.org>",
        "TAGS":"not-ak",
        "BODY":"restful api code maintenance jinho best regard gmt charsyam"
    },
    "20209":{
        "ID":23594,
        "MESSAGE_ID":"CAMrLSE4tOGgQ8P2f43eBGyUe3ZYuLoyVDdYBCUsfMgivFQ2AWA@mail.gmail.com",
        "PARENT_ID":23593.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"CharSyam <charsyam@gmail.com>",
        "TAGS":"existence",
        "BODY":"also agree hyunsik suggesttion think better make language binding use rest api efficient le effort gmt jihoon son"
    },
    "20210":{
        "ID":23593,
        "MESSAGE_ID":"CACZfFK5EfMSBQ4ZojuG3B=QbVyOA5W3iLjE_D1SrWk5bY869Aw@mail.gmail.com",
        "PARENT_ID":23592.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Jihoon Son <jihoonson@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hyunsik suggestion totally agree warm regard jihoon hyunsik choi"
    },
    "20211":{
        "ID":23592,
        "MESSAGE_ID":"CAM=XDd80H7WWOAs2ADnRhfMK0k1Q8dhiBbk-CrBt7FCZ6w7T-g@mail.gmail.com",
        "PARENT_ID":23591.0,
        "SUBJECT":"Re: [DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"existence",
        "BODY":"suggestion prefer rest api think would better due following reason dependency script language need dependency approach also need json library approach please look json modern url requires include one header one source file result dependency problem portability script language basically support rest json need client implementation use rest json feature order access tajo necessary make easily helper library language secure easy provide secure channel authentication method basically many http api provides http ssl jihoon kang already started rest api work others start develop client language like client rest api work would best best regard hyunsik"
    },
    "20212":{
        "ID":23591,
        "MESSAGE_ID":"CAM=XDd9mR8kW0iO57U_4vc=NnmX1XPNTxMeZSUbyJdSHA6BVQg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSSION] Portable remote client APIs",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"existence",
        "BODY":"hi folk recently three trial add new remote client apis client thrift url add rest client api url tajo python native client url aspect happy discus issue expected discus vote duplicated effort way would great spend resource duplicated work order rearrange duplicated work need discussion pro con hope consent direction discussion otherwise call vote approach best regard hyunsik"
    },
    "20246":{
        "ID":23556,
        "MESSAGE_ID":"CAM=XDd-_=7tSG60VkLmbjedN4ZsoAUp1i0OCBQh3pvt=M34X5Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Fwd: The Apache Software Foundation Announces Apache\u2122 Tajo\u2122 v0.10.0",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"property",
        "BODY":"missed forward release announcement download release url best regard hyunsik forwarded message sally khudairi date mon mar subject apache software foundation announces apachetm tajotm apache announce list mature robust open source relational big data warehousing solution provides advanced sql hadoop functionality support forest hill md march apache software foundation asf volunteer developer steward incubator open source project initiative announced today availability apachetm tajotm latest version advanced open source data warehousing system apache hadoop apache tajo used low latency scalable ad hoc query online aggregation etl extract transform load process large data set stored hdfs hadoop distributed file system data source supporting sql standard leveraging advanced database technique tajo allows direct control distributed execution data flow across variety query evaluation strategy optimization opportunity tajo evolved last couple year mature sql hadoop engine said hyunsik choi vice president apache tajo improved jdbc driver release allows user easily access tajo user use traditional rdbmss verified new jdbc driver many commercial bi solution various sql tool easy work successfully tajo reflects dozen new feature improvement including oracle postgresql catalog store support direct json file support hbase storage integration allowing user directly access hbase table tajo improved jdbc driver easier use jdbc application improved amazon support complete overview new enhancement found project release note url described dark horse race mass adoption gigaom tajo use numerous organization worldwide including gruter korea university melon nasa jpl radio astronomy airborne snow observatory project sk telecom processing web scale data set real time byeong hwa yun project leader melon said congratulation release melon biggest music streaming service company korea use tajo etl tool well analytical processing system experienced tajo make etl job faster hive besides hbase storage integration release enables analytic pipeline simpler hope tajo large role play apache hadoop ecosystem happy tajo rapidly developed recent year said jihoon son member apache tajo project management committee one impressive part improved support amazon thanks emr bootstrap user exploit tajo advanced sql functionality aws click availability oversight apache tajo software released apache license overseen self selected team active contributor project project management committee pmc guide project day day operation including community development product release downloads documentation way become involved apache tajo visit url url apache software foundation asf established volunteer foundation oversees leading open source project including apache http server world popular web server software asf meritocratic process known apache way individual member committers successfully collaborate develop freely available enterprise grade software benefiting million user worldwide thousand software solution distributed apache license community actively participates asf mailing list mentoring initiative apachecon foundation official user conference training expo asf charitable organization funded individual donation corporate sponsor including budget direct cerner citrix cloudera comcast facebook google hortonworks hp ibm inmotion hosting isigma matt mullenweg microsoft pivotal produban wandisco yahoo information visit url follow url apache software foundation apache tajo apache tajo hadoop apache hadoop apache tajo logo registered trademark trademark apache software foundation brand trademark property respective owner note receiving message subscribed announce apache org distribution list unsubscribe send email recipient account announce unsubscribe apache org word unsubscribe subject line"
    },
    "20248":{
        "ID":23554,
        "MESSAGE_ID":"CAO0ccOdi1f4dngifxOW+-i_w70fXyWWmf89dvdYwNjY_BWCW5A@mail.gmail.com",
        "PARENT_ID":23552.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Raymie Stata <rstata@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"avoiding use jdk language feature presumably apis mean abandoned really bumped jdk source version jdk also note releasing trunk way achieving way abandoning"
    },
    "20250":{
        "ID":23552,
        "MESSAGE_ID":"CAGB5D2Zr_LeMNsa0oc6Kj+NjOH9NDn5ePWYaybxKeUxrtT9DZA@mail.gmail.com",
        "PARENT_ID":23551.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi raymie konst proposed releasing trunk rather cutting branch general agreement consider abandoned achieved time need avoid using jdk language feature trunk thing backported best andrew"
    },
    "20251":{
        "ID":23551,
        "MESSAGE_ID":"CAO0ccOcDyPzCPt=ZbrzqXgQOLe85rZEJj7A+ibApSVt4uEmYOw@mail.gmail.com",
        "PARENT_ID":23529.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Raymie Stata <rstata@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"related thread see following three requirement bump source jdk version jdk ie drop jdk support still releasing release similar feature set avoid risk split brain behavior minimize backporting headache pulling trunk branch branch already tedious adding branch branch would obnoxious three achieved time abandon"
    },
    "20273":{
        "ID":23529,
        "MESSAGE_ID":"3D693482-E140-488A-8F3C-D28650294486@gmail.com",
        "PARENT_ID":23476.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sanjay"
    },
    "20284":{
        "ID":23518,
        "MESSAGE_ID":"1425886141270.11436@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop - Major releases",
        "SENT_FROM":"Arun Murthy <acm@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"last day lot discussion intertwined several major theme make major hadoop release move major jdk version lesser extent debated another theme trunk let park jdk trunk treat separate thread couple lamppost head used guidance apologize sharing broadly prior discussion maybe putting help certainly hope major release hadoop continues benefit tremendously investment stability validation etc put anchor user yahoo facebook twitter ebay linkedin etc historical perspective lifetime apache hadoop went monthly quarterly release hadoop became production system starting hadoop hadoop user could absorb torrid pace change imho go far enough addressing competing pressure stability rapid innovation paid losing one anchor user facebook around time hadoop forked around time yahoo hit problem know lived painfully got stuck hadoop long time forked add security rather deal next major release hadoop later facebook unfortunately community stuck probably forever fork hadoop overall dark day community every anchor user fork took toll project recently thankfully hadoop period relative stability hadoop hadoop even close shave yahoo hadoop long time fact finishing migration hadoop think major lesson obvious one compatibility matter maintaining multiple major release parallel big problem lead unproductive risky split community investment along different line looking ahead given thought looking ahead conservative major release major benefit required feature cost let compel anchor user like yahoo twitter ebay linkedin invest previous release rather latest one let hear let accommodating play key role keeping hadoop healthy stable conservative dropping support jdks particular let hear anchor user plan adoption jdk linkedin already moved jdk great validation let wait rest anchor user move drop jdk thing jdk waited move drop support jdk overall would love hear twitter yahoo ebay anchor user plan jdk specifically overall appetite hadoop let finalize plan moving forward input considered thought thanks arun unfortunate necessary disclaimer people point vendor affiliation lend unnecessary color opinion let state hadoop hadoop non issue major hdp version key compatibility ship major compatible community release hive hive hdp hdp etc also release management similar non issue already several individual step hadoop line expect folk like andrew karthik vinod steve etc"
    },
    "20306":{
        "ID":23496,
        "MESSAGE_ID":"CADfbTpHhphV3d0Up5-DKnNZofwkNoXetc1sXdvLZ05o4Bp9baA@mail.gmail.com",
        "PARENT_ID":23494.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Eric Yang <eric818@gmail.com>",
        "TAGS":"existence, property, technology",
        "BODY":"lesson learn webhdfs hdfs acl qjm ha rolling upgrade great feature mapreduce us resource efficiently container rigid constraint application get killed prematurely node lot container yarn take significant amount system resource existing daemon based application run top yarn without code change impossible difficult pinpoint service run extra routing client server code need written application hence existing map reduce approach spawn parallelized work load output result durable file system better client serving service need track state read hdfs hence level ha external serving service achieve without yarn slider provides better interface exposing api deploy application would nice support following jdk upgrade recent version jetty hang problem busy cpu problem come jetty incompatible jdk nio design improve default security gap default container executor linux container executor would nicer default security us linux container executor ensure developer remember run doas designing service run top hadoop since major release number change maybe backward compatible api breakage initially order gain new functionality backward compatible patch added time reduce yarn framework resource usage improve usability yarn ui drill application container back application view almost unusable smarter strategy container placement call anti affinity support yarn type support identified one shared silo dedicated shared container co locate node silo type container spawn one per node dedicated reserve entire node workload regard eric"
    },
    "20310":{
        "ID":23492,
        "MESSAGE_ID":"CAGB5D2aCvOgedFyXaNg9R3bKruUUpwRq2zX=XRjuw_8Fv-tuNA@mail.gmail.com",
        "PARENT_ID":23491.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hey vinod roughly okay plan one question though gate jdk based status hadoop sound like branch already run okay jdk past experience moving jdk jdk also smooth except junit ordering additional datapoint cloudera already validated cdh jdk support runtime url best andrew"
    },
    "20311":{
        "ID":23491,
        "MESSAGE_ID":"127F8CDF-EB05-4192-88AB-00146D3A257A@hortonworks.com",
        "PARENT_ID":23471.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"would encourage everyone post wish list roadmap wiki warrant making incompatible change forcing go jason comment general keep rolling alpha downstream pick would also like clarify exit criterion ga release relation life going route brings back roadmap discussion collective agreement logical step future point time say enough incompatible feature stop putting start stabilizing irrespective proposal interim run jdk jdk first compatible manner like mentioned atleast two release branch say consider taking gauntlet continue working classpath isolation effort try making compatible possible user opt migrate easily thanks vinod"
    },
    "20312":{
        "ID":23490,
        "MESSAGE_ID":"DD584A02-2767-4498-8DD9-94CC89BF0661@hortonworks.com",
        "PARENT_ID":23476.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"yes kind enhancement need proposed discussed inclusion thanks vinod"
    },
    "20313":{
        "ID":23489,
        "MESSAGE_ID":"CAGB5D2b=r2J0ws=7SiMF8YvrWXuJfC9o-iMjscdc63T0kpOVkg@mail.gmail.com",
        "PARENT_ID":23488.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"since dependency bump disruptive downstreams want predicate upgrading deps classpath isolation think tucu getting best andrew"
    },
    "20314":{
        "ID":23488,
        "MESSAGE_ID":"52F48223-B9A2-4786-A604-E4CB40B15CA2@altiscale.com",
        "PARENT_ID":23485.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"right really answer question"
    },
    "20317":{
        "ID":23485,
        "MESSAGE_ID":"CACDdcgd+bzubDOmkYAO3D0gh47Bj7ojL3J3C9kzyswh5W1gzdw@mail.gmail.com",
        "PARENT_ID":23482.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Alejandro Abdelnur <tucu00@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"classloader isolation place dependency version freely upgraded pollute apps space thing get trickier switch"
    },
    "20320":{
        "ID":23482,
        "MESSAGE_ID":"85C98170-BDF9-454D-9211-7A320D1B8AB9@altiscale.com",
        "PARENT_ID":23477.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"going general upgrade dependency thinking jetty jackson particular"
    },
    "20325":{
        "ID":23477,
        "MESSAGE_ID":"CAGB5D2bMyCb5Q73Mm4UTtKFFUpqVer7LpdcVFw6SnB=WVC91XA@mail.gmail.com",
        "PARENT_ID":23476.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"taken liberty adding hadoop section roadmap wiki page addition two thing pushing also looked allen list thanks allen making picked script rewrite removal hftp big change would place propose feature inclusion would particularly appreciate help yarn mr side based hearing let modulate proposal following avoid cutting branch release trunk trunk change look scary think fine mean need rigorous merging branch trunk think vinod giri work getting test patch sh run non trunk branch would helpful regard include anything break wire compatibility unless jason say unbelievably awesome feature harm rolling alpha trunk lock anything compatibility wise downstreams like release take steve advice locking ga given date also share belief alpha beta ga faster took hadoop let roll intermediate release work roadmap item see feeling month best andrew"
    },
    "20326":{
        "ID":23476,
        "MESSAGE_ID":"CAOapipsTzkX6WCHRR+sHSBd8FGkq4kOAveHys9knkgKCP_ODoQ@mail.gmail.com",
        "PARENT_ID":23475.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Siddharth Seth <sseth@apache.org>",
        "TAGS":"existence",
        "BODY":"think useful discussion else people would like see hadoop especially change potentially incompatible also expect release schedule major release trigger jvm version major feature need incompatible change assuming major version released every month year adoption time fairly disruptive downstream project user considering additional feature incompatible change would useful feature come mind immediately would enhancement rpc mechanic specifically support asynrpc two way communication lot place use heartbeat send information would done prc layer supported feature done compatible manner existing rpc sub system others like way communication probably hdfs yarn actually make use change consideration adoption alternate system ike grpc would incompatible simplification configs potentially separating client side configs used daemon another source perpetual confusion user thanks sid"
    },
    "20327":{
        "ID":23475,
        "MESSAGE_ID":"D11E1B94.13C2F%stevel@hortonworks.com",
        "PARENT_ID":23474.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"sorry outlook dequoted alejandros comment let try comment italic proofreading mine"
    },
    "20331":{
        "ID":23471,
        "MESSAGE_ID":"173088578.3630972.1425591897712.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":23433.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Jason Lowe <jlowe@yahoo-inc.com.INVALID>",
        "TAGS":"process",
        "BODY":"ok release long minimizing pain maintaining yet another release line conscious incompatibility going release line former would really rather see branch cut soon yet another line onto cherry pick see need add overhead early phase create branch incompatible change community want go next major release hadoop develop alpha beta trunk release trunk interim imho need stop treating trunk place exile patch latter think community need evaluate benefit breaking compatibility cost migrating time break compatibility create hurdle people jump move new release make hurdle worth time example wire compatibility mentioned part feature break wire compatibility better absolutely amazing creates huge hurdle people jump summarize community discussed roadmap breaking hadoop worth user creating branch release trunk next incompatibility hadoop arrives baking classpath isolation opt eventually default jason andrew wang hdfs dev hadoop apache org cc common dev hadoop apache org mapreduce dev hadoop apache org yarn dev hadoop apache org sent wednesday march pm subject looking hadoop release let dismiss quite handily sean jason stack replied hadoop pointing could make classpath isolation opt via configuration really want longer term default always stack particular point practical difficulty using opt method downstream project perspective pretty plan sean jason propose support opt solution bake turn default incompatible new major release think line well proposal alpha beta leading ga also willing help release management would help testing feature even setting aside classpath isolation new major release still justified jdk somehow ignored discussion allen historically voice user community highlighted major compatibility issue tucu also expressed strong concern bumping minor release bump unique exception something cited precedent policy resistance new major release stem described beginning look basically like release except inclusion classpath isolation default target version jdk expressed desire maintain api wire compatibility audit set incompatible change trunk ensure proposal alpha beta release leading ga also give downstreams nice amount time testing validation regard andrew"
    },
    "20332":{
        "ID":23470,
        "MESSAGE_ID":"CACDdcgdyPXqmn3W5tOGiv0fp2xkUz=5WoJzwXKZsZkeGP9UWSg@mail.gmail.com",
        "PARENT_ID":23469.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Alejandro Abdelnur <tucu00@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"going part community want take responsibility work take new major release discourage multiple major branch active standard practice time around replacing gut hadoop hadoop superficial surgery address issue considered much take top gut transplant split brain concern great job maintaining hadoop hadoop hadoop faded away based experience would say coexistence hadoop hadoop much le demanding traumatic also facilitate coexistence limit java language feature java even runtime java java used anymore remove limitation thanks"
    },
    "20333":{
        "ID":23469,
        "MESSAGE_ID":"CFB90E86-24D5-4E49-90D1-B6B873E77B70@hortonworks.com",
        "PARENT_ID":23433.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"process",
        "BODY":"resistance much new major release content roadmap release two specific feature raised need breaking compat something debating seen roadmap branch feature community need discus difference branch branch going jdk couple incompat change big problem two dimension burden keeping branch sync avoiding split brain experienced worse branch branch hard ask people break thing branch seem agreed upon course action jdk taking different direction jdk going new proposal come deal jdk mainline incompatible hadoop release regarding individual improvement like classpath isolation script stuff jason lowe captured perfectly hadoop possible every major feature develop opt unless change great user balance incompatibility new stuff getting even ground breaking change like yarn spent bit time ensure compatibility mapreduce paid many time return breaking compatibility come across cheap thing thanks vinod"
    },
    "20334":{
        "ID":23468,
        "MESSAGE_ID":"9977AEFF-2F97-4906-B1BC-6D2DFAD2FE45@hortonworks.com",
        "PARENT_ID":23403.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"moving jdk involves lot thing get hadoop apps able run jdk chose jdk language feature already possible decoupling apps platform get platform run jdk done run hadoop jdk jdk without compatibility issue huge move potential gc behavior change native library compat etc get platform use jdk language feature much love new stuff jdk willing postpone usage language feature platform till time jdk already full force get jdk going come around make decision dropping support jdk different adoption jdk bit time release able run jdk jdk phasing jdk community stopped using thanks vinod"
    },
    "20336":{
        "ID":23466,
        "MESSAGE_ID":"CAA0W1bQS56-6X0BLmW2L-pt+_45DxqXL1oxZwSB4JbAwwjjt8g@mail.gmail.com",
        "PARENT_ID":23446.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Yongjun Zhang <yzhang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"thanks open issue hdfs acls inheritance conflict umaskmode incompatibility appears make suitable targetted please see url best yongjun"
    },
    "20356":{
        "ID":23446,
        "MESSAGE_ID":"839668A2-EAD8-407A-BB82-6759ED9B7210@altiscale.com",
        "PARENT_ID":23444.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"one question keep popping exactly trunk may recall done experiment creating change log based upon jira interest level appeared approaching zero kept playing bit eventually also started playing release note script various reason bore case started posting result run one github repos anyone wanting quick reference jiras opinion matter url"
    },
    "20359":{
        "ID":23443,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B66611AB99A2@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":23435.0,
        "SUBJECT":"RE: Looking to a Hadoop 3 release",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"existence",
        "BODY":"might comment providing thought thanks streamer align long term release also contributor like align future effort maybe addition jdk support classpath isolation might add possible candidate consideration would like one hadoop pluggable compatible ugi change url benefit allow multiple login session context authentication method used java application process without conflict providing good isolation getting rid globals static allow pluggable new authentication method ugi modular manageable maintainable manner another would also push first release apache kerby preparing strong dedicated clean kerberos library java client kdc side leveraging library update hadoop minikdc perform security test url hope make sense thanks regard kai"
    },
    "20367":{
        "ID":23435,
        "MESSAGE_ID":"CADcMMgEdqv3sWLrcc_LAfpCuGuMHThzt16X+5qicM8D5oe0Y4g@mail.gmail.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Stack <stack@duboce.net>",
        "TAGS":"not-ak",
        "BODY":"general time start might make start downstreamers start aligning land version suit time two big item called possible incompatible change ongoing discussion whether chance getting longer list big difference branch particular would interested improvement default would better defaulted thanks st ack let note compatible around part trampled concept seemingly open interpretation definition prevails elsewhere software see allen list downstream project recent hbase hbase server mr tool broken hadoop yarn among others let incompatible leave behind current notion compatibility start per allen"
    },
    "20369":{
        "ID":23433,
        "MESSAGE_ID":"CAGB5D2Z+tWoagDO3i6Y5kEUPygHEip2MyRrLLB0Yh7vh+MCKGA@mail.gmail.com",
        "PARENT_ID":23428.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"existence",
        "BODY":"let dismiss quite handily sean jason stack replied hadoop pointing could make classpath isolation opt via configuration really want longer term default always stack particular point practical difficulty using opt method downstream project perspective pretty plan sean jason propose support opt solution bake turn default incompatible new major release think line well proposal alpha beta leading ga also willing help release management would help testing feature even setting aside classpath isolation new major release still justified jdk somehow ignored discussion allen historically voice user community highlighted major compatibility issue tucu also expressed strong concern bumping minor release bump unique exception something cited precedent policy resistance new major release stem described beginning look basically like release except inclusion classpath isolation default target version jdk expressed desire maintain api wire compatibility audit set incompatible change trunk ensure proposal alpha beta release leading ga also give downstreams nice amount time testing validation regard andrew"
    },
    "20374":{
        "ID":23428,
        "MESSAGE_ID":"1425421960667.60647@hortonworks.com",
        "PARENT_ID":23427.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Arun Murthy <acm@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"awesome look like compatible manner nothing else list seems like warrant premature major release thanks vinod arun vinod kumar vavilapalli sent tuesday march pm common dev hadoop apache org cc hdfs dev hadoop apache org mapreduce dev hadoop apache org yarn dev hadoop apache org subject looking hadoop release started pitching jira add think strive compatible manner whatever approach marking calling incompatible see proposal patch seems premature commented jira url thanks vinod"
    },
    "20375":{
        "ID":23427,
        "MESSAGE_ID":"C48CA17E-D191-44BF-80E5-1F472CBF712E@hortonworks.com",
        "PARENT_ID":23403.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"started pitching jira add think strive compatible manner whatever approach marking calling incompatible see proposal patch seems premature commented jira url thanks vinod"
    },
    "20380":{
        "ID":23422,
        "MESSAGE_ID":"52AEE4B7-BA65-431E-B8F6-74B19D7449A4@altiscale.com",
        "PARENT_ID":23419.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"process",
        "BODY":"removing finalize breaking hdfs browsing changing dus output branch changing various name metric either intentionally otherwise changing jdk release probably lot stuff branch seen know best course action git rm hadoop common project hadoop common src site markdown compatibility md least way caretaker come across hypocrits pretty clear direction shown care api compatibility rest ignored convenient next time someone tell hadoop hard operate want think email making build jdk led exact situation figured would precedent say community know guarantee yeah might well ignore going change core component damn time feel like made release branch trunk since branch anyone think healthy beach property alberta might interested well release cycle came screeching halt never recovered however offer alternative circular argument come time enough change trunk make new branch upgrade change component plan make new major release quote frozen let go probably point likely many earth shattering change hadoop code base community decided instead push type change separate project via incubator avoid committer paralysis community suffers think enough change argument work anymore instead need pick new metric build cadence force regular update id offer every two year jdk eol set perfect cadence matched many enterprise os software give opportunity reflect version number critical component software changed cadence allows people plan appropriately know roadmap direction actually folk likely build real solution rather make compromise suffer quality name compatibility simply know work actually show well normal regular opportunity update dependency regardless state hadoop excuse contributor patch go fwiw made decision worry backward compatibility code rewrite made realization jsvc log pid file name poorly chosen allow certain capability anyone actually touch outside software probably still effectively interface trunk went even get version number cheap argument made great renames"
    },
    "20382":{
        "ID":23420,
        "MESSAGE_ID":"CDB13548-274F-4F30-A7AC-40D1C769CE7E@hortonworks.com",
        "PARENT_ID":23417.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"totally agreed left comment current state needed think big change flipping default classloader task splitting hdfs jar thanks vinod"
    },
    "20383":{
        "ID":23419,
        "MESSAGE_ID":"CFD468ED-AD6D-4361-AC04-316D8B4B68A2@gmail.com",
        "PARENT_ID":23418.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"preserve compatibility need bump major number fix feature trunk would like see get quickly back ported easily branch sanjay"
    },
    "20384":{
        "ID":23418,
        "MESSAGE_ID":"CALwhT94HHR+Rmuu-u=Y5W3m3XcxMFsUYQam=g=xiWSSurQo2_A@mail.gmail.com",
        "PARENT_ID":23417.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"surprised classpath isolation called minor issue hearing user complain hadoop leaking dependency classpath guava culprit often able upgrade dependency without affecting user started hamper development guava conflict upgrading curator version preserve api compat try preserve wire compat see harm bumping major release allows include several fix feature trunk release actively thinking way release item trunk even disadvantage major release would like know may could arrive plan accomplish without problem thanks karthik"
    },
    "20385":{
        "ID":23417,
        "MESSAGE_ID":"etPan.54f5e90b.140e0f76.f39e@stevel-2.local",
        "PARENT_ID":23415.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"want understand lot classpath isolation hadoop proposal specifically proposed tagged incompatible bigger change must setting javac version pom though given fundamental problem address favour something"
    },
    "20387":{
        "ID":23415,
        "MESSAGE_ID":"CAGB5D2ZG2jL6+XR=wRzx5n=YztzW5KeH0gqAphm_v7HYx65UaQ@mail.gmail.com",
        "PARENT_ID":23409.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi junping thanks response view branch essentially size recent release exception incompatible change like classpath isolation jdk target version perhaps revolutionary still incompatible require major version bump see forking community effort since backports flow pretty easily branch branch way currently flow branch branch extra git commit like deal branch day custom backport hopefully address concern thanks andrew"
    },
    "20388":{
        "ID":23414,
        "MESSAGE_ID":"CAGB5D2aNjBrFGvjmP1GyRiPJi8okG-LC_Hw8yBc9XyDGzft+yw@mail.gmail.com",
        "PARENT_ID":23407.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi akira thanks responding"
    },
    "20389":{
        "ID":23413,
        "MESSAGE_ID":"CAGB5D2Z3tWe4NY5xUtnvr=v9NtzcmZtCT1e+Giqn61AZAU9wyw@mail.gmail.com",
        "PARENT_ID":23406.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi konst thanks taking look think essentially agree point"
    },
    "20393":{
        "ID":23409,
        "MESSAGE_ID":"1425392868218.91834@hortonworks.com",
        "PARENT_ID":23407.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Junping Du <jdu@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks good discussion supporting java soon possible addition agree separating effort cutting hadoop going hadoop still cool today consider hadoop revolutionary feature like yarn deserve break fundamental compatibility may distraction community effort cent thanks junping akira ajisaka sent tuesday march pm common dev hadoop apache org mapreduce dev hadoop apache org hdfs dev hadoop apache org yarn dev hadoop apache org subject looking hadoop release thanks andrew bringing mostly look fine thinking cut branch imho classpath isolation good thing pay technical dept soon possible willing help thinking cut branch release alpha hadoop fixed would like mark issue blocker wonder even cut branch trunk branch would seems useless steve suggested jdk trunk branch moving jdk soon possible user side little merit upgrade important thing long maintained therefore consider stop backporting new feature stop maintaining would like maintain long possible least one year ga release issue current status hdfs symlink hadoop requires incompatible change would like include regard akira"
    },
    "20395":{
        "ID":23407,
        "MESSAGE_ID":"54F5A330.7090001@oss.nttdata.co.jp",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"not-ak",
        "BODY":"thanks andrew bringing mostly look fine thinking cut branch imho classpath isolation good thing pay technical dept soon possible willing help thinking cut branch release alpha hadoop fixed would like mark issue blocker wonder even cut branch trunk branch would seems useless steve suggested jdk trunk branch moving jdk soon possible user side little merit upgrade important thing long maintained therefore consider stop backporting new feature stop maintaining would like maintain long possible least one year ga release issue current status hdfs symlink hadoop requires incompatible change would like include regard akira"
    },
    "20396":{
        "ID":23406,
        "MESSAGE_ID":"CAKtuutFxJL++Y_3FqfQzJC52v4EOretf0hRMOy=8KKDDZW+DSw@mail.gmail.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"andrew hadoop seems general like good idea understand propose release instead addition think needed least stabilization step line hadoop meant exist together run risk manifest split brain behavior hadoop hadoop version somehow beneficial commercial vendor see community proven disruptive would really good avoid time could release hadoop directly trunk proper feature freeze advance current trunk best working condition seen year much better hadoop coming life could make good alpha believe start planning trunk right thanks konst"
    },
    "20397":{
        "ID":23405,
        "MESSAGE_ID":"54F55BF5.1070304@nanthrax.net",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Jean-Baptiste Onofr\u00e9 <jb@nanthrax.net>",
        "TAGS":"not-ak",
        "BODY":"sound like good idea especially regarding jdk regard jb"
    },
    "20399":{
        "ID":23403,
        "MESSAGE_ID":"CAGB5D2a=5_46UcyKc+EoG08gYo=R-VDj+rnr7q9pjxj2kjuVNA@mail.gmail.com",
        "PARENT_ID":23395.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"technology",
        "BODY":"thanks always feedback everyone inline comment arun email extensive least tucu agreed one time exception jdk bump practical reason waited long assurance jdk out multiple distros also already bumped min version jdk true time around bumping jdk version hugely impactful end user email earlier thread still reflects thought jdk compatibility url regarding classpath isolation based hear customer still big problem even mr classloader work latest jackson version bump quite painful downstream project hdfs client still leak lot dependency would welcome discussion hadoop steve colin haohui already chimed freedom upgrade dependency would also big win developer could jdk hadoop definitely right incompatible change would jdk classpath isolation whatever already trunk audit existing trunk change branch cut would like keep list short possible preserve wire compat rolling upgrade far major release go one scared however since incompatible still need major version bump best andrew vinod script rewrite incompatible allen intentionally excluded branch reason"
    },
    "20403":{
        "ID":23399,
        "MESSAGE_ID":"etPan.54f52210.515f007c.f39e@stevel-2.local",
        "PARENT_ID":23395.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"migrate java soon possible branch trunk language level make cherrypicking stuff trunk possible particularly case java first major change language since java shipping trunk going take longer planned hopefully long release process never know mean expect hadoop release year need make jump get door include roadmap java event happens across codebase steve anyone want pure java build today set djavac version classpath maven build last time tried minor bit yarn would compile"
    },
    "20404":{
        "ID":23398,
        "MESSAGE_ID":"5834FA6C-88DA-4658-8553-507225349C95@hortonworks.com",
        "PARENT_ID":23395.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"agreed difference ga release parallel release line jdk different classpath potentially isolated sound like big enough delta warranting license break compat thanks vinod"
    },
    "20405":{
        "ID":23397,
        "MESSAGE_ID":"7495D23A-E8F2-43BD-8BC4-9B59F6D5B79A@hortonworks.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"moving jdk fundamentally different move jdk moving jdk via release helping script rewrite change supposed compatible thanks vinod"
    },
    "20406":{
        "ID":23396,
        "MESSAGE_ID":"7A598E32-31A4-4DF0-AB64-F8B7558FAC5D@gmail.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"sanjay Radia <sanjayosrc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"andrew thanks bringing issue moving java java important however seeing strong motivation changing major number go java series classpath issue hadoop minor force major number change pun intended let separate issue java hadoop sanjay"
    },
    "20407":{
        "ID":23395,
        "MESSAGE_ID":"1425349807827.88706@hortonworks.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Arun Murthy <acm@hortonworks.com>",
        "TAGS":"property",
        "BODY":"andrew thanks bringing discussion little puzzled feel like rehashing discussion last year agreed different course action switch jdk iac breaking compatibility hadoop pretty big cost particularly user yahoo twitter ebay several cluster compatibility paramount breaking compatibility perfectly fine time sufficient benefit hdfs ha yarn hadoop hadoop however struggling quantify benefit hadoop user cost breakage given already agreed put jdk classpath fairly minor irritant given existing solution new default classloader quantify benefit user could jdk hadoop definitely welcome run rm role release furthermore really concerned used opportunity break compat egregious way also foreseeing compat break otoh agree absolutely prevent compat breakage client server wire protocol feel point major release kind lost overall biggest concern compatibility story vi vi benefit thought thanks arun andrew wang sent monday march pm common dev hadoop apache org mapreduce dev hadoop apache org hdfs dev hadoop apache org yarn dev hadoop apache org subject looking hadoop release hi devs year half since went ga think due release notably two incompatible change would like call tremendous positive impact user first classpath isolation done hadoop long standing request many downstreams hadoop user second bumping source target jdk version jdk related hadoop important since jdk eol april two month past issue dependency discontinuing support old jdks future proof two also quite opportunity clean upgrade dependency another common user developer request would like propose start rolling series monthly ish series alpha release soon possible volunteering take rm cat herding responsibility already quite change slated besides instance script rewrite already value alpha time give downstreams integrate better open discussion inclusion change hoping freeze incompatible change maybe two alpha beta incompat change allowed finally ga keeping track mean ga four month would also like stress though intended big bang release instance would great could maintain wire compatibility rolling upgrade work keeping branch branch similar also make backports easier since likely maintaining yet please let know comment concern related people friendly idea would like cut branch start working first alpha best andrew"
    },
    "20410":{
        "ID":23392,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B66611AB6AB9@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"RE: Looking to a Hadoop 3 release",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"jdk support consideration look like many issue reported resolved already url"
    },
    "20411":{
        "ID":23391,
        "MESSAGE_ID":"0ACA11997C562042A7FDB41B0D58461001CA306B@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"RE: Looking to a Hadoop 3 release",
        "SENT_FROM":"\"Liu, Yi A\" <yi.a.liu@intel.com>",
        "TAGS":"not-ak",
        "BODY":"regard yi liu"
    },
    "20412":{
        "ID":23390,
        "MESSAGE_ID":"CAHz+ZFfJjb9iHh_woMQrLLTHNmV9NSr2cmrOS30d_vbHP=+JRg@mail.gmail.com",
        "PARENT_ID":23388.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Robert Kanter <rkanter@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"happy help"
    },
    "20414":{
        "ID":23388,
        "MESSAGE_ID":"CAA0W1bS4Bcpwb2gNgNbhtDkE_0_em6qwaeG0cOPzbdK5wK_MzQ@mail.gmail.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Yongjun Zhang <yzhang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"thanks andrew proposal happy help yongjun"
    },
    "20415":{
        "ID":23387,
        "MESSAGE_ID":"CAHGXCXwP4hBieLUuOVGMYBhTi5a3oESPw7kMUnEhOsag3=Rwjw@mail.gmail.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"Lei Xu <lei@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"would love help"
    },
    "20417":{
        "ID":23385,
        "MESSAGE_ID":"CA+4052kQtbZ0poWYv_yWjKq5_qvK48jUN1Y9N5MbK+Mpx1LtAA@mail.gmail.com",
        "PARENT_ID":23384.0,
        "SUBJECT":"Re: Looking to a Hadoop 3 release",
        "SENT_FROM":"\"Aaron T. Myers\" <atm@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sound like good plan thanks lot volunteering take andrew best aaron"
    },
    "20418":{
        "ID":23384,
        "MESSAGE_ID":"CAGB5D2Za9UHLjw1_+xNcJ0nSyWkJT2fXogCq_SUi6baFEv6+gQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Looking to a Hadoop 3 release",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"existence, technology",
        "BODY":"hi devs year half since went ga think due release notably two incompatible change would like call tremendous positive impact user first classpath isolation done hadoop long standing request many downstreams hadoop user second bumping source target jdk version jdk related hadoop important since jdk eol april two month past issue dependency discontinuing support old jdks future proof two also quite opportunity clean upgrade dependency another common user developer request would like propose start rolling series monthly ish series alpha release soon possible volunteering take rm cat herding responsibility already quite change slated besides instance script rewrite already value alpha time give downstreams integrate better open discussion inclusion change hoping freeze incompatible change maybe two alpha beta incompat change allowed finally ga keeping track mean ga four month would also like stress though intended big bang release instance would great could maintain wire compatibility rolling upgrade work keeping branch branch similar also make backports easier since likely maintaining yet please let know comment concern related people friendly idea would like cut branch start working first alpha best andrew"
    },
    "20502":{
        "ID":23300,
        "MESSAGE_ID":"CALamADKORNT+ThJTdmPa-vwTQHc=ukndrsJUJZ9Bzx76m2npTQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.3 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version release contains fix anyone upgrade soon possible apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "20528":{
        "ID":23274,
        "MESSAGE_ID":"D1028975.4EAA%lumzhang@adobe.com",
        "PARENT_ID":null,
        "SUBJECT":"Help needed: failed unit test based on miniMRCluster on Yarn with cdh 5.1.3",
        "SENT_FROM":"Lumin Zhang <lumzhang@adobe.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk encountered strange error trying upgrade cdh cdh unit test based minimrcluster clustermapreducetestcase run successfully cdh changed maven setting upgrade cdh running always failed tried isolate problem used standard unit test url compile maven setting reproduced error testing testrestart main info classpath stopping jobhistory main info classpath stopping history cleaner move done thread thread main error classpath expiredtokenremover received java lang interruptedexception sleep interrupted main info classpath shutting mini hdfs cluster main info classpath shutting datanode main warn classpath directoryscanner shutdown called test compatible mr mr also tried overwrite yarn configuration help tried google related issue luck particular issue comment help appreciated thanks much mvn configuration part follows cdh cdh cdh classpath hadoop client version hadoop classpath hadoop minicluster version hadoop minicluster classpath slfj logj project groupid common hadoop project version best regard lumin zhang"
    },
    "20543":{
        "ID":23259,
        "MESSAGE_ID":"CACO5Y4xdYgXYH=kiar=EObZpznHieh2tf7n-sVyzhEtf_jEsSw@mail.gmail.com",
        "PARENT_ID":23248.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"process",
        "BODY":"chrisn formulation exactly right patch manager force shame anyone caring issue one benefit rtc part code single maintainer exposed find collaborator either right community module project need acknowledge address bus factor code observing directing review patch manager accumulates context contributor anyone want work infra test crucible look like ambari started exploring last year david response sound like would willing work project experiment request gerrit url url"
    },
    "20554":{
        "ID":23248,
        "MESSAGE_ID":"D0FFB1EA.1B1CB%cnauroth@hortonworks.com",
        "PARENT_ID":23244.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"process",
        "BODY":"dont anticipate patch manager introducing new bottleneck originally described chris role patch manager review commit patch assigned area instead responsibility queue management following dormant jiras make sure progress made might involve patch manager review commit also might mean contacting someone else review closing duplicate making wont fix decision kind activity allen steve done lot lately see patch manager role addressing fact community grown large complex others mentioned always clear new contributor ask code review patch manager would familiar enough community help steer patch right direction suppose dont need formalize much anyone feel capable kind queue management certain area expertise please dive congratulation patch manager im sure everyone would appreciate chris nauroth hortonworks url"
    },
    "20558":{
        "ID":23244,
        "MESSAGE_ID":"CAAD07OLPTmHM0nqRdfmc019O+hhbD-_ziVVC_6KtyKfQZD26TQ@mail.gmail.com",
        "PARENT_ID":23242.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Tsuyoshi Ozawa <ozawa@apache.org>",
        "TAGS":"process, technology",
        "BODY":"trying crucible try whether integrated well solve problem splitting discussion crucible solves would great patch manager concern delay review patch size small amount work patch manager get long lived old patch making open automatically specific period pass also ping ml save time check old patch unit test slows patch iteration one solution running test parallel even distributed previous distributed experiment done full unit test run couple minute would fair amount work actually make production ready automating save reviewer time interested working distributed test environment prepared accelerate development hadoop heard swift community started maintain code url make component production ready need setup swift stub test environment feasible way agile board look helpful know status project glance mesos using url thanks tsuyoshi"
    },
    "20561":{
        "ID":23241,
        "MESSAGE_ID":"1895765118.1485354.1423554983336.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":23240.0,
        "SUBJECT":"Re: Proxy for HDFS",
        "SENT_FROM":"Rajiv Chittajallu <rajive@yahoo-inc.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"read documentation rahul shrivastava rajiv chittajallu cc hdfs dev hadoop apache org sent monday february pm subject proxy hdfs hi rajiv runtime user program provides credential username password etc hdfs verify acl entry username ofcourse password stored grant deny access file basic question user group provided runtime rather using process owner username client process also another reason asking proxy desire control access content example hide ssn bank account etc file rather file proxy sitting client datanode would achieve could apply filter content proxy level please guide feasible current hadoop architecture enhancement request build proxy hook hdfs apply policy decision proxy level make sense thanks rahul"
    },
    "20562":{
        "ID":23240,
        "MESSAGE_ID":"CAO_q5xrWA7qXio9zauhBae8XqZLvs6xqPahm_fotSmuWT6MPLw@mail.gmail.com",
        "PARENT_ID":23236.0,
        "SUBJECT":"Re: Proxy for HDFS",
        "SENT_FROM":"Rahul Shrivastava <rhshriva@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi rajiv runtime user program provides credential username password etc hdfs verify acl entry username ofcourse password stored grant deny access file basic question user group provided runtime rather using process owner username client process also another reason asking proxy desire control access content example hide ssn bank account etc file rather file proxy sitting client datanode would achieve could apply filter content proxy level please guide feasible current hadoop architecture enhancement request build proxy hook hdfs apply policy decision proxy level make sense thanks rahul"
    },
    "20566":{
        "ID":23236,
        "MESSAGE_ID":"1817552836.1380971.1423529591619.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":23235.0,
        "SUBJECT":"Re: Proxy for HDFS",
        "SENT_FROM":"Rajiv Chittajallu <rajive@yahoo-inc.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"sock proxy tcp connection would understand traffic new hdfs acl feature would provide additional control need beyond would better enhancement request hdfs building proxy url rahul shrivastava hdfs dev hadoop apache org rajiv chittajallu sent monday february pm subject proxy hdfs hi rajiv thanks quick reply use case follows please let know use hdfs rpc sock proxy achieve client connect hdfs proxy using hdfs driver httpfs webhdfs proxy sits client hdfs server client request access file hdfs cluster proxy recognizes client permission access file proxy reply back client data access denied please note policy drive access control file much complex acl file thanks rahul"
    },
    "20567":{
        "ID":23235,
        "MESSAGE_ID":"CAO_q5xr8Y5aCju-m91g8zFHvwZmsuNASGEhbc0gACDU16Qnh4A@mail.gmail.com",
        "PARENT_ID":23234.0,
        "SUBJECT":"Re: Proxy for HDFS",
        "SENT_FROM":"Rahul Shrivastava <rhshriva@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi rajiv thanks quick reply use case follows please let know use hdfs rpc sock proxy achieve client connect hdfs proxy using hdfs driver httpfs webhdfs proxy sits client hdfs server client request access file hdfs cluster proxy recognizes client permission access file proxy reply back client data access denied please note policy drive access control file much complex acl file thanks rahul"
    },
    "20568":{
        "ID":23234,
        "MESSAGE_ID":"399225710.1350330.1423523490175.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":23233.0,
        "SUBJECT":"Re: Proxy for HDFS",
        "SENT_FROM":"Rajiv Chittajallu <rajive@yahoo-inc.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"rahul client use hdfs rpc proxy required client allowed reach data node directly webhdfs apache traffic server hdfs rpc sock proxy work share use case would probably help rajive original message rahul shrivastava hdfs dev hadoop apache org rajiv chittajallu cc sent monday february pm subject proxy hdfs thanks rajiv look httpfs wanted build proxy hdfs layer specific client use http httpfs webhdfs talk hdfs cluster includes client us hdfs driver talk hdfs cluster thanks rahul"
    },
    "20569":{
        "ID":23233,
        "MESSAGE_ID":"CAO_q5xoN20_-Dm5qvO3iLNeKp_2s902U_2F1xCuVnLMNKfJmjA@mail.gmail.com",
        "PARENT_ID":23232.0,
        "SUBJECT":"Re: Proxy for HDFS",
        "SENT_FROM":"Rahul Shrivastava <rhshriva@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks rajiv look httpfs wanted build proxy hdfs layer specific client use http httpfs webhdfs talk hdfs cluster includes client us hdfs driver talk hdfs cluster thanks rahul"
    },
    "20570":{
        "ID":23232,
        "MESSAGE_ID":"1023034372.1349736.1423522397407.JavaMail.yahoo@mail.yahoo.com",
        "PARENT_ID":23231.0,
        "SUBJECT":"Re: Proxy for HDFS",
        "SENT_FROM":"Rajiv Chittajallu <rajive@yahoo-inc.com.INVALID>",
        "TAGS":"not-ak",
        "BODY":"url original message rahul shrivastava hdfs dev hadoop apache org cc sent monday february pm subject proxy hdfs hi looking hdfs code base last couple day possible proxy could utilize create proxy hdfs hook within hdfs build proxy around thanks rahul"
    },
    "20571":{
        "ID":23231,
        "MESSAGE_ID":"CAO_q5xoaH5TVGgr1h3oymxhnxWTVEq5Bhb5Fi4DgT8cx0q4Teg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Proxy for HDFS",
        "SENT_FROM":"Rahul Shrivastava <rhshriva@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi looking hdfs code base last couple day possible proxy could utilize create proxy hdfs hook within hdfs build proxy around thanks rahul"
    },
    "20572":{
        "ID":23230,
        "MESSAGE_ID":"CA+qbEUOU48bYdfkQmKSiJCv3B8m9fbUhk6T_z3S1ZWBzivQPNA@mail.gmail.com",
        "PARENT_ID":23222.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"technology",
        "BODY":"happened crucible experiment get chance try would great way speed patch review one well integrated jira gerrit unless find way mirror comment jira think splitting discussion far worse thing letting minor patch languish even assuming gerrit would solve seems unclear health community important think normal healthy post hdfs dev email developer hold meeting try promote patch idea discussion seems assuming hadoop machine turning patch available jiras commits community sometimes necessary email people talk get help jira know heart right place jira example given persuasive thing would encounter real cluster nobody us hadoop ipv nobody us hadoop without setting dns find specific set issue community ignored good error message bad networking setup configuration issue etc could create umbrella jira make sustained effort get done perhaps could also thing like batching findbugs fix fewer jiras suggested best colin"
    },
    "20591":{
        "ID":23211,
        "MESSAGE_ID":"CA+qbEUPUhsmLNRZnUmqKb1PaD2W0m1EaGDNG2OGqf3CgrbEPdw@mail.gmail.com",
        "PARENT_ID":23207.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"process",
        "BODY":"think healthy lot jiras patch available mean lot interest project people want contribute would unhealthy jiras really needed get getting beyond horror story usually seem happen agree make effort review thing come new contributor always set aside time week look new jiras list review one feel like think patch manager patch person submitted chris suggested nobody reviewing email people reviewed earlier ask email list ask right approach bring attention issue like idea cleaning old jiras longer apply abandoned perhaps picking issue forgotten part release management mind release manager decides need get feature bugfixes release push jiras committers responsible making happen since jiras implement feature bugfixes naturally fall release management several company worked done internally cheer colin"
    },
    "20595":{
        "ID":23207,
        "MESSAGE_ID":"54D4083E.7080709@oss.nttdata.co.jp",
        "PARENT_ID":23203.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Akira AJISAKA <ajisakaa@oss.nttdata.co.jp>",
        "TAGS":"process",
        "BODY":"thinking unhealthy jiras patch available reviewer welcome review patch everywhere increase developer future reviewer completely sure patch manager make healthy however changing process discussion would help improving mindset committers let review patch developer also review patch interested comment help committers review merge see comment enforcement regard akira"
    },
    "20599":{
        "ID":23203,
        "MESSAGE_ID":"CALwhT96VgM3unK=-uKnc+E9GZGM-PC+enhkoBt4uGA4CJcqm-g@mail.gmail.com",
        "PARENT_ID":23201.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"patch manager per component"
    },
    "20600":{
        "ID":23202,
        "MESSAGE_ID":"CACO5Y4xiNt+_Dm-Bvdm7aWVjJ0Rcy9OEpCH_nbWpDgY9C3ysBQ@mail.gmail.com",
        "PARENT_ID":23201.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"many way find reviewer look set watcher email people work component check git unsure recently even email random committers ask lead privately ask people stopped responding issue even issue coworker close collaborator solicit feedback new committers set expectation role gracious reviewer inviting volunteer patch manager process role available useful appreciated"
    },
    "20601":{
        "ID":23201,
        "MESSAGE_ID":"D76D2129-CB84-4838-815A-5DB2B2832250@altiscale.com",
        "PARENT_ID":23200.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"process really problem directly actually increase pool beyond feeling generous today committers never mind pmc actually review patch come outside employer regular basis put perspective jiras patch available status across three project right even counting one know personally removed pa status patch longer applies"
    },
    "20602":{
        "ID":23200,
        "MESSAGE_ID":"CACO5Y4wh-_VcsYVpX7RkV5-DmVn7S62o_BAtHOAZaZcn8o6wpQ@mail.gmail.com",
        "PARENT_ID":23196.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"process",
        "BODY":"release manager committers trying roll release enduring role patch manager someone helping track work direct reviewer issue job come hat could look badge gun would help require lot hand wringing diagnosis concerned queue start trying find reviewer viable patch also close issue require much work fix least mark later every idea need end commit silence frustrating contributor"
    },
    "20603":{
        "ID":23199,
        "MESSAGE_ID":"D0F7B6C5.1A07A%cnauroth@hortonworks.com",
        "PARENT_ID":23198.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"process",
        "BODY":"main jira dashboard project issue tab useful summary statistic link filtered query notably link unresolved issue grouped project sub component url jira project plugin issue panel url jira project plugin issue panel url jira jira project plugin issue panel url jira project plugin issue panel see many represent much smaller manageable work queue trying sift patch available worse yet unresolved example result hadoop common native hdfs snapshot mapreduce job history server yarn capacity scheduler url esolution unresolved component native order priority desc url olution unresolved component snapshot order priority desc url resolution unresolved component jobhistoryserver order priority desc url olution unresolved component capacityscheduler der priority desc suppose ask committers act patch manager role associated per component query work queue people working area expertise likely process queue efficiently people want stretch area code le familiar volunteering patch manager could way ramp success approach would depend quality jira metadata wed need diligent assigning issue correct component may also find need restructure component breakdown time right tends mirror java package structure pretty closely something like namenode quite broad patch queue thought chris nauroth hortonworks url"
    },
    "20604":{
        "ID":23198,
        "MESSAGE_ID":"etPan.54d26fa9.19495cff.103a6@stevel.local",
        "PARENT_ID":23196.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"process",
        "BODY":"worrying ongoing situation release approach someone effectively go full time gatekeeper good release saying late feature low risk non critical bug fix mean non critical stuff get release approach good thing release stability getting work active patch queue management something going release made even near release branch problem take time effort time review code test maybe even tune bit help big bit work get full time part time support committers stand chance getting effort needed project usually mean engineer question allocated time employer big project support think patch going trouble new nfs client proposal example personally see would nice going go near little bit work take le continuous time effort someone understands area question need go provide feedback help get think enough understand time effort think miss process"
    },
    "20606":{
        "ID":23196,
        "MESSAGE_ID":"CA+qbEUPvJanmSKCi-Yi4P4Tx1H=HibDnSEQ3x6+mNy53kVtPdA@mail.gmail.com",
        "PARENT_ID":23173.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"\"Colin P. McCabe\" <cmccabe@apache.org>",
        "TAGS":"process",
        "BODY":"wonder work logically fall release manager role release generally spend little bit time thinking new feature added system stabilized interface changed etc etc give perspective look backwards old jiras either close longer relevant target next release appropriate encouragement people might expertise make happen best colin"
    },
    "20629":{
        "ID":23173,
        "MESSAGE_ID":"CAHpOOhEuhvgwz2vCT-SDxW-xog-w4qqHO0u-Dye855gtQeEkMQ@mail.gmail.com",
        "PARENT_ID":23172.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Mai Haohui <ricetons@gmail.com>",
        "TAGS":"process",
        "BODY":"idea patch manager patch manager good expertise specific field productive reviewing patch driving development specific field forward haohui"
    },
    "20630":{
        "ID":23172,
        "MESSAGE_ID":"D0F521F1.19B5D%cnauroth@hortonworks.com",
        "PARENT_ID":23168.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"process, technology",
        "BODY":"like idea patch manager monitoring specific queue issue perhaps implemented set jira filter different value component label field right looking whole hadoop backlog daunting using separate filtered review queue could help reviewer focus parallelize work going back topic tooling learned multiple apache project expressed interest gerrit recently never used gerrit cant speak favor think consistency across apache benefit issue infra discussion issue closed recent discussion comment url chris nauroth hortonworks url"
    },
    "20634":{
        "ID":23168,
        "MESSAGE_ID":"CACO5Y4wpn+y+1j2WZhvdfGk8OF1EVKb+j30wM4JsybF9ty=zyA@mail.gmail.com",
        "PARENT_ID":23167.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"process",
        "BODY":"many project unofficial patch manager url people go outstanding issue ensuring reached stable state least willing reviewer"
    },
    "20635":{
        "ID":23167,
        "MESSAGE_ID":"etPan.54cf6351.19495cff.7ea0@stevel.local",
        "PARENT_ID":23166.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"given experience apache review know much time spend curious gerrit jira integration sought cruicible sound better returning issue discussion improving test time would make big difference locally well jira clear today backlog without relying future piece technology magically fixing clearing backlog see solution people put time know obligation committers also know little time thing deal test failing result thing viewed critical get neglected build object store cruft cleanup etc think people care area going get together sync stuff may quite fast people may noticed brought build dependency forward fairly fast recently goal hadoop branch trunk compatible recent guava version java object store work last couple weekend slow test run take minute far end test run jenkins anyone else want look swift queue input welcome course aw went entire backlog stuff lot branch feature strategy deal thing queue"
    },
    "20636":{
        "ID":23166,
        "MESSAGE_ID":"42EBD4FB-FF85-4AE5-9BB7-4604915A95DB@altiscale.com",
        "PARENT_ID":23165.0,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"technology",
        "BODY":"fact review apache org user url mostly appear bot give zero confidence using tool anything real"
    },
    "20637":{
        "ID":23165,
        "MESSAGE_ID":"CAMm20=4a616NrmGC4V-EmbEqhtbQ2QF1dZR7B5E3ckuj8ocRjg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Patch review process",
        "SENT_FROM":"Gera Shegalov <gera@apache.org>",
        "TAGS":"process, technology",
        "BODY":"splitting conversation via reviewboard jira definitely problem hit previously since reviewboard probably tool well generate email set comment could leverage jira functionality make sure reflected jira well probably pre post processing required make sure happens course since crucible delivers box first candidate look url url url"
    },
    "20677":{
        "ID":23125,
        "MESSAGE_ID":"CALamADKcVN08n+HhdhKZDqQ=ZJpm-WKEH9ieYA1PL0jbYkGxoQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.0.12 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "20741":{
        "ID":23061,
        "MESSAGE_ID":"OFAD81AF97.55BF87D7-ON48257DCB.002FE928-48257DCB.00327F89@cn.ibm.com",
        "PARENT_ID":23023.0,
        "SUBJECT":"Java code design issue",
        "SENT_FROM":"Cheng Jie He <hechjie@cn.ibm.com>",
        "TAGS":"existence",
        "BODY":"trunk branch cassandra code file src java org apache cassandra service gcinspector java import classpath seems specific implementation sun common use could make implementation high level interface level thanks jack"
    },
    "20745":{
        "ID":23057,
        "MESSAGE_ID":"CAA0W1bTYAeG5sYEfiVE-FCmOjF9PN_LEYoeNSMNHdb6JEtTpbA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"help on look at one issue YARN-3021",
        "SENT_FROM":"Yongjun Zhang <yzhang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hello yarn expert ran issue harsh created url description pasted posted comment jira would folk please take look give insight much appreciated thanks best regard yongjun consider scenario realm common trust common trust common one way trust run hdfs yarn cluster one log common credential run job yarn need access hdfs distcp operation fails rm attempt renewdelegationtoken synchronously application submission validate managed token add scheduler automatic renewal call obviously fails realm trust credential rm principal renewer jobtracker call present done asynchronously renewal attempt failed simply ceased schedule attempt renewal rather fail job immediately change logic attempt renewal go easy failure skip scheduling alone rather bubble back error client failing app submission way old behaviour retained"
    },
    "20779":{
        "ID":23023,
        "MESSAGE_ID":"OFFA3BE7DF.09A4CFEA-ON48257DC5.002CA9BA-48257DC5.0041C823@cn.ibm.com",
        "PARENT_ID":23019.0,
        "SUBJECT":"the issues when porting Cassandra to IBM power8 machine",
        "SENT_FROM":"Cheng Jie He <hechjie@cn.ibm.com>",
        "TAGS":"not-ak",
        "BODY":"trying port cassandra ibm power platform little endian ubuntu installed follow test failed error hcj ubuntu hcj ant test dtest name preparedstatementstest error log junit junit testcase teststatementrepreparationonreconnect classpath caused error junit host tried query failed host tried junit classpath host tried query failed host tried junit classpath nohostavailableexception java junit classpath defaultresultsetfuture java junit classpath defaultresultsetfuture java junit classpath abstractsession java junit classpath preparedstatementstest java junit caused classpath host tried query failed host tried junit classpath requesthandler java junit classpath sessionmanager java junit classpath sessionmanager java junit classpath sessionmanager java junit hcj ubuntu hcj cassandra cassandra trunk ant test dtest name nativecelltest error log junit warning multiple version ant detected path junit junit jar file usr share ant lib ant jar org apache tool ant project class junit jar file home hcj cassandra cassandra trunk build lib jar ant jar org apache tool ant project class junit testsuite classpath junit test run failure error skipped time elapsed sec junit junit standard output junit warn jna link failure one native method unavailable junit warn jna link failure one native method unavailable junit junit testcase testcells classpath failed junit junit junit framework assertionfailederror junit classpath nativecelltest java junit classpath nativecelltest java junit hcj ubuntu hcj cassandra cassandra trunk ant test dtest name sstablemetadatatest error log junit standard output junit warn jna link failure one native method unavailable junit warn jna link failure one native method unavailable junit junit testcase testwithdeletes classpath failed junit expected junit junit framework assertionfailederror expected junit classpath sstablemetadatatest java junit could anyone give hint hacking three issue related native lib lib need recompiled thanks jack"
    },
    "20783":{
        "ID":23019,
        "MESSAGE_ID":"20150105203138.C960AA4061F@tyr.zones.apache.org",
        "PARENT_ID":23014.0,
        "SUBJECT":"[GitHub] cassandra pull request: opinion on refactoring ListenableFuture to...",
        "SENT_FROM":"yulin2 <git@git.apache.org>",
        "TAGS":"not-ak",
        "BODY":"github user yulin closed pull request url project set reply email reply appear github well project feature enabled wish feature enabled working please contact infrastructure infrastructure apache org file jira ticket infra"
    },
    "20784":{
        "ID":23018,
        "MESSAGE_ID":"20150105192400.4E42FA402E7@tyr.zones.apache.org",
        "PARENT_ID":23014.0,
        "SUBJECT":"[GitHub] cassandra pull request: opinion on refactoring ListenableFuture to...",
        "SENT_FROM":"MarkReddy <git@git.apache.org>",
        "TAGS":"process",
        "BODY":"github user markreddy commented pull request url yulin pull request used apache cassandra please open jira url improvement idea issue share close request project set reply email reply appear github well project feature enabled wish feature enabled working please contact infrastructure infrastructure apache org file jira ticket infra"
    },
    "20788":{
        "ID":23014,
        "MESSAGE_ID":"git-pr-50-cassandra@git.apache.org",
        "PARENT_ID":null,
        "SUBJECT":"[GitHub] cassandra pull request: opinion on refactoring ListenableFuture to...",
        "SENT_FROM":"yulin2 <git@git.apache.org>",
        "TAGS":"existence",
        "BODY":"github user yulin opened pull request url opinion refactoring listenablefuture java completablefuture research new concurrent construct java found completablefuture java functionality guava listenablefuture completablefuture much nicer come together lambda expression java monadic make code readable cleaner also provides way compose different task therefore using completablefuture instead listenablefuture better future extension maintenance code tried refactoring one guava listenablefuture java completablefuture cassandra see difference code merge pull request wondering opinion kind refactoring migrating code java java think refactoring useful plan use java merge pull request git repository running git pull url trunk alternatively review apply change patch url close pull request make commit master trunk branch least following commit message close commit bffcdfbffcad author yu lin date refactor one listenablefuture java completablefuture project set reply email reply appear github well project feature enabled wish feature enabled working please contact infrastructure infrastructure apache org file jira ticket infra"
    },
    "20843":{
        "ID":22959,
        "MESSAGE_ID":"CAD-m5HMRf_+s-iTCzXhrhUmuiNS7FDQSJELvCbMvPiJ0wTsFTw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Using hadoop with other distributed filesystems",
        "SENT_FROM":"Behrooz Shafiee <shafiee01@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hello folk developed distributed file system want try hadoop mapreduce posix compatible file system mounted directory eg myfs wondering configure hadoop use instead hdfs configuration need changed source file modify using google came across sample using lustre hadoop tried apply failed setup cluster mounted filesystem myfs node changed core site xml maprd site xml following core site xml default name file defaultfs file hadoop tmp dir myfs mapred site xml mapreduce jobtracker staging root dir myfs user mapred system dir myfs system mapred local dir myfs mapred host name finally hadoop env sh added dhost name hostname hadoop opts however try start namenode get error fatal classpath failed start namenode java lang illegalargumentexception invalid uri namenode address check defaultfs file home ko msthesis bfs mountdir authority classpath namenode java classpath namenode java classpath namenode java classpath namenode java classpath namenode java classpath namenode java classpath namenode java classpath namenode java classpath namenode java info classpath exiting status starting datanodes get error fatal classpath exception securemain java io ioexception incorrect configuration namenode address dfs namenode servicerpc address dfs namenode rpc address configured classpath dfsutil java classpath blockpoolmanager java classpath datanode java classpath datanode java classpath datanode java classpath datanode java classpath datanode java classpath datanode java classpath datanode java info classpath exiting status really appreciate one help problem thanks advance behrooz"
    },
    "20868":{
        "ID":22934,
        "MESSAGE_ID":"CAKtuutGGhxgaG3fCQp9bmJjQY9y9UCv46ypr7FgTPr0D-86NUA@mail.gmail.com",
        "PARENT_ID":22932.0,
        "SUBJECT":"Re: a friendly suggestion for developers when uploading patches",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"research changing default order attachment configuration infra issue turned controversial topic jira explicitly rejected developer many user unsatisfied url thought simple thing fix oh well revision number way go thanks konst"
    },
    "20870":{
        "ID":22932,
        "MESSAGE_ID":"CAGB5D2YHzhZRd6VF784JfDdo+OZQHkK-ntwH__hmQ3usdVM+wA@mail.gmail.com",
        "PARENT_ID":22931.0,
        "SUBJECT":"Re: a friendly suggestion for developers when uploading patches",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"changing default sort order address point steve brought local downloads want push infra jira though please feel free best andrew"
    },
    "20871":{
        "ID":22931,
        "MESSAGE_ID":"CAKtuutGFjNJRtOmmcg8Xie0rGi3Z-PiGgqjEYKMQ6k_Vszqk7w@mail.gmail.com",
        "PARENT_ID":22905.0,
        "SUBJECT":"Re: a friendly suggestion for developers when uploading patches",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"process",
        "BODY":"guy agree revision number useful need reference particular attachment well argument general point infrastructure use convenient user simple thing automatically rather introducing rule overcome certain shortcoming tool think attachment list ordered date rather name enumerated like subtasks would solved issue discussed communicate changing default ordering attachment infra time ago remember created jira open one thanks konst"
    },
    "20897":{
        "ID":22905,
        "MESSAGE_ID":"CA+4kjVtnEedds5panUT3cVAp1tOxd-wFJTX5x16wh-DLteB3fA@mail.gmail.com",
        "PARENT_ID":22903.0,
        "SUBJECT":"Re: a friendly suggestion for developers when uploading patches",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"process",
        "BODY":"couple benefit post patch add comment like patch killed npe auth comment history integration revision also private git repository correlate commits patch version list creation order directory matter create patch stick dir specific jira work highest number increment one creating new one yet retain whole patch history locally also download external patch review apply incoming dir numbering help manage verify really applying relevant patch mean change order though think something per project basis take infrastructure"
    },
    "20899":{
        "ID":22903,
        "MESSAGE_ID":"CAA0W1bQ-Ouxd7dRzQpTjizCCUQz9uxjrGYLr+OyYxW7ntZzEUw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: a friendly suggestion for developers when uploading patches",
        "SENT_FROM":"Yongjun Zhang <yzhang@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi konst thanks good suggestion certainly would help advantage include revision number patch name would ordering name date would easier refer individual patch say need refer multiple patch making comment comparing revx revy pro con create new rev patch file submitting use name previous one would overwrite previous one download patch file directory depending order downloading patch would possibly appear order submitted best regard yongjun"
    },
    "20947":{
        "ID":22855,
        "MESSAGE_ID":"54883102.3010003@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Scheduler questions",
        "SENT_FROM":"Oleg Sukhoroslov <oleg.sukhoroslov@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi hadoop cluster used many user student competing resource would like prioritize job based resource usage history per user functionality common among classic hpc scheduler url afaik fairsharescheduler take account current resource usage plan ongoing effort implement fair share scheduling based resource usage history similar question regarding limiting job resource usage similar fashion classical hpc cluster plan support specifying enforcing limit total cpu time per job task thanks lot oleg"
    },
    "20957":{
        "ID":22845,
        "MESSAGE_ID":"54868426.5010206@oracle.com",
        "PARENT_ID":22840.0,
        "SUBJECT":"Re: Solaris Port",
        "SENT_FROM":"malcolm <malcolm.kavalsky@oracle.com>",
        "TAGS":"not-ak",
        "BODY":"hi colin short summary change follows native source file added modified requiring also change cmakelists txt course change ifdeffed solaris appropriately new file prefixed solaris well example solaris errno errlist used quite lot hadoop native code could replaced call use strerror instead would compatible linux however interest making minimal change recreated added file running solaris machine instead another issue solaris timeout option socket write solaris read routine timeout added domainsocket issue lz sparc needed modification specific issue getgrouplist container executer yarn minor change made java source file mainly test get pas solaris change made recheck everything latest trunk maybe fix needed generated single patch file change perhaps would better file multiple jiras change perhaps grouped one per issue file jira modified source file thank malcolm"
    },
    "20962":{
        "ID":22840,
        "MESSAGE_ID":"CA+qbEUNmZd682nqqa=-KDavb3PL7WAixhYxLUZ3X+DTa6Ratog@mail.gmail.com",
        "PARENT_ID":22833.0,
        "SUBJECT":"Re: Solaris Port",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"not-ak",
        "BODY":"hi malcolm great going contribute please make patch trunk fairly old point focus development year use github pull request check section url talk contributing work excerpt finally patch attached issue report jira via attach file link issue jira please add comment asks code review following code review checklist please note attachment granted license asf inclusion asf work per apache license say attach patch file jira created hit submit patch think branch required work since build fix right best colin"
    },
    "20969":{
        "ID":22833,
        "MESSAGE_ID":"54858BDF.3030206@oracle.com",
        "PARENT_ID":null,
        "SUBJECT":"Solaris Port",
        "SENT_FROM":"malcolm <malcolm.kavalsky@oracle.com>",
        "TAGS":"not-ak",
        "BODY":"ported hadoop native library solaris sparc intel oracle agreed release change community solaris platform benefit reading howtocontribute gitandhadoop document clear get change main tree also git hub newbie using svn previously please let know going correct path forked hadoop github downloaded clone development machine change made still add change branch hopefully get accepted must migrate change main hadoop download page still listed ga version understand create new branch change generate pull request uploading github also registered jira understanding need generate jira number change name branch accordingly make sense thanks malcolm"
    },
    "21208":{
        "ID":22594,
        "MESSAGE_ID":"CALamADJW+XfmCKpk_jD1k-fNjj=bBJOuZsqwEe=KW7oB37J6XA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[RELEASE] Apache Cassandra 2.1.2 released",
        "SENT_FROM":"Jake Luciani <jake@apache.org>",
        "TAGS":"not-ak",
        "BODY":"cassandra team pleased announce release apache cassandra version apache cassandra fully distributed database right choice need scalability high availability without compromising performance url downloads source binary distribution listed download section url version bug fix release series always please pay attention release note let know encounter problem enjoy url change txt url news txt url"
    },
    "21288":{
        "ID":22514,
        "MESSAGE_ID":"CA+Hcz5_zC96Fda2P5Nx4c-arXgAWZ2gbSxzT_9jZi=8jPSe5tQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Finding source of unclean app master shutdown",
        "SENT_FROM":"Noah Watkins <noah.watkins@inktank.com>",
        "TAGS":"not-ak",
        "BODY":"appologize duplicate yarn dev realized later probably related mr running mr non hdfs file system backend ceph noticed process exit killed file system client properly shutdown filesystem close completing need clean shutdown right release resource cleaned lead timeouts slow every client adjusted yarn timeout affecting delay sigkill sent container resolve problem container map task one instance unclean shutdown trouble tracking based file system trace unknown process appears appmaster manager process particular stats file related job end remove many configuration file commit success file finally remove job staging directory seems match behavior appmaster first question actually seeing behavior appmaster full trace url final job staging directory removed trace truncated suggesting process immediately exited killed second question app master might causing unclean shutdown way control noticed mrappmaster main conf setboolean automatic close false seem find instance file system close called explicity thanks noah"
    },
    "21294":{
        "ID":22508,
        "MESSAGE_ID":"CAM=XDd-djLNhn2Lg=EamTBuDesTLgHz0AcwL-xvPU9fWKb7HcQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Apache Tajo\u2122 0.9.0 has been released!",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"apache tajotm released apache tajo team pleased announce release apache apache tajo provides low latency scalable sql query processing hadoop release available immediate download url major release apache tajo team resolved issue including lot new feature bug fix improvement apache tajo mainly focues advanced sql feature window function multiple distinct aggregation performance improvement offheap tuple skewness handling runtime code generation scalability large cluster improved shuffle fetch sql feature timestamp date time refactoring tajo interval type support tajo window function clause support tajo order group clause allow column reference well expression multiple distinct aggregation tajo order null first support create table like support concat concat function support char date time format coalesce boolean date time timestamp performance improvement offheap tuple block zero copy tuple tajo offheap sort operator order tajo hash shuffle improvement tajo better automatic parallel degree choice operator involving hash range shuffle skewness handling hash shuffle tajo runtime code generation evaluating expression tajo lot query optimizer improvement hadoop integration hadoop higher support hive meta store access support updated parquet tajo availability reliability stability tajomaster ha tajo stable error tolerant fetch tajo tajo tajo tajo tajo important improvement mariadb catalog store support tajo linux hdfs utility support tajo tajo complete list new feature improvement fixed problem please see release note url also see asf official announcement url many thanks contributor release alvin henrick daemyung kang david chen hyoung jun kim hyunsik choi ilhyun suh jaehwa jung jae young lee jihun kang jinho kim jihoon son jongyoung park mai hai thanh min zhou keuntae park prafulla seungun choe seonghwa ahn youngjun park wan heo apache tajo team looking developer course user help grow community give feedback mailing list information url"
    },
    "21560":{
        "ID":22242,
        "MESSAGE_ID":"2AAF97C6-A3F8-4612-A2C4-859276A020FA@altiscale.com",
        "PARENT_ID":22240.0,
        "SUBJECT":"Re: [DISUCSS] Reasonable Hadoop ACL Defaults",
        "SENT_FROM":"Allen Wittenauer <aw@altiscale.com>",
        "TAGS":"not-ak",
        "BODY":"removing security adding hdfs dev"
    },
    "21562":{
        "ID":22240,
        "MESSAGE_ID":"CAJS6+b6E9VViXyQ-D7gXMXub10HTRxooc2sUXZQ-SML-cYR+Bg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISUCSS] Reasonable Hadoop ACL Defaults",
        "SENT_FROM":"Zhijie Shen <zshen@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"hi folk bunch acls configuration default set yarn admin acl yarn default xml yarn scheduler capacity root default acl submit application acl administer queue capacity scheduler xml security protocol acl hadoop policy xml acl server authorization enabled resource supposed protected still accessible however anybody still access default configuration accepting anybody default seem make much sense confuse user instead reasonable behavior acl enabled user going denied default unless explicitly add admin acls authorized user group list patch invert block user default please let think progress thanks zhijie zhijie shen hortonworks inc url confidentiality notice notice message intended use individual entity addressed may contain information confidential privileged exempt disclosure applicable law reader message intended recipient hereby notified printing copying dissemination distribution disclosure forwarding communication strictly prohibited received communication error please contact sender immediately delete system thank"
    },
    "21634":{
        "ID":22168,
        "MESSAGE_ID":"64C3D75C-09C1-4DA9-BF7A-1A88A2414FB6@icloud.com",
        "PARENT_ID":22167.0,
        "SUBJECT":"Re: [contrib] Idea\/ Reduced I\/O and CPU cost for GET ops",
        "SENT_FROM":"Mark Papadakis <markuspapadakis@icloud.com>",
        "TAGS":"not-ak",
        "BODY":"hi benedict well method indeed applies update pertain exactly column like said say go back product example end updating price title every day therefore end dozen sstables one sstable property product merchant info category image almost update price title help avoid cpu cost consider sstables index chunk segment almost always cached method requirement work even exact set column row sstable however limited first distinct one per sstable basis interesting made similar choice albeit differently different reason timestamp ttls compression per file layout index etc described heuristic practice workload update retrieval pattern described extremely effective also particularly cheap turned compute store add little overhead get logic impl configured per cf basis either method selected know make sense thank link great idea look like great update"
    },
    "21635":{
        "ID":22167,
        "MESSAGE_ID":"CAFqWSgc3PMtF2Q3cvS-jF8mk5EJVMd3qcwUnxRQ12FvE0n42-g@mail.gmail.com",
        "PARENT_ID":22163.0,
        "SUBJECT":"Re: [contrib] Idea\/ Reduced I\/O and CPU cost for GET ops",
        "SENT_FROM":"Benedict Elliott Smith <belliottsmith@datastax.com>",
        "TAGS":"existence",
        "BODY":"hi mark specific heuristic unlikely applied understood correctly narrow window utility update hit exactly clustering column cql row data column trivial maintain either cpu memory wise however two variant heuristic already considered inclusion part new sstable format introducing cassandra extension heuristic already applied whole sstable level per partition store maximum timestamp whether sits hash index key cache clustering column index part open question permit stop looking file complete set data expect return selected field complete set selected row per clustering row may store enough information construct max timestamp row permit stop looking data page know selected field given row"
    },
    "21639":{
        "ID":22163,
        "MESSAGE_ID":"709C6211-BB6B-412B-B595-7C582FFBDB4E@icloud.com",
        "PARENT_ID":null,
        "SUBJECT":"[contrib] Idea\/ Reduced I\/O and CPU cost for GET ops",
        "SENT_FROM":"Mark Papadakis <markuspapadakis@icloud.com>",
        "TAGS":"existence",
        "BODY":"greeting heuristic help eliminate unnecessary certain workload datasets often many order magnitude description problem faced dealt pretty certain easily implemented albeit likely require new sstable format support semantics described example one service price comparison service many million product datastore access row single page request almost multigets executed parallel datastore implementation fine rarely take get back response request practice need update key value row multiple time day merchant tend update price every hour odd reason mean key column exist multiple almost always sstables cf almost always merge final value key many sstables opposed need access single sstable fact cf service need merge sstables get final cf reason row update frequently opposed say user cf typically set row creation infrequently surely must way exploit pattern access update semantics sstables partitioned chunk one chunk index chunk hold distinctkeyid offset sorted distinctkeyid map allows map distinctkeyid data chunk region skip list offset offset respective data chunk region store bit offset save byte row every gb track another data chunk region practice constant operation mitigating io access merge cost anyway enabled additional cost bit entry index chunk instead keyid offset use keyid offset latestts signature cf serialise sstable identify latest timestamp column millisecond need unix timestamp depending configuration also either digest column name currently use crc build sstable index chunk store distinctkeyid datachunksegmentoffset latesttimestamp digest compute mask based first distinct column name encountered far pseudocode dictionary sstabledistinctcolumnnames uint mask const auto cf column const auto name name sstabledistinctcolumnnames isset name mask datachunksegmentoffset latesttimestamp map also store sstabledistinctcolumnsnames sstable header sstable header chunk store kv record method come pro con though probably make sense get going already list later get response every cf sstable something like pseudocode struct candidate sstable uint offset time uint vector candidate const auto table cf sstables time latestts uint const auto actualoffset table offset key latestts actualoffset continue candidate append table actualoffset latestts isempty nothing return sort const candidate const candidate return trivialcmp offset offset depending decide store mask digest column name set seen const auto seen isset seen update exact column already continue seen add unserialize cf etc merge core idea safely disregard sstable row exact column cf found later cf found earlier uint seen logic outlined need map one sstables column name another based stored index pseudocode const auto seen care column row continue seen unserialize cf etc merge pro con pro con easier compute restriction first distinct column pro con support interleaved column opposed many exact column req configurable per cf basis usually choose maybe could consider heuristic probably benefit user apology make sense anyway feel free ignore mark papadakis markpapadakis"
    },
    "22103":{
        "ID":21699,
        "MESSAGE_ID":"CA+qbEUN2=gYNr-pprMX-5apo43p_Tzj9_jedwVZMPn6zA_H9Tg@mail.gmail.com",
        "PARENT_ID":21673.0,
        "SUBJECT":"Re: [DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"not-ak",
        "BODY":"colin"
    },
    "22105":{
        "ID":21697,
        "MESSAGE_ID":"CALwhT96hkvmFG6Gdo+LiA40CDDYm1NSAW7x+rTtD8hjJrCsAyg@mail.gmail.com",
        "PARENT_ID":21694.0,
        "SUBJECT":"Re: [DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"thanks everyone chiming created url blocker"
    },
    "22108":{
        "ID":21694,
        "MESSAGE_ID":"CABCYYb-CVkGdwsU7=tpazHooAjm6+v2AcX43js3R6nXCyQdSZQ@mail.gmail.com",
        "PARENT_ID":21681.0,
        "SUBJECT":"Re: [DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"process",
        "BODY":"proposal believe stating class without annotation implicitly private consistent publish javadocs includepublicannotationsstandarddoclet used root pom xml filter class explicitly public annotation chris nauroth hortonworks url"
    },
    "22121":{
        "ID":21681,
        "MESSAGE_ID":"CALwhT97tzMs_5s9z93TZM1kCVyzZE9SYK-r-o=eNCCTuTf6bZQ@mail.gmail.com",
        "PARENT_ID":21679.0,
        "SUBJECT":"Re: [DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"process",
        "BODY":"fair point jason fact include compatibility guideline affect developer go still strive annotate every new class add reviewer continue check however case miss annotation burdened support apis essentially eternity aware downstream project use private apis also seen improve recent past compatible release hoping let know apis would like see eventually use public stable apis"
    },
    "22123":{
        "ID":21679,
        "MESSAGE_ID":"53CFC533.9000707@yahoo-inc.com",
        "PARENT_ID":21673.0,
        "SUBJECT":"Re: [DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Jason Lowe <jlowe@yahoo-inc.com.INVALID>",
        "TAGS":"existence",
        "BODY":"think reasonable proposal long understand change burden finding thing marked private finding thing marked public tom graf pointed earlier discussion limitedprivate may impossible straightforward task use interface marked public user basic thing without straying public interface ton code break assume always fair game change anything marked public well used non public interface argument useful context long good making sure officially supported feature corresponding public interface wield agree easier track rather track class private hopefully user understand thing work help file jiras interface need public get work done jason"
    },
    "22124":{
        "ID":21678,
        "MESSAGE_ID":"CAAD07O+Cc1oegzjaVLTe3JN_yvKQ=d5HH+ZBT9NY4Et_K=BdGQ@mail.gmail.com",
        "PARENT_ID":21673.0,
        "SUBJECT":"Re: [DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Tsuyoshi OZAWA <ozawa.tsuyoshi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"karthik suggestion tsuyoshi"
    },
    "22126":{
        "ID":21676,
        "MESSAGE_ID":"CADoWKTC7jidK=vyvN2o2SAY3oyZsm6-9NdGM3RAcL6a6Y0d5Qg@mail.gmail.com",
        "PARENT_ID":21675.0,
        "SUBJECT":"Re: [DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Vinayakumar B <vinayakumarb@apache.org>",
        "TAGS":"process",
        "BODY":"think api doc contains class marked public regard vinay"
    },
    "22128":{
        "ID":21674,
        "MESSAGE_ID":"CACBYxKKAADPR4mK=Qob8hNkD+a30sOqkbntK30CcotUue96s8w@mail.gmail.com",
        "PARENT_ID":21673.0,
        "SUBJECT":"Re: [DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Sandy Ryza <sandy.ryza@cloudera.com>",
        "TAGS":"existence",
        "BODY":"policy make sense still label thing private course reflected documentation sandy"
    },
    "22129":{
        "ID":21673,
        "MESSAGE_ID":"CALwhT96yRsC000Dc9OU_URWVf4dmDYPyk1uv9zmiLOEUY_3+qw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Assume Private-Unstable for classes that are not annotated",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"process",
        "BODY":"hi devs might noticed several class method annotated seldom intentional avoiding incompatible change class considerable baggage wondering add explicit disclaimer compatibility guide say class without annotation considered private method reasonable say class member without specific annotation inherit annotation class thanks karthik"
    },
    "22643":{
        "ID":21158,
        "MESSAGE_ID":"CADoiZqoqKpn_7B9w75DCrVjxZ1SqbKrYQBrwLW1rwO26a4eiVQ@mail.gmail.com",
        "PARENT_ID":21157.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Niels Basjes <Niels@basjes.nl>",
        "TAGS":"not-ak",
        "BODY":"hadoop framework us filename extension automatically insert right decompression codec read pipeline someone describe would need unload compression codecs face decompression error really gzipped would splittable niels"
    },
    "22645":{
        "ID":21156,
        "MESSAGE_ID":"CADoiZqpeq2zAtMWBWtdfdih7UYVjBz=5CRGSOf5nkgU+E7=RuA@mail.gmail.com",
        "PARENT_ID":21155.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Niels Basjes <Niels@basjes.nl>",
        "TAGS":"not-ak",
        "BODY":"ok got someone avro file foo avro gzips foo avro gz frame work select gzipcodec capable splitting cause problem gzipping splittable file becomes non splittable workplace applied gzip avro compression applies block inside avro file multiple gzipped block inside avro container splittable file without change would someone create situation referring"
    },
    "22646":{
        "ID":21155,
        "MESSAGE_ID":"CALEq1Z9ekkQZK2Ou_aQE2aLvWtzspSNOPxUXAYgoo31KN-+=gg@mail.gmail.com",
        "PARENT_ID":21153.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Doug Cutting <cutting@apache.org>",
        "TAGS":"property",
        "BODY":"trying explain comment stated changing default implementation return false would incompatible change patch added month comment comment address patch patch appear change default implementation return false unless suffix file name known unsplittable compression format folk would harmed used suffix like gz avro parquet format file application might suddenly run much slower would difficult determine folk probably perhaps exist would prefer change avoided possibility entirely doug"
    },
    "22647":{
        "ID":21154,
        "MESSAGE_ID":"1401489857532.f32badf3@Nodemailer",
        "PARENT_ID":21153.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"\"Tim\" <tcsiwula@dons.usfca.edu>",
        "TAGS":"not-ak",
        "BODY":"remove"
    },
    "22648":{
        "ID":21153,
        "MESSAGE_ID":"CADoiZqpRFZfH8K_h8-AZy2_kd71sGg_S6qAN46aVQnCTSGy12w@mail.gmail.com",
        "PARENT_ID":21151.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Niels Basjes <Niels@basjes.nl>",
        "TAGS":"property",
        "BODY":"hi way see effect original patch existing subclass implemented issplitable performance difference implement issplitable performance difference container either compressed us splittable compression us common non splittable compression like gzip output suddenly different correct answer job finish sooner input processed multiple time see performance impact niels"
    },
    "22662":{
        "ID":21139,
        "MESSAGE_ID":"CADoiZqqvkiVBd1coYw_LLVh-t-9J3Y_OZe4KRBJPmztMgQtqrw@mail.gmail.com",
        "PARENT_ID":21136.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Niels Basjes <Niels@basjes.nl>",
        "TAGS":"not-ak",
        "BODY":"forgot ask relevant question made original proposed solution incompatible still seems clean backward compatible solution fix issue simple way perhaps todd explain niels"
    },
    "22665":{
        "ID":21136,
        "MESSAGE_ID":"CADoiZqo9CvxTTmthXN3eSAaDVmH-CCA3eTujxXqyhzLBC1PB+w@mail.gmail.com",
        "PARENT_ID":21135.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Niels Basjes <Niels@basjes.nl>",
        "TAGS":"not-ak",
        "BODY":"exactly proposing change either fix silently original patch year ago break loudly current proposal old implementation convinced ther atleast company world wide custom implementation bug clue basing descision upon silently corrupted data"
    },
    "22666":{
        "ID":21135,
        "MESSAGE_ID":"4BCDB95C-9774-4E8B-BF00-CB83424D25B5@gmail.com",
        "PARENT_ID":21134.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Jay Vyas <jayunit100@gmail.com>",
        "TAGS":"property",
        "BODY":"think breaking backwards compat sensible since easily caught compiler case alternative runtime error result terabyte mucked output"
    },
    "22667":{
        "ID":21134,
        "MESSAGE_ID":"CALDy1Y7+yH-F9A4uwDqRRq+AYES1GnMNiY+1VGNrSjaUXq4SnA@mail.gmail.com",
        "PARENT_ID":21133.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Matt Fellows <matt.fellows@bespokesoftware.com>",
        "TAGS":"property",
        "BODY":"someone really contribute lurks could well misinformed informed see deprecate method could cause dangerous side effect people still use deprecated method backwards compatibility discouraged compiler warning change write code start use new functionality apology stepping hadoop holy war"
    },
    "22668":{
        "ID":21133,
        "MESSAGE_ID":"CADoiZqqJdXi1nnN5hCjB0dhvBStcKn0Tp8RygEfak0HYFpcW2w@mail.gmail.com",
        "PARENT_ID":21131.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Niels Basjes <Niels@basjes.nl>",
        "TAGS":"existence",
        "BODY":"original proposal year ago change issplitable method return safe default see patch still attached jira issue argument still fully understand rejected todd doug new proposal deprecate remove old method typo hadoop replace something correct le error prone given fact would happen major version jump thought would right time niels"
    },
    "22669":{
        "ID":21132,
        "MESSAGE_ID":"CALDy1Y7OQOWfiz+Yd64-tY75=2bW9uSkNcZO_haKDbomVT7aDA@mail.gmail.com",
        "PARENT_ID":21131.0,
        "SUBJECT":"Re: Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Matt Fellows <matt.fellows@bespokesoftware.com>",
        "TAGS":"existence",
        "BODY":"could missing something deprecate issplitable spelled incorrectly create new issplittable described"
    },
    "22675":{
        "ID":21126,
        "MESSAGE_ID":"CADoiZqoBKme-HYoM=hRxPEs1w2qdevo0=aoihqiWT4vS8D42Yg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Change proposal for FileInputFormat isSplitable",
        "SENT_FROM":"Niels Basjes <Niels@basjes.nl>",
        "TAGS":"existence",
        "BODY":"hi last week ran problem url happens default implementation issplitable method fileinputformat unsafe everyone implement new subclass likely get wrong effect getting wrong unit test succeed running large input file mib compressed using non splittable compression often gzip cause input fed mapper multiple time get garbage result without ever seeing error last day berlin buzzword talking someone bug resulted following proposal would like feedback change break backwards compatibility deliberate choice fileinputformat get method old issplitable typo one name disappear protected issplittablecontainer true unless compressed non splittable compression protected issplittablecontent abstract must implemented subclass public issplittable issplittablecontainer issplittablecontent idea issplittable used class know splittable file effect hope get developer writing fileinputformat alone done twice far forced helped getting right reason propose incompatible change way hope eradicate existing bug custom implementation agree change willing put back submit patch best regard niels basjes"
    },
    "22869":{
        "ID":20931,
        "MESSAGE_ID":"25A3B20B-42A0-427E-8E04-6598BF6F421E@aol.com",
        "PARENT_ID":20929.0,
        "SUBJECT":"Re: [ANNOUNCE] Apache Tajo\u2122 0.8.0 Released!",
        "SENT_FROM":"Alvin Henrick <share.code@aol.com>",
        "TAGS":"not-ak",
        "BODY":"thank hyunsik"
    },
    "22871":{
        "ID":20929,
        "MESSAGE_ID":"CAM=XDd8uSWAVWO3d4rBoEmTaWAnnPTr8UK_atXdqA_NPBwYhVg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[ANNOUNCE] Apache Tajo\u2122 0.8.0 Released!",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"technology",
        "BODY":"apache tajotm release announcement apache tajo team pleased announce major release apache tajotm open source big data warehouse system hadoop apache tajotm provides low latency scalable batch sql query large data set stored hdfs data source source binary release tarballs available free download url first top level release release apache tajo team close issue including new feature improvement bug fix highlight sql support database support tajo full left outer join tajo tajo complex join including derived subqueries union datetime type operator support date type support tajo tajo time type support tajo tajo timestamp type support tajo tajo add datetime operation function extract timestamp utc usec sql standard postgresql compatible string function support ascii length chr bit length string hex octet length reverse right left md repeat substr strpos locate initcap lpad rpad concat concat ltrim rtrim btrim trim sql standard math function support mod div degree radian cbrt ab exp sqrt sin sign pow ceiling round floor ceil function sha digest find set bin create table ctas partition table tajo alter table rename tajo alter table add rename column tajo tajo quoted identifier support tajo complex expression support group order clause distinct aggregation support tajo explain statement support tajo performance scalability efficient way unbalanced external sort executor tajo tajo reduced intermediate data volume tajo star schema broadcast support tajo duplicated expression removal efficient projection push tajo reduced memory consumption expression evaluation tajo reduced gc overhead memory usage tajo tajo tajo tajo efficient sort based dynamic partition store method tajo storage support configurable serializer deserializer text file tajo parquet file support tajo tajo avro storage support tajo amazon support tajo integration hadoop ecosystem hadoop support improved hive meta integration tajo tajo tajo hive compatible table partition tajo tajo tajo client user interface improved web ui tajo sql tsql recap linux command hdfs command support tsql tajo tajo jdbc driver support improvement tajo tajo fine grained query progress indicator tajo add killquery feature tajo complete list new feature fixed problem please see release note url many thanks contributor release alvin henrick daemyung kang david chen hyoung jun kim hyunsik choi ilhyun suh jaehwa jung jae young lee jinho kim jihoon son min zhou keuntae park seungun choe seonghwa ahn youngjun park wan heo apache tajo community"
    },
    "23186":{
        "ID":20614,
        "MESSAGE_ID":"CABbyifM02nMVaRpARPqnSeJ8gb5x9WTTy8c18tAfr6Z4tQLy2g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Plans of moving towards JDK7 in trunk",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi multiple discussion deprecating support jdk moving towards jdk look consensus hadoop ready drop support jdk move towards jdk based consensus wonder whether good time start migration understanding current status public update jdk since feb user longer get fix security vulnerability official public update hadoop core stuck date dependency unless moving towards jdk see url implementation also benefit thanks new functionality jdk code ready jdk cloudera hortonworks successful story supporting hadoop jdk seems real work moving jdk minimal need make sure jenkins running top jdk update minimum required java version therefore propose let move towards jdk trunk short term feedback appreciated regard haohui confidentiality notice notice message intended use individual entity addressed may contain information confidential privileged exempt disclosure applicable law reader message intended recipient hereby notified printing copying dissemination distribution disclosure forwarding communication strictly prohibited received communication error please contact sender immediately delete system thank"
    },
    "23279":{
        "ID":20521,
        "MESSAGE_ID":"CADbBEnt+RLPEPi9868qmVASjJVmYoqMbsrXEd00CN-S0286mrQ@mail.gmail.com",
        "PARENT_ID":20492.0,
        "SUBJECT":"Re: very old dependencies",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"agree still diligent keeping dependency date long change fairly non destructive hear guava would pretty big service user also developer library hadoop"
    },
    "23280":{
        "ID":20520,
        "MESSAGE_ID":"CADbBEnvTgr6FFF6d_zNZDzEuEP4aK0kNwC7JGExfz6v0uLzDGQ@mail.gmail.com",
        "PARENT_ID":20488.0,
        "SUBJECT":"Re: very old dependencies",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"yes recommending use classloader option think viable solution version clash problem enthused classpath first config could trade one set problem another judging issue still discovered mapreduce mapreduce example however feel like classloader option used tested widely"
    },
    "23301":{
        "ID":20499,
        "MESSAGE_ID":"CAGB5D2Y6o-+KCt3SOGjtbVNXugjs6H7Du_+L6yr8xQ5qm8PCtA@mail.gmail.com",
        "PARENT_ID":20498.0,
        "SUBJECT":"Re: very old dependencies",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"technology",
        "BODY":"successfully supported cdh java well cdh think code wise ready move however start using java feature line compatibility reason also even compatibility guideline state bump dependency whenever want practically speaking line without breaking existing application think best fix shading everything hit issue andrew"
    },
    "23302":{
        "ID":20498,
        "MESSAGE_ID":"CA+qbEUMK0haUGsWY3EKEGp6tmh=xco66xMs74D+nOSLP58+U+w@mail.gmail.com",
        "PARENT_ID":20489.0,
        "SUBJECT":"Re: very old dependencies",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"existence",
        "BODY":"think need way isolating yarn mr hdfs client hadoop dependency anything else sane whatever may say always client rely dependency pull make visible really blame client sort unclear happens pull multiple version dependency maven easiest way solve would use something like maven shade best colin"
    },
    "23306":{
        "ID":20494,
        "MESSAGE_ID":"CABCYYb_B+aHvr8UEJOQ_w8z7uucNwEHoA4wOFZmp3BtANa8sNA@mail.gmail.com",
        "PARENT_ID":20492.0,
        "SUBJECT":"Re: very old dependencies",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"regarding jdk least one jira aware proposing several improvement make code using new jdk apis url anyone want repurpose master jdk enhancement jira start cataloging additional improvement idea using jdk apis please feel free reluctance heard around jdk mostly relates testing compatibility across ecosystem component success story around large scale hadoop system test suite executed jdk could help build confidence compatibility think effectively mean hadoop hdfs yarn mapreduce wait downstream ecosystem project finish upgrade jdk chris nauroth hortonworks url"
    },
    "23310":{
        "ID":20490,
        "MESSAGE_ID":"CABbyifMx7LNFyx4Z5HEbPE+omquzPh+7106AtOyNnPOyPseOJA@mail.gmail.com",
        "PARENT_ID":20489.0,
        "SUBJECT":"Re: very old dependencies",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"given fact java eol wonder good time drop support java trunk new functionality jdk file system watcher simplify implementation name node data node hdfs"
    },
    "23311":{
        "ID":20489,
        "MESSAGE_ID":"CA+4kjVsaw_a-i+sDr-H=0kE79oT8MZXvEq357Lz6FZ3Wxskbiw@mail.gmail.com",
        "PARENT_ID":20486.0,
        "SUBJECT":"Re: very old dependencies",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"disagree version age downgrading project use version issue yarn apps get classpath jira url nobody working full time sporadically apply patch get feel pain downstream common lang keep happy jetty shuffle netty could think jersey guava trouble leave new code work remove old code stop working url think branch go ahead apply patch branch destructuve point also commit java would actually help move later dependency clearly branch"
    },
    "23312":{
        "ID":20488,
        "MESSAGE_ID":"CACBYxK+G6ssmWRFM=eFi5jTHdkk+-DahjmCN2Puzt2yfBNzGRQ@mail.gmail.com",
        "PARENT_ID":20486.0,
        "SUBJECT":"Re: very old dependencies",
        "SENT_FROM":"Sandy Ryza <sandy.ryza@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"understanding unfortunately stuck rest changing could break job rely job want use newer version recommendation use mapreduce user classpath first turn classpath isolation mapreduce job classloader sandy"
    },
    "23314":{
        "ID":20486,
        "MESSAGE_ID":"CADbBEnsXoKMF7X6u7aXYVWHnk--Nnevd8eneG1hBsmEJHR-VUA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"very old dependencies",
        "SENT_FROM":"Sangjin Lee <sjlee0@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi folk even released several dependency hadoop quite dated causing friction hadoop related library hadoop user general dependency version often incompatibly different version people use day becoming real problem one already key one include guava current jetty current common lang current particular guava already causing lot issue many developer moved onto newer version using apis exist get nosuchmethoderrors also jetty eofed time plan review dependency upgrade reasonably date version remember seeing jiras specific dependency review done determine good set version upgrade would great could upgrade common one least modern version thanks sangjin"
    },
    "23343":{
        "ID":20457,
        "MESSAGE_ID":"821fb3670dc0955c275e383332899d75@baybroadband.net",
        "PARENT_ID":20456.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Dave Brosius <dbrosius@mebigfatguy.com>",
        "TAGS":"property, technology",
        "BODY":"concern came post probably would like explain obviously one going purposely test thrift go forward hopefully thrift user gain benefit future release term performance like core cassandra devs worked fantastic tremendous folk however human behaviour group devs focused making better faster feature full le time spent focused relegated break hopefully testing done day release go maintenance mode thought process something developer usually good new release come better unfortunately time get worse unfortunately experience decide actively develop something start rotting almost immediately caveat emptor folk want use going forward really unrelated cassandra development general going better make cut focus entirely future plan gain significant velocity development course opinion case taken cassandra still maintain compatibility thrift going forward would suggest would thrift supporter best interest even early pre release testing get involved early dave"
    },
    "23344":{
        "ID":20456,
        "MESSAGE_ID":"5332EF2E.9040202@gmail.com",
        "PARENT_ID":20260.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Chris Burroughs <chris.burroughs@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"fwiw even new development found thrift preferable cql others different experience cool certinaly made le intimidating new user explaining cassandra concerned sentiment thread testing upgrading dumb idea thing value cassandra work operability stability robustness far important trait deal wrapping apis transport layer dealing untested release much complicated"
    },
    "23346":{
        "ID":20454,
        "MESSAGE_ID":"CAGP=qod2qDmjqkeZ_PPe7r8Zjpan7_8XC8C0eGDZaP3L6Ag6qw@mail.gmail.com",
        "PARENT_ID":20449.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"\"Vincent,Wei\" <weikun0905@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"found root set yarn nodemanager local dirs twice different value core stie xml hdfs site xml delete setting use default configure tmp work thanks reply gmt vincent wei br vincent wei"
    },
    "23351":{
        "ID":20449,
        "MESSAGE_ID":"CAGP=qoee7uTRvZFiHAMZzE5vrPSJCW+YGvjfr+mKCbrTDrdfrg@mail.gmail.com",
        "PARENT_ID":20448.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"\"Vincent,Wei\" <weikun0905@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hostname rm yarn resourcemanager hostname master yarn nodemanager aux service mapreduce shuffle address container manager nm yarn nodemanager address yarn nodemanager hostname"
    },
    "23352":{
        "ID":20448,
        "MESSAGE_ID":"8AD4EE147886274A8B495D6AF407DF694B1E7332@szxeml510-mbx.china.huawei.com",
        "PARENT_ID":20446.0,
        "SUBJECT":"RE: About Map 100% reduce %0 issue",
        "SENT_FROM":"Brahma Reddy Battula <brahmareddy.battula@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"input file giving wordcount please paste output locale command know system lang setting thanks regard brahma reddy battula azuryy yu azuryyyu gmail com sent wednesday march pm yarn dev hadoop apache org subject map reduce issue look like add item configuration especially chinese character"
    },
    "23354":{
        "ID":20446,
        "MESSAGE_ID":"CALr1C9qhtjpzQatV0DDDvYki0DYDgyKJB1TKEF9LtiPoV28Ziw@mail.gmail.com",
        "PARENT_ID":20445.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"Azuryy Yu <azuryyyu@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"look like add item configuration especially chinese character"
    },
    "23355":{
        "ID":20445,
        "MESSAGE_ID":"CAGP=qod-MHYiOQjbaHtei5Or20ZnOm2LGfvSx=OYGAg8m70vqg@mail.gmail.com",
        "PARENT_ID":20444.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"\"Vincent,Wei\" <weikun0905@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"guess may problem info fetcher classpath url mapoutput job job reduce attempt sent hash received reply warn fetcher classpath invalid map id java lang illegalargumentexception taskattemptid string ttp internal server error content type text plain charset utf properly formed gmt vincent wei br vincent wei"
    },
    "23356":{
        "ID":20444,
        "MESSAGE_ID":"CAGP=qoequXMr827gxn2Wns_95F+09YCp2TTMbcz_0FpnRAmaNA@mail.gmail.com",
        "PARENT_ID":20443.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"\"Vincent,Wei\" <weikun0905@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hitesh checked configure use default yarn site xml see configure value said yarn nodemanager aux service mapreduce shuffle class classpath gmt vincent wei br vincent wei"
    },
    "23357":{
        "ID":20443,
        "MESSAGE_ID":"CAGP=qodiK0q1VnudGRh+2_bGJhPhCUe0bT8pqjP6ME74ASUm5A@mail.gmail.com",
        "PARENT_ID":20435.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"\"Vincent,Wei\" <weikun0905@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"log container warn main classpath job xml attempt override final parameter mapreduce job end notification max retry interval ignoring warn main classpath job xml attempt override final parameter mapreduce job end notification max attempt ignoring info main classpath loaded property hadoop metric property info main classpath scheduled snapshot period second info main classpath reducetask metric system started info main classpath executing token info main classpath kind mapreduce job service job ident classpath ae info main classpath sleeping retrying got null warn main classpath job xml attempt override final parameter mapreduce job end notification max retry interval ignoring warn main classpath job xml attempt override final parameter mapreduce job end notification max attempt ignoring info main classpath mapreduce cluster local dir child tmp hadoop haduser nm local dir usercache haduser appcache application warn main classpath job xml attempt override final parameter mapreduce job end notification max retry interval ignoring warn main classpath job xml attempt override final parameter mapreduce job end notification max attempt ignoring info main classpath mapred task id deprecated instead use mapreduce task attempt id info main classpath mapred task map deprecated instead use mapreduce task ismap info main classpath mapred tip id deprecated instead use mapreduce task id info main classpath mapred task partition deprecated instead use mapreduce task partition info main classpath mapred local dir deprecated instead use mapreduce cluster local dir info main classpath job local dir deprecated instead use mapreduce job local dir info main classpath mapred map task deprecated instead use mapreduce job map info main classpath mapred job id deprecated instead use mapreduce job id info main classpath session id deprecated instead use dfs metric session id info main classpath using resourcecalculatorprocesstree info main classpath using shuffleconsumerplugin classpath feb info main classpath mergermanager memorylimit maxsingleshufflelimit mergethreshold iosortfactor memtomemmergeoutputsthreshold info eventfetcher fetching map completion event classpath attempt thread started eventfetcher fetching map completion event info eventfetcher fetching map completion event classpath attempt got new map output info fetcher classpath assigning slave fetcher info fetcher classpath assigned slave fetcher info fetcher classpath url mapoutput job job reduce attempt sent hash received reply warn fetcher classpath invalid map id java lang illegalargumentexception taskattemptid string ttp internal server error content type text plain charset utf properly formed classpath taskattemptid java classpath fetcher java classpath fetcher java classpath fetcher java warn fetcher classpath copymapoutput failed task attempt info fetcher classpath reporting fetch failure attempt jobtracker fatal fetcher classpath shuffle failed many fetch failure insufficient progress info fetcher classpath slave freed fetcher error main classpath priviledgedactionexception haduser auth simple classpath shuffleerror error shuffle fetcher warn main classpath exception running child classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info main classpath runnning cleanup task warn main classpath could delete hdfs master output temporary temporary attempt info main classpath stopping reducetask metric system info main classpath reducetask metric system stopped info main classpath reducetask metric system shutdown complete gmt hitesh shah br vincent wei"
    },
    "23365":{
        "ID":20435,
        "MESSAGE_ID":"A2547042-1921-412D-88E1-065AA3DCCFAB@apache.org",
        "PARENT_ID":20420.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"Hitesh Shah <hitesh@apache.org>",
        "TAGS":"not-ak",
        "BODY":"missing following yarn site yarn nodemanager aux service mapreduce shuffle class classpath need restart nodemanager property take effect hitesh"
    },
    "23372":{
        "ID":20428,
        "MESSAGE_ID":"CALr1C9qJMz+trKmTbx9tGs_Gor3hrHE3s7rDiXxJ8ZcXDPSV=g@mail.gmail.com",
        "PARENT_ID":20426.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"Azuryy Yu <azuryyyu@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"yes harsh right please check container log"
    },
    "23373":{
        "ID":20427,
        "MESSAGE_ID":"CALr1C9pccAY+wZ--MNTkgQ8q3jf+-CY5j+estTSovs_EPc4eBw@mail.gmail.com",
        "PARENT_ID":20425.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"Azuryy Yu <azuryyyu@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"yarn nodemanager local dirs tmp default second info rmcommunicator allocator classpath update blacklist application blacklistadditions blacklistremovals restart yarn remove black list node"
    },
    "23374":{
        "ID":20426,
        "MESSAGE_ID":"CAOcnVr0po1g2f70xgZ-W3wD6tRw9ByQ9g=5O9ZVw9Lk5JpnkDA@mail.gmail.com",
        "PARENT_ID":20425.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"Harsh J <harsh@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi log posted specific reduce attempt attempt example failing individual reduce attempt"
    },
    "23375":{
        "ID":20425,
        "MESSAGE_ID":"CAGP=qoe76QcP23rQ-vCF-c5NcTdLxD7PLk27imX0p9GCwPTACA@mail.gmail.com",
        "PARENT_ID":20424.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"\"Vincent,Wei\" <weikun0905@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks shetty checked configure use default yarn site xml see configure value said harsh post whole log task may task name changed result info main classpath created mrappmaster application appattempt warn main classpath job xml attempt override final parameter mapreduce job end notification max retry interval ignoring warn main classpath job xml attempt override final parameter mapreduce job end notification max attempt ignoring info main classpath executing token info main classpath kind yarn rm token service ident classpath info main classpath specific max attempt application attempt num last retry false info main classpath using mapred newapicommitter warn main classpath job xml attempt override final parameter mapreduce job end notification max retry interval ignoring warn main classpath job xml attempt override final parameter mapreduce job end notification max attempt ignoring info main classpath outputcommitter set config null info main classpath outputcommitter classpath info main classpath registering class classpath class classpath info main classpath registering class classpath class classpath jobeventdispatcher info main classpath registering class classpath class classpath taskeventdispatcher info main classpath registering class classpath class classpath taskattempteventdispatcher info main classpath registering class classpath class classpath info main classpath registering class classpath eventtype class classpath speculatoreventdispatcher info main classpath registering class classpath eventtype class classpath containerallocatorrouter info main classpath registering class classpath eventtype class classpath containerlauncherrouter info main classpath creating intermediate history logdir hdfs master tmp hadoop yarn staging history done intermediate based conf ideally created jobhistoryserver yarn app mapreduce create intermediate jh base dir info main classpath perm creating expected info main classpath explicitly setting permission rwxrwxrwt info main classpath perm creating expected info main classpath explicitly setting permission rwxrwx info main classpath registering class classpath type class classpath jobfinisheventhandler info main classpath loaded property hadoop metric property info main classpath scheduled snapshot period second info main classpath mrappmaster metric system started info main classpath adding job token job jobtokensecretmanager info main classpath uberizing job enabled info main classpath input size job job number split info main classpath number reduces job job info main classpath job job transitioned new inited info main classpath mrappmaster launching normal non uberized multi container job job info socket reader port classpath starting socket reader port info main classpath adding protocol classpath server info ipc server responder classpath ipc server responder starting info ipc server listener classpath ipc server listener starting info main classpath instantiated mrclientservice slave info main classpath logging classpath classpath via classpath info main classpath added global filter safety class classpath quotinginputfilter info main classpath added filter proxy filter class classpath context mapreduce info main classpath added filter proxy filter class classpath context static info main classpath adding path spec mapreduce info main classpath adding path spec info main classpath jetty bound port info main classpath jetty info main classpath extract jar file home haduser hadoop share hadoop yarn hadoop yarn common jar webapps mapreduce tmp jetty mapreduce dbkg webapp info main classpath started selectchannelconnector info main classpath web app mapreduce started info main classpath registered webapp guice module info asyncdispatcher event handler classpath job create job info socket reader port classpath starting socket reader port info ipc server responder classpath ipc server responder starting info ipc server listener classpath ipc server listener starting info main classpath nodeblacklistingenabled true info main classpath maxtaskfailurespernode info main classpath blacklistdisablepercent info main classpath connecting resourcemanager master info main classpath maxcontainercapability info main classpath upper limit thread pool size info main classpath yarn client max nodemanagers proxy info asyncdispatcher event handler classpath job job transitioned inited setup info committerevent processor classpath processing event eventtype job setup info asyncdispatcher event handler classpath job job transitioned setup running info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info thread classpath mapresourcereqt info thread classpath reduceresourcereqt info eventhandlingthread classpath event writer setup jobid job file hdfs master tmp hadoop yarn staging haduser staging job job jhist info eventhandlingthread classpath user name deprecated instead use mapreduce job user name info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info rmcommunicator allocator classpath recalculating schedule headroom info rmcommunicator allocator classpath reduce slow start threshold met completedmapsforreduceslowstart info rmcommunicator allocator classpath got allocated container info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath recalculating schedule headroom info rmcommunicator allocator classpath reduce slow start threshold met completedmapsforreduceslowstart info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath job jar file remote hdfs master tmp hadoop yarn staging haduser staging job job jar info asyncdispatcher event handler classpath job conf file remote tmp hadoop yarn staging haduser staging job job xml info asyncdispatcher event handler classpath adding token secret key nm use launching container info asyncdispatcher event handler classpath size containertokens dob info asyncdispatcher event handler classpath putting shuffle token servicedata info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath opening proxy slave info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm slave info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info socket reader port securitylogger classpath auth successful job auth simple info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info ipc server handler classpath status update attempt info ipc server handler classpath progress taskattempt attempt info ipc server handler classpath status update attempt info ipc server handler classpath progress taskattempt attempt info ipc server handler classpath done acknowledgement attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned running success container cleanup info containerlauncher classpath processing event eventtype container remote cleanup container container taskattempt attempt info containerlauncher classpath killing attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned success container cleanup succeeded info asyncdispatcher event handler classpath task succeeded attempt attempt info asyncdispatcher event handler classpath task task transitioned running succeeded info asyncdispatcher event handler classpath num completed task info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath recalculating schedule headroom info rmcommunicator allocator classpath reduce slow start threshold reached scheduling reduces info rmcommunicator allocator classpath map assigned ramping remaining reduces info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info rmcommunicator allocator classpath received completed container container info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath diagnostics report attempt container killed applicationmaster container killed request exit code info rmcommunicator allocator classpath got allocated container info rmcommunicator allocator classpath assigned reduce info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm slave info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info socket reader port securitylogger classpath auth successful job auth simple info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info ipc server handler classpath mapcompletionevents request attempt startindex maxevents info ipc server handler classpath status update attempt info ipc server handler classpath progress taskattempt attempt fatal ipc server handler classpath task attempt exited classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info ipc server handler classpath diagnostics report attempt error classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info asyncdispatcher event handler classpath diagnostics report attempt error classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info asyncdispatcher event handler classpath attempt taskattempt transitioned running fail container cleanup info containerlauncher classpath processing event eventtype container remote cleanup container container taskattempt attempt info containerlauncher classpath killing attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned fail container cleanup fail task cleanup info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs master output temporary temporary attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned fail task cleanup failed info thread classpath failure node slave info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath recalculating schedule headroom info rmcommunicator allocator classpath map assigned ramping remaining reduces info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info rmcommunicator allocator classpath received completed container container info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath diagnostics report attempt container killed applicationmaster container killed request exit code info rmcommunicator allocator classpath got allocated container info rmcommunicator allocator classpath assigned reduce info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm slave info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info socket reader port securitylogger classpath auth successful job auth simple info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info ipc server handler classpath mapcompletionevents request attempt startindex maxevents info ipc server handler classpath status update attempt info ipc server handler classpath progress taskattempt attempt fatal ipc server handler classpath task attempt exited classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info ipc server handler classpath diagnostics report attempt error classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info asyncdispatcher event handler classpath diagnostics report attempt error classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info asyncdispatcher event handler classpath attempt taskattempt transitioned running fail container cleanup info containerlauncher classpath processing event eventtype container remote cleanup container container taskattempt attempt info containerlauncher classpath killing attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned fail container cleanup fail task cleanup info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs master output temporary temporary attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned fail task cleanup failed info thread classpath failure node slave info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath recalculating schedule headroom info rmcommunicator allocator classpath map assigned ramping remaining reduces info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info rmcommunicator allocator classpath received completed container container info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath diagnostics report attempt container killed applicationmaster container killed request exit code info rmcommunicator allocator classpath got allocated container info rmcommunicator allocator classpath assigned reduce info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm slave info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info socket reader port securitylogger classpath auth successful job auth simple info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt info ipc server handler classpath mapcompletionevents request attempt startindex maxevents info ipc server handler classpath status update attempt info ipc server handler classpath progress taskattempt attempt info asyncdispatcher event handler classpath many fetch failure output task attempt attempt raising fetch failure map info asyncdispatcher event handler classpath attempt taskattempt transitioned succeeded failed info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath task task transitioned succeeded scheduled info thread classpath failure node slave info thread classpath blacklisted host slave info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info thread classpath added attempt list failed map fatal ipc server handler classpath task attempt exited classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info ipc server handler classpath diagnostics report attempt error classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info asyncdispatcher event handler classpath diagnostics report attempt error classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java info asyncdispatcher event handler classpath attempt taskattempt transitioned running fail container cleanup info containerlauncher classpath processing event eventtype container remote cleanup container container taskattempt attempt info containerlauncher classpath killing attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned fail container cleanup fail task cleanup info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs master output temporary temporary attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned fail task cleanup failed info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info rmcommunicator allocator classpath update blacklist application blacklistadditions blacklistremovals info rmcommunicator allocator classpath ignore blacklisting set true known blacklisted info rmcommunicator allocator classpath recalculating schedule headroom info rmcommunicator allocator classpath completedmappercent totalmemlimit finalmapmemlimit finalreducememlimit netscheduledmapmem netscheduledreducemem info rmcommunicator allocator classpath ramping info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info rmcommunicator allocator classpath update blacklist application blacklistadditions blacklistremovals info rmcommunicator allocator classpath received completed container container info rmcommunicator allocator classpath got allocated container info asyncdispatcher event handler classpath diagnostics report attempt container killed applicationmaster container killed request exit code info rmcommunicator allocator classpath assigning container container containerid container nodeid slave nodehttpaddress slave resource priority token token kind containertoken service fast fail map info rmcommunicator allocator classpath assigned earlierfailedmaps info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath opening proxy slave info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm slave info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info rmcommunicator allocator classpath got allocated container info rmcommunicator allocator classpath assigned reduce info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath resolved slave default rack info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm slave info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info socket reader port securitylogger classpath auth successful job auth simple info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt gmt nishan shetty br vincent wei"
    },
    "23376":{
        "ID":20424,
        "MESSAGE_ID":"CDA8376067BFD84EA2F9D679045D8DD853EC20AF@szxeml558-mbx.china.huawei.com",
        "PARENT_ID":20420.0,
        "SUBJECT":"RE: About Map 100% reduce %0 issue",
        "SENT_FROM":"nishan shetty <nishan.shetty@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"configure mapreduce shuffle class name check yarn nodemanager aux service mapreduce shuffle class classpath"
    },
    "23377":{
        "ID":20423,
        "MESSAGE_ID":"CAOcnVr3BX566gi0iyrvyBV4pqHwMDQr7gzsVNUUvXTkOVmVjMw@mail.gmail.com",
        "PARENT_ID":20420.0,
        "SUBJECT":"Re: About Map 100% reduce %0 issue",
        "SENT_FROM":"Harsh J <harsh@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"full task log attempt proper exception lead copy fail check"
    },
    "23380":{
        "ID":20420,
        "MESSAGE_ID":"CAGP=qofwf-kTmbia8R25zURqeCNqWShBknaLiwsfL_a4B=1GXQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"About Map 100% reduce %0 issue",
        "SENT_FROM":"\"Vincent,Wei\" <weikun0905@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"new comer hadoop run hadoop mapreduce example jar wordcount result always pending map reduce info client rmproxy connecting resourcemanager master info input fileinputformat total input path process info mapreduce jobsubmitter number split info configuration deprecation user name deprecated instead use mapreduce job user name info configuration deprecation mapred jar deprecated instead use mapreduce job jar info configuration deprecation mapred output value class deprecated instead use mapreduce job output value class info configuration deprecation mapreduce combine class deprecated instead use mapreduce job combine class info configuration deprecation mapreduce map class deprecated instead use mapreduce job map class info configuration deprecation mapred job name deprecated instead use mapreduce job name info configuration deprecation mapreduce reduce class deprecated instead use mapreduce job reduce class info configuration deprecation mapred input dir deprecated instead use mapreduce input fileinputformat inputdir info configuration deprecation mapred output dir deprecated instead use mapreduce output fileoutputformat outputdir info configuration deprecation mapred map task deprecated instead use mapreduce job map info configuration deprecation mapred output key class deprecated instead use mapreduce job output key class info configuration deprecation mapred working dir deprecated instead use mapreduce job working dir info mapreduce jobsubmitter submitting token job job info impl yarnclientimpl submitted application application resourcemanager master info mapreduce job url track job url info mapreduce job running job job info mapreduce job job job running uber mode false info mapreduce job map reduce info mapreduce job map reduce info mapreduce job task id attempt status failed error classpath shuffleerror error shuffle fetcher classpath shuffle java classpath reducetask java classpath run yarnchild java java security accesscontroller doprivileged native method javax security auth subject doas subject java classpath usergroupinformation java classpath yarnchild java caused java io ioexception exceeded max failed unique fetch bailing classpath shuffleschedulerimpl java classpath shuffleschedulerimpl java classpath fetcher java classpath fetcher java someone say caused host configure checked etc host mater slave localhost localdomain localhost master slave slave slave would please help fix issue many thanks yarn site xml hostname rm yarn resourcemanager hostname master yarn nodemanager aux service mapreduce shuffle address container manager nm yarn nodemanager address yarn nodemanager hostname mapred site xml mapreduce framework name yarn mapreduce reduce shuffle merge percent usage threshold memory merge initiated expressed percentage total memory allocated storing memory map output defined mapreduce reduce shuffle input buffer percent mapreduce reduce shuffle input buffer percent percentage memory allocated maximum heap size storing map output shuffle mapreduce reduce shuffle memory limit percent expert maximum percentage memory limit single shuffle consume br vincent wei"
    },
    "23409":{
        "ID":20391,
        "MESSAGE_ID":"CACO5Y4xY_PDcY-XtonoZTEsJ83V2Qf_=h2GNa1TXbsb-XUK-9g@mail.gmail.com",
        "PARENT_ID":20383.0,
        "SUBJECT":"Re: [DISCUSS] sort improvement",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"existence",
        "BODY":"sort implementation pluggable see mapreduce mapreduce please feel free fork improve selecting sort implementation based job configuration binarycomparable key would allow much efficient specialized implementation"
    },
    "23417":{
        "ID":20383,
        "MESSAGE_ID":"CALG8Rr0-TR2g5gpC1eFN7Uy6TV5m2HP=8YP3rC5f2q-5wQAhTA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] sort improvement",
        "SENT_FROM":"\u848b\u8fbe\u665f <dsjiang753@gmail.com>",
        "TAGS":"existence",
        "BODY":"would like discus improvement sort stage current hadoop formal document available right hope someone would interested give detail information start conducted series experiment version take example job terasort demonstration thought machine slave machine core ghz disk configuration jvm xmxm io sort mb make sure extra spill map reduce side datasize tb map reduce baseline version result around cpu time terasort job optimized want know costage framework anyone redo test using terasort job example would see surprisingly higher cpu time counter system sort take percentage total cpu time improvement result around cpu time improvement result around cpu time improvement use sse accelerate ifile checksum currently java implementation cost much cpu believe worth another discus extend let know worth improvement us reduce side sort intermediate result contain unsorted data reduce receive data sort reduce function reason save cpu based fact quick sort efficient heap based merge sort save comparison count circumstance direct reflection cpu cost large job thousand reduces map send little data reduce side majority work sort stage reduce side case map sort approximately byte use quick sort reduce merge segment several drawback using reduce side sort first requires rewrite whole data path although much work write code strategy current implementation considered new implementation secondary combiner would tricky implement one choice use memory hash table need precise track memory usage java object another choice use current data path combiner required maintaining two sepearate data path seems cause much extra work future tried use memory hash table choice selectivity high intermediate key number much smaller input key number feasible certain performance gain selectivity low see performance advantage anyway believe way implement combiner lower cost much thought right last drawback memory usage still need large buffer io sort mb indicates map side avoid small spill file also need buffer reduce side sort data large segment think big problem complete thought improvement sorting algorithm know issue promoted improve still lot space improvement first current mapoutputbuffer implementation use single buffer store data index adaptive strategy long record short record good choice performance implementation use direct int byte index would cut cpu cost half experiment even implementation quicksort optimized still much slower radixsort mb terasort data radixsort faster test one thing need clarify adapt radixsort current hadoop plain answer replace quicksort radixsort genral framework majority usage assumption key type use hadoop intwritable text sub class binarycomparable long get four byte key share order original key sort radixsort use quicksort equal four byte mapreduce mapreduce related discussion another important thing point combine improvement improvement le effective majority sort happens reduce side using low efficient merge sort combinition improvement make sort non significant part job terasort job among cpu time improved implementation cost sort job hibench also show le sort big saving major rewrite please let know someone interested idea thanks dasheng jiang peking university beijing email dsjiang gmail com phone"
    },
    "23446":{
        "ID":20354,
        "MESSAGE_ID":"CALwhT97cpLGgfA-AoOj1ibKP1aLDvdaw1ppMdo6JAuCpQqB--A@mail.gmail.com",
        "PARENT_ID":20353.0,
        "SUBJECT":"Re: [DISCUSS] Clarification on Compatibility Policy: Upgraded Client + Old Server",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"property",
        "BODY":"supporting new client old server major version updating policy capture clearly"
    },
    "23447":{
        "ID":20353,
        "MESSAGE_ID":"CABCYYb-3H_Be_mgJa8VxfEOuxBCw3J=4cqaw1-zR35X0hA_+Zg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Clarification on Compatibility Policy: Upgraded Client + Old Server",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"property",
        "BODY":"would like discus clarification part compatibility policy link compatibility documentation release url convenience specific line question client server compatibility required allow user continue using old client even upgrading server cluster later version vice versa example hadoop client talking hadoop cluster client server compatibility also required allow upgrading individual component without upgrading others example upgrade hdfs version without upgrading mapreduce server server compatibility required allow mixed version within active cluster cluster may upgraded without downtime rolling fashion notice specific mention upgrading client ahead server clause upgraded client old server based experience valid use case user want pick client side bug fix ahead cluster administrator upgrade schedule policy maintain client compatibility old cluster within major release think many assumed answer yes coded new feature accordingly made explicit documentation agree answer yes possibly debate depending change question rfc lingo must either way would like update policy text make decision clear consensus volunteer file issue patch text policy discussion started initially mapreduce involved changing scripting syntax mapreduce yarn container submission settled question gating syntax change behind configuration option default continue using existing syntax currently understood pre nodemanager thus preserving compatibility wanted open policy question wider discussion though thanks everyone chris nauroth hortonworks url confidentiality notice notice message intended use individual entity addressed may contain information confidential privileged exempt disclosure applicable law reader message intended recipient hereby notified printing copying dissemination distribution disclosure forwarding communication strictly prohibited received communication error please contact sender immediately delete system thank"
    },
    "23464":{
        "ID":20336,
        "MESSAGE_ID":"CAHBzFhFupxDP5MX2qWvJRR9AwQJc1AhGfmunxhH0C5dq-mO=3g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Fine grained resource management in YARN (with Tez like machinery on top)?",
        "SENT_FROM":"Veljko Zivkovic <veljkozivkovic@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"hi discussion extending yarn fine grained resource management capability instead operating container level resource manager node manager operate primitive operation level yarn supported capability tez like machinery could built top avoid generic tez might today tez interpret data etc please see detail thanks advance guideline thought shared regard veljko primitive local operation let define primitive operation function used wide variety data processing application sql engine hive machine learning framework mahout etl tool pig type data processing application etc one key characteristic primitive operation executed block data node owns block thus could call primitive operation local operation following could list primitive operation read write filter scan get record match expression enrich return base column sort group local join collocated block one key benefit primitive operation would usability source code level ability enforce strict multi tenancy capacity limit ability fine grained cost based planning tez dag environment tez planner currently interpret data needed dag common file format order primitive operation become building block common file format might assumed rcfile orcfile parquet hfile csv etc seems safe assume high majority case data stored common file format sticky container data node could sticky container managed node manager container would responsible manage data block owned hosting data node reason sticky container mostly easily work around java heap limitation single jvm though heap trick could done sticky container would time duration hosting data node running multi tenant resource management would enforced sticky container primitive operation enforcement metric could extended beyond today memory cpu record byte read per second record filtered per second record enriched per second record sorted per second record grouped per second etc case tez operator executing sticky container would act starting source node overall dag floating container contains would container present yarn tez today hosting data node determined runtime generally need block multiple data node case sql container would generally join count distinct function case tez operator executing floating container would act mostly middle node overall dag"
    },
    "23492":{
        "ID":20307,
        "MESSAGE_ID":"CALdd-zj2YsBB6=Uqq_q8wcVm3EniWBoma7S0=v0m93w_sJcv0A@mail.gmail.com",
        "PARENT_ID":20306.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"probably give detail two data model contributed neither usergrid mongodb emulator"
    },
    "23493":{
        "ID":20306,
        "MESSAGE_ID":"CAKmMYa92WoAC7iX6h138F46w=Kwbwb63-aGXyLevU1R-zqrt0A@mail.gmail.com",
        "PARENT_ID":20304.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Nate McCall <nate@thelastpickle.com>",
        "TAGS":"technology",
        "BODY":"discussing past day couple folk yes think maintaining currently incubating usergrid url possible basically would essentially container collection arbitrary runtime definable udts everything virtual keyspace think got mongodb emulator working really cql apigee currently running several instance system scale number large client main public cluster behind appservices product many ten thousand tenant seriousness dynamic model possible via cql granted may edge case point maintaing large chunk code solely type function bad software hence desire assist url"
    },
    "23494":{
        "ID":20305,
        "MESSAGE_ID":"CAENxBwxsRSgDiD22xXGB=vZuv=O8QV3qzvrm7wHnVN=goXiS1Q@mail.gmail.com",
        "PARENT_ID":20304.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"imho put energy cql fighting thrift scared think amazing cql would recently putting energy thrift ticket planning help cql issue happened feel directly aimed effort left bitter taste mouth open source project herd people supporting thing specific group people want give example conversation resulted creation ticket url one committers ran ticket dropped right away definitively putting type contract internals called internals reason rewriting entirely tomorrow best cassandra possibility creating new abstraction top well creating new api well really thing focus one api cassandra focus effort open source stalin source"
    },
    "23495":{
        "ID":20304,
        "MESSAGE_ID":"9A09A93C-051D-400F-8468-CBE0E3F20313@barracuda.com",
        "PARENT_ID":20303.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Michael Kjellman <mkjellman@barracuda.com>",
        "TAGS":"technology",
        "BODY":"ed understand respect enthusiasm thrift ship sailed yes understand low level thrift api sure rewarding experience someone wrote client abstract thrift many kind word certainly le hair head every line code ever written chance bug thankfully project super dedicated group people responsive fixing sorting paging bug might happened thrift logic always pushed onto client also lot bug like model bug fixed language client personally cql worked different set application logic accessible others application code simpler client code simpler learning curve new us easier win win win imho put energy cql fighting thrift scared think amazing cql would best michael join live webinar featuring research west windsor township best practice security convergence march pdt rsvp url"
    },
    "23496":{
        "ID":20303,
        "MESSAGE_ID":"CAENxBww7ChpRQqa=iW_kjQ9kgkbihbtZ15dtQ0hiiNwC7_xRBQ@mail.gmail.com",
        "PARENT_ID":20302.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"paging bug user reported bug sorting one row dataset want argue cql surpassed thrift way one way clearly correctness demonatrate search changelog cql bug return wrong result search thrift bug return wrong result compare nubes ml pick bug performance regression serious issue"
    },
    "23497":{
        "ID":20302,
        "MESSAGE_ID":"CALdd-zg00v=cC_hwgsz-tC7T5=uMtcK4M9_DbFJmc-xXH8vgKg@mail.gmail.com",
        "PARENT_ID":20301.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence",
        "BODY":"know query already without source diving could certainly without needing extra syntax"
    },
    "23498":{
        "ID":20301,
        "MESSAGE_ID":"CAOG6zs0JvRQXVOX6nmuBPqR7Wr4jxskodvXm4+ue4Ljv8G_2OA@mail.gmail.com",
        "PARENT_ID":20260.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Nicolas Favre-Felix <nicolas@acunu.com>",
        "TAGS":"existence, property, technology",
        "BODY":"hello going back original topic wanted point opinion important use case doable thrift cql fetch several cql row partition single isolated read lose benefit partition level isolation way read row together course perform range query even scan multi dimensional clustering key cassandra still fetch row using set clustering key could find jira feature anyone know one cheer nicolas worth freezing thrift"
    },
    "23499":{
        "ID":20299,
        "MESSAGE_ID":"CAENxBwyadm-e60=dDGsMFLezQBVRQgX2SNOnP0K+nXaUVpKQNA@mail.gmail.com",
        "PARENT_ID":20298.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"glad project adoptimg unambigious language position nice clarity volunteer effort add feature thrift rejected shining example volunteer apache software foundation project run user attempting add feature call vote add language stop"
    },
    "23501":{
        "ID":20297,
        "MESSAGE_ID":"CAENxBwwiDzfTb=O8SjtGV5GyC2ZXag0wwU0bUnKHsqGQ359hmw@mail.gmail.com",
        "PARENT_ID":20296.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"technology",
        "BODY":"know use case thrift dynamic composite used cql"
    },
    "23502":{
        "ID":20296,
        "MESSAGE_ID":"CAKkz8Q05DhKKSZJdtb2BTWn9SFsntwbdtpd6GPz0nbZM6Kd3og@mail.gmail.com",
        "PARENT_ID":20260.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Sylvain Lebresne <sylvain@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"jonathan proposal"
    },
    "23503":{
        "ID":20295,
        "MESSAGE_ID":"CAENxBwy3Kwh6R0xLKhsTxdPDX8XAamd3fX7kQQqpRCY1HMjVjw@mail.gmail.com",
        "PARENT_ID":20293.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"existence",
        "BODY":"agree liking construction kit approach redis url plus command telnet elastic search json http url couch db json http javascript url mongo db json binary api javascript database map reduce point different stroke different folk people want query api get nosql"
    },
    "23504":{
        "ID":20294,
        "MESSAGE_ID":"CAENxBwxVbHbU_YiHZEsNiiguH2sbYV6QuqOejWHMenVfajPnQw@mail.gmail.com",
        "PARENT_ID":20291.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"meant say thrift provides facade storageproxy without thrift user cassandra engine would cql point storage engine would likely evolve le usable plugable thrift easy friendly method like storageproxy batch mutate call without project level support many thing plugable application would want call buried inside set interface designed cql use case mind simple case imagine something want inside cool new interface marked private cassandra need fork code convince upstream make accessible way think know already took stab describing pluggable rest jvm language url"
    },
    "23505":{
        "ID":20293,
        "MESSAGE_ID":"CALdd-zgcJ=Aja7PUPfjw6NmkjHYyXGzaiEQo1vHSCkbf+Mve5Q@mail.gmail.com",
        "PARENT_ID":20291.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"technology",
        "BODY":"think well served construction kit approach difficult enough evaluate nosql without deciding run cqlsandra hectorsandra intravertandra etc"
    },
    "23506":{
        "ID":20292,
        "MESSAGE_ID":"EE361638-9314-4F6A-BBDB-4094737055BD@me.com",
        "PARENT_ID":20290.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Jacob Rhoden <jacob.rhoden@me.com>",
        "TAGS":"technology",
        "BODY":"someone time resource fork keep thrift date could assumedly push thrift update back master goal reduce maintenance overhead core sec fine need frozen right perhaps must marked frozen anyone time resource continue enhancement step woodwork one stay frozen sent iphone"
    },
    "23507":{
        "ID":20291,
        "MESSAGE_ID":"CANsCxF9irecBbuSM7c8r1Etj8Q_Gpc+b=9vgtQigbTs53EiAWQ@mail.gmail.com",
        "PARENT_ID":20290.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Russell Bradberry <rbradberry@gmail.com>",
        "TAGS":"existence, property, technology",
        "BODY":"mean someone maintain fork cassandra like something could dropped like client keep server project like would also think interface pluggable would also allow others expand come new interface possibly expand user base one example would built rest interface rely external web server translates request cql drop jar interface come available would also lend allow anyone write interface jvm language want want add external stored procedure via interface would able removal thrift trunk think use case extensible interface still seem remember angry user avro removed"
    },
    "23508":{
        "ID":20290,
        "MESSAGE_ID":"CAENxBwzT9pwYDyMgVJN_2M4DA1MjPbXruN637q=YNriDv+5XWw@mail.gmail.com",
        "PARENT_ID":20286.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"process, technology",
        "BODY":"support officially deprecated way go user want add function thrift fork cassandra code function write internals manage internals see hard task server could change rapidly regard also could cause proliferation function could imagine thrift server method think keeping support trunk carefully adding thing would sane seemingly one want support fork probably order"
    },
    "23509":{
        "ID":20289,
        "MESSAGE_ID":"CANEBM308fu_wsp0gPeOsvkqGEX1wnQsebavta039KPcsZUuxJQ@mail.gmail.com",
        "PARENT_ID":20288.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Joe Stein <cryptcom@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ah cool thanks"
    },
    "23511":{
        "ID":20287,
        "MESSAGE_ID":"CANEBM33LQ2dphYiWVFcFk5d_xbaJmZjFWdxcs=g5sFHDrs5+Gg@mail.gmail.com",
        "PARENT_ID":20285.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Joe Stein <cryptcom@gmail.com>",
        "TAGS":"technology",
        "BODY":"wiki page protocol spec googled little google fu today one nice thing thrift interface human explanative serializes format computer like apache kafka wire protocol lot developer developed think documentation contributed community developer able succeed url feel left heard folk built platform support cassandra thrift interface felt tighter integration think recently last week titan graph db talk nyc meetup recommending cql month people enough head time alright know expectation coming lastly would released ask everything new would backwards compatible anyone using old interface joe stein founder principal consultant big data open source security llc url twitter allthingshadoop"
    },
    "23512":{
        "ID":20286,
        "MESSAGE_ID":"D649AFB3-22EF-4E4D-A981-8ECD540D45B8@gmail.com",
        "PARENT_ID":20285.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Russ Bradberry <rbradberry@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"would like suggest possibility interface somewhat pluggable another project provide thrift interface drop jar thought sent iphone"
    },
    "23513":{
        "ID":20285,
        "MESSAGE_ID":"CAENxBwwdTc1JkN_JCnZCrAbTW2HuMoXOanBOrs=Huc_eL1DTkA@mail.gmail.com",
        "PARENT_ID":20284.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"using thrift probably reason upgrade upgrading get performance regardless api already gone new feature talk le enphisis testing comforting"
    },
    "23514":{
        "ID":20284,
        "MESSAGE_ID":"531F95BE.2040405@mebigfatguy.com",
        "PARENT_ID":20260.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Dave Brosius <dbrosius@mebigfatguy.com>",
        "TAGS":"technology",
        "BODY":"although supporting thrift seems overly conservative using thrift probably reason upgrade fact become increasingly dumb idea lesser lesser emphasis placed testing would allow greatly simplify code footprint"
    },
    "23524":{
        "ID":20274,
        "MESSAGE_ID":"CF44D6A7.9B789%bone@alumni.brown.edu",
        "PARENT_ID":20264.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Brian O'Neill <bone@alumni.brown.edu>",
        "TAGS":"technology",
        "BODY":"im weve one foot door throwing resource cql storm cassandra cql slowing support thrift based implementation storm cassandra ala poor thrift knew well brian brian neill chief technology officer health market science science better result horizon drive king prussia pa boneill healthmarketscience com information transmitted email message intended recipient may contain confidential privileged material received email error intended recipient person responsible deliver intended recipient please contact sender email delete email attachment destroy copy thereof review retransmission dissemination copying use taking action reliance upon information person entity intended recipient strictly prohibited"
    },
    "23530":{
        "ID":20268,
        "MESSAGE_ID":"CAENxBwwUSBtZDjcPk7kAcoW9EGA2iUCe_75apRWrUJwEigpEUA@mail.gmail.com",
        "PARENT_ID":20266.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"process, technology",
        "BODY":"reason cassandra database know official client database live source control outside project would like clarity development go open source fashion namely regression testing database server client bug client server hard say official client open source apache project depend non apache managed resource accomplish basic development ie cassandra committer commit driver source code get work done final word feature implemented native protocol imagine two implementation cql native cql ruby native cql java let say library interpreted transport spec differently one broken fix problem resolve issue static column lwt batch support landing udt know use case thrift done cql mean cql transport cql storage engine cql procedure engine auto timestamps cql language hard thrift thing specific read write list collection operation impossible transport large degree merely formalizes already de facto reality thrift client even added support atomic batch mutate ca popular client like astyanax migrating native protocol loaded statement committers even committed adding feature thrift take example url adding range tombstone thrift actually simple effort one day got couch went simple effort pushing along happening self fulfilling prophecy everyone throw ton development effort one direction unsurprisingly direction lag behind"
    },
    "23531":{
        "ID":20267,
        "MESSAGE_ID":"lfnkl8$sl1$1@ger.gmane.org",
        "PARENT_ID":20260.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Mikhail Stepura <mikhail.stepura@outlook.com>",
        "TAGS":"not-ak",
        "BODY":"still room improvement url"
    },
    "23533":{
        "ID":20265,
        "MESSAGE_ID":"CAAwnuDtSBKhfoMBYqGu+cBtpdA_ppQb28ceJqaO5AkOsG2CPCw@mail.gmail.com",
        "PARENT_ID":20264.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Richard Low <richard@wentnet.com>",
        "TAGS":"process",
        "BODY":"although lot people still using thrift good use time maintain two interface one clearly better yes retaining thrift time important"
    },
    "23534":{
        "ID":20264,
        "MESSAGE_ID":"CAEPxca0Xa=eb2nXFr1-T=EaEhOYJUNWfwKGgJYAJ225zWs6Gxw@mail.gmail.com",
        "PARENT_ID":20263.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"sankalp kohli <kohlisankalp@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"rip thrift retain backwards compatibility hopefully people move thrift"
    },
    "23535":{
        "ID":20263,
        "MESSAGE_ID":"CAAafH9RGb-ZSTe9OZR2SxN1WnMMR+s1nmtaRqTnGa-ey7f2-gA@mail.gmail.com",
        "PARENT_ID":20260.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Brandon Williams <driftx@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"someone written thrift wrapper"
    },
    "23536":{
        "ID":20262,
        "MESSAGE_ID":"CAHjqPuJyzkZk8e4ssmiKQ8W0fE1oFGsDS3LoRDMkD_vTObs4QA@mail.gmail.com",
        "PARENT_ID":20261.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"fare thee well thrift"
    },
    "23537":{
        "ID":20261,
        "MESSAGE_ID":"CAFYK-52RKonE=P8GHSntmpD0QZ8sytKSUm1pHwfrvfv+zZ0a0g@mail.gmail.com",
        "PARENT_ID":20260.0,
        "SUBJECT":"Re: Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Pavel Yaskevich <povel.y@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sound good impression already freeze thrift though"
    },
    "23538":{
        "ID":20260,
        "MESSAGE_ID":"CALdd-zim6kNmR7f_zcPVPqk0B2G919tTTATHiUofNvLZTAwm7A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Proposal: freeze Thrift starting with 2.1.0",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"cql almost two year old proved better api cassandra needed cql driver caught passed thrift one term feature performance usability cql easier learn productive thrift static column lwt batch support landing udt know use case thrift done cql contrawise cql make many thing easy difficult impossible thrift new development overwhelmingly done using cql date unofficial poorly defined policy add support new feature thrift easy however even relatively simple thrift change create subtle complication rest server instance allowing thrift range tombtones would make filter conversion cassandra difficult thus think time officially close book thrift retain backwards compatibility commit adding new feature change thrift api help send unambiguous message user eliminate remaining confusion supporting two apis new use case come light done thrift cql commit supporting cql large degree merely formalizes already de facto reality thrift client even added support atomic batch mutate ca popular client like astyanax migrating native protocol reasonable url url jonathan elli project chair apache cassandra co founder url spyced"
    },
    "23545":{
        "ID":20253,
        "MESSAGE_ID":"CALr1C9rHGQntnuLoOacOOh6904e3x6bosg6a9y__1eiTx713CQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Fwd: problem with HDFS caching in Hadoop 2.3",
        "SENT_FROM":"Azuryy Yu <azuryyyu@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"add dev forwarded message hwpstorage date mar pm subject problem hdfs caching hadoop cc hello look like hdfs caching work well cached log file around mb hadoop cluster node gb memory bash hdfs cacheadmin addpool wptest successfully added cache pool wptest bash hadoop hadoop bin hdfs cacheadmin listpools found result name owner group mode limit maxttl wptest hdfs hdfs rwxr xr unlimited never bash hdfs cacheadmin adddirective path hadoop log pool wptest added cache directive bash time hadoop hadoop bin hadoop tail hadoop log real user sys bash time hadoop hadoop bin hadoop tail hadoop log real user sys weird cache status show byte cached bash hadoop hadoop bin hdfs cacheadmin listdirectives stats path hadoop log pool wptest found entry id pool repl expiry path byte needed byte cached file needed file cached wptest never user hdfs hadoop log bash file hadoop hadoop lib native libhadoop hadoop hadoop lib native libhadoop elf bit lsb shared object version sysv dynamically linked stripped also tried word count example file execution time always second map reduce job without cache second anything wrong thanks lot"
    },
    "23561":{
        "ID":20237,
        "MESSAGE_ID":"CAAu13zEXvev6ywQqvCZoRkRV+ncvTXcC4A5NjNPzE=wtJT3VVg@mail.gmail.com",
        "PARENT_ID":20235.0,
        "SUBJECT":"Re: In-Memory Reference FS implementations",
        "SENT_FROM":"Jay Vyas <jayunit100@gmail.com>",
        "TAGS":"existence",
        "BODY":"thanks steve guess conclusion wait hadoop definitively strict contract single hcfs based example shown meantime ill audit existing test coverage let know lend hand cleanup process"
    },
    "23563":{
        "ID":20235,
        "MESSAGE_ID":"CA+4kjVsw6B3bkV3HiXeUzsCxVZ8p=HyHWxsFg-Vx371n=s5CPg@mail.gmail.com",
        "PARENT_ID":20233.0,
        "SUBJECT":"Re: In-Memory Reference FS implementations",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"let get hadoop stuff life alongside filesystemcontractbasetest work"
    },
    "23564":{
        "ID":20234,
        "MESSAGE_ID":"CA+4kjVscyxWZE=tVwfZqc1RJPcR5RvB6xXZpy3J73hB9kHiTVQ@mail.gmail.com",
        "PARENT_ID":20232.0,
        "SUBJECT":"Re: In-Memory Reference FS implementations",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"emr extra thing netflix used injection trick add top blobstores key use case general source low rate change artifact input analysis job output chained operation storage data outlive emr cluster problem assuming velocity artifact pretty low ok data written earlier provided ongoing partition speculation relies atomic rename fails dest dir exists blobstores rename check iii create root path iii copy individual item path iv delete source race ii exists object store even create consistency aws east others mean risk two committing reducer mixing output risk low requires process commit simultaneously trouble anything waiting one mr job finish may start finish job kick dir path listing method may get incomplete list child hence incomplete list output file trouble people follow best practise hdfs intermediate work final output well netflix use output work schedule analytics hadoop cluster scale run hit problem people may noticed fear lot application ready eventual consistency may never exactly code us hdfs co ordinate never work object store atomic consistent ops leading feeling hadoop buggy url filed someone amazon steve hadoop say add marker url hadoop go say move sn code hadoop tool hadoop aws url make possible swap version compiled hadoop release without build hadoop jar steve learned much object store filesystem class swift coding url"
    },
    "23565":{
        "ID":20233,
        "MESSAGE_ID":"A992B8C7-E4E9-4B7F-A5AB-EBA608980C2C@gmail.com",
        "PARENT_ID":20232.0,
        "SUBJECT":"Re: In-Memory Reference FS implementations",
        "SENT_FROM":"Jay Vyas <jayunit100@gmail.com>",
        "TAGS":"existence",
        "BODY":"thanks colin good example want unify hcfs test profile hcfs implementation use current hadoop common test mind three way one solution manually cobble together copy test running one one seeing one apply think extending base contract main operation test overriding method another solution hadoop filesystems conform one exact contract pipe dream possible third solution could use declarative api file system implementation declare test group test want run basically hadoop third approach could complimented barebones simple memory curated reference implementation exemplify distilled filesystems certain salient property non atomic mkdirs"
    },
    "23566":{
        "ID":20232,
        "MESSAGE_ID":"CA+qbEUOXnXNv-qNhmixqrcW6u5jWpwcT7UK4Rc6SWUVsJu0vXg@mail.gmail.com",
        "PARENT_ID":20231.0,
        "SUBJECT":"Re: In-Memory Reference FS implementations",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"technology",
        "BODY":"netflix apache licensed smper system provides consistency backed store url would nice see something like integrated hadoop fear lot application ready eventual consistency may never leading feeling hadoop buggy colin"
    },
    "23567":{
        "ID":20231,
        "MESSAGE_ID":"CAAu13zHw4ndpMhEqOgy--x35EBPyhTUEPPZyu26sxe8ypgUX-w@mail.gmail.com",
        "PARENT_ID":20229.0,
        "SUBJECT":"Re: In-Memory Reference FS implementations",
        "SENT_FROM":"Jay Vyas <jayunit100@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"consider native real reference implementation blob store something mere chance able use ref impl"
    },
    "23571":{
        "ID":20227,
        "MESSAGE_ID":"CAAu13zHt3C15exmxYrY3XAMU9oBthC3EPEtY-ghYZRHpS5OWhg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"In-Memory Reference FS implementations",
        "SENT_FROM":"Jay Vyas <jayunit100@gmail.com>",
        "TAGS":"existence",
        "BODY":"part hadoop visioning create memory implementation different reference filesystems specifies appropriate test pass test inmemstrictlyconsistentfs hdfs inmemeventuallyconsistentfs blob store inmemminmalfs minimal gaurantee maybe beauty give simple easily testable reference implementation base complex real world file system unit test downstream vendor pick file system close modify particular file system declare semantics using matching template jay vyas url"
    },
    "24083":{
        "ID":19715,
        "MESSAGE_ID":"DB421C55-F959-4DE1-B3C5-98AD55344170@hortonworks.com",
        "PARENT_ID":19714.0,
        "SUBJECT":"Re: [VOTE] Merge YARN-321 Generic Application History Service to trunk",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"done ran trunk compilation new module small number yarn test seems fine please let zhijie mayank know something major broken file ticket thanks vinod"
    },
    "24084":{
        "ID":19714,
        "MESSAGE_ID":"CCC91869-4DFF-43EB-9103-311EC832C26C@hortonworks.com",
        "PARENT_ID":19675.0,
        "SUBJECT":"Re: [VOTE] Merge YARN-321 Generic Application History Service to trunk",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"binding one non binding vote pass merging yarn trunk thanks everyone voting vinod"
    },
    "24123":{
        "ID":19675,
        "MESSAGE_ID":"CAJzFTdanrXYeY+LRiriFYrNSxDbkcZKeigrgz6pFBy+865Ka2A@mail.gmail.com",
        "PARENT_ID":19662.0,
        "SUBJECT":"Re: [VOTE] Merge YARN-321 Generic Application History Service to trunk",
        "SENT_FROM":"Devaraj K <devaraj@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks devaraj"
    },
    "24136":{
        "ID":19662,
        "MESSAGE_ID":"CAMkn0zbFF9+NWNBWgKUJppg+_YX=Q5nF9TFwLoZ=rcQhxY7XLg@mail.gmail.com",
        "PARENT_ID":19659.0,
        "SUBJECT":"Re: [VOTE] Merge YARN-321 Generic Application History Service to trunk",
        "SENT_FROM":"Mayank Bansal <mayank@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks mayank"
    },
    "24139":{
        "ID":19659,
        "MESSAGE_ID":"6A03EA7E-A301-4194-A9B6-2152058EA4F3@hortonworks.com",
        "PARENT_ID":19632.0,
        "SUBJECT":"Re: [VOTE] Merge YARN-321 Generic Application History Service to trunk",
        "SENT_FROM":"Arun C Murthy <acm@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"binding arun"
    },
    "24164":{
        "ID":19634,
        "MESSAGE_ID":"2437C21B-00EA-489B-B007-70346C8193F1@hortonworks.com",
        "PARENT_ID":19632.0,
        "SUBJECT":"Re: [VOTE] Merge YARN-321 Generic Application History Service to trunk",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks zhijie involved design reviewed almost every patch contributed little test etc code decent shape bar bug security merge let avoid maintenance burden tested latest code single node setup mostly look good binding thanks vinod"
    },
    "24165":{
        "ID":19633,
        "MESSAGE_ID":"CAGparvXOzn8=bz_aD67QrrQzSuEq=rthpGYKdaNUVm50JvnHAw@mail.gmail.com",
        "PARENT_ID":19632.0,
        "SUBJECT":"Re: [VOTE] Merge YARN-321 Generic Application History Service to trunk",
        "SENT_FROM":"Chen He <airbots@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"cluster resource management platform generic history service necessary job tracing troubleshooting fault tolerance performance tuning like starterlog condor accounting log torque however generic history service avoid getting involved many detail since application may module trace history non binding"
    },
    "24166":{
        "ID":19632,
        "MESSAGE_ID":"CAJS6+b4TKuPVqfaoRf_314XvEiVrYQy-VtRYD8+36Tu_Bc51fw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Merge YARN-321 Generic Application History Service to trunk",
        "SENT_FROM":"Zhijie Shen <zshen@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"hi folk previously discussed url would like call vote merge yarn branch generic application history server trunk scope change change enable resourcemanager record historic information application application attempt container term event via history writer addition change setup application history server allows user access recorded information via rpc interface web ui rest apis detail development development feature tracked jira url development done separate branch url feature development involved subtasks date design posted url application history design pdf uber merge patch jira url testing number unit test added part feature addition also done end end functional test performance test hdfs based history storage history event processing last least updated branch yarn latest trunk edited merge conflict fixed test failure caused merge corrected bunch bad source code issue uber merge patch contains different branch yarn trunk run jenkins pending work make work secure mode pending bug fix wish merge branch instead waiting later main reason branch grew size cost maintenance became huge feature merged trunk continue work pending work like security stuff test fix bug may found trunk refactor code share piece prc web interface release status security stuff pending fix arrive time everything else planned release done include well striving otherwise call ahs feature complete stable bulk design implementation done mayank bansal contribution devaraj vinod kumar vavilapalli amongst others also thanks robert joseph evans sandy ryza providing feedback design discussion vote run week close pm pt thanks zhijie zhijie shen hortonworks inc url confidentiality notice notice message intended use individual entity addressed may contain information confidential privileged exempt disclosure applicable law reader message intended recipient hereby notified printing copying dissemination distribution disclosure forwarding communication strictly prohibited received communication error please contact sender immediately delete system thank"
    },
    "24360":{
        "ID":19438,
        "MESSAGE_ID":"CACaUSBWQTEC6rZnaZb-apN3GQ=dwXHpABaXjf-55oqdx6NFH4Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Wire Encryption with QJM",
        "SENT_FROM":"Juan Carlos <jcfernandez@redoop.org>",
        "TAGS":"not-ak",
        "BODY":"trying add security running hdfs ha cluster using qjm ha problem encriptation start journal see log warning warn classpath signature secret configuration set using random value secret hadoop http authentication signature secret file configured file path readables try format namenode get error format filesystem storage directory home hdfsadmin hdfs data meta error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server warn ipc client could setup connection hdfsadmin jcr jcfernandez cediant jcfernandez cediant jcr jcfernandez cediant error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos java io ioexception could setup connection hdfsadmin jcr jcfernandez cediant jcfernandez cediant jcr jcfernandez cediant fatal namenode namenode exception namenode join classpath unable check jns ready formatting exception thrown failed local exception java io ioexception could setup connection hdfsadmin jcr jcfernandez cediant jcfernandez cediant jcr jcfernandez cediant host detail local host jcr jcfernandez cediant destination host jcr jcfernandez cediant classpath quorumexception java classpath quorumcall java classpath quorumjournalmanager java classpath storage java classpath fsimage java classpath namenode java classpath namenode java classpath namenode java info util exitutil exiting status info namenode namenode shutdown msg shutdown msg shutting namenode jcr jcfernandez cediant debug format filesystem storage directory home hdfsadmin hdfs data meta debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath securityutil java debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath securityutil java debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath securityutil java debug ipc server rpckind rpc protocol buffer rpcrequestwrapperclass class classpath rpcrequestwrapper rpcinvoker classpath server protobufrpcinvoker ea debug ipc client ping interval debug ipc client connecting jcr jcfernandez cediant debug ipc client ping interval debug ipc client connecting jcr jcfernandez cediant debug ipc client ping interval debug ipc client connecting jcr jcfernandez cediant debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection setupiostreams client java debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection setupiostreams client java debug security saslrpcclient sending sasl message state negotiate debug security saslrpcclient sending sasl message state negotiate debug security saslrpcclient received sasl message state negotiate auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient get kerberos info proto interface classpath info classpath clientprincipal dfs namenode kerberos principal serverprincipal dfs journalnode kerberos principal debug security saslrpcclient received sasl message state negotiate auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient get kerberos info proto interface classpath info classpath clientprincipal dfs namenode kerberos principal serverprincipal dfs journalnode kerberos principal debug security saslrpcclient rpc server kerberos principal name protocol classpath hdfsadmin jcr jcfernandez cediant jcfernandez cediant debug security saslrpcclient creating sasl gssapi kerberos client authenticate service jcr jcfernandez cediant debug security saslrpcclient rpc server kerberos principal name protocol classpath hdfsadmin jcr jcfernandez cediant jcfernandez cediant debug security saslrpcclient creating sasl gssapi kerberos client authenticate service jcr jcfernandez cediant debug security saslrpcclient use kerberos authentication protocol qjournalprotocolpb found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet entered krbcontext initseccontext state state new found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet service ticket found subject using builtin default etypes default tgs enctypes default etypes default tgs enctypes debug security saslrpcclient use kerberos authentication protocol qjournalprotocolpb found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet entered krbcontext initseccontext state state new found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet service ticket found subject using builtin default etypes default tgs enctypes default etypes default tgs enctypes number retries byte timeout attempt byte number retries byte timeout attempt byte krbcontext setting myseqnumber krbcontext setting myseqnumber created initseccontexttoken ba jcfernandez ce diant hdfsadmin jcr jcfernand ez cediant ad ec aa ad ed ab ea ed bd eb ff nli fa cc aa df dd dd fa bd fc fb fc ea lny fa ba af da ea aa db qq st ex ff bd eb cb fa ef ec fa de jjr fd bb ra cb aa af nz apv bf da ee da ed dd ee aa fe dd fd fd df ga eb eb cd ff db bf fd uv ff loq eo fa ac aa fx cb da ac de af fb dd cc bb ea db cd ca fd yw ca ed ba cc fe bf ab xo aa bb ea ac de yy ff bb fc fa ef ec bb gu ee ff ac de bb fa fb bvu af plj mcm lht ef dd af dc aa bf fe fd dd de de eb fc ea mp sc ec df fe ee debug security saslrpcclient sending sasl message state initiate token jcfernandez cediant thdfsadmin jcr jcfernandez cediant uv loq eo nfx vt ty bz dw yw xo yy gu bvu plj mcm lht mp sc auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient sending sasl message state initiate token jcfernandez cediant thdfsadmin jcr jcfernandez cediant eb nli lny ei da qq st tz ex vg jjr rg ra nz apv ga fcl qvr krbcontext unwrap token ff ac ef af ad krbcontext unwrap data krbcontext unwrap data error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection handlesaslconnectionfailure client java error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection handlesaslconnectionfailure client java debug ipc client exception encountered connecting server javax security sasl saslexception common protection layer client server debug ipc client exception encountered connecting server javax security sasl saslexception common protection layer client server debug security usergroupinformation found tgt ticket hex jcfernandez ced iant krbtgt jc fernandez cedian ed rb df ea gd wt fc ln db fb ed fa xf ab aa zf bf bd ca ce db ca bb lxiod af xt fc bb ad da bb bd oi ef cf fb ed fz fa de db ab dd fc fc ec ec ql db af client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal krbtgt jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump eb ae lv la ni db eb vw forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null debug security usergroupinformation found tgt ticket hex jcfernandez ced iant krbtgt jc fernandez cedian ed rb df ea gd wt fc ln db fb ed fa xf ab aa zf bf bd ca ce db ca bb lxiod af xt fc bb ad da bb bd oi ef cf fb ed fz fa de db ab dd fc fc ec ec ql db af client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal krbtgt jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump eb ae lv la ni db eb vw forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection setupiostreams client java debug security saslrpcclient sending sasl message state negotiate debug security saslrpcclient received sasl message state negotiate auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient get kerberos info proto interface classpath info classpath clientprincipal dfs namenode kerberos principal serverprincipal dfs journalnode kerberos principal debug security saslrpcclient rpc server kerberos principal name protocol classpath hdfsadmin jcr jcfernandez cediant jcfernandez cediant debug security saslrpcclient creating sasl gssapi kerberos client authenticate service jcr jcfernandez cediant debug security saslrpcclient use kerberos authentication protocol qjournalprotocolpb found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet entered krbcontext initseccontext state state new found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go hdfsadmin jcr jcfernandez cediant jcfernandez cediant expiring fri dec cet found service ticket subjectticket hex jcfernandez ced iant hdfsadmin jcr jcfernande cediant ad ec aa ad ed ab ea ed bd ff nli fa cc aa df dd dd fa bd fc fb fc ea lny fa ba af ei da ea aa db qq st ex ff bd eb cb client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump ff bf cb ec bb fc ba ey fd ad aa ac forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null krbcontext setting myseqnumber created initseccontexttoken ba jcfernandez ce diant hdfsadmin jcr jcfernand ez cediant ad ec aa ad ed ab ea ed bd eb ff nli fa cc aa df dd dd fa bd fc fb fc ea lny fa ba af da ea aa db qq st ex ff bd eb cb fa ef ec df db da fe db ae cf ee ec dc ef dd zt ae ff da ac tp ae fc ae ba hr ff bf ea dd cf dd fd df ab ba fc dc ba ee bb ok ef cf dc ae ae debug security saslrpcclient sending sasl message state initiate token jcfernandez cediant thdfsadmin jcr jcfernandez cediant eb nli lny ei da qq st tz ex vg fd zt tp hr ok auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient received sasl message state challenge token mk bf tf ec entered krbcontext initseccontext state state process krbcontext setting peerseqnumber debug security saslrpcclient sending sasl message state response token debug security saslrpcclient received sasl message state challenge token oi krbcontext unwrap token ff ff krbcontext unwrap data error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection handlesaslconnectionfailure client java debug ipc client exception encountered connecting server javax security sasl saslexception common protection layer client server debug security usergroupinformation found tgt ticket hex jcfernandez ced iant krbtgt jc fernandez cedian ed rb df ea gd wt fc ln db fb ed fa xf ab aa zf bf bd ca ce db ca bb lxiod af xt fc bb ad da bb bd oi ef cf fb ed fz fa de db ab dd fc fc ec ec ql db af client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal krbtgt jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump eb ae lv la ni db eb vw forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection setupiostreams client java debug security saslrpcclient sending sasl message state negotiate debug security saslrpcclient received sasl message state negotiate auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient get kerberos info proto interface classpath info classpath clientprincipal dfs namenode kerberos principal serverprincipal dfs journalnode kerberos principal debug security saslrpcclient rpc server kerberos principal name protocol classpath hdfsadmin jcr jcfernandez cediant jcfernandez cediant debug security saslrpcclient creating sasl gssapi kerberos client authenticate service jcr jcfernandez cediant debug security saslrpcclient use kerberos authentication protocol qjournalprotocolpb found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet entered krbcontext initseccontext state state new found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go hdfsadmin jcr jcfernandez cediant jcfernandez cediant expiring fri dec cet found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go hdfsadmin jcr jcfernandez cediant jcfernandez cediant expiring fri dec cet found service ticket subjectticket hex jcfernandez ced iant hdfsadmin jcr jcfernande cediant eb eb cd ff db bf fd uv ff loq eo fa ac aa fx cb da ac de ty af fb dd dw cc bb ea db cd ca fd yw ca ed ba cc fe bf ab xo aa bb ea ac de yy ff bb fc client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump aa eb dd ab yz forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null krbcontext setting myseqnumber created initseccontexttoken ba jcfernandez ce diant hdfsadmin jcr jcfernand ez cediant eb eb cd ff db bf fd uv ff loq eo fa ac aa fx cb da ac de af fb dd cc bb ea db cd ca fd yw ca ed ba cc fe bf ab xo aa bb ea ac de yy ff bb fc fa ef ec fb ac dd ba cb dc fc fe fc cb cd tp ef ff cc ey ec ef ef nnu li fb ba ad fb bb eb etz af fa jkr kxi ef debug security saslrpcclient sending sasl message state initiate token jcfernandez cediant thdfsadmin jcr jcfernandez cediant uv loq eo nfx vt ty bz dw yw xo yy tp eyl nnu li ad ni bv br etz jkr kxi auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient received sasl message state challenge token mk vp hr entered krbcontext initseccontext state state process krbcontext setting peerseqnumber debug security saslrpcclient sending sasl message state response token debug security saslrpcclient received sasl message state challenge token krbcontext unwrap token ff ef ed cc cf krbcontext unwrap data error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection handlesaslconnectionfailure client java debug ipc client exception encountered connecting server javax security sasl saslexception common protection layer client server debug security usergroupinformation found tgt ticket hex jcfernandez ced iant krbtgt jc fernandez cedian ed rb df ea gd wt fc ln db fb ed fa xf ab aa zf bf bd ca ce db ca bb lxiod af xt fc bb ad da bb bd oi ef cf fb ed fz fa de db ab dd fc fc ec ec ql db af client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal krbtgt jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump eb ae lv la ni db eb vw forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection setupiostreams client java debug security saslrpcclient sending sasl message state negotiate debug security saslrpcclient received sasl message state negotiate auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient get kerberos info proto interface classpath info classpath clientprincipal dfs namenode kerberos principal serverprincipal dfs journalnode kerberos principal debug security saslrpcclient rpc server kerberos principal name protocol classpath hdfsadmin jcr jcfernandez cediant jcfernandez cediant debug security saslrpcclient creating sasl gssapi kerberos client authenticate service jcr jcfernandez cediant debug security saslrpcclient use kerberos authentication protocol qjournalprotocolpb found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet entered krbcontext initseccontext state state new found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go hdfsadmin jcr jcfernandez cediant jcfernandez cediant expiring fri dec cet found service ticket subjectticket hex jcfernandez ced iant hdfsadmin jcr jcfernande cediant ad ec aa ad ed ab ea ed bd ff nli fa cc aa df dd dd fa bd fc fb fc ea lny fa ba af ei da ea aa db qq st ex ff bd eb cb client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump ff bf cb ec bb fc ba ey fd ad aa ac forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null krbcontext setting myseqnumber created initseccontexttoken ba jcfernandez ce diant hdfsadmin jcr jcfernand ez cediant ad ec aa ad ed ab ea ed bd eb ff nli fa cc aa df dd dd fa bd fc fb fc ea lny fa ba af da ea aa db qq st ex ff bd eb cb fa ef ec df cd da dd da df dc ec bf gh qy fd fb ca ow db df bd ed cb eb zn cb cb qe ket ba yk lc ea ec db da da cd gb debug security saslrpcclient sending sasl message state initiate token jcfernandez cediant thdfsadmin jcr jcfernandez cediant eb nli lny ei da qq st tz ex vg gh qy ow ze zn qe ket byk lc tv da gb vin auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient received sasl message state challenge token mk eu entered krbcontext initseccontext state state process krbcontext setting peerseqnumber debug security saslrpcclient sending sasl message state response token debug security saslrpcclient received sasl message state challenge token krbcontext unwrap token ff cc krbcontext unwrap data error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection handlesaslconnectionfailure client java debug ipc client exception encountered connecting server javax security sasl saslexception common protection layer client server debug security usergroupinformation found tgt ticket hex jcfernandez ced iant krbtgt jc fernandez cedian ed rb df ea gd wt fc ln db fb ed fa xf ab aa zf bf bd ca ce db ca bb lxiod af xt fc bb ad da bb bd oi ef cf fb ed fz fa de db ab dd fc fc ec ec ql db af client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal krbtgt jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump eb ae lv la ni db eb vw forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection setupiostreams client java debug security saslrpcclient sending sasl message state negotiate debug security saslrpcclient received sasl message state negotiate auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient get kerberos info proto interface classpath info classpath clientprincipal dfs namenode kerberos principal serverprincipal dfs journalnode kerberos principal debug security saslrpcclient rpc server kerberos principal name protocol classpath hdfsadmin jcr jcfernandez cediant jcfernandez cediant debug security saslrpcclient creating sasl gssapi kerberos client authenticate service jcr jcfernandez cediant debug security saslrpcclient use kerberos authentication protocol qjournalprotocolpb found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet entered krbcontext initseccontext state state new found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go krbtgt jcfernandez cediant jcfernandez cediant expiring fri dec cet found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go hdfsadmin jcr jcfernandez cediant jcfernandez cediant expiring fri dec cet found ticket hdfsadmin jcr jcfernandez cediant jcfernandez cediant go hdfsadmin jcr jcfernandez cediant jcfernandez cediant expiring fri dec cet found service ticket subjectticket hex jcfernandez ced iant hdfsadmin jcr jcfernande cediant eb eb cd ff db bf fd uv ff loq eo fa ac aa fx cb da ac de ty af fb dd dw cc bb ea db cd ca fd yw ca ed ba cc fe bf ab xo aa bb ea ac de yy ff bb fc client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump aa eb dd ab yz forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null krbcontext setting myseqnumber created initseccontexttoken ba jcfernandez ce diant hdfsadmin jcr jcfernand ez cediant eb eb cd ff db bf fd uv ff loq eo fa ac aa fx cb da ac de af fb dd cc bb ea db cd ca fd yw ca ed ba cc fe bf ab xo aa bb ea ac de yy ff bb fc fa ef ec aa db fa af qsah cd aa eb ac ae aa cc ef nfq ff ed dd db bb aa hn ff aa fd ef fd bf dd zh cc wzh ec ad ee bf ec cc ey ed fc fe ab ed bb aa ef debug security saslrpcclient sending sasl message state initiate token jcfernandez cediant thdfsadmin jcr jcfernandez cediant uv loq eo nfx vt ty bz dw yw xo yy qsah aa nfq hn bzh twzh ey auths method kerberos mechanism gssapi protocol hdfsadmin serverid jcr jcfernandez cediant debug security saslrpcclient received sasl message state challenge token mk pof flu ezz entered krbcontext initseccontext state state process krbcontext setting peerseqnumber debug security saslrpcclient sending sasl message state response token debug security saslrpcclient received sasl message state challenge token krbcontext unwrap token ff bd db da ad krbcontext unwrap data error security usergroupinformation priviledgedactionexception hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos javax security sasl saslexception common protection layer client server debug security usergroupinformation privilegedaction hdfsadmin jcr jcfernandez cediant jcfernandez cediant auth kerberos classpath connection handlesaslconnectionfailure client java debug ipc client exception encountered connecting server javax security sasl saslexception common protection layer client server debug security usergroupinformation found tgt ticket hex jcfernandez ced iant krbtgt jc fernandez cedian ed rb df ea gd wt fc ln db fb ed fa xf ab aa zf bf bd ca ce db ca bb lxiod af xt fc bb ad da bb bd oi ef cf fb ed fz fa de db ab dd fc fc ec ec ql db af client principal hdfsadmin jcr jcfernandez cediant jcfernandez cediant server principal krbtgt jcfernandez cediant jcfernandez cediant session key encryptionkey keytype keybytes hex dump eb ae lv la ni db eb vw forwardable ticket true forwarded ticket false proxiable ticket false proxy ticket false postdated ticket false renewable ticket false initial ticket false auth time thu dec cet start time thu dec cet end time fri dec cet renew till null client address null info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second info ipc client retrying connect server jcr jcfernandez cediant already tried time retry policy retryuptomaximumcountwithfixedsleep maxretries sleeptime second debug ipc client closing ipc connection jcr jcfernandez cediant connection refused java net connectexception connection refused sun nio ch socketchannelimpl checkconnect native method sun nio ch socketchannelimpl finishconnect socketchannelimpl java classpath socketiowithtimeout java classpath netutils java classpath netutils java classpath connection setupconnection client java classpath connection setupiostreams client java classpath connection access client java classpath client java classpath client java classpath client java classpath invoker invoke protobufrpcengine java classpath proxy isformatted unknown source classpath qjournalprotocoltranslatorpb java classpath call ipcloggerchannel java classpath call ipcloggerchannel java java util concurrent futuretask run futuretask java java util concurrent threadpoolexecutor runworker threadpoolexecutor java java util concurrent threadpoolexecutor worker run threadpoolexecutor java java lang thread run thread java debug ipc client ipc client connection jcr jcfernandez cediant hdfsadmin jcr jcfernandez cediant jcfernandez cediant closed fatal namenode namenode exception namenode join classpath unable check jns ready formatting exception thrown call jcr jcfernandez cediant jcr jcfernandez cediant failed connection exception java net connectexception connection refused detail see url classpath quorumexception java classpath quorumcall java classpath quorumjournalmanager java classpath storage java classpath fsimage java classpath namenode java classpath namenode java classpath namenode java info util exitutil exiting status info namenode namenode shutdown msg shutdown msg shutting namenode jcr jcfernandez cediant kerberos principal tested keystores contains valid certificate config file anyone could help hdfs site xml dfs nameservices hdfscluster dfs ha namenodes hdfscluster jcr jcr dfs namenode rpc address hdfscluster jcr jcr jcfernandez cediant dfs namenode rpc bind host hdfscluster jcr dfs namenode rpc address hdfscluster jcr jcr jcfernandez cediant dfs namenode rpc bind host hdfscluster jcr dfs namenode http address hdfscluster jcr jcr jcfernandez cediant dfs namenode http address hdfscluster jcr jcr jcfernandez cediant dfs namenode shared edits dir qjournal jcr jcfernandez cediant jcr jcfernandez cediant jcr jcfernandez cediant hdfscluster dfs namenode name dir file home hdfsadmin hdfs data meta dfs client failover proxy provider hdfscluster classpath dfs ha fencing method sshfence dfs ha fencing ssh private key file home hdfsadmin ssh id rsa dfs ha automatic failover enabled true dfs namenode name dir restore true dfs permission supergroup hadoopadm dfs block access token enable true dfs namenode keytab file opt hadoop security nn service keytab dfs namenode kerberos principal hdfsadmin host jcfernandez cediant dfs namenode kerberos http principal hdfsadmin host jcfernandez cediant dfs namenode kerberos internal spnego principal http host jcfernandez cediant dfs datanode data dir file home hdfsadmin hdfs data dfs dfs datanode data dir perm dfs datanode address dfs datanode http address dfs datanode keytab file opt hadoop security dn service keytab dfs datanode kerberos principal hdfsadmin host jcfernandez cediant dfs datanode kerberos http principal hdfsadmin host jcfernandez cediant dfs journalnode keytab file opt hadoop security nn service keytab dfs journalnode kerberos principal hdfsadmin host jcfernandez cediant dfs journalnode kerberos internal spnego principal http host jcfernandez cediant dfs web authentication kerberos principal hdfsadmin host jcfernandez cediant dfs web authentication kerberos keytab opt hadoop security http service keytab dfs webhdfs enabled true dfs journalnode edits dir var lib hdfs journal dfs journalnode http address dfs encrypt data transfer true dfs http policy http dfs http server keystore resource ssl server xml dfs client http keystore resource ssl client xml core site xml ha zookeeper acl opt hadoop etc zk acl txt defaultfs hdfs hdfscluster ha zookeeper quorum jcr jcfernandez cediant jcr jcfernandez cediant jcr jcfernandez cediant hadoop security authentication kerberos hadoop security authorization true hadoop http filter initializers classpath hadoop http authentication type kerberos hadoop http authentication kerberos principal http host jcfernandez cediant hadoop http authentication kerberos keytab opt hadoop security http service keytab hadoop http authentication simple anonymous allowed false hadoop http authentication cookie domain jcfernandez cediant hadoop http authentication signature secret file opt hadoop security secret hadoop ssl hostname verifier default hadoop ssl enabled true hadoop ssl require client cert false hadoop ssl keystores factory class classpath hadoop ssl server conf ssl server xml hadoop ssl client conf ssl client xml hadoop rpc protection privacy"
    },
    "24430":{
        "ID":19368,
        "MESSAGE_ID":"CAFiYk=rY-ihPtAjnrK25fv3946CG3CO_N5Av64MmMBGDSJ8M6g@mail.gmail.com",
        "PARENT_ID":19351.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Arpit Agarwal <aagarwal@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"binding vote vote merge branch hdfs trunk pass code merged soon address remaining issue trunk thanks everyone voted provided feedback regard arpit"
    },
    "24447":{
        "ID":19351,
        "MESSAGE_ID":"CAGB5D2ZDLaripjMygSreO2bS-HoYPsueLUL-jj871wZ=bc9jJw@mail.gmail.com",
        "PARENT_ID":19337.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"thanks clarifying arpit since reviewed enough everything thus far look great andrew"
    },
    "24461":{
        "ID":19337,
        "MESSAGE_ID":"CAGparvUpEDoMmZu-ddV7kKQHv4cKmZEin4V8eVEgQS1TnvdgOg@mail.gmail.com",
        "PARENT_ID":19336.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Chen He <airbots@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"nice feature hdfs"
    },
    "24462":{
        "ID":19336,
        "MESSAGE_ID":"CAFiYk=qS65ti7fJ2F4icD7dH-kmUDfAQwgEXv-g26W8h_6SSBQ@mail.gmail.com",
        "PARENT_ID":19335.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Arpit Agarwal <aagarwal@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"hi andrew plan stated back august work principally two phase url second phase includes api support also need quota management change scope work keeping feature branch sync ongoing development trunk unmanageable hence would like stick initial plan develop phase even datanode caching initial merge include quota management change happening subsequently going forward stabilize current change trunk time frame next add quota management api support align time frame second merge potentially march april arpit"
    },
    "24463":{
        "ID":19335,
        "MESSAGE_ID":"CAGB5D2YQ9cz4G+FPF1JJiB+COzHLd1GKWJtft_oe7JNB-xjZQw@mail.gmail.com",
        "PARENT_ID":19298.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"existence",
        "BODY":"hi everyone still getting speed change fault following development closely priority etc etc branch thus far already quite impressive quite undertaking turn dn collection storage along corresponding datastructure tracking change nn dn correct wrong though still leaf substantial part design doc implemented looking list remaining subtasks seems like still specify storage type file hdfs write file given storage type hdfs along corresponding client protocol change lead two question merged new code without client change ability create file different storage type know example could hand qa team test wondering want merge rather branch feature complete plan implementation remaining feature many phase timeline phase particularly related use case presented section design doc also going post design doc question jira technical would like get clarification thanks andrew"
    },
    "24478":{
        "ID":19320,
        "MESSAGE_ID":"CALdd-zh2DFb9A6iY5Jni443PZvmqqDtzVW0gOvKRhKV53tAVww@mail.gmail.com",
        "PARENT_ID":19291.0,
        "SUBJECT":"Re: lightweight transaction timeout",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"turning tracing would light"
    },
    "24492":{
        "ID":19306,
        "MESSAGE_ID":"CAC=xA+XskPaEqS8DV=_nWCqfVqQ1XUknF0EWkM0Jcz5tCm3Wpg@mail.gmail.com",
        "PARENT_ID":19305.0,
        "SUBJECT":"Re: lightweight transaction timeout",
        "SENT_FROM":"\"J. Ryan Earl\" <oss@jryanearl.us>",
        "TAGS":"not-ak",
        "BODY":"actually may wrong would still try node"
    },
    "24493":{
        "ID":19305,
        "MESSAGE_ID":"CAC=xA+WC_=sCnaOv0GSEhBc4c+BTBkt2vam-VkP2ufR7WNodxg@mail.gmail.com",
        "PARENT_ID":19291.0,
        "SUBJECT":"Re: lightweight transaction timeout",
        "SENT_FROM":"\"J. Ryan Earl\" <oss@jryanearl.us>",
        "TAGS":"existence",
        "BODY":"using node paxos requires minimum node establish quorum cassandra likely disallow lightweight transaction entirely node scenario"
    },
    "24500":{
        "ID":19298,
        "MESSAGE_ID":"80493F1897C914448A4C6EC045A8812531E91A1B@SACEXCMBX02-PRD.hq.netapp.com",
        "PARENT_ID":19280.0,
        "SUBJECT":"RE: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"\"Sirianni, Eric\" <Eric.Sirianni@netapp.com>",
        "TAGS":"not-ak",
        "BODY":"team developing testing hdfs branch past month proven quite stable eric"
    },
    "24507":{
        "ID":19291,
        "MESSAGE_ID":"529E9495.4050506@gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"lightweight transaction timeout",
        "SENT_FROM":"Jim Xu <jimxu123@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi use two thread test lightweight transaction thread execute insert test table column column value thread id exists time range small number ok row inserted thread row inserted thread big number get timedoutexception acknowledged paxos progress true following two different result one thread throw exception thread successfully insert value two thread throw exception value inserted table except row test table inserted thread others inserted thread one thread insert row table row modified thread continue insert next row think lightweight transaction function get exception avoid try enlarge ca contention timeout cassandra yaml work cassandra version cluster two node keypsace replication factor best regard jim xu"
    },
    "24511":{
        "ID":19287,
        "MESSAGE_ID":"1386084948.72964.YahooMailNeo@web125703.mail.ne1.yahoo.com",
        "PARENT_ID":19282.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Tsz Wo Sze <szetszwo@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"tsz wo"
    },
    "24516":{
        "ID":19282,
        "MESSAGE_ID":"230943979.51558749.1386037522922.JavaMail.root@vmware.com",
        "PARENT_ID":19281.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Jun Ping Du <jdu@vmware.com>",
        "TAGS":"not-ak",
        "BODY":"good see hdfs support different storage tier involved minor development bug fixing effort agree ready merge thanks junping original message suresh srinivas hdfs dev hadoop apache org cc common dev hadoop apache org sent tuesday december subject vote merge hdfs heterogeneous storage phase trunk great work arpit nicholas part design following change closely ready merged trunk"
    },
    "24517":{
        "ID":19281,
        "MESSAGE_ID":"CADdVdVGWPm=0ds+CNKeJqvE2260O3gpDMzu39eidDxNK+s4_yg@mail.gmail.com",
        "PARENT_ID":19280.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Suresh Srinivas <suresh@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"great work arpit nicholas part design following change closely ready merged trunk"
    },
    "24518":{
        "ID":19280,
        "MESSAGE_ID":"CAFiYk=q_i4kOCa00g11Yec=MAEG80EFFmozvAh-7HGw-LAaxig@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Merge HDFS-2832 Heterogeneous Storage Phase 1 to trunk",
        "SENT_FROM":"Arpit Agarwal <aagarwal@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"hello would like call vote merge phase heterogeneous storage feature trunk scope change change allow exposing datanode collection storage set foundation subsequent work present heterogeneous storage application allows datanodes send block storage report per storage addition change introduces ability add storage type tag storage directory enables supporting different type storage addition disk storage development feature tracked jira url detail development testing development done separate branch url updated design posted url change involve changed line code third change test please see test plan url detail feature merged trunk continue test fix bug may found trunk well add test outlined test plan bulk design implementation done suresh srinivas sanjay radia nicholas sze junping du also thanks eric sirianni chris nauroth steve loughran bikas saha andrew wang todd lipcon providing feedback jiras discussion vote run week close pm pt thanks arpit confidentiality notice notice message intended use individual entity addressed may contain information confidential privileged exempt disclosure applicable law reader message intended recipient hereby notified printing copying dissemination distribution disclosure forwarding communication strictly prohibited received communication error please contact sender immediately delete system thank"
    },
    "24632":{
        "ID":19166,
        "MESSAGE_ID":"CAM=XDd_9JDWi=hn4gUPPXM=x0FsKOYjN5XtXisLtAeG4WLCf-A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[ANNOUNCE] Apache Tajo 0.2.0 incubating release",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"apache tajo incubating released apache tajo team pleased announce release apache tajo incubating bid data warehouse system hadoop provides low latency scalable ad hoc query etl large data set stored hdfs data source release available immediate download url apache tajo incubating resolved issue including bug fix improvement includes following new feature add cost based join optimization allow inline view use table subquery add various string function upper lower trim split part regexp replace allow predicate support improve significantly scan performance add insert overwrite statement add create table statement add hiveql mode allow configurable null character csvfile format allow compression decompression csvfile codecs supported hadoop add extensible rewrite rule engine add tajo dump backup restore utility allow predicate add tajo resource manager specialized low latency query apache tajo team looking developer course user help grow community give feedback mailing list information url check apache tajo url information disclaimer apache tajo effort undergoing incubation apache software foundation asf sponsored apache incubator pmc incubation required newly accepted project review indicates infrastructure communication decision making process stabilized manner consistent successful asf project incubation status necessarily reflection completeness stability code indicate project yet fully endorsed asf"
    },
    "24669":{
        "ID":19129,
        "MESSAGE_ID":"CAGB5D2a9x+Emm2OnKdonVxJwpjpFLGubJEHkFNKD32USzVUktQ@mail.gmail.com",
        "PARENT_ID":19126.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"url"
    },
    "24672":{
        "ID":19126,
        "MESSAGE_ID":"E62694D6-BEE7-4D1C-B775-1266147BE44F@gmail.com",
        "PARENT_ID":19125.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Jay Vyas <jayunit100@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"jira sent iphone"
    },
    "24673":{
        "ID":19125,
        "MESSAGE_ID":"CAGB5D2a7ZKQw9wFrHTgegxQw1QFmGfHz9bR=u_O0HEGzuf-Usw@mail.gmail.com",
        "PARENT_ID":19072.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"thanks asking link url think recording talk unfortunately also copy comment jira though would like distract much lohit trying"
    },
    "24726":{
        "ID":19072,
        "MESSAGE_ID":"CA+4kjVt6JFfCL0GwDiGqR9tqJ5sWXg1XP7Ro4s50mbkacLmonA@mail.gmail.com",
        "PARENT_ID":19071.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"interesting moved comment jira would good go url paper"
    },
    "24727":{
        "ID":19071,
        "MESSAGE_ID":"CAGB5D2Z2+6rO1Yh8RtW5j=wQQGs=fJL0jRnC2GfHC3VMa52MTw@mail.gmail.com",
        "PARENT_ID":19057.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"property, technology",
        "BODY":"hey steve research project cake published socc trying provide slas mixed workload latency sensitive throughput bound application hbase running alongside mr challenging seek real killer basically strongly limit mr keep worst case seek latency putting scheduler rpc queue hbase hdfs restrict queuing disk lacked preemption regarding citation note academic consider throughput sharing solved problem dissimilar normal time slicing try ensure fairness coarse timescale think cgroups ioprio set essentially provide mixing throughput latency though difficult conclusion really great solution spinning disk besides physical isolation know get either iop bandwidth linear tradeoff two interested though dig related work cake paper however since seems concerned throughput bound apps might okay using cgroups ioprio set time slicing actually hacked code ago passed client provided priority byte dn used set priority handling dataxceiver accordingly outlandish idea since put qos field rpc protocol instance would another byte short circuit read outside paradigm use cgroup control instead casual conversation googlers indicate special borg omega sauce either heavily prioritize dfs non dfs maybe another approach separate block management hdfs mr task could write output raw hdfs block thus bringing lot back fold datanode manager machine overall strongly agree important first define goal regarding qos general case tarpit would good carve useful thing done like lohit direction per stream throughput throttling trusted client carefully grow scope find usecases confidently solve best andrew cgroups blkio controller url ioprio set url"
    },
    "24741":{
        "ID":19057,
        "MESSAGE_ID":"CA+4kjVsyYWpmhPJbLtjUAm3yDmJLborwpyRU3nLb=7hDBeK2_w@mail.gmail.com",
        "PARENT_ID":19056.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Steve Loughran <stevel@hortonworks.com>",
        "TAGS":"existence, property, technology",
        "BODY":"looked bit within context yarn yarn container would ideal would able request io capacity well cpu ram work throttling would outside app trying limit code whether want probably want give bandwidth system otherwise idle self throttling pick spare io use cgroups yarn throttle local disk io file url java filesystem apis mr temp data group throttle hdfs per yarn container would ideal use case io taking place dn cgroups limit io throttled process group implementing dn would require lot complex code prioritise work based block id sole identifier go around everywhere input source local socket hbase io tcp stack one go heterogenous filesystem need think io load per storage layer well alongside per volume also generic rpc request throttle prevent do nn hdfs service would need server side implemented rpc code universal also need define load trying throttle pure rpcs second read bandwidth write bandwidth seek iop file lined sequential reading would almost want stream next block high priority request came operation like seek would involve disk head movement backwards would something throttle hence need storage type aware ssd seek cost le also need consider although cost writes high usually done goal preserving data want impact durability probably one issue cause debate datacentre platform google omega want max cluster utilisation max determinism workload someone iop throttling timeline need clear use case yarn container would look research done past see work andrew citation relevance steve"
    },
    "24742":{
        "ID":19056,
        "MESSAGE_ID":"CA+01ahjojpTM+xj9daambgTiBWJ3oVgs6GwMjqXPzxN_40YefA@mail.gmail.com",
        "PARENT_ID":19055.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"lohit <lohit.vijayarenu@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"andrew wang thanks yes also thought something datanode would also mean one could easily throttle client access outside cluster example distcp hftp copy client need worry throttle configs cluster control much much throughput achieved want something like one idea flexibility client override value set trusted cluster could allow client go beyond default value usecases alternatively also thought default value max value client could change default go beyond default another problem dn side config different value different client easily changing selective client haosong also suggested could wrap fsdataoutputstream fsdatainput stream throttleinputstream might careful code us filesystem apis accidentally throttling like reducer copy distributed cache nice day lohit"
    },
    "24743":{
        "ID":19055,
        "MESSAGE_ID":"CAGB5D2ZSWFeUPFTbyZmfeP5i2-eb65PihwpbZ95KOrtUtCbB6A@mail.gmail.com",
        "PARENT_ID":19053.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"existence, property, technology",
        "BODY":"hey lohit interesting topic something actually worked grad school coming cloudera would help could outline usecases per filesystem throttling would help made sense throttle dn side since better view happening system knowledge different volume set limit per disk still reliable though since normally portion disk used mr scratch space dn control tried playing thread priority see much improvement maybe newer cgroups stuff help sure per filesystem throttling benefit probably easier dn side implementation would help better understand problem trying solve best andrew"
    },
    "24745":{
        "ID":19053,
        "MESSAGE_ID":"CAFt=RONVk39EszDsd=XX6Lpzdz0sRb+27jb5bq_Lp2iZvfjESA@mail.gmail.com",
        "PARENT_ID":19048.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Haosong Huang <haosdent@gmail.com>",
        "TAGS":"existence, property, technology",
        "BODY":"hi lohit class named throttledinputstream hadoop distcp could check find detail addition working try achieve resource control include cpu network disk io jvm implementation depends cgroup could run linux would push library java cgroup github next several month interested give advice help improve please"
    },
    "24750":{
        "ID":19048,
        "MESSAGE_ID":"CA+01ahhj01ok0jxev5cFS-pdM-9FoAn4+DYaM0E876APmdhNaQ@mail.gmail.com",
        "PARENT_ID":19047.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"lohit <lohit.vijayarenu@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hi adam thanks reply change referring filesystem java layer affect hdfs replication namenode operation give better idea would affect client something like configuration conf new configuration conf setint read bandwitdh mbpersec mb filesystem filesystem get conf fsdatainputstream fis open path file xt fis read would max mb adam muise nice day lohit"
    },
    "24751":{
        "ID":19047,
        "MESSAGE_ID":"CAJ1NbZeYET_je1GjGTz3k-EgM6nGt0W1ddbOCaNhnqBCvybxAQ@mail.gmail.com",
        "PARENT_ID":19046.0,
        "SUBJECT":"Re: HDFS read\/write data throttling",
        "SENT_FROM":"Adam Muise <amuise@hortonworks.com>",
        "TAGS":"property",
        "BODY":"see url please note met many unexpected impact workload careful mindful datanode memory network capacity"
    },
    "24752":{
        "ID":19046,
        "MESSAGE_ID":"CA+01ahhyyv6K4sQBBfQqFYPnq25_ZYUr2LaCxmC-=pcetUxH8A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"HDFS read\/write data throttling",
        "SENT_FROM":"lohit <lohit.vijayarenu@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hello devs wanted reach see anyone thought ability throttle data transfer within hdfs one option thinking throttle per filesystem basis similar statistic filesystem would mean anyone handle hdfs hftp throttled globally within jvm right value come would based type hardware use many task client allow hand something like filesystem layer would mean many task job jar copy distributedcache copy hidden data movement would also throttled wanted know anyone requirement cluster past thinking around appreciate input comment nice day lohit"
    },
    "24814":{
        "ID":18984,
        "MESSAGE_ID":"CABbyifO42Nh25GPbh0B-+cqJA0fJGM+r8+fu2ocdvbc4QeuXHA@mail.gmail.com",
        "PARENT_ID":18983.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi colin put command line tool today query information hdfs jmx code available url within day obviously tool polished trying demonstrate feasible reuse code new web ui build tool minimal effort right tool based node however possible use java rhino run code integrated main repository thanks haohui"
    },
    "24815":{
        "ID":18983,
        "MESSAGE_ID":"CA+qbEUNN04UmG22a0XT6W-O23yYsn+8K4v6DNdxHQcfqkDPmog@mail.gmail.com",
        "PARENT_ID":18944.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"technology",
        "BODY":"right search google dfshealth jsp find many unsecured namenode web uis accidentally exposed internet uis client side accessing page would work since client side javascript would fail make jmx access nearly firewall block jmx sense new ui secure le understanding cross site scripting vulnerability arise server us data client page display without properly escaping according wikipedia persistent vulnerability arises data provided attacker saved server permanently displayed normal page returned user course regular browsing without proper html escaping nobody proposed namenode seems already exposed theoretical jmx security vulnerability already since support jmx client side ui add convenient way calling pre existing hook big concern like said earlier reasonable command line tool think solvable problem running link terminal exactly gold standard command line excellence would shame block progress support colin"
    },
    "24845":{
        "ID":18953,
        "MESSAGE_ID":"CABbyifOmOtOsUh25rtCBJJWDzPjxy2qnZY+WDH6D2EhPS0fKuA@mail.gmail.com",
        "PARENT_ID":18951.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi andrew always option access old jsp ui using url want access ui text based browser haohui"
    },
    "24847":{
        "ID":18951,
        "MESSAGE_ID":"CAGB5D2Zs-4Vmt5zOTfrTx++9W1-MCbmxUKZR1rEJbw7JwE=HAQ@mail.gmail.com",
        "PARENT_ID":18944.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Andrew Wang <andrew.wang@cloudera.com>",
        "TAGS":"property",
        "BODY":"also convinced javascript based approach way go switch default ui minimum command line tool colin requested even would still want retain support text based browser like elinks unless compelling technical reason haohui sympathetic since already done work pure version also true existing jsp page could cleaned achieve basically visual effect also still working text browser thanks andrew"
    },
    "24854":{
        "ID":18944,
        "MESSAGE_ID":"CABFz-zig_MoaEYyW5Q=M+Hci_GR=nuM3JFQh5QHxNuzSUVkVnQ@mail.gmail.com",
        "PARENT_ID":18938.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Luke Lu <llu@vicaya.com>",
        "TAGS":"not-ak",
        "BODY":"think reached consensus new javascript ui right direction go people considered interesting personally think inappropriate core hadoop ui increase attack surface ui taking away existing mitigation option user unnecessarily see latest comment hdfs concrete example luke"
    },
    "24855":{
        "ID":18943,
        "MESSAGE_ID":"023001ced540$1c91e630$55b5b290$@dgist.ac.kr",
        "PARENT_ID":null,
        "SUBJECT":"About java heap space error in MR applicaiton over YARN",
        "SENT_FROM":"\"Yoonmin Nam\" <ronymin@dgist.ac.kr>",
        "TAGS":"not-ak",
        "BODY":"hi tried run finding connected component algorithm hadoop using yarn mapreduce application ran correctly hadoop however tried run algorithm using yarn error message printed info mapreduce job task id attempt status failed error java heap space container killed applicationmaster container killed request exit code inputsplits total container created part log applicationmaster info main classpath created mrappmaster application appattempt warn main classpath job xml attempt override final parameter mapreduce job end notification max retry interval ignoring warn main classpath job xml attempt override final parameter mapreduce job end notification max attempt ignoring warn main classpath unable load native hadoop library platform using builtin java class applicable info main classpath executing token info main classpath kind yarn rm token service ident classpath fc info main classpath specific max attempt application attempt num last retry false info main classpath using mapred newapicommitter warn main classpath job xml attempt override final parameter mapreduce job end notification max retry interval ignoring warn main classpath job xml attempt override final parameter mapreduce job end notification max attempt ignoring info main classpath outputcommitter set config null info main classpath outputcommitter classpath info main classpath registering class classpath class classpath info main classpath registering class classpath class classpath jobeventdispatcher info main classpath registering class classpath class classpath taskeventdispatcher info main classpath registering class classpath class classpath taskattempteventdispatcher info main classpath registering class classpath class classpath info main classpath registering class classpath eventtype class classpath speculatoreventdispatcher info main classpath registering class classpath eventtype class classpath containerallocatorrouter info main classpath registering class classpath eventtype class classpath containerlauncherrouter info main classpath registering class classpath type class classpath jobfinisheventhandler info main classpath loaded property hadoop metric property info main classpath scheduled snapshot period second info main classpath mrappmaster metric system started info main classpath adding job token job jobtokensecretmanager info main classpath uberizing job enabled many map many reduces much input info main classpath input size job job number split info main classpath number reduces job job info main classpath job job transitioned new inited info main classpath mrappmaster launching normal non uberized multi container job job info socket reader port classpath starting socket reader port info main classpath adding protocol classpath server info ipc server responder classpath ipc server responder starting info ipc server listener classpath ipc server listener starting info main classpath instantiated mrclientservice saturn info main classpath logging classpath classpath via classpath info main classpath added global filter safety class classpath quotinginputfilter info main classpath added filter proxy filter class classpath context mapreduce info main classpath added filter proxy filter class classpath context static info main classpath adding path spec mapreduce info main classpath adding path spec info main classpath jetty bound port info main classpath jetty info main classpath extract jar file home hadoop hadoop share hadoop yarn hadoop yarn common jar webapps mapreduce tmp jetty mapreduce tj webapp info main classpath started selectchannelconnector info main classpath web app mapreduce started info main classpath registered webapp guice module info asyncdispatcher event handler classpath job create job info socket reader port classpath starting socket reader port info ipc server listener classpath ipc server listener starting info ipc server responder classpath ipc server responder starting info main classpath nodeblacklistingenabled true info main classpath maxtaskfailurespernode info main classpath blacklistdisablepercent info main classpath connecting resourcemanager info main classpath maxcontainercapability info main classpath upper limit thread pool size info main classpath yarn client max nodemanagers proxy info asyncdispatcher event handler classpath job job transitioned inited setup info committerevent processor classpath processing event eventtype job setup info asyncdispatcher event handler classpath job job transitioned setup running info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath task task transitioned new scheduled info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned unassigned info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info asyncdispatcher event handler classpath attempt taskattempt transitioned new unassigned info thread classpath mapresourcereqt info thread classpath reduceresourcereqt info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info rmcommunicator allocator classpath recalculating schedule headroom info rmcommunicator allocator classpath reduce slow start threshold met completedmapsforreduceslowstart info rmcommunicator allocator classpath got allocated container info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath assigned container container attempt info rmcommunicator allocator classpath recalculating schedule headroom info rmcommunicator allocator classpath reduce slow start threshold met completedmapsforreduceslowstart info rmcommunicator allocator classpath scheduling pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath job jar file remote hdfs tmp hadoop yarn staging root staging job job jar info asyncdispatcher event handler classpath job conf file remote tmp hadoop yarn staging root staging job job xml info asyncdispatcher event handler classpath adding token secret key nm use launching container info asyncdispatcher event handler classpath size containertokens dob info asyncdispatcher event handler classpath putting shuffle token servicedata info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath attempt taskattempt transitioned unassigned assigned info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath opening proxy saturn info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info containerlauncher classpath opening proxy saturn info containerlauncher classpath opening proxy saturn info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info containerlauncher classpath opening proxy saturn info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info containerlauncher classpath opening proxy saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info containerlauncher classpath opening proxy saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info containerlauncher classpath opening proxy saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath opening proxy saturn info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info containerlauncher classpath opening proxy saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info containerlauncher classpath opening proxy saturn info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath attempt start task info containerlauncher classpath processing event eventtype container remote launch container container taskattempt attempt info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath launching attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath shuffle port returned containermanager attempt info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info containerlauncher classpath shuffle port returned containermanager attempt info asyncdispatcher event handler classpath taskattempt attempt using containerid container nm saturn info asyncdispatcher event handler classpath attempt taskattempt transitioned assigned running info asyncdispatcher event handler classpath attempt start task info asyncdispatcher event handler classpath task task transitioned scheduled running info rmcommunicator allocator classpath getresources application ask release newcontainers finishedcontainers resourcelimit knownnms info socket reader port securitylogger classpath auth successful job auth simple info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt info socket reader port securitylogger classpath auth successful job auth simple info socket reader port securitylogger classpath auth successful job auth simple info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt info socket reader port securitylogger classpath auth successful job auth simple info socket reader port securitylogger classpath auth successful job auth simple info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm given task attempt fatal ipc server handler classpath task attempt exited java heap space info ipc server handler classpath diagnostics report attempt error java heap space info asyncdispatcher event handler classpath diagnostics report attempt error java heap space info asyncdispatcher event handler classpath attempt taskattempt transitioned running fail container cleanup info containerlauncher classpath processing event eventtype container remote cleanup container container taskattempt attempt info containerlauncher classpath killing attempt info asyncdispatcher event handler classpath attempt taskattempt transitioned fail container cleanup fail task cleanup info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info asyncdispatcher event handler classpath attempt taskattempt transitioned fail task cleanup failed info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info asyncdispatcher event handler classpath resolved saturn default rack info thread classpath failure node saturn info committerevent processor classpath processing event eventtype task abort info committerevent processor classpath processing event eventtype task abort info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info committerevent processor classpath processing event eventtype task abort info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info asyncdispatcher event handler classpath task task transitioned kill wait killed info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info socket reader port classpath ipc server listener readandprocess client threw exception java io ioexception connection reset peer java io ioexception connection reset peer sun nio ch filedispatcherimpl read native method sun nio ch socketdispatcher read socketdispatcher java sun nio ch ioutil readintonativebuffer ioutil java sun nio ch ioutil read ioutil java sun nio ch socketchannelimpl read socketchannelimpl java classpath server java classpath server java classpath connection readandprocess server java classpath listener doread server java classpath listener reader dorunloop server java classpath listener reader run server java warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info socket reader port securitylogger classpath auth successful job auth simple warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill container cleanup kill task cleanup info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath task task transitioned kill wait killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info committerevent processor classpath processing event eventtype task abort info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info ipc server handler classpath jvm id jvm asked task info ipc server handler classpath jvm id jvm invalid killed fatal ipc server handler classpath task attempt exited java heap space info ipc server handler classpath diagnostics report attempt error java heap space info asyncdispatcher event handler classpath diagnostics report attempt error java heap space warn committerevent processor classpath could delete hdfs user root twitter output temporary temporary att empt info asyncdispatcher event handler classpath attempt taskattempt transitioned kill task cleanup killed info asyncdispatcher event handler classpath task task transitioned kill wait killed info asyncdispatcher event handler classpath job job transitioned fail wait fail abort info committerevent processor classpath processing event eventtype job abort info asyncdispatcher event handler classpath job job transitioned fail abort failed info thread classpath finishing cleanly last retry info thread classpath notify rmcommunicator isamlastretry true info thread classpath rmcommunicator notified shouldunregistered true info thread classpath notify jheh isamlastretry true info thread classpath jobhistoryeventhandler notified forcejobcompletion true info thread classpath calling stop service info thread classpath stopping jobhistoryeventhandler size outstanding queue size info thread classpath stop writing event task failed info thread classpath stop writing event map attempt killed info thread classpath stop writing event task failed info thread classpath stop writing event map attempt killed info thread classpath stop writing event task failed info thread classpath stop writing event map attempt killed info thread classpath stop writing event map attempt killed info thread classpath stop writing event task failed info thread classpath stop writing event task failed info thread classpath stop writing event map attempt killed info thread classpath stop writing event task failed info ipc server handler classpath status update attempt info ipc server handler classpath progress taskattempt attempt info thread classpath stop writing event map attempt killed info thread classpath stop writing event task failed info thread classpath stop writing event job failed info thread classpath copying hdfs tmp hadoop yarn staging root staging job job jhist hdfs home hadoop hadoop mr history tmp root job root hash dto dmin btwitter input failed default jhist tmp info thread classpath copied done location hdfs home hadoop hadoop mr history tmp root job root hash dto dmin btwitter input failed default jhist tmp info thread classpath copying hdfs tmp hadoop yarn staging root staging job job conf xml hdfs home hadoop hadoop mr history tmp root job conf xml tmp info thread classpath copied done location hdfs home hadoop hadoop mr history tmp root job conf xml tmp info thread classpath moved tmp done hdfs home hadoop hadoop mr history tmp root job summary tmp hdfs home hadoop hadoop mr history tmp root job summary info thread classpath moved tmp done hdfs home hadoop hadoop mr history tmp root job conf xml tmp hdfs home hadoop hadoop mr history tmp root job conf xml info thread classpath moved tmp done hdfs home hadoop hadoop mr history tmp root job root hash dto dmin btwitter input failed default jhist tmp hdfs home hadoop hadoop mr history tmp root job root hash dto dmin btwitter input failed default jhist info thread classpath stopped jobhistoryeventhandler super stop info thread classpath setting job diagnostics task failed task job failed task failed failedmaps failedreduces info thread classpath history url url info thread classpath waiting application successfully unregistered info thread classpath final stats pendingreds scheduledmaps scheduledreds assignedmaps assignedreds completedmaps completedreds contalloc contrel hostlocal racklocal info thread classpath deleting staging directory hdfs tmp hadoop yarn staging root staging job info thread classpath stopping server info ipc server listener classpath stopping ipc server listener info taskheartbeathandler pingchecker classpath taskheartbeathandler thread interrupted info ipc server responder classpath stopping ipc server responder info thread classpath stopping server info ipc server listener classpath stopping ipc server listener info ipc server responder classpath stopping ipc server responder info thread classpath stopped selectchannelconnector info thread classpath exiting mr appmaster goodbye info thread classpath mrappmaster received signal signaling rmcommunicator jobhistoryeventhandler info thread classpath rmcommunicator notified isignalled true info thread classpath notify rmcommunicator isamlastretry true info thread classpath rmcommunicator notified shouldunregistered true info thread classpath notify jheh isamlastretry true info thread classpath jobhistoryeventhandler notified forcejobcompletion true therefore first thought allocated ram container could solve problem changed mapreduce map java opt mapreduce reduce java opt mapreduce map memory mb mapreduce reduce memory mb somewhat higher error occurred also knew yarn nodemanager vmem pmem ratio option thought matter please give hint clue problem thanks"
    },
    "24860":{
        "ID":18938,
        "MESSAGE_ID":"CABbyifO+rFVESkOo7gfV9t6Lav9HSED0yNaFFgA9uuimPyq8jg@mail.gmail.com",
        "PARENT_ID":18936.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"existence, technology",
        "BODY":"would like summarize discussion far seems reached two consensus new javascript based ui right direction go keep old jsp page around compatibility reason debate usage jmx json apis orthogonal switching ui thus consider technical detail continue discussion public jira new ui already landed trunk based consensus seems switch default ui new one shortly user still access old web ui using url question remain going maintain old web ui answer leave deprecated focus effort new web ui thanks haohui"
    },
    "24862":{
        "ID":18936,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B6661172DD8E@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":18919.0,
        "SUBJECT":"RE: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"imho make sense especially long term jmx interface serf management console admin perspective webui serf end user interface might share functionality code validate couple together thanks regard kai"
    },
    "24870":{
        "ID":18928,
        "MESSAGE_ID":"CAOKEGfsYf6--hGW3GMdFvRQ1bg99oQ3g-5s+xhngSxxVw36xQg@mail.gmail.com",
        "PARENT_ID":18927.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"understand correctly using http based api access jmx data api strictly designed rest principal reflect management api query parameter jmx unfortunate better rest based design may add enough value add another api would le familiar familiar jmx believe servlet question url far gateway deployment able get access web uis outside hadoop cluster firewall ajax call need routed gateway think seems like great step right direction using web apis web uis may provide interesting way provide additional security auditing etc"
    },
    "24871":{
        "ID":18927,
        "MESSAGE_ID":"CABbyifOUxp5LkgWE7sgkhkVQ3xqx7FUAH7XLJ2UxtHus36Sy3A@mail.gmail.com",
        "PARENT_ID":18924.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"provide data point make discussion concrete part dump jmx information curl url bean name hadoop service namenode name namenodeinfo modelertype classpath thread used version snapshot rdcdabdecfdaebdffefff total clusterid cid ddaecd bc fde percentused percentremaining free safemode new web ui extract value field render html thanks haohui"
    },
    "24874":{
        "ID":18924,
        "MESSAGE_ID":"CAOKEGfsy30HvQkgS=Jzmp8JXQCoLWsVJi9mWfrQWuvEToTzbEg@mail.gmail.com",
        "PARENT_ID":18923.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"think important make provision ajax call able go gateway deployment like knox cluster firewalled commented jira call currently serverside moving browser need either require punching hole filewalls unfortunate directing given rest api gateway"
    },
    "24875":{
        "ID":18923,
        "MESSAGE_ID":"CABbyifO+Lu9Nzxze9+VuH5Y9+Kte0ViAP0EJChH7TR3DjTLcCA@mail.gmail.com",
        "PARENT_ID":18921.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"neither go jmx new web ui implement hdfs browsing webhdfs log available static servlets exactly today thanks haohui"
    },
    "24877":{
        "ID":18921,
        "MESSAGE_ID":"5448F337-AF30-44B5-A269-9F3B1437181F@cloudera.com",
        "PARENT_ID":18920.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"planning expose thing like hdfs browsing nn dn log jmx thanks alejandro phone typing"
    },
    "24878":{
        "ID":18920,
        "MESSAGE_ID":"CABbyifOT66zK5PxwX+HP=7CJPQpN9=UYRsH8sjeYtrdYbAXqqw@mail.gmail.com",
        "PARENT_ID":18919.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"property",
        "BODY":"seems appealing ui jmx directly support jmx long term management software information provided jmx api mostly identical json api today web ui cover information provided jmx web ui trivial work extract information render html compatibility unit test free agree jmx apis imperfect revisited timeframe however orthogonal discussion transitioning jsp based web ui client side javascript web ui architecture new web ui allows easy migration json based apis whenever land trunk thanks haohui"
    },
    "24879":{
        "ID":18919,
        "MESSAGE_ID":"CAJs-t7Pdqc51rtQFneficfxXEO=G41=9LZF_Oh9+OW=BOfPv=g@mail.gmail.com",
        "PARENT_ID":18918.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"using jmx expose json web ui misusing jmx would think appropriate approach would jmx monitoring integration json end point ui data thanks"
    },
    "24880":{
        "ID":18918,
        "MESSAGE_ID":"CABbyifPLN0rdbXPEMpM_4t3Xa8vavwUb3Gs1n+QB_Qu=RekuBw@mail.gmail.com",
        "PARENT_ID":18916.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"alejandro understand correctly exact approach new web ui taking new web ui take output jmx render html client side haohui"
    },
    "24882":{
        "ID":18916,
        "MESSAGE_ID":"CAJs-t7NmcnL8nEWZRM6ZxwDi8ETRhOWbjehoQYA_yg01w_a1uQ@mail.gmail.com",
        "PARENT_ID":18913.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"technology",
        "BODY":"haohui nn dns producing json instead html build based web uis take example oozie oozie produce json built web ui consumes json hue built external web ui also consumes json case hue ui oozie change anything get ui improvement hue ui require change oozie unless produce additional information hope clarifies thanks"
    },
    "24884":{
        "ID":18914,
        "MESSAGE_ID":"CABbyifOBWQzw=EiDBU-=xC=jQFS_RsJ3bzHNnsG4zkAFnAhwNg@mail.gmail.com",
        "PARENT_ID":18912.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi alejandro please elaborate producing json information presented new web uis directly come jmx side okay leaving current jsp right since old new web ui happily coexist think good time switch default web ui new one mark jsp page deprecated thanks haohui"
    },
    "24885":{
        "ID":18913,
        "MESSAGE_ID":"CABbyifNV_mmdPfw8q_+vU_9PTNRSrOaMztLSYhrnyk-Zuem6vA@mail.gmail.com",
        "PARENT_ID":18912.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"echo comment hdfs bq going remove old web ui think new web ui level unit testing go backwards term unit testing take look testnamenodejsphelper testdatanodejsphelper testclusterjsphelper seems merge test unit test jmx bq going remove capability need add command line tool get functionality tool could use rest jmx need exist consider removing old ui good point since information available jmx easiest way approach write script using node architecture new web uis ready"
    },
    "24886":{
        "ID":18912,
        "MESSAGE_ID":"CAJs-t7Oq46Ngn867VzFREff_3PF7zMkBYizBzeEzS95cijdUxw@mail.gmail.com",
        "PARENT_ID":18904.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"producing json would great agree colin leave current jsp based web ui thanks"
    },
    "24894":{
        "ID":18904,
        "MESSAGE_ID":"CA+qbEUNCczkGmjkx_kv_w1oo4j1a=MXV_ZdSCQoCU5eBNKNz9w@mail.gmail.com",
        "PARENT_ID":18884.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"property",
        "BODY":"really interesting project haohui think make web ui much nicer concern removing old web ui however going remove old web ui think new web ui level unit testing go backwards term unit testing deployment elinks link support javascript reality life using centos many user still using used link diagnose problem web ui past system access cluster available telnet going remove capability need add command line tool get functionality tool could use rest jmx need exist consider removing old ui best colin"
    },
    "24914":{
        "ID":18884,
        "MESSAGE_ID":"CABbyifO1VKRVE_sE1aZv-6iXVyVPTPi_erDU3BgbLLBBzdZ3Sw@mail.gmail.com",
        "PARENT_ID":18876.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"thanks reply luke echo response jira bq client side approach le secure progressively enhanced hybrid approach used yarn recent gmail fiasco highlight issue presenting informal security analysis compare security old new web uis attacker launch attack injecting malicious code usually html javascript fragment web page malicious code privilege web page first scope attack note threat model launching attack internet site gmail linkedin one hadoop uis different fundamental different set external input attacker control internet site little control input case gmail linkedin attack send crafted mail put malicious description linkedin profile set external input restricted hadoop uis new web uis take jmx webhdfs input attacker launch attack compromise jar output jmx webhdfs malicious code replace web uis completely include malicious code either case attacker compromise hadoop core namenode mean new web uis least secure hadoop core namenode machine second argue using client side template secure current jsp based server side template defend attack technique filter external input every possible execution path several fact much taken play evaluating security approach real world environment javascript library used new web uis survived extremely large scale production test jquery used google microsoft bootstrap used twitter dust used linkedin library survived hundred thousand attack attempt daily basis agree library might still imperfect way test jsp web uis achieve level assurance given amount resource community client side template consolidate filtering logic one central place recall goal filter external input every execution path much systematic approach compared server side template today difficult impossible jsp asp php application since filtering achieved via ad hoc approach show empirical data also hdfs recently describes vulnerability browsedirectory jsp bq would require proper ssl self signed setup avoid injection commodity browser enforce origin policy defend code injection nothing kind ssl certificate hold bq also concern commit change without matching unit test javascript code automatically tested code run node test compared pre defined result also possible write adapter use rhino accomplish task discus integrate maven test routine different thread bq client side rendering completely break workflow ops rely text based terminal emacs vim browser support monitor component ui link elinks url text based web browser support javascript bq priority requirement ui core hadoop security correctness client side templating address properly far agree focus security correctness paragraph explain architecture new uis make uis secure real world setting compared ui today reference yip et al improving application security data flow assertion sosp"
    },
    "24922":{
        "ID":18876,
        "MESSAGE_ID":"CABFz-zh_972jA3LebCaf5rhmug+dbH20F8cXcRWHauJq_8Zuww@mail.gmail.com",
        "PARENT_ID":18812.0,
        "SUBJECT":"Re: Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Luke Lu <llu@apache.org>",
        "TAGS":"technology",
        "BODY":"echoing comment hdfs concern client side approach le secure progressively enhanced hybrid approach used yarn recent gmail fiasco highlight issue also concern commit change without matching unit test fact effectively unit test change tell something approach requiring mean admin turn partially use core hadoop ui would require proper ssl self signed setup avoid injection even security library used perfect doubt search gmail linkedin client side rendering completely break workflow ops rely text based terminal emacs vim browser support monitor component ui going rendering belongs social networking site saas front end full time ui security specialist babysits ui change think eventually user use self servicing ui saas front end us rest jmx api get data back end component besides app master service ui priority requirement ui core hadoop security correctness client side templating address properly far"
    },
    "24986":{
        "ID":18812,
        "MESSAGE_ID":"CABbyifNcQrs7_5Y0g4tKG+OcnB+-6DdDcttQ+0AS1ZMBf_=8+Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Replacing the JSP web UIs to HTML 5 applications",
        "SENT_FROM":"Haohui Mai <hmai@hortonworks.com>",
        "TAGS":"existence, technology",
        "BODY":"hi jing zhao recently reimplemented jsp based web uis html application hdfs based prelimanary testing result believe thst new web uis namenodes datanode ready everyday us welcome try trunk visiting http dfshealth html number benefit transition developer prospective notable one maintainability abstraction ui core server well defined decoupling ui core hadoop server allows deprecate logic jsp page old web uis duplicate logic jsps logic often dated well tested lead broken page security vulnerability hdfs hdfs hdfs hdfs hdfs architecture new uis prevent bug beginning propose deprecate old jsp based web uis opened hdfs track relevant discussion feedback highly appreciated sincerely haohui confidentiality notice notice message intended use individual entity addressed may contain information confidential privileged exempt disclosure applicable law reader message intended recipient hereby notified printing copying dissemination distribution disclosure forwarding communication strictly prohibited received communication error please contact sender immediately delete system thank"
    },
    "25147":{
        "ID":18651,
        "MESSAGE_ID":"CAAQrVk6kHcxkXKVaUaerJ8D4dRAU508shshOYncKYrsyojqicw@mail.gmail.com",
        "PARENT_ID":18647.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"not-ak",
        "BODY":"thanks feedback folk created jira url let continue detailed discussion milind milind bhandarkar chief scientist pivotal"
    },
    "25152":{
        "ID":18646,
        "MESSAGE_ID":"CAKtuutGogo2G9Fh70wcUyb-XCN-snL606C3F0pQ9heEaauQaQg@mail.gmail.com",
        "PARENT_ID":18645.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"existence",
        "BODY":"milind seems proper time open jira look nobody objecting general idea abstractnamesystem usually detail finally matter fsnamesystem formal interface called namesystem somewhat arbitrary probably rudimentary purpose understand abstract current implementation specific thing like block inode id generation stamp along namespace maintenance separated block management currently interleave etc considered going better keep technical discussion jira future reference implementation namespace leveldb effort giraffa work consensusnode considered use case abstractnamesystem potentially shape common requirement project thanks konst mon oct pm milind bhandarkar mbhandarkar gopivotal com"
    },
    "25153":{
        "ID":18645,
        "MESSAGE_ID":"DAF40635-6275-4779-96F7-1B0E9B4E3268@gopivotal.com",
        "PARENT_ID":18641.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"not-ak",
        "BODY":"getting back technical discussion based proposal email sent came know sanjay radia summer intern project hortonworks implemented namespace using leveldb discussed personal email today agreed two effort still orthogonal merged change made nn code sanjay promised post detail thread leveldb jira jira filed soon continue discussion may respond doug email leveldb impl apparently presented august yahoo hadoop meetup attend since away country even bother check talk scheduled surprised one responded proposal pointing effort known much later implementation cycle would hard account merge effort needed keep informed planning apache without everyone attend non apache meetups think mailing list proposal good choice everyone willing go record declaring plan advance case amount time took see whether doable public modification proposal go public proposal actually implementing change would seek input see streamline process especially major change perhaps separate thread thanks milind sent iphone"
    },
    "25158":{
        "ID":18640,
        "MESSAGE_ID":"CAAQrVk5TAKdAK53YNs8s0yeWyfTeh9a1MQi1+J3dBesw6pLf3w@mail.gmail.com",
        "PARENT_ID":18639.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"not-ak",
        "BODY":"folk check thread respond vinod others technical aspect proposal later email intended hdfs dev list personal note vinod unfortunately reply meant went hdfs dev vinod personally although field vinod name checked see address book vinod email entered hdfs dev automatically realized today checked hdfs dev list apologize mishap let keep discussion technical milind milind bhandarkar chief scientist pivotal"
    },
    "25159":{
        "ID":18639,
        "MESSAGE_ID":"F051CBCD-4EA6-4A5E-9902-5DA00FD66C61@hortonworks.com",
        "PARENT_ID":18635.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"milind andrew everyone else know innocuous question regarding technical issue blow much asked technical question answer want respond please answer reply otherwise please keep thread technical discussion proposal non technical concern fork thread participate even think dev list discussing technical matter try keep way thanks vinod"
    },
    "25163":{
        "ID":18635,
        "MESSAGE_ID":"CA+RK=_BSVwu33GA_aSMaVDZw_g=19V=CBbFUViN70TJK6jBu_A@mail.gmail.com",
        "PARENT_ID":18631.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi doug recognize recently experienced hdfs matter milind wrote even appropriate forum odd mention conspiracy theory aside people may come thread later perhaps recommend appropriate public apache community forum discussing concern"
    },
    "25168":{
        "ID":18630,
        "MESSAGE_ID":"CAAQrVk6gt9Y4A=3WVQdY==F-ZxC1yo6Tgt7iE9TD9jCyJ01S3g@mail.gmail.com",
        "PARENT_ID":18626.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"property",
        "BODY":"thanks bobby experimentation new namespace implementation parallel development one main intent starting project end hdfs improved lot many perceived limitation ha performance snapshot limited nfs connectivity addressed last two year think namespace scalability checkbox list fully checked imho allowing namespaces pluggable allow folk address would like state work orthogonal namenode federation co exist milind milind bhandarkar chief scientist pivotal"
    },
    "25169":{
        "ID":18629,
        "MESSAGE_ID":"CAAQrVk5MmbfdZ+bY6KKgAMgKOmmhNJ_n73maEGgGLbURLwM3eQ@mail.gmail.com",
        "PARENT_ID":18627.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"existence",
        "BODY":"chris cli issue considered depth thinking dfsadmin command relevant current fsnamesystem separated later command applicable namesystem implementation maybe separate nsadmin command group however incompatible change alternate namespace implementation throw notsupportedexception keeping current behavior intact regarding upgrade rollback work progress initial pluggability patch published need feedback best handle switching one implementation another interface currently private however make limitedprivate extension project thought milind milind bhandarkar chief scientist pivotal"
    },
    "25171":{
        "ID":18627,
        "MESSAGE_ID":"CABCYYb-Cr=vLkucJnCHc_mvuG81cKgeN4vx2sCcMuqtHjgSc4g@mail.gmail.com",
        "PARENT_ID":18626.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"existence, property",
        "BODY":"thank sending note milind level also another interface consider end user operator interface see made change jsp page also curious cli many current hdfs dfsadmin command tightly coupled current memory representation backed persistence fsimage edits either via filejournalmanager quorumjournalmanager seems unavoidable namespace administration must tightly coupled namespace implementation curious design also considered pluggable namespace administration command mentioned upgrade path file based key value store based vice versa rollback involve refactoring upgrade rollback code pluggable implementation provide upgrade implementation imagine challenge avoiding combinatorial explosion every transition one implementation another separate code path separate class suitable intermediate representation would avoid certain current fsnamesystem internal data structure sufficient another point consider pluggability would put new requirement backwards compatibility namesystem interface traditionally treated private implementation code change freely long also provide upgrade code handle translation prior layout version chris nauroth hortonworks url"
    },
    "25172":{
        "ID":18626,
        "MESSAGE_ID":"CE783E96.1BB6E%evans@yahoo-inc.com",
        "PARENT_ID":18613.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Bobby Evans <evans@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"putting conspiracy theory aside way decided scale name node going limitation federation currently problem easily move data different name node static partitioning blocker annoying fix would require sophisticated coordination name node involved put namespace key value store like hbase likely mapping issue tree structure flat structure making use case like deep tree potentially lot slower also scale maximum number operation per second file system advantage drawback important enabled different use case allow experimentation parallel development testing new namespaces though original vision federation something tmp archive co exist together potentially different implementation optimize different use case vinod yes block management separated providing clean plugin point someone easily take advantage block management code also rpc client code bobby"
    },
    "25185":{
        "ID":18613,
        "MESSAGE_ID":"AA0AF4CC-A64A-46A8-9B0B-F1299E7793FA@hortonworks.com",
        "PARENT_ID":18612.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Mahadev Konar <mahadev@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"milind missing something supposed discussion hoping started thread see anywhere conspiracy theory considered talked vinod asked question want respond suggest skip emailing ignore rather making false assumption accusation hope intent contribute code stay way thanks mahadev"
    },
    "25186":{
        "ID":18612,
        "MESSAGE_ID":"0af1e11e34cc9c8d084b61e83df9d624@mail.gmail.com",
        "PARENT_ID":18610.0,
        "SUBJECT":"RE: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"not-ak",
        "BODY":"vinod received email concern effort somehow conflict federated namenodes email folk directly remotely associated hortonworks three week ago sent email effort hadoop committers primarily focused hdfs whose email address three responded third person associated hortonworks hortonworks concerned proposal conflict development federated namenode explicitly stated orthogonal federation would like know false assumption made intent development would like quash conspiracy theory right assume life thanks milind"
    },
    "25187":{
        "ID":18611,
        "MESSAGE_ID":"0fe6d32baede483316aebf3bfb0529c4@mail.gmail.com",
        "PARENT_ID":18610.0,
        "SUBJECT":"RE: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"existence",
        "BODY":"vinod block pool management separation make effort easier even separation namespace implementation still embedded within namenode federated otherwise effort much le ambitious attempt allow different namespace implementation milind"
    },
    "25188":{
        "ID":18610,
        "MESSAGE_ID":"51E595B7-3038-4DD6-BD78-50C7AC0DFA29@hortonworks.com",
        "PARENT_ID":18609.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"order make federation happen block pool management already separated effortt thanks vinod"
    },
    "25189":{
        "ID":18609,
        "MESSAGE_ID":"1dedf7785089657ac51c768e10ecec70@mail.gmail.com",
        "PARENT_ID":18608.0,
        "SUBJECT":"RE: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"not-ak",
        "BODY":"federation orthogonal pluggable namespaces one use federation needed even distributed store used backend limitation federated namenode scaling namespace well documented several place including giraffa presentation hbase one several namespace implementation possible thus hbase based namespace implementation fit performance need choice using something else milind"
    },
    "25190":{
        "ID":18608,
        "MESSAGE_ID":"CALr1C9pDyWRTEw+DOLqWoXfCCEU-pb=jteNkyTXoQ0k-oXTg7A@mail.gmail.com",
        "PARENT_ID":18601.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Azuryy Yu <azuryyyu@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi milind hdfs federation solve nn bottle neck memory limit problem abstractnamesystem design sound good distributed meta storage using hbase bring performance degration"
    },
    "25191":{
        "ID":18607,
        "MESSAGE_ID":"6b2b66b3ced67946aa1e87e820503899@mail.gmail.com",
        "PARENT_ID":18606.0,
        "SUBJECT":"RE: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"existence",
        "BODY":"andrew difference design separate filesystem implementation like giraffa user see hdfs us dfsclient namespaceagent exposed client dfclient talk namenodeprotocol one happy current memory process namespace used simple configuration variable one could mix match block management namespace implementation rather mandating single store caveat knowledge giraffa limited presentation seen konst discussion folk right facing issue hbase suspended work made decision whether part first drop case difference namespace implementation need part hdfs patch hosted separately milind"
    },
    "25195":{
        "ID":18603,
        "MESSAGE_ID":"CE74474F.1B919%evans@yahoo-inc.com",
        "PARENT_ID":18601.0,
        "SUBJECT":"Re: [Proposal] Pluggable Namespace",
        "SENT_FROM":"Bobby Evans <evans@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"think would awesome make happen general direction mean hdfs expert would like see patch made could file jira point modification github patch design work explaining including would give place review discus bobby"
    },
    "25197":{
        "ID":18601,
        "MESSAGE_ID":"CAAQrVk4NKUtLh36pdFQmS77n+fe49wcy5-DoQW7EZMPLSJPzmQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[Proposal] Pluggable Namespace",
        "SENT_FROM":"Milind Bhandarkar <mbhandarkar@gopivotal.com>",
        "TAGS":"existence, property",
        "BODY":"hi exec summary last couple month pivotal along couple folk community working making namespace implementation namenode pluggable demonstrated done without major surgery namenode noticeable performance impact would like contribute back apache sufficient interest please let know interested create jira update patch progress work rationale hadoop cluster namenode roughly following main responsibility catering rpc call client managing hdfs namespace tree managing block report heartbeat communication data node hadoop cluster large number file large number node name node get bottlenecked mainly two reason information kept name node main memory namenode cater request client data node also perform operation backup check pointing node possible solution add main memory certain issue approach namnenode java application garbage collection cycle execute periodically reclaim unreferenced heap space heap space grows large despite gc policy chosen application stall gc activity creates bunch issue since dns client may perceive stall nn crash always practical limit much physical memory single machine accommodate proposed solution three responsibility listed refactor namespace management namenode codebase way provision implement plug name system existing process memory based name system particularly name system backed distributed key value store significantly reduce namenode memory requirement achieve new generic interface introduced let call abstractnamesystem defines set operation using perform namespace management namenode code used manipulate java object maintained namenodes heap operate interface provision others extend interface plug namesystem implementation get started implemented memory based namespace implementation remote process outside namenode jvm addition work undergoing implement namesystem using hbase detail change created new class called abstractnamesystem existing fsnamesystem subclass class code fsnamesystem moved parent created factory class create object management classpath refers newly added config property support pluggable name space management class added unit test factory replaced constructor factory call namesystem instance created based configuration added new config property support pluggable name space management class property decide namesystem class instantiated factory change also reflected dfs related webapps jsp file namesystem instance used obtain dfs health stats change aim make namesystem pluggable without changing high level interface particularly tricky since memory based name system functionality currently baked interface ultimate goal make high level interface free memory based name system consideration upgrade rollback current memory based implementation already code read write fsimage make publicly accessible enable upgrade existing cluster fsnamespace newly added name system future version upgrade making use existing loader class reading fsimage write code load image future name system implementation rollback even simpler preserve old fsimage start cluster image configuring cluster use current file system based name system future work current hdfs design fsnamesystem baked even high level interface major hurdle cleanly implementing pluggable name system aim propose change interface fsnamesystem tightly coupled milind milind bhandarkar chief scientist pivotal"
    },
    "25245":{
        "ID":18553,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B6661170A973@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":null,
        "SUBJECT":"RE: [DISCUSS] Security Efforts and Branching",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"existence, property",
        "BODY":"sorry please kindly allow repost cleanup larry apologize responding sooner read proposal think collaborate well speed thing community discussion around hadoop summit tokenauth pluggable full stack accommodate different implementation hadoop reflects thinking came breakdown attached jira simplify discussion would try illustrate high level follows simply would tokenauth tokenauth framework tokenauth implementation tokenauth integration tokenauth framework first defines tokenauth desired pluggable framework defines provides required apis protocol flow facility along common implementation related construct entity even service framework subject continued discussion defined together common effort community important framework pluggable key place allow certain solution employ product level implementation based framework could build implementation initially following item think define relevant api provide core facility framework list complemented common token definition tokenauthn method hadoop rpc authentication service identity token service access token service fine grained authorization attribute service token authentication client token cache common configuration across tokenauth hadoop token command key provider web sso support rest sso support auditing support tokenauth implementation defines implement hadoop authn authz server based tokenauth framework centralized server address aaa authentication authorization auditing concern hadoop across ecosystem could stand authentication authorization auditing depending role provisioned complete enterprise ready security solution based tokenauth framework utilizes common facility provided framework customizes provides necessary implementation construct entity service defined framework required enterprise deployment initially following implementation provide common management facility including configuration loading syncing mechanism auditing logging support shared high availability approach rest support implement authentication server role implementing authentication service identity token service defined framework authentication engine configured chain authentication module support multi factor authentication particularly support ldap authentication implement authorization server role implementing access token service implement centralized administration fine grained authorization authorization server role optional initial iteration implement attribute service allow integration third party attribute authority optional initial iteration provides authorization enforcement library hadoop service enforce security policy utilizing related service provided authorization server optional initial iteration tokenauth integration includes task employ tokenauth framework relevant implementation enable related support various hadoop component across ecosystem typical enterprise deployment currently following mind enable web sso flow web interface like hdfs yarn enable rest sso flow rest interface like oozie add thrift hive jdbc support using tokenauth consider support important interface enterprise interact data enable access zookeeper using tokenauth since widely used coordinator across ecosystem regard decouple pluggable framework specific implementation important since addressing similar requirement hand different implementation consideration approach like one represented hadoop hadoop example support pluggable authentication hadoop prefers jaas based authentication module hadoop suggests using apache shiro decouple could best collaborate contribute far understood might agree approach seen recent email decouple pluggable framework specific central server implementation understood correctly think initial iteration two central server like server hsso server think work community effort tokenauth framework contribute implementation proceed would try align complementing proposal addressing concern follows iteration endstate besides mentioned user view adding consideration additionally initial iteration would also lay ground tokenauth framework fine defined apis protocol flow core facility implementation framework avoid rework big change future implementation terminology naming would great unify related terminology effort least framework level could probably achieved process defining relevant apis tokenauth framework project scope great common list scope first iteration mentioned follows usecases client type rest cli ui authentication type simple kerberos authentication ldap federation saml might also consider oauth support anyway please note defining scope list know required must iteration enforcement consensus however limit relevant party contribute meanwhile unless appropriate time branch mentioned may different branch different feature considering merge another approach one branch relevant security feature review merge work still jira based based proposal following branch scope pluggable authentication token based sso cryptofs volume level encryption hcfs pluggable ugi change key management system unified authorization scope mind candidate branch name could like security branch instead tokenauth branch creating branch concern check philosophy agree proposal slightly concern term check philosophy take review check approach branch lazy consensus wherein need explicitly every check branch honor discussion resolve checking provide opportunity track work done ensure understand find meet intended goal might need explicit otherwise would need define time window pending wait check one issue would like clarify voting also include security branch committers jira might need additional umbrella jira since already hadoop hadoop way would suggest use existing feature jiras discus relevant specific issue going leveraging jiras might avoid much detail common dev thread also easy track relevant discussion agree good point start inventory existing jiras concern would provide full list breakdown jiras attach hadoop collaboration regard kai larry mccay mailto larry mccay gmail com sent wednesday september zheng kai chen haifeng common dev hadoop apache org subject discus security effort branching apologize following sooner head matter required attention seems may easier move forward gaining consensus little bit time rather trying hit ground running thread left would agreeable everyone start inventory existing jiras patch available nearly available determine concrete bit start get done try frame set goal make initial iteration determine inventory leverage iteration sound reasonable everyone would anyone like propose another starting point thanks larry"
    },
    "25246":{
        "ID":18552,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B6661170A8B2@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":null,
        "SUBJECT":"RE: [DISCUSS] Security Efforts and Branching",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"larry apologize responding sooner read proposal think collaborate well speed thing community discussion around hadoop summit tokenauth pluggable full stack accommodate different implementation hadoop reflects thinking came breakdown attached jira simplify discussion would try illustrate high level follows simply would tokenauth tokenauth framework tokenauth implementation tokenauth integration tokenauth framework first defines tokenauth desired pluggable framework defines provides required apis protocol flow facility along common implementation related construct entity even service framework subject continued discussion defined together common effort community important framework pluggable key place allow certain solution employ product level implementation based framework could build implementation initially following item think define relevant api provide core facility framework list complemented common token definition tokenauthn method hadoop rpc authentication service identity token service access token service fine grained authorization attribute service token authentication client token cache common configuration across tokenauth hadoop token command key provider web sso support rest sso support auditing support tokenauth implementation defines implement hadoop authn authz server based tokenauth framework centralized server address aaa authentication authorization auditing concern hadoop across ecosystem could stand authentication authorization auditing depending role provisioned complete enterprise ready security solution based tokenauth framework utilizes common facility provided framework customizes provides necessary implementation construct entity service defined framework required enterprise deployment initially following implementation provide common management facility including configuration loading syncing mechanism auditing logging support shared high availability approach rest support implement authentication server role implementing authentication service identity token service defined framework authentication engine configured chain authentication module support multi factor authentication particularly support ldap authentication implement authorization server role implementing access token service implement centralized administration fine grained authorization authorization server role optional initial iteration implement attribute service allow integration third party attribute authority optional initial iteration provides authorization enforcement library hadoop service enforce security policy utilizing related service provided authorization server optional initial iteration tokenauth integration includes task employ tokenauth framework relevant implementation enable related support various hadoop component across ecosystem typical enterprise deployment currently following mind enable web sso flow web interface like hdfs yarn enable rest sso flow rest interface like oozie add thrift hive jdbc support using tokenauth consider support important interface enterprise interact data enable access zookeeper using tokenauth since widely used coordinator across ecosystem regard decouple pluggable framework specific implementation important since addressing similar requirement hand different implementation consideration approach like one represented hadoop hadoop example support pluggable authentication hadoop prefers jaas based authentication module hadoop suggests using apache shiro decouple could best collaborate contribute far understood might agree approach seen recent email decouple pluggable framework specific central server implementation understood correctly think initial iteration two central server like server hsso server think work community effort tokenauth framework contribute implementation proceed would try align complementing proposal addressing concern follows iteration endstate besides mentioned user view adding consideration additionally initial iteration would also lay ground tokenauth framework fine defined apis protocol flow core facility implementation framework avoid rework big change future implementation terminology naming would great unify related terminology effort least framework level could probably achieved process defining relevant apis tokenauth framework project scope great common list scope first iteration mentioned follows usecases client type rest cli ui authentication type simple kerberos authentication ldap federation saml might also consider oauth support anyway please note defining scope list know required must iteration enforcement consensus however limit relevant party contribute meanwhile unless appropriate time branch mentioned may different branch different feature considering merge another approach one branch relevant security feature review merge work still jira based based proposal following branch scope pluggable authentication token based sso cryptofs volume level encryption hcfs pluggable ugi change key management system unified authorization scope mind candidate branch name could like security branch instead tokenauth branch creating branch concern check philosophy agree proposal slightly concern term check philosophy take review check approach branch lazy consensus wherein need explicitly every check branch honor discussion resolve checking provide opportunity track work done ensure understand find meet intended goal might need explicit otherwise would need define time window pending wait check one issue would like clarify voting also include security branch committers jira might need additional umbrella jira since already hadoop hadoop way would suggest use existing feature jiras discus relevant specific issue going leveraging jiras might avoid much detail common dev thread also easy track relevant discussion agree good point start inventory existing jiras concern would provide full list breakdown jiras attach hadoop collaboration regard kai larry mccay mailto larry mccay gmail com sent wednesday september zheng kai chen haifeng common dev hadoop apache org subject discus security effort branching apologize following sooner head matter required attention seems may easier move forward gaining consensus little bit time rather trying hit ground running thread left would agreeable everyone start inventory existing jiras patch available nearly available determine concrete bit start get done try frame set goal make initial iteration determine inventory leverage iteration sound reasonable everyone would anyone like propose another starting point thanks larry"
    },
    "25450":{
        "ID":18348,
        "MESSAGE_ID":"CAM=XDd-_-Ow5p42nzuDXh9td-3gLziJ-iYXN3qoa1ksbTi2CwA@mail.gmail.com",
        "PARENT_ID":18347.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join - a question about MergeJoinExec",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi camelia could let know follows easier investigate problem submitted sql query physical operator nljoin mergejoin possible data sample reproduces problem best regard hyunsik"
    },
    "25451":{
        "ID":18347,
        "MESSAGE_ID":"1378679445.62575.YahooMailNeo@web161703.mail.bf1.yahoo.com",
        "PARENT_ID":18346.0,
        "SUBJECT":"[GSoc2013] - Outer Join - a question about MergeJoinExec",
        "SENT_FROM":"camelia c <camelie_1985@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"small addition previous message value obtained innertuple rightchild next join operator camelia forwarded message camelia dev tajo incubator apache org sent monday september subject gsoc outer join question mergejoinexec hello thank much helpful answer yesterday testing encountered following issue null value read file sometimes randomly replaced number make serious problem algorithm please tell think happens corrected let give example create external table emp emp id int first name text last name text dep id int salary float job id int using csv csvfile delimiter location file home camelia testdata emp specify null value file like tom smith mary thompson aron weber susan carlson internal null trailing null end line sometimes randomly substituted small number example last name salary emp id dep id read file innertuple rightchild next obtaining value innertuple tostring weber sometimes query null value correctly read null thank advance sincerely camelia hyunsik choi tajo dev camelia sent saturday september pm subject gsoc outer join question mergejoinexec hi camelia sorry late response came back home family meeting leave line comment question best regard hyunsik"
    },
    "25452":{
        "ID":18346,
        "MESSAGE_ID":"1378679128.76395.YahooMailNeo@web161702.mail.bf1.yahoo.com",
        "PARENT_ID":18345.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join - a question about MergeJoinExec",
        "SENT_FROM":"camelia c <camelie_1985@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"hello thank much helpful answer yesterday testing encountered following issue null value read file sometimes randomly replaced number make serious problem algorithm please tell think happens corrected let give example create external table emp emp id int first name text last name text dep id int salary float job id int using csv csvfile delimiter location file home camelia testdata emp specify null value file like tom smith mary thompson aron weber susan carlson internal null trailing null end line sometimes randomly substituted small number example last name salary emp id dep id read file innertuple rightchild next obtaining value innertuple tostring weber sometimes query null value correctly read null thank advance sincerely camelia hyunsik choi tajo dev camelia sent saturday september pm subject gsoc outer join question mergejoinexec hi camelia sorry late response came back home family meeting leave line comment question best regard hyunsik"
    },
    "25453":{
        "ID":18345,
        "MESSAGE_ID":"CAM=XDd80EO5Ga8iyuz=4rYw6w6PXH056Kuwcs2+pSsG-=0AeHA@mail.gmail.com",
        "PARENT_ID":18344.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join - a question about MergeJoinExec",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"existence",
        "BODY":"hi camelia sorry late response came back home family meeting leave line comment question best regard hyunsik"
    },
    "25454":{
        "ID":18344,
        "MESSAGE_ID":"1378554149.94829.YahooMailNeo@web161702.mail.bf1.yahoo.com",
        "PARENT_ID":18327.0,
        "SUBJECT":"[GSoc2013] - Outer Join - a question about MergeJoinExec",
        "SENT_FROM":"camelia c <camelie_1985@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"hello resend updated list question ancient one found answer already mergejoinexec purpose innertupleslots outertupleslots please give example filled based dummy data set understood talk mergejoinexec issue mr jihoon trying fix rely current version mergejoinexec extend fullouter mergejoinexec rightouter mergejoinexec given joinnode anywhere logical query plan obtain block name containing even single block query find joinnode belongs root example precisely class outerjoinrewriterule method public logicalnode visitjoin logicalplan plan joinnode joinnode stack stack integer depth tried plan getblock joinnode getname receive null pointer exception look forward receiving answer sincerely camelia"
    },
    "25471":{
        "ID":18327,
        "MESSAGE_ID":"CAM=XDd8gvPHEjuCXCC1_ZUvfYvWWeaNJqFKhb=+AWkm7UtfKvg@mail.gmail.com",
        "PARENT_ID":18324.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join - a question about HashJoinExec",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi camelia yes understanding correct tajo us approach building hash table best regard hyunsik"
    },
    "25474":{
        "ID":18324,
        "MESSAGE_ID":"1378463502.14691.YahooMailNeo@web161702.mail.bf1.yahoo.com",
        "PARENT_ID":18272.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join - a question about HashJoinExec",
        "SENT_FROM":"camelia c <camelie_1985@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"hello question regarding hash function used hashjoinexec please source code reached conclusion tajo hash function used build phase algorithm identity function correct shall give example please correct misunderstood something tajo approach shall use notation tuple list element example example given input set tuples aaa bbb ccc ddd eee join key consists first numeric column build table tupleslots keytuple value arraylist tuple aaa bbb ccc ddd eee example given input set tuples aaa bbb ccc ddd eee join key consists first two column numeric string build table tupleslots keytuple value arraylist tuple aaa bbb ccc ddd eee thank advance sincerely camelia"
    },
    "25526":{
        "ID":18272,
        "MESSAGE_ID":"CAM=XDd9RW4q0GBKrdh3H4eBt3hX8Pc_WDcop0kLCM78J-zT6bw@mail.gmail.com",
        "PARENT_ID":18255.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"existence, technology",
        "BODY":"hi sorry many confusing change leave inline comment question best regard hyunsik choi"
    },
    "25543":{
        "ID":18255,
        "MESSAGE_ID":"1377849725.33835.YahooMailNeo@web161703.mail.bf1.yahoo.com",
        "PARENT_ID":18038.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"camelia c <camelie_1985@yahoo.com>",
        "TAGS":"existence",
        "BODY":"hello adapted large part previous work suit new major change tajo documented change project website github estimate couple day able move forward final part project physical operator wanted ask advice part question running new tajo version problem tajo executing query even query without outer join log following seems problem resource allocation info event asyncdispatcher asyncdispatcher java register registering class classpath type class classpath queryinprogresseventhandler info service abstractservice abstractservice java init service dispatcher inited info service abstractservice abstractservice java init service classpath inited info service abstractservice abstractservice java start service dispatcher started info service abstractservice abstractservice java start service classpath started info querymaster queryinprogress queryinprogress java startquerymaster initializing queryinprogress queryid warn rm tajoworkerresourcemanager tajoworkerresourcemanager java allocatequerymaster available resource querymaster info rm tajoworkerresourcemanager tajoworkerresourcemanager java run allocateworkerresources eb required allocated querymasterrequest true liveworkers info rm tajoworkerresourcemanager tajoworkerresourcemanager java run allocateworkerresources eb required allocated querymasterrequest true liveworkers info rm tajoworkerresourcemanager tajoworkerresourcemanager java run allocateworkerresources eb required allocated querymasterrequest true liveworkers info rm tajoworkerresourcemanager tajoworkerresourcemanager java run allocateworkerresources eb required allocated querymasterrequest true liveworkers etc go like forever forced exit meanwhile terminal see progress could old version tajo even say progress nothing tajo home bin tajo daemon sh execution right tajo home bin tajo home bin start tajo sh receive following error home camelia tajo git incubator tajo tajo dist target tajo snapshot bin start tajo sh line exec home camelia tajo git incubator tajo tajo dist target tajo snapshot bin tajo daemon sh also tajo home bin tajo home bin stop tajo sh receive following error home camelia tajo git incubator tajo tajo dist target tajo snapshot bin stop tajo sh line home camelia tajo git incubator tajo tajo dist target tajo snapshot bin tajo daemon sh permission denied purpose file tajo daemon sh tried chmod execution starting stopping tajo asked root password time seem right mail received yesterday raised question mind new content tajo site xml used tajo rootdir file home camelia tajo git tajo cluster distributed true worked fine like still right need use different one new version tajo mr jihoon son mail suggested tajo master manager addr addr port message received couple day ago jira work started tajo bump hadoop beta work tajo started hyunsik choi would like inform hadoop version hadoop cdhu change untill end gsoc project september would like continue project hadoop version part question code basiclogicalplanvisitor restricted specific query block blockname need able restriction outer join rewrite rule working new tajo version preserve left deep tree shape query plan happens subqueries unnested merged main query interest moment regard type node found left child right child join node worked assumption initial un optimized logical plan join node right child always scannode whereas left child may scannode joinnode please contradict consider otherwise understand fieldeval column data source binaryeval class filterpushdownrule line line inversed logicalnode left joinnode getrightchild logicalnode right joinnode getleftchild logicalnode left joinnode getleftchild logicalnode right joinnode getrightchild thank much advance finish part write physical operator part sincerely camelia"
    },
    "25760":{
        "ID":18038,
        "MESSAGE_ID":"CAM=XDd_1JmsvXBFDK87AamronuYxfM1qUocgap_v1XO0yGBzxA@mail.gmail.com",
        "PARENT_ID":18032.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"existence, process",
        "BODY":"hi camelia physicalplanner createplan called worker watch master log see log message would like recommend start work testphysicalplanner testmergejoinexec testhashjoinexec unit test easily start work besides finished logical plan part part separated remain work need create subtask tajo commit part tajo master branch would handle conflict large work recent revision continuously see tajo committed master branch could easily add outer join rewrite rule tajo query optimizer system need help please feel free ask best regard hyunsik choi"
    },
    "25766":{
        "ID":18032,
        "MESSAGE_ID":"1376241442.48824.YahooMailNeo@web161703.mail.bf1.yahoo.com",
        "PARENT_ID":17776.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"camelia c <camelie_1985@yahoo.com>",
        "TAGS":"existence",
        "BODY":"hello first thank much result midterm evaluation started working physical operator implementation outer join one issue understand method createplan incubator tajo tajo core tajo core backend src main java org apache tajo engine planner physical physicalplannerimpl never called least seems inserted log info command method appear output log public physicalexec createplan final taskattemptcontext context final logicalnode logicalplan throw internalexception physicalexec plan try camelia log info physicalexec call recursive create plan camelia plan createplanrecursive context logicalplan catch ioexception ioe throw new internalexception ioe return plan thank advance reply sincerely camelia"
    },
    "25991":{
        "ID":17806,
        "MESSAGE_ID":"1374161535.86509.YahooMailNeo@web162406.mail.bf1.yahoo.com",
        "PARENT_ID":17791.0,
        "SUBJECT":"Re: CQL vs Thrift",
        "SENT_FROM":"Vivek Mishra <vivek.mishra@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"thrift raw data cell vivek jonathan elli dev cassandra apache org sent thursday july subject cql thrift"
    },
    "25992":{
        "ID":17805,
        "MESSAGE_ID":"CAENxBwyYSGaRpqRhdDT5x8qVSszpO3Gv37wnAJTL+otLLGbrfg@mail.gmail.com",
        "PARENT_ID":17791.0,
        "SUBJECT":"Re: CQL vs Thrift",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"understand cql collection written decode work thrift quite chore would suggest trying yo however suspect tyler tried jonathan broke hand jk perl cassandra driver something like"
    },
    "26008":{
        "ID":17789,
        "MESSAGE_ID":"CAAam9sv33u_z=dTxBkYA4EppkmOm7RZMW0xnKCwrww2rep2rvw@mail.gmail.com",
        "PARENT_ID":17787.0,
        "SUBJECT":"Re: CQL vs Thrift",
        "SENT_FROM":"Tyler Hobbs <tyler@datastax.com>",
        "TAGS":"technology",
        "BODY":"hi maintainer pycassa datastax python driver broke finger brief regarding performance python driver brand new still issue worked around performance extension locking signaling use big impact though see benchmark dir par better pycassa single threaded rate fewer connection use thrift cf cql cql support may backported pycassa ease transition done work far leave somebody else comment adding collection etc thrift"
    },
    "26010":{
        "ID":17787,
        "MESSAGE_ID":"CAJfN=J1AyzDDk8X65Fv_K1b4Qgy0SVUn7e_WNL4oUD_D8uiCUw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"CQL vs Thrift",
        "SENT_FROM":"Vladimir Prudnikov <v.prudnikov@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi may right place ask though developer answer question better user look clear cassandra dev team concentrate cql rather thrift interface considering using cassandra storage current project replace mysql still problem choosing thrift pycassa cql cqlengine python driver personally using pycassa test project fall love would prefer use pycassa rather python driver cqlengine write raw query going thrift interface pycassa read somewhere backward compatibility mean new feature added thrift interface hence available pycassa example collection url currently column family created using cql visible thrift interface vice versa start pycassa future decide use cql due lack new feature possible use cf convert become visible accessible using cql also done basic test pycassa cqlengine prepared statement seems like pycassa performs almost time better make preferable simple insert couple thousand row put start using cql thanks vladimir prudnikov"
    },
    "26021":{
        "ID":17776,
        "MESSAGE_ID":"017413AD-E095-428B-B79D-0CA442ED3A90@apache.org",
        "PARENT_ID":17769.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"process",
        "BODY":"addition would like recommand create subtasks jira partially done may reduce merge conflict case working branch review work incrementally best wish hyunsik choi"
    },
    "26022":{
        "ID":17775,
        "MESSAGE_ID":"CAM=XDd9yOAcNkLqR8JZWcT_5sPwm_W386S9-Q17kATmD+c2-Pg@mail.gmail.com",
        "PARENT_ID":17770.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"not-ak",
        "BODY":"good idea however write grant apache repository since committer yet github may enough gsoc project thanks hyunsik choi"
    },
    "26027":{
        "ID":17770,
        "MESSAGE_ID":"CALuGr6a7N-=y8KghpZpUJXjHvYbJQP994Mq_iWMjhL+9AuF24w@mail.gmail.com",
        "PARENT_ID":17760.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"Henry Saputra <henry.saputra@gmail.com>",
        "TAGS":"process, property",
        "BODY":"hi hyunsik think create git remote branch tajo gsoc project case camelia submit patch work community start testing accepted patch help stabilize implementation henry"
    },
    "26028":{
        "ID":17769,
        "MESSAGE_ID":"1373920994.50344.YahooMailNeo@web161704.mail.bf1.yahoo.com",
        "PARENT_ID":17760.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"camelia c <camelie_1985@yahoo.com>",
        "TAGS":"process",
        "BODY":"hello thank much reply reference book managed follow step created github account mirror apache tajo url uploaded diagram url diagram outerjoin branch intended development whereas master branch stable code moment include code outer join yet want firstly set correctly repository still completely sure following aspect mention immediately git clone command issued following command git remote add track master upstream git github com apache incubator tajo git git fetch upstream git github com apache incubator tajo new branch master upstream master git rebase upstream master current branch master date sure whether enough perform automatic synchronization still perform manual synchronization periodically setup still necessary run periodically command suggested last time git pull origin master configuration command git pull origin master going synchronize local repository computer git github com apache incubator tajo git git github com camelia incubator tajo git run command outerjoin branch git checkout outerjoin git pull origin master going affect outerjoin branch last question regarding execution interactive launched tajo home bin tsql instead tajo home bin tajo cli thank much sincerely camelia hyunsik choi camelia cc tajo dev sent saturday july subject gsoc outer join hi camellia leave inline comment question"
    },
    "26037":{
        "ID":17760,
        "MESSAGE_ID":"CAM=XDd8u2UkoQRXWR9YOfk0NkB+ZSAae2Gx+iSJNxvqF08AVRA@mail.gmail.com",
        "PARENT_ID":17747.0,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"Hyunsik Choi <hyunsik@apache.org>",
        "TAGS":"technology",
        "BODY":"hi camellia leave inline comment question"
    },
    "26050":{
        "ID":17747,
        "MESSAGE_ID":"1373631223.91850.YahooMailBasic@web161705.mail.bf1.yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [GSoc2013] - Outer Join",
        "SENT_FROM":"camelia c <camelie_1985@yahoo.com>",
        "TAGS":"existence",
        "BODY":"hello thank much feedback completed outer join inner join rewriting part plan follow advice move rewriting method logicaloptimizer new processing described url also uploaded source code file think alltables data structure well validateouterjoin recursivewhere method remain class queryanalyzer belong stage query analyzed validated opinion method rewriteouterjoin recursiverewritemultinullsupplier recursiverewritenullrestricted moved class logicaloptimizer perform optimization logical plan think would like kindly ask continually rebase work latest tajo version rebase continually work updated source code usually issue command mvn package dskiptests pdist dtar read mailing list tajo cli changed improved besides query acceptance affect way stage query processing parsing also read post mailing list related integration test find use order verify work integrates well rest source code work far affect query containing least one outer join query consisting inner join modification made final remark easier manage recursion without evaltreeutil hope ok thank advance sincerely camelia"
    },
    "26091":{
        "ID":17706,
        "MESSAGE_ID":"A80C92CD-4414-4112-A1D3-2A358BF1CF26@hortonworks.com",
        "PARENT_ID":17624.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"process",
        "BODY":"combing thread well summit session summary thread think following two item probably move forward tokenauth method assuming mean pluggable authentication mechanism within rpc layer vote kai kyle actual hadoop token format vote brian propose attack aspect one let provide structure interface pluggable framework use rpc layer leveraging daryn pluggability work poc particular token format necessarily format ever supported need one start already work done area anyone please speak commit providing patch duplicate effort daryn particular jira set jiras look discern pluggability mechanism detail documentation would great well kai existing code pluggable token authentication mechanism take stab representing interface poc code standup say token format working already provide patch represents contribution test pluggable tokenauth patch provide progress toward code central discussion vehicle community incrementally build foundation order collaboratively deliver common vision absence home posting patch let assume attached hadoop dedicated subtask particular aspect leave detail kai alejandro voice thread represented vote please feel free agree disagree direction thanks larry"
    },
    "26107":{
        "ID":17690,
        "MESSAGE_ID":"CE4BA42B-D347-4F09-B0FE-2CC84C9F516E@hortonworks.com",
        "PARENT_ID":17569.0,
        "SUBJECT":"Re: Hadoop Summit: Security Design Lounge Session",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"existence, technology",
        "BODY":"adding additional takeaway articulated alejandro expanded another thread one place thanks alejandro hi alejandro missed summary takeaway session another thread list believe point discussion along line put common security library common much way hadoop auth today making available separate maven module used across ecosystem concern raised need cognizant using common dumping ground believe mean need ensure library added truly cross cutting used project across hadoop think security related thing largely nature need keep mind sure whether represented summary certainly discussion around emerging work daryn related pluggable authentication mechanism within layer immediately option kerberos simple plain also talk leveraged introduce hadoop token mechanism well time talk possibility simply making kerberos easy non issue intra cluster use certainly need approach believe someone used apacheds kdc support example could standup apacheds based kdc configure related keytabs easily end end story palatable broader user base story choice authentication mechanism user authentication easy provisioning management kerberos intra cluster service authentication agree extended summary update thread recollection thanks providing larry"
    },
    "26174":{
        "ID":17623,
        "MESSAGE_ID":"08CCAF2E-D3A1-42B9-9CD5-CAA0F0C61A53@hortonworks.com",
        "PARENT_ID":17618.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"hi alejandro missed summary takeaway session another thread list believe point discussion along line put common security library common much way hadoop auth today making available separate maven module used across ecosystem concern raised need cognizant using common dumping ground believe mean need ensure library added truly cross cutting used project across hadoop think security related thing largely nature need keep mind sure whether represented summary certainly discussion around emerging work daryn related pluggable authentication mechanism within layer immediately option kerberos simple plain also talk leveraged introduce hadoop token mechanism well time talk possibility simply making kerberos easy non issue intra cluster use certainly need approach believe someone used apacheds kdc support example could standup apacheds based kdc configure related keytabs easily end end story palatable broader user base story choice authentication mechanism user authentication easy provisioning management kerberos intra cluster service authentication agree extended summary update thread recollection thanks providing larry"
    },
    "26175":{
        "ID":17622,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B6661166B8ED@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":17618.0,
        "SUBJECT":"RE: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"not-ak",
        "BODY":"hi alejandro thanks summary point correction update side discussion right working implementing token authn method current hadoop rpc sasl framework changing ugi class sure put code new authn authz framework hadoop security component ecosystem guess component collection related project line hadoop common right might agree key implement token authentication method client service start hopefully finish provide working code patch discussion thanks regard kai"
    },
    "26179":{
        "ID":17618,
        "MESSAGE_ID":"CAJs-t7MFzS59PhpWm0FthAFhkG7FX3cKViB289w8TufbZHi-Rg@mail.gmail.com",
        "PARENT_ID":17617.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"existence",
        "BODY":"leaving jiras design doc aside recollection ff lounge discussion could summarized decouple user service authentication intra service service authentication main motivation get pluggable authentication integrated sso experience user never discussed needed external apps talking hadoop leave hadoop delegation token alone need make pluggable internal authentication mechanism real authentication happened independent factoring class currently common implementation hadoop project use able replace kerberos something else intra service service authentication suggested support deployment stock kerberos may option cloud make sure usergroupinformation rpc security logic work pluggable implementation create common security component ie hadoop security security lib project use create component project would provide common security piece project use agree necessary correction think could distill clear goal start thanks tucu alejandro"
    },
    "26180":{
        "ID":17617,
        "MESSAGE_ID":"CA+RK=_Aqpk_KsFK4bM+0drwsCyXBoRNGZH-6vyFpb6=LjNrrNg@mail.gmail.com",
        "PARENT_ID":17605.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi larry happy fourth july shop kai tianyou already coding would defer detailed point concern may misinterpretation lack consensus meant clean slate hopefully quickly cleared certainly mean ignore came idea reset discussion find common ground new direction working together conflict agreed upon set design point task lot good discussion design preceeding figure port nowhere picture self appointed master jiras disappointing see crop collaboratively coding planting flag read kai latest document something approaching today consensus least common point view rather historical document perhaps given equal share consideration"
    },
    "26181":{
        "ID":17616,
        "MESSAGE_ID":"68751F0D-2936-47E4-BD59-02080829AF68@hortonworks.com",
        "PARENT_ID":17614.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"process",
        "BODY":"sigh sure failing communicate try briefly never asked difference two silo jiras attempting speak within thread causing thrashing really afford number folk working security feature within community across project many thing rather isolated thing needed done much community involvement needed look larger endeavor working silo without cohesive community problem trying introduce community security cross cutting concern throughout hadoop ecosystem order need step back approach whole effort community identified couple way start using common dev security community email list least time finding wiki space articulate holistic view security model drive change common understanding begin community work focusing authentication alternative kerberos agreed upon discussed community restart clean slate define meet goal community single design vision scope effort authentication keeping mind preclude related aspect hadoop security roadmap authorization auditing etc looking alternative kerberos authentication user service least first phase service would continue authenticate using kerberos though need made easier would enumerate high level component needed kerberos alternative would drill detail component finally identify seam separation allow parallel work get vision delivered email intended facilitate discussion thing compare contrast two silo jiras set community work back instead moving forward need manageable scope could use help defining context current work aaron stated community discussion around topic encouraging also hope security community continue grow regarding discussion point still addressed see one possible additional component though perhaps aspect authentication provider list one difference would thinking around use domain multi tenancy trouble separating user domain idp deployed enterprise cloud environment elaborate domain relate may found within particular idp offering work together complement able determine whether aspect pluggable authentication provider something considered separate component description le available rest day th july stuff"
    },
    "26183":{
        "ID":17614,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B6661166B0DE@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":17600.0,
        "SUBJECT":"RE: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"existence, process",
        "BODY":"hi larry design first revision focus provides comprehensive support allow pluggable authentication mechanism based common token trying address single sign issue across ecosystem support access hadoop service via rpc rest web browser sso flow updated design doc add even text flow explain illustrate existing item detail requested jira additional identity token proposed adopted access token adapted approach sake making tokenauth compatible hsso also better support fine grained access control seamless integration authorization framework even rd party authorization service like oauth authorization server regard important hadoop evolving enterprise cloud platform need complete authn authz solution without support would need future rework complete solution since asked difference tokenauth hsso key one tokenauth support ta federation allow client access multiple cluster without centralized sso server hsso provides centralized sso server multiple cluster tokenauth integrates authorization framework auditing support order provide complete solution enterprise data access security allows administrator administrate security police centrally police enforced consistently across component ecosystem pluggable way support different authorization model like rbac abac even xacml standard tokenauth target support domain based authn authz allow multi tenant deployment authentication authorization rule configured enforced per domain allows organization manage individual policy separately sharing common large pool resource tokenauth address proxy impersonation case flow tianyou mentioned service proxy client access another service secured constrained way regarding token based authentication plus sso unified authorization framework hadoop hadoop let continue use umbrella jiras effort hsso target support centralized sso server multiple cluster pointed nice subset work proposed hadoop let align two jiras address question kevin raised multiple time jiras hsso ta work together relationship design update provided meant provide necessary detail nail relationship collaborate implementation jiras also confirmed design aligns related community discussion let continue collaborative effort contribute code jiras regard kai"
    },
    "26184":{
        "ID":17613,
        "MESSAGE_ID":"10558191-DCEF-4B89-A0AD-AADE67A1737F@hortonworks.com",
        "PARENT_ID":17609.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"process",
        "BODY":"hi tianyou discussed pre summit call approaching summit clean slate perhaps articulated summary call well thought case agreed upon approach move forward agree moving part needed worked prioritize start creating subtasks using one existing jiras would work using make lot sense wording regarding alignment regrettable point sso server instance based approach apparent much thing attempted introduce yes number difference exist detail document starting clean slate early talk many detail part difficulty reconciling two jiras related consume whole thing try agree detail component much like trying boil ocean starting anew allows establish agree component broad stroke interaction pattern identify individual piece work agree finer detail difference rationalized break workload deliver overall vision approach allows boil ocean one pot time would like keep jiras separate would see unfortunate server instance aspect would include endpoint used flow hosting pluggable authentication mechanism created trust relationship management required across instance etc jira hadoop sso server unfortunately believe approach would leave exactly started discussion point really addressed seems kai provided preference jira question though really added another option keep thing make work still need opinion list component thread suggestion take document make sure high level major component represented describe anything else needed also need determine first component drill brain see hsso token central implementation component probably tackled first way drilling detail component rationalize difference implementation approach yes goodness see fact flow described difference use case needed user need implemented get component need provide flow need define component know actually mean hsso sso server instance host endpoint required flow acquiring necessary token would explain layering top ta via federation mean fact even want reference hsso thread anymore aspect represented component list thread sso server instance point important make sure component represented thread sufficient idea well served continuing compare contrast thread follow part collaboration process work item identified thread collaboration individual component certainly happen jiras want new jira host higher level discussion fine use work within process help drive discussion definition component identified point think commit moving thread forward backward pointing silo jiras highest level pas identifying component easy part need close list move challenging discussion component detail another approach folk would like take thanks larry"
    },
    "26188":{
        "ID":17609,
        "MESSAGE_ID":"1A93516D63C74545A87B6EF0983F2B1F01064A9A@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":17600.0,
        "SUBJECT":"RE: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"\"Li, Tianyou\" <tianyou.li@intel.com>",
        "TAGS":"process",
        "BODY":"hi larry participated design discussion hadoop summit remember discussion abandoning current jiras track lot good input others community important consider move forward work recommend continue move forward two jiras already respectively working well jiras others community continue work latest design revision actually make clear targeting exactly described hsso comparing contrasting going add value understanding kai pointed response comment hadoop lot update predate last week discussion summit fortunately discussion summit line thinking required revision discussing others community prior summit updated design doc clearly address authorization proxy flow important user hsso continue layered top ta via federation personally think continuing separation effort disservice seem enough difference two justify separate jiras anymore actually see many key difference andrew kai also pointed key difference comparing please review design doc uploaded understand difference sure kai also add detail difference jiras work proposed address additional user need beyond proposes implement figure implementation specific jiras keep moving code without colliding kai also recommended preference response comment let work community peer agree approach move forward collaboratively thanks tianyou"
    },
    "26191":{
        "ID":17606,
        "MESSAGE_ID":"6f56d2a625a84ce0aecc5a482733731e@BY2PR03MB143.namprd03.prod.outlook.com",
        "PARENT_ID":17569.0,
        "SUBJECT":"RE: Hadoop Summit: Security Design Lounge Session",
        "SENT_FROM":"Kyle Leckie <kyleckie@microsoft.com>",
        "TAGS":"not-ak",
        "BODY":"thanks excellent summary larry question group taken quick look pluggable token validation could added rpc endpoint current approach examined continue investigation server auth would like consider tl benchmarking well implemented server stack support session caching algorithm configured performance kyle"
    },
    "26192":{
        "ID":17605,
        "MESSAGE_ID":"0FBF4D38-CAA3-4EC3-B1C4-31B1A55A0F86@hortonworks.com",
        "PARENT_ID":17604.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hey andrew largely agree statement intention let difference worked within individual component identified subtasks created reference hsso really referring sso server based design clearly articulated earlier document trying compare contrast one design another anymore let move collaboration along mapped difference detail reveal addressed within component actually looking forward weighing actual discussion point thread could point interested thought single jira represent work whether start discussing sso token think discussion point missing list feel free add thanks larry"
    },
    "26193":{
        "ID":17604,
        "MESSAGE_ID":"CA+RK=_DjMh=itBAx91Eu+OTJ72+13VLEnTMBz6eJZMJKA+9=yA@mail.gmail.com",
        "PARENT_ID":17600.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi larry course let kai speak however let point difference competing jiras reduced sure key difference disappear subsequent discussion make clear also disagree characterization simply endorsed design decision called hsso taking mile inch engage collaborative process peer encouraged spirit discussion point hope continue beyond one design summit"
    },
    "26196":{
        "ID":17601,
        "MESSAGE_ID":"C45F11EA-CD64-475E-88DE-1FEBFBE918CF@hortonworks.com",
        "PARENT_ID":17596.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"process",
        "BODY":"thanks brian look power collaboration numbering correct already inclined agree start hadoop sso token leaning toward new jira leaf behind cruft feel strongly new feel like especially given kai new document one"
    },
    "26197":{
        "ID":17600,
        "MESSAGE_ID":"3E748277-8A9F-43C7-BDDA-E6EB4AEF0511@hortonworks.com",
        "PARENT_ID":17597.0,
        "SUBJECT":"Re: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"process",
        "BODY":"hi kai think need clarify something update continuation discussion focused fresh look sso hadoop agreed leave previous design behind therefore really seeing hsso layered top ta approach hsso ta discussion latest design revision actually make clear targeting exactly described hsso comparing contrasting going add value need point look high level component described thread comment whether need additional component listed seem necessary word need define agree work done also need determine component need done anything else started happen agree brian hadoop sso token central component probably defined poc short order personally think continuing separation effort disservice seem enough difference two justify separate jiras anymore may best file new one reflects single vision without extra cruft built either existing one would certainly reference existing one within new one approach would align spirit discussion point prepared start discussion around shape two hadoop sso token identity access others feel next topic identify jira home otherwise create another discus thread thanks larry"
    },
    "26200":{
        "ID":17597,
        "MESSAGE_ID":"8D5F7E3237B3ED47B84CF187BB17B6661166A47C@SHSMSX103.ccr.corp.intel.com",
        "PARENT_ID":17585.0,
        "SUBJECT":"RE: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"\"Zheng, Kai\" <kai.zheng@intel.com>",
        "TAGS":"existence",
        "BODY":"hi larry thanks update good see update aligned point also updated tokenauth design hadoop new revision incorporates feedback suggestion related discussion community particularly microsoft others attending security design lounge session hadoop summit summary change revised approach use two token identity token plus access token particularly considering authorization framework compatibility hsso introduced authorization server authorization framework flow issue access token client identity token access service refined proxy access token proxy impersonation flow refined browser web sso flow regarding access hadoop web service added hadoop rpc access flow regarding cli client accessing hadoop service via rpc sasl added client authentication integration flow illustrate desktop logins integrated authentication process ta exchange identity token introduced fine grained access control flow authorization framework put appendix section reference added detailed flow illustrate hadoop simple authentication tokenauth appendix section added secured task launcher appendix possible solution window platform removed low level content relevant part appendix section main body think layer hsso ta tokenauth framework please take time look doc let discus gap might would like discus gap focus implementation detail moving towards getting code done let continue part discussion hadoop allow better tracking jira discussion related centralized sso server suggest continue use hadoop consolidate discussion related jira way need extra umbrella jiras agree speed discussion agree implementation specific get moving code stepping work look forward comment comment others community thanks regard kai"
    },
    "26201":{
        "ID":17596,
        "MESSAGE_ID":"7de25b1f043e4f968239eb9ac166f819@BLUPR03MB184.namprd03.prod.outlook.com",
        "PARENT_ID":17585.0,
        "SUBJECT":"RE: [DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Brian Swan <Brian.Swan@microsoft.com>",
        "TAGS":"process",
        "BODY":"thanks larry starting conversation thanks great summit meeting summary sent couple day ago weigh specific discussion point renumber additional component would required hadoop sso service see described component considered actually necessary poorly described think determined get detail component described certainly excellent starting point create new umbrella jira identify subtask continue use sso server add additional subtasks described seem fit though may contain detail need discussion imho may better file new umbrella jira though convinced would interested input others natural seam separation component dependency one another affect priority right place start hadoop sso token exact shape form sso token seemed conversation summit meeting others may agree would like hear case broadly brian"
    },
    "26212":{
        "ID":17585,
        "MESSAGE_ID":"EF056F86-0C2A-4EFF-93F3-BB34BBA49F0E@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Hadoop SSO\/Token Server Components",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"existence, process, technology",
        "BODY":"follow discussion hadoop summit would like introduce discussion topic around moving part hadoop sso token service couple related jira referenced may may updated result discus thread url url first aspect discussion probably state overall goal scoping effort alternative authentication mechanism kerberos user authentication broader capability integration enterprise identity sso solution possibly advertisement negotiation available authentication mechanism backward compatibility existing use kerberos minimal change existing hadoop token delegation job block access etc pluggable authentication mechanism across rpc rest webui enforcement point continued support existing authorization policy acls etc keeping fine grained authorization policy mind like attribute based access control fine grained access control separate related effort must preclude effort cross cluster sso order tease moving part couple high level simplified description sso interaction flow credential sso client server token access token requested resource hadoop service diagram represents simplest interaction model sso service hadoop client authenticates sso service acquires access token client present credential authentication service endpoint exposed sso server receives token representing authentication event verified identity client present identity token token endpoint exposed sso server tgs request access token particular hadoop service receives access token client present hadoop access token hadoop service access token granted request desired resource service access token presented appropriate service endpoint protocol used hadoop service token validation handler validates token verifies integrity identity issuer idp credential idp token idp token sso client server token access token requested resource hadoop service diagram represents slightly complicated interaction model sso service hadoop remove hadoop credential collection business client authenticates trusted identity provider within enterprise acquires idp specific token client present credential enterprise idp receives token representing authentication identity client authenticates sso service acquires access token client present idp token authentication service endpoint exposed sso server receives token representing authentication event verified identity client present identity token token endpoint exposed sso server tgs request access token particular hadoop service receives access token client present hadoop access token hadoop service access token granted request desired resource service access token presented appropriate service endpoint protocol used hadoop service token validation handler validates token verifies integrity identity issuer considering set goal high level interaction flow description start discus component inventory required accomplish vision sso server instance component must able expose endpoint authentication user collecting validating credential federation identity represented token trusted idp within enterprise endpoint composable allow multifactor authentication mechanism also need return token represent authentication event verified identity well access token specific hadoop service authentication provider pluggable authentication mechanism must easily created configured use within sso server instance ideally allow enterprise plugin preferred component shelf well provide custom provider supporting existing standard authentication provider top priority concern number standard approach use java world jaas loginmodules servlet filter jaspic authmodules etc pluggable provider architecture allows enterprise leverage existing investment technology existing skill set would ideal token authority token authority component would need ability issue verify revoke token authority need trusted enforcement point need verify incoming token using something like pki establishing trust required hadoop sso token exact shape form sso token need considered order determine mean trust integrity ensured using may abstraction underlying format provided interface based design token implementation need attribute capability term validation cryptographic verification sso protocol lowest common denominator protocol sso server interaction across client type would likely rest depending rest client use may require explicitly coding token flow described earlier interaction description plugin may provided thing like httpclient curl etc rpc client taken care within sasl layer leverage rest endpoint well likely implies trust requirement rpc client able trust sso server identity cert presented ssl rest client agent plugins required encapsulating interaction sso server client programming model may need many client type java javascript net python curl etc server side authentication handler server side rest rpc webui connection need able validate verify incoming hadoop token order grant deny access requested resource credential trust management throughout system client server side need manage provide access pki potentially shared secret artifact order establish required trust relationship replace mutual authentication would otherwise provided using kerberos everywhere discussion point additional component would required hadoop sso service described component considered actually necessary poorly described create new umbrella jira identify subtask continue use sso server add additional subtasks natural seam separation component dependency one another affect priority obviously component identify jira likely trying identify high level description try drive discussion close end week allow start breaking component implementation plan thanks larry"
    },
    "26228":{
        "ID":17569,
        "MESSAGE_ID":"5F781862-2DB5-4937-8F5C-E108E1144EA2@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop Summit: Security Design Lounge Session",
        "SENT_FROM":"Larry McCay <lmccay@hortonworks.com>",
        "TAGS":"existence, process, property, technology",
        "BODY":"last week hadoop summit room dedicated summit design lounge place like folk could get together talk design issue contributor simple flip board beanbag chair used opportunity bootstrap discussion within common dev security related topic would like summarize security session takeaway everyone summary set takeaway largely memory please anyone attended feel free correct anything inaccurate omitted pretty well attended company represented yahoo microsoft hortonworks cloudera intel ebay voltage security flying penguin emc others folk pretty engaged throughout session set expectation meet greet project kickoff project emerging security development community order keep scope conversation manageable tried keep focused authentication idea around sso token discussed kerberos major pain point barrier entry seemingly perfect others obviously requiring backward compatibility seemed consensus user authentication easily integrated alternative enterprise identity solution service identity issue require thousand service identity added enterprise user repository customer forced install deploy manage kdc service implies couple option alternative kerberos service identity hadoop kdc implementation ie apacheds active discussion around hadoop sso server acknowledgement hadoop sso token something standardized representing identity authentication event data well access token representing verifiable mean authenticated identity access resource service general understanding hadoop sso analogue alternative kerberos kdc related token analogous tgts service ticket agreement interesting attribute authentication event may useful cross cluster trust sso rating authentication strength number factor etc existing hadoop token ie delegation job block access continue work initially looking alternative kdc tgts service ticket authentication mechanism discovery client daryn sharp done bunch work around sso solution may want consider similar mechanism discovering trusted idp service endpoint backward compatibility kerberos shop need continue work insight folk believe token based authentication accomplished within existing contract sasl gssapi rest web ui establishment cross cutting concern community around security mean term apache way email list wiki jiras across project etc dependency rolling update patching related hadoop project versus packaging collaboration road ahead number breakout discussion outside designated design lounge session well takeaway immediate road ahead common dev may sufficient discus security related topic many developer already subscribed much traffic anyway discus security focused list like discus establishment wiki space holistic view security model pattern approach etc begin discussion common dev near term following discus agree high level moving part required goal authentication sso service token token validation handler credential management tool etc discus agree natural seam across moving part agree collaboration tackling various piece divide conquer approach likely first piece need immediate discussion shape form token follow supplement discussion poc code patch spec attached jiras overall design lounge rather effective wanted bootstrap discussion collaboration within community large always specific decision made session discus within common dev related jiras jiras related security development group discussion centralized sso token server url token based authentication sso url document analyze current hadoop security model url improve hadoop security use case url thanks larry"
    },
    "26642":{
        "ID":17143,
        "MESSAGE_ID":"545578956.10767891.1369844203384.JavaMail.root@redhat.com",
        "PARENT_ID":16975.0,
        "SUBJECT":"Re: Where should we host Hadoop FileSystem plugins for 3rd Party FileSystems?",
        "SENT_FROM":"Tim St Clair <tstclair@redhat.com>",
        "TAGS":"not-ak",
        "BODY":"removal kfs qfs shim external github cheer tim original message"
    },
    "26690":{
        "ID":17086,
        "MESSAGE_ID":"CA+qbEUOp4OFLje58H8p8Q+TGVxdK5_kH9HLvHSoXcBGUXjdq+w@mail.gmail.com",
        "PARENT_ID":17081.0,
        "SUBJECT":"Re: [DISCUSS] - Committing client code to 3rd Party FileSystems within Hadoop Common",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"technology",
        "BODY":"might try looking kosmofs kfs code org apache hadoop call java shim way shim code hadoop common get updated whenever filesystem change requirement install kfs building hadoop might also try asking steve loughran since great work recently try nail exact semantics filesystem filecontext improve related unit test see hadoop related jiras best colin"
    },
    "26694":{
        "ID":17081,
        "MESSAGE_ID":"971448056.5631052.1369345937910.JavaMail.root@redhat.com",
        "PARENT_ID":17078.0,
        "SUBJECT":"Re: [DISCUSS] - Committing client code to 3rd Party FileSystems within Hadoop Common",
        "SENT_FROM":"Stephen Watt <swatt@redhat.com>",
        "TAGS":"process",
        "BODY":"thanks responding harsh agree hadoop common good job maintaining stable public context api pro maintaining client library outside hadoop common release owner library much autonomy agility maintaining library glusterfs plugin perspective concur contrast library managed inside hadoop common would spend time earn committer status equivalent amount autonomy agility overkill someone wanting maintain line code ruminated bit one con might get shipped hadoop common might make harder hadoop user community find obtain however consider lzo codec fact bundled certainly hamper adoption mentioned testing think regression across hadoop release big issue based understanding really two filesystem interface abstract class worry wrt compliance namely filesystem interface reflected hadoop filesystem interface reflected hadoop however broader topic also want discus tee separate thread regard steve watt original message harsh common dev hadoop apache org sent thursday may pm subject discus committing client code rd party filesystems within hadoop common think fairly good work maintaining stable public filesystem filecontext api third party plugins exist outside apache hadoop still able work well across version question test pop though specifically testing trunk catch regression across various implementation would much work also maintain glusterfs dependency mechanism part trunk provide trunk build snapshot artifact publicly downstream project test think may help cover continuous testing concern right think maintain really work well also recall per recent conversation list amzn started shipping library better implementation rather perfecting implementation correct wrong think change contributed back see work going openstack swift think steve also raised similar discussion url recall conversation proceeded time perspective releaser though would find maintaining outside easier especially term maintaining code quicker release bug fix feature also given ci apache hadoop trunk time"
    },
    "26697":{
        "ID":17078,
        "MESSAGE_ID":"CAOcnVr2j+-=+vbv9uCNMTuyKjhYyA=jZrRpC3T6i5O4Zm4xPRA@mail.gmail.com",
        "PARENT_ID":17077.0,
        "SUBJECT":"Re: [DISCUSS] - Committing client code to 3rd Party FileSystems within Hadoop Common",
        "SENT_FROM":"Harsh J <harsh@cloudera.com>",
        "TAGS":"process, technology",
        "BODY":"think fairly good work maintaining stable public filesystem filecontext api third party plugins exist outside apache hadoop still able work well across version question test pop though specifically testing trunk catch regression across various implementation would much work also maintain glusterfs dependency mechanism part trunk provide trunk build snapshot artifact publicly downstream project test think may help cover continuous testing concern right think maintain really work well also recall per recent conversation list amzn started shipping library better implementation rather perfecting implementation correct wrong think change contributed back see work going openstack swift think steve also raised similar discussion url recall conversation proceeded time perspective releaser though would find maintaining outside easier especially term maintaining code quicker release bug fix feature also given ci apache hadoop trunk time"
    },
    "26716":{
        "ID":17059,
        "MESSAGE_ID":"CAMkn0zaj3Z_=Wbv3Qrurg5x42mX=qWPnEhrZUku8wxKhBbGjPA@mail.gmail.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Mayank Bansal <mayank@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hi guy ebay would like see snapshot start testing deploying hadoop next month thanks mayank"
    },
    "26775":{
        "ID":17000,
        "MESSAGE_ID":"CA+z3+9EH+fAvtNQpZn-8ARve1eSrrMwLzfo2ey=J6DGgAEfQoQ@mail.gmail.com",
        "PARENT_ID":16942.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Matt Foley <mattf@apache.org>",
        "TAGS":"not-ak",
        "BODY":"started separate discussion thread common dev titled proposal change bylaw remove release plan vote achieves consensus put vote change bylaw best matt"
    },
    "26800":{
        "ID":16975,
        "MESSAGE_ID":"1187023270.4176313.1369154974281.JavaMail.root@redhat.com",
        "PARENT_ID":null,
        "SUBJECT":"Where should we host Hadoop FileSystem plugins for 3rd Party FileSystems?",
        "SENT_FROM":"Stephen Watt <swatt@redhat.com>",
        "TAGS":"process, technology",
        "BODY":"hi folk name steve watt presently working enabling glusterfs used hadoop filesystem work thus far involved developing hadoop filesystem plugin glusterfs getting point plugin becoming stable trying understand right place host manage version steve loughran kind enough point past thread community url show disposition move away hadoop common containing client code plugins rd party filesystems make sense allows filesystem plugin developer autonomy well reduces hadoop common dependence rd party library easy either way wanted verify community preference still client code rd party filesystems hosted managed outside hadoop common take direction regard steve watt"
    },
    "26804":{
        "ID":16971,
        "MESSAGE_ID":"CAKtuutEQf9a6=DnsF1Jica1aVA+S3D9bGq=kZqG=SAZZfsmxyw@mail.gmail.com",
        "PARENT_ID":16942.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"chris find contradicting within message want address one thing could bug may need fix bylaw rule come agreement disagree respect rule come agreement people start forcing way saying rule wrong let ignore today conducting infinite chain counter vote creates chaos thanks konstantin"
    },
    "26805":{
        "ID":16970,
        "MESSAGE_ID":"CAKtuutGuOrJxWY-EL9=wVs=gjhmXJa2yWHi-WsmdP4tfhew_Hw@mail.gmail.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"record great plan would gladly support see previous vote could confusing contained direct quotation relative clause bylaw arun format vote remains confusing action approval method plan use still undefined thanks konstantin"
    },
    "26809":{
        "ID":16966,
        "MESSAGE_ID":"A86A6213-990F-4DDC-AC83-0745F679B634@hortonworks.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"sanjay Radia <sanjay@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"defined thread new feature supportive earlier release compatibility change without feature sanjay"
    },
    "26833":{
        "ID":16942,
        "MESSAGE_ID":"CACO5Y4zX1sxvWoMN1_RxQ2OJTrwxZwKypSD4rCE7rVg52RwWpw@mail.gmail.com",
        "PARENT_ID":16935.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"release plan vote binding way nobody lost vote risk outcome reversed consequence exercise konstantin trying tell week go forward without anyone blessing consent precedent release plan vote formality know project even bother committers pmc member even know eligible vote usually ignore matter majority vote pmc release artifact defined release plan mean zero ambiguity release artifact becomes real discussion offered minor release series help selecting patch branch every administrative barrier removed path instead taking running continued press know please decide going move development branch forward start working nothing win thread exposed bug bylaw fix right vote confusing everybody stalling project care come beta whether part create committer want offer candidate need demonstrate non trivial non sectarian proportion community behind creating artifact passing pmc vote make artifact release simple respect board parent child neither interested equipped tell partition release hadoop routine development failing recover eliminating pointless ritual getting back producing software"
    },
    "26837":{
        "ID":16938,
        "MESSAGE_ID":"CA+ULb+sHCtw4qTWJEBySi0hY=-DJ5726B-_hES8BUmRXBATv5g@mail.gmail.com",
        "PARENT_ID":16904.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Roman Shaposhnik <rvs@apache.org>",
        "TAGS":"technology",
        "BODY":"guy pretty long email detail think bigtop help stabilization effort hadoop lot information required background really really encourage everyone thinking contributing effort read apologize size matt andrew brought good point let summarize thing wrt bigtop also ccing bigtop dev ml everybody interested pitching could discus matter"
    },
    "26840":{
        "ID":16935,
        "MESSAGE_ID":"CAKtuutFnb=k7A0kSenyhqpJp0M5XCFyUUbjPMnCT9jeofgOU_w@mail.gmail.com",
        "PARENT_ID":16898.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"bcc general since recognize vote overrule previous decision referring vinod note general url brought attention board remember precedent kind hadoop history project may experience clarification categorizing action voting practice asf may help thanks konstantin"
    },
    "26841":{
        "ID":16934,
        "MESSAGE_ID":"CA+ULb+tZuuii-_3embF+=Nj64MeuKQbLy_4PDdEagcB2OA-4MA@mail.gmail.com",
        "PARENT_ID":16903.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Roman Shaposhnik <rvs@apache.org>",
        "TAGS":"not-ak",
        "BODY":"apology bunch delayed response adding even email thread"
    },
    "26842":{
        "ID":16933,
        "MESSAGE_ID":"CC1404FE-2416-431E-B40D-7D9DCED1B520@apache.org",
        "PARENT_ID":16931.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks bunch nathan clearly letting know yahoo team perspective getting started rolling upgrade yarn side sid opened yarn hear hdfs side definitely need compatibility testing kit get started work preserving restart yarn side plan scope next thanks vinod"
    },
    "26844":{
        "ID":16931,
        "MESSAGE_ID":"CDBA8EBE.24212%nroberts@yahoo-inc.com",
        "PARENT_ID":16869.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Nathan Roberts <nroberts@yahoo-inc.com>",
        "TAGS":"property",
        "BODY":"initially respond general sorry copied non binding perspective key feature drive adopt rolling upgrade order get rolling upgrade need compatibility story significantly better today need comprehensive definition compatibility really mean need better testing place verify breaking compatibility need better definition testing rolling upgrade really mean rolling bug fix release required rolling minor release required rolling major release desired need work preserving restart yarn side restarting job sufficient given rolling upgrade yet still work done solidify compatibility story ok feature window remaining open place especially given fact proposed feature likely non zero impact compatibility rolling upgrade would certainly like release rolling upgrade soon possible feel like feature window need ramp quickly something like beta may current list proposed feature beta late summer full rolling upgrade support solid compatibility story would seem like reasonable timeline beta release rolling upgrade look pushing larger cluster nathan robert nroberts yahoo inc com"
    },
    "26847":{
        "ID":16928,
        "MESSAGE_ID":"CDBA6221.1110D%evans@yahoo-inc.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Robert Evans <evans@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"binding made opinion known previous thread vote spent enough time discussing need get back day job community able get snapshot everything else list merged stable without breaking stack two week wonderful serious doubt going actually possible bobby"
    },
    "26856":{
        "ID":16919,
        "MESSAGE_ID":"CADdVdVH43znoa0V3Jb7sFK2-r2j6-B3WaACiyQzrA=1XXhK5_A@mail.gmail.com",
        "PARENT_ID":16917.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Suresh Srinivas <suresh@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"insult taken want make case feature proposed lightly due diligence development testing done andy value feedback trying allay concern sharing perspective regard suresh"
    },
    "26858":{
        "ID":16917,
        "MESSAGE_ID":"CA+RK=_DnGvdZ-QuoY+TprqZtO-NMvPZx6bKSXo5cNNti7SzYZA@mail.gmail.com",
        "PARENT_ID":16914.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"also"
    },
    "26859":{
        "ID":16916,
        "MESSAGE_ID":"CA+RK=_AU_QQCA1yOMga8eSx+SneuxKk3cxbyVmUeWsRmoybG-A@mail.gmail.com",
        "PARENT_ID":16914.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sure case basic integration blocker roman pointed thread indicates integration testing would expect course ask give concern fresh look"
    },
    "26860":{
        "ID":16915,
        "MESSAGE_ID":"CA+01ahjkyGiYdbaDKExCWwuv8z_esus=S=dPg3KvcC3d-qus-A@mail.gmail.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"lohit <lohit.vijayarenu@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi arun also include hdfs release arun murthy nice day lohit"
    },
    "26862":{
        "ID":16913,
        "MESSAGE_ID":"CA+RK=_BOAdz=+PcbDhaTxSHG3dp_4rapBQ=bngbC=fNzGDu-SQ@mail.gmail.com",
        "PARENT_ID":16892.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thread vote whatever least served purpose fresh surfacing concern talk new feature going beta short short timetable concerning anyone experience working large software project little ironic vote thread done response sort one predicated stability concern begin laundry list feature jiras go think usually case beta release receives bugfixes alpha proceeded may lack consensus beta mean please set aside discussion particular feature hadoop bylaw politics debate club speak downstream course extent say care core ask least mine take fresh look reducing per release disruption rest entire ecosystem grown around hadoop change made hadoop happen isolation"
    },
    "26870":{
        "ID":16905,
        "MESSAGE_ID":"CA+z3+9G-0Dw-hGM3e_D6TjaYQW26GQ9rxZJxhPK54ugio1JtVg@mail.gmail.com",
        "PARENT_ID":16901.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Matt Foley <mattf@apache.org>",
        "TAGS":"not-ak",
        "BODY":"actually drafting proposal open discussion proposal general matt"
    },
    "26871":{
        "ID":16904,
        "MESSAGE_ID":"CA+z3+9Gv-BzTHV=Mgi79w8sGdi-BFDAgs+bWv8VheedL7FKVaw@mail.gmail.com",
        "PARENT_ID":16903.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Matt Foley <mattf@apache.org>",
        "TAGS":"not-ak",
        "BODY":"roman model test result bigtop feed back hadoop development understanding software bug going get sla community sponsored software idea close loop better would ci run bigtop branch feasible arun suggests accomodate change individual component hadoop core others well may require change one component bigtop keep viable nightly build chaotic environment previously solved problem thanks matt"
    },
    "26875":{
        "ID":16900,
        "MESSAGE_ID":"20130515231737.GA27292@linspire.com",
        "PARENT_ID":16894.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Konstantin Boudnik <cos@apache.org>",
        "TAGS":"not-ak",
        "BODY":"indeed think root issue deeper asf software practice great deal isolated relatively contained project like httpd libreoffice trac etc however hadoop based stack essentially software aimed enterprise bigger scale operation different animal requires balancing huge number moving part unbroken flow feedback stream anyone delivered enterprise grade software system know perfectly well hard however environment release pushed rush essentially causing doa issue downstream got fixed consequent release ironically likely contain doas integration testing mean real world integration system testing done small project treated like toy adolescent kid real integration testing happening openly full stack despite numerous claim software come bug somewhat expected phenomenon however bug fix mixed new feature increasing entropy system word development process fan process multiple consequent stable release help achieve compatibility issue would addressed working next major release model leaf downstream choice sticking switching permanent alpha tag convenient way control software project effectively became vendor controlled effort yes lead fragmentation make mistake one sit hand year wait usable release great feature come lot organization silently forking away make environment suitable production sale might sporadically contribute something back course aim apache project produce commercial grade platform co"
    },
    "26876":{
        "ID":16899,
        "MESSAGE_ID":"CA+ULb+s4h90FUUbv6+0+ayf25NDVW7Kn2G9a363=9ZZO7OhGxA@mail.gmail.com",
        "PARENT_ID":16895.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Roman Shaposhnik <rvs@apache.org>",
        "TAGS":"not-ak",
        "BODY":"arun reading answer binary question correctly reading response appreciate feedback bigtop providing opinion investigating level stability hadoop wrt downstream currently happening would worthy investment hadoop community personal matter time thanks roman"
    },
    "26877":{
        "ID":16898,
        "MESSAGE_ID":"CAKtuutHQ5H51C2_t1FFrWtV2VsUk4rtoW086bZ_BbxKr9sH03Q@mail.gmail.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"arun glad least convinced finally announce release plan put vote even though overrule vote completed lost well twice glad removed nfs feature list proposed earlier think vote late lazy consensus issue reached see basis new vote clear action seek approve thanks konstantin"
    },
    "26879":{
        "ID":16896,
        "MESSAGE_ID":"CACO5Y4y_uhz+0ai5mdxiN9WCaCMn-zRsLH8kohRQaWFuh260hA@mail.gmail.com",
        "PARENT_ID":16893.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"not-ak",
        "BODY":"binding proposal however value get release plan vote dubious put mildly surrounding discussion cost worth vote executive summary release discourage sort detailed collaboration trying create replaces development zero sum struggle abstraction effect another poll direction taking reach consensus development direction without voting evidence project split going"
    },
    "26880":{
        "ID":16895,
        "MESSAGE_ID":"745A2B4D-86AE-4D03-8741-C2A99BD8AC06@hortonworks.com",
        "PARENT_ID":16892.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Arun C Murthy <acm@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"roman furthermore rush finding flaw scaring kid night would useful remember one thing software bug block release till entire universe validates fact validate release since bottom stack help prior release welcome know people work employer plan testing freeze apis via beta release hope pray others join effort thanks everyone already freezing apis protocol primary aim beta guarantee bug free never make guarantee anyway find bug beta happy quickly turn around make release beta beta obviously make call bug critical feedback help decide always welcome clear many time might need one beta release iron bug etc none surprise happened many many time lifetime project alpha vi vi alpha recent example last hope concludes meme thanks arun"
    },
    "26883":{
        "ID":16892,
        "MESSAGE_ID":"426D7387-6CE0-4857-BFF0-AB52F0F4EEAD@hortonworks.com",
        "PARENT_ID":16890.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Arun C Murthy <acm@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"great summary thanks vinod"
    },
    "26884":{
        "ID":16891,
        "MESSAGE_ID":"EB927CD9-6BFA-4150-84FE-C9CA120322BD@hortonworks.com",
        "PARENT_ID":16890.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"typo keep hearing thanks vinod"
    },
    "26885":{
        "ID":16890,
        "MESSAGE_ID":"548593E8-2791-4975-9710-D5D1EC51C516@apache.org",
        "PARENT_ID":16884.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"roman keep argument refuted earlier please list issue bigtop ran new feature continue argue new feature destabilizing agree alpha last time major feature got merged found blocker irrespective mapreduce specifically due feature merge bug would say long standing bug sure passed even mostly broken another bug fix feature quickly checked bug reported mapreduce caused fix hadoop long standing issue mapreduce similar mapreduce similar mapreduce security related feature request mapreduce new proxy server added arguing new feature may destabilize branch repeatedly stated fact really appreciate testing done bigtop please distort fact thanks vinod"
    },
    "26887":{
        "ID":16888,
        "MESSAGE_ID":"CAJS6+b4bdDy3i-WsRq0BKPrrU-nwiKH=_080QSRCKkr==C7Qmw@mail.gmail.com",
        "PARENT_ID":16887.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Zhijie Shen <zshen@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"non binding proposal"
    },
    "26889":{
        "ID":16886,
        "MESSAGE_ID":"CAPzbcGSJUc=DWeLJCuAcQQa6w2BwA3B6GxRZfAgf5wTBMOPc5g@mail.gmail.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Devaraj Das <ddas@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"binding proposal week sound long time many committers willing call fix issue discovered"
    },
    "26890":{
        "ID":16885,
        "MESSAGE_ID":"CA+z3+9Gntv9L9ABo=Rb+HXsrT8e-TOAwiD1KzW8gvRvvbSUGYw@mail.gmail.com",
        "PARENT_ID":16884.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Matt Foley <mfoley@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"achievable seems common dev appropriate ml arun invited jiras include open jira suggested list carry discussion work"
    },
    "26892":{
        "ID":16883,
        "MESSAGE_ID":"CA+z3+9EF2JY5ngw3LqrQVKA0NxG_TX7yYf+=0MOnA7UQwjdN-g@mail.gmail.com",
        "PARENT_ID":16882.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Matt Foley <mfoley@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"like definitely overriding concern"
    },
    "26893":{
        "ID":16882,
        "MESSAGE_ID":"CACBYxKLd5etTDxYJUbgvFy+fGrg5aj9oz2TpBZCu5f_raeQ9uw@mail.gmail.com",
        "PARENT_ID":16880.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Sandy Ryza <sandy.ryza@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"non binding agreed bikas get scheduler api enhancement yarn able need blocker backwards compatible arun sure whether yes already covered would like throw support compatibility guideline blocker wed may pm eric baldeschwieler eric hortonworks com"
    },
    "26894":{
        "ID":16881,
        "MESSAGE_ID":"CA+z3+9Hmbk9q7yLK01Fo8bDdRv25Z6BRue-HdR8CYfQkWdZ3bQ@mail.gmail.com",
        "PARENT_ID":16879.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Matt Foley <mattf@apache.org>",
        "TAGS":"not-ak",
        "BODY":"binding think important maintain release continuity otherwise could end problem parallel stable dev track without parent child relationship ie disjoint subset functionality consider achieving stable basis api backward compat important arun committing hit beta near future matt"
    },
    "26896":{
        "ID":16879,
        "MESSAGE_ID":"7a903b13204315f5979dd84f4e3a59d4@mail.gmail.com",
        "PARENT_ID":16877.0,
        "SUBJECT":"RE: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Bikas Saha <bikas@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"proposal maintains original cadence bunch committers contributor working window related change made conservative manner destabilize code base change extensively tested validated community member especially microsoft yarn jiras mainly enhancement added backwards compatible manner would great make would hold release let make effort get release long awaited useful feature planned bikas"
    },
    "26897":{
        "ID":16878,
        "MESSAGE_ID":"E0FFA09C-B7E3-48F0-85D7-24A32685293D@hortonworks.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Arpit Gupta <arpit@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"arpit gupta hortonworks inc url"
    },
    "26898":{
        "ID":16877,
        "MESSAGE_ID":"1F4F020D-D790-473F-8279-BB2BAEEAF0CF@apache.org",
        "PARENT_ID":16872.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"also feel yarn go also feel please put state intention thanks vinod"
    },
    "26899":{
        "ID":16876,
        "MESSAGE_ID":"8D5575CD-C4F0-42BC-8877-7660913ED962@hortonworks.com",
        "PARENT_ID":16875.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Arun C Murthy <acm@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"yes long making timely compatible progress need debate individual issue let continue discussion relevant jiras thanks arun"
    },
    "26900":{
        "ID":16875,
        "MESSAGE_ID":"370CBBDE-E041-49B6-9293-69593BC54EAD@apache.org",
        "PARENT_ID":16874.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"clearer rm restart stuff tracked yarn scheduling apis tracked yarn security stuff tracked yarn thanks vinod"
    },
    "26901":{
        "ID":16874,
        "MESSAGE_ID":"0F3EE8FC-264F-4AA8-911A-DE2F4F061098@apache.org",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"thanks laying specific release plan easy vote watching yarn mapreduce change glad called specifically apart rm restart mostly already committed need couple couple scheduling related apis fall protocol change mentioned close commit couple security issue exactly feature calling specifically ambiguity binding thanks vinod kumar vavilapalli"
    },
    "26903":{
        "ID":16872,
        "MESSAGE_ID":"CAJs-t7Nd17PwwupY+es=163J6xyAcQnbdX=7XRFrc-X=iiFMMg@mail.gmail.com",
        "PARENT_ID":16871.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"need add yarn thanks"
    },
    "26904":{
        "ID":16871,
        "MESSAGE_ID":"CALwhT940Ck9rWmYEVKWMC40yFJgDSyNvoDDyzzdxZdMFHajcQQ@mail.gmail.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi arun add hadoop list compatibility guideline help support user downstream project better thanks karthik"
    },
    "26905":{
        "ID":16870,
        "MESSAGE_ID":"OFCE2822D4.22435283-ON87257B6C.00637CED-86257B6C.00642CB4@us.ibm.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Amir Sanjar <v1sanjar@us.ibm.com>",
        "TAGS":"not-ak",
        "BODY":"good glad back track way already started build ibm openjdk sdk unit test limited integration testing power result promising best regard amir sanjar system management architect powerlinux open source hadoop development lead ibm senior software engineer phone fax arun murthy pm folk considerable number people expressed confusion regarding recent vote arun murthy acm hortonworks com common dev hadoop apache org date pm subject vote release beta folk considerable number people expressed confusion regarding recent vote beta status etc given lack specific voting validity vote whose vote binding etc imho technical argument incompatibility current stability feature debate etc lost discussion favor non technical almost dramatic nuance seizing moment dangerous talk tolerating incompatibility red flag particularly feature debated active committers contributor confident ready stand work patch believe ready merged next day per discussion jira clearly delay api work everyone agrees crucial result feel recourse restart new vote attempt calm reasoned civil discussion based technical argument come naught apologize thrash caused everyone attention get past confusion would like present alternate specific proposal consideration propose continue original plan make beta release may end following content hdfs hdfs snapshot window support necessary final api protocol change final yarn api change yarn mr binary compatibility mapreduce final rpc cleanup hadoop people working feature expressed considerable comfort ready stand help expedite necessary bug fix etc get stabilization quickly confident get release end may set stage hadoop ga release right testing mean think quickly turn around make bug fix release necessary right beta request people consider helping plan sign help push hadoop stability outlined believe help achieve shared goal quickly stabilizing hadoop help ensure support forseeable future compatible manner benefit user downstream project please vote vote run normal day obviously thanks arun keep discussion grounded technical detail moved dev bcc general"
    },
    "26906":{
        "ID":16869,
        "MESSAGE_ID":"B25A2D2E-2971-4823-AB0E-6B88CD287656@apache.org",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"seems like forgot bcc forwarding general thanks vinod"
    },
    "26907":{
        "ID":16868,
        "MESSAGE_ID":"CADdVdVEYL0CiKH7dq5CSTSk5dN3qzUQYdU5QAzNaHV==+sMYpg@mail.gmail.com",
        "PARENT_ID":16867.0,
        "SUBJECT":"Re: [VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Suresh Srinivas <suresh@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"course taking unfortunate disruption able meet stabilization goal compatibility goal quickly proposal personally willing invest lot time testing code review work adding missing functionality ensure goal proposal successful"
    },
    "26908":{
        "ID":16867,
        "MESSAGE_ID":"48A037BF-5EE8-44EA-BE27-0BBB46DA0B5B@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] - Release 2.0.5-beta",
        "SENT_FROM":"Arun C Murthy <acm@hortonworks.com>",
        "TAGS":"existence, property",
        "BODY":"folk considerable number people expressed confusion regarding recent vote beta status etc given lack specific voting validity vote whose vote binding etc imho technical argument incompatibility current stability feature debate etc lost discussion favor non technical almost dramatic nuance seizing moment dangerous talk tolerating incompatibility red flag particularly feature debated active committers contributor confident ready stand work patch believe ready merged next day per discussion jira clearly delay api work everyone agrees crucial result feel recourse restart new vote attempt calm reasoned civil discussion based technical argument come naught apologize thrash caused everyone attention get past confusion would like present alternate specific proposal consideration propose continue original plan make beta release may end following content hdfs hdfs snapshot window support necessary final api protocol change final yarn api change yarn mr binary compatibility mapreduce final rpc cleanup hadoop people working feature expressed considerable comfort ready stand help expedite necessary bug fix etc get stabilization quickly confident get release end may set stage hadoop ga release right testing mean think quickly turn around make bug fix release necessary right beta request people consider helping plan sign help push hadoop stability outlined believe help achieve shared goal quickly stabilizing hadoop help ensure support forseeable future compatible manner benefit user downstream project please vote vote run normal day obviously thanks arun keep discussion grounded technical detail moved dev bcc general"
    },
    "27234":{
        "ID":16536,
        "MESSAGE_ID":"CALwhT96kqK7gYuQeYy5mHUV2VxDHmrJ_mgTZoQdOXx=O-hND7g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Compatibility in Apache Hadoop",
        "SENT_FROM":"Karthik Kambatla <kasha@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hadoop devs eli working writeup compatibility developer downstream project end user wiki page url strawman effort towards consolidating prior discussion decision including api classification effort hadoop sanjays work hadoop compatibility hadoop roadmap page hadoop wiki goal identify relevant interface concern downstream project user case community explicitly agreed upon policy hadoop api classification call policy doc intend propose new policy idea one document outline various compatibility concern lot area beyond api compatibility capture respective policy exist want define policy item clear something iterate first draft list type compatibility next step add existing policy subsequently work towards policy others would love incorporate feedback first draft thanks karthik"
    },
    "27273":{
        "ID":16497,
        "MESSAGE_ID":"CD970ED5.E3C4%evans@yahoo-inc.com",
        "PARENT_ID":16491.0,
        "SUBJECT":"Re: Omega vs. YARN",
        "SENT_FROM":"Robert Evans <evans@yahoo-inc.com>",
        "TAGS":"existence, technology",
        "BODY":"tim answer inline"
    },
    "27279":{
        "ID":16491,
        "MESSAGE_ID":"2092467196.3460889.1366396935523.JavaMail.root@redhat.com",
        "PARENT_ID":16488.0,
        "SUBJECT":"Re: Omega vs. YARN",
        "SENT_FROM":"Tim St Clair <tstclair@redhat.com>",
        "TAGS":"not-ak",
        "BODY":"robert thank response placed question comment inline cheer tim original message jira outline limitation would interested knowing think biggest open question distributed approach priority preemption policy fragmentation something tell may come fast yarn application space expands"
    },
    "27282":{
        "ID":16488,
        "MESSAGE_ID":"CD96DFB9.E31D%evans@yahoo-inc.com",
        "PARENT_ID":16484.0,
        "SUBJECT":"Re: Omega vs. YARN",
        "SENT_FROM":"Robert Evans <evans@yahoo-inc.com>",
        "TAGS":"existence, technology",
        "BODY":"tim interesting point scalability point think really run situation yet coming yarn currently simplistic scheduling rm complexity come number jira make request complex help support picky application like paper say would make yarn shift bit two level scheduler towards monolithic one thereby reducing scalability system making support complex scheduling pattern largest yarn cluster know right node"
    },
    "27286":{
        "ID":16484,
        "MESSAGE_ID":"1855621135.3358963.1366382822765.JavaMail.root@redhat.com",
        "PARENT_ID":null,
        "SUBJECT":"Omega vs. YARN",
        "SENT_FROM":"Tim St Clair <tstclair@redhat.com>",
        "TAGS":"not-ak",
        "BODY":"recently read google omega paper wondering yarn developer planning address item considered key point url cheer tim"
    },
    "27298":{
        "ID":16472,
        "MESSAGE_ID":"CALdd-zis8WqOybuO0z1MAtykWB_O503-QbfviJUoO0Wrb3A4sg@mail.gmail.com",
        "PARENT_ID":16402.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"technology",
        "BODY":"see ever committing dependency custom library core reason despite passionate advocacy probably never scala code tree saying potential contributor need familiar java language contribute core worth technical benefit modern jvms surprisingly good jiting bit manipulation technical case might strong would initially think query planner dirt simple check statistic index available query pick one match fewest row nested loop predicate look columnfamilystore search start thought sent found sitting draft folder blame new gmail compose crap"
    },
    "27368":{
        "ID":16402,
        "MESSAGE_ID":"CACdAd5ZGMHFJ0Y6sQ_astz2ktNGgpu2jmAUPsRRkJvL6=jM3tA@mail.gmail.com",
        "PARENT_ID":16349.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Matt Stump <mrevilgnome@gmail.com>",
        "TAGS":"existence, property, technology",
        "BODY":"spent time afternoon thinking way forward need make progress regardless whether eventual work make order thinking creating index management library query engine nature bitmap index ok engine node spit partial result list index need order complete query would caller get information index library shuttle around partial bitmap necessary like plan couple reason get tight tight control memory performance wrap library make accessible via jna work make wrap riak core still meet goal library fill empty ecosystem niche full blown database collection unknown area risk mind know enough implementation index query planner know whether crazy read old patch aborted bitmap index attempt look pretty simple lack context hard gather old disembodied code doc query planner index code bug db spent time benchmarking weekend prototype capable answering clause query fully materialsed gb uncompressed index encoded value laptop fairly certain running memory bandwidth limitation might one two small tweak still available hardware dependent would love feedback even say matt crazy go home thanks matt stump"
    },
    "27421":{
        "ID":16349,
        "MESSAGE_ID":"CACdAd5Z-ykG7ZaTZ-TMn+ZmPoyKFRZBRO1-L1614oL7TeJOAMA@mail.gmail.com",
        "PARENT_ID":16348.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Matt Stump <mrevilgnome@gmail.com>",
        "TAGS":"property",
        "BODY":"look like interest going disgorge everything learned considered past couple week consistant base going break index work different optimization drawback try address point question people raised broken subject basic equality bitmap index essentially giant array byte one bit per possibility want know row boolean value event set true set address row index example index would mean row would contain event want know row contain event event bitwise two index get set intersection eg result build complex query simple set arithmetic set called query dimension range query want encode range give user counter integer interval need two dimensional bitmap index first dimension value hit second dimension row possible value contain value value would another index mean row contain value form giant two dimensional array figure answer counter value would union set binning index address size limit total number row value encode index bit index encode total position need encode value possible address space two thing increase address space perform binning binning essentially hash collision meaning two value assigned value example wanted index float could use index want know row contain real number would need check actual value row result set called candidate check expensive often expensive part query segment increase address size index run space memory problem bit index gb fully materialized bit index pb solve problem use segment partition compression segment work use sparse table interval list break index chunk equal size let say kb bit get flipped position go segment exists flip bit segment exist create set bit advantage create segment contain flipped bit downside wide distribution bit flipped end many segment one two bit flipped empty space wasted memory compression approach use compression trick need compression algorithm require decompression bitwise operation mean need run length encoding rle leading contender king hill concise used druid wah used fastbit pwah used anybody think yet work way encode store large block zero one encoded value get index taken pwah mean block bit literal block bit block bit downside approach lose ability index directly position index want perform update either got read decode position split index rebuild entire index druid fastbit good static data set deal fast changing data hybrid approach performance take hybrid approach performance mean combine segment compression break index address space segment perform compression within segment negate problem many segment bit flipped consuming entire segment size worth memory also limit cost split encoding compressed segment segment fill compress join together using standard sstable leveldb approach distributing work across ring use segment uniform index size mean assign segment index different portion ring mean one node would segment necessary answer query involving portion address space also corresponds row mean could answer certainty row address space match query get entire query result merge segment obtain final set optimization possibly worth considering know size index beforehand perform bitwise operation across index index sorted increasing size know index event segment populated mean need look corresponding segment index even index fully materialized also bitmap index type efficiently encode range know enough yet render opinion optimization worth considering paper limiting io cost candidate check optimal binning strategy requires modeling full knowledge distribution data feasible query planning limitation honest dug existing query planner cql yet answer jonathan point complexity say query logic bitmap index pretty simple need break set boolean operation selected set performed parallel performing operation adjacent segment knowledge segment size perform operation order limit operation size simply thing would allow indexing cql collection temptation would ship index allowing support range query also need use case maybe come another iteration trigram support fuzzy matching regex get layered top fundamental concept steal hard bit existing library project research thought would need put appropriate segment size index size binning strategy hash selection encoding non numeric value basically sure forgotten something really looking forward feedback question criticism may would really like see something like offering dedicated time make happen make goal timeline employer project meet already done thing put book writing hold order make time understand say greater project consider say likely continue project separate query index engine act storage layer go alone resulting code may may open source decided yet"
    },
    "27422":{
        "ID":16348,
        "MESSAGE_ID":"CAENxBwwf8jZdDffd3tki0q4Uhpu870Egx8=ufjAvZxFYK-g=iw@mail.gmail.com",
        "PARENT_ID":16347.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"property",
        "BODY":"sure collection case compact storage specify multiple range slice query url sure get way bit map index wide row scenario seems like could support event contains event contains event contains sure arbitrarily complex cql query handler become intravert something dabling concept apply server side function result slice url huge win multiple index behind plugable index support plugable index query option easy cql ify"
    },
    "27423":{
        "ID":16347,
        "MESSAGE_ID":"CALdd-ziODF6rAWiEFqCx1nmRtw-uqC-UReoijTuEZ_4iZp0dDQ@mail.gmail.com",
        "PARENT_ID":16303.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"something like select user user id select user id event type user id select user id event type really look like cassandra query like query hive drill impala know sylvain looking forward adding index support collection something like might fit select user event contains event contains event contains event contains however even current query planner handle really handle disjunction except special case partition key translates multiget let alone arbitrary logical predicate think bitmap index query planning latter actually hard part queryprocessor limit tractable complexity already think would need new approach want handle arbitrarily complex predicate like url"
    },
    "27424":{
        "ID":16346,
        "MESSAGE_ID":"CACn_-AzfBy9T=7_mhnfUjA59ouB_mvQV0xvQy9t5=1nJ2hjmZA@mail.gmail.com",
        "PARENT_ID":16344.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Jason Rutherglen <jason.rutherglen@gmail.com>",
        "TAGS":"technology",
        "BODY":"brian solr statscomponent performs aggregation url recommend using datastax dse search"
    },
    "27426":{
        "ID":16344,
        "MESSAGE_ID":"CD8D874D.575E2%bone@alumni.brown.edu",
        "PARENT_ID":16339.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Brian O'Neill <bone@alumni.brown.edu>",
        "TAGS":"property, technology",
        "BODY":"jason lot experience solr mainly search finding relevant record given query working well requirement support dashboard dashboard aggregation sum average count etc limited experience using filter function facet achieve similar thing lucene never seemed perform well set large lucene solr support kind functionality would gladly use instead let know looked around druid seemed fit bill exactly open source url ows per second way information compression druid us url echo matt sentiment would love leverage native capability acunu provides capability open source think conditional write semantics coming could layer top extending secondary index functionality brian brian neill lead architect software development health market science science better result horizon drive king prussia pa boneill healthmarketscience com information transmitted email message intended recipient may contain confidential privileged material received email error intended recipient person responsible deliver intended recipient please contact sender email delete email attachment destroy copy thereof review retransmission dissemination copying use taking action reliance upon information person entity intended recipient strictly prohibited"
    },
    "27431":{
        "ID":16339,
        "MESSAGE_ID":"CACdAd5ZQawDWVsPEFZAza-G+gEikinYEbNvu5C5q+MqEsayuFg@mail.gmail.com",
        "PARENT_ID":16331.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Matt Stump <mrevilgnome@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"could embed lucene pretty much dse search people list better position describe difficulty making scale rolling get simplicity control use uniform index size assign chunk cassandra ring making easy distribute query think using lucene way would cause benefit library lost add unnecessary complexity lucene easy think given team experience lucene would done already sorry fuzzy answer run every technical angle integration yet idea still much would cool thing lived cassandra would nail coffin impala redshift et al"
    },
    "27439":{
        "ID":16331,
        "MESSAGE_ID":"CACn_-Ay2yFFrFvMivYNvFhxZwtimhkh0hSmScyej0fjhA2KfwA@mail.gmail.com",
        "PARENT_ID":16307.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Jason Rutherglen <jason.rutherglen@gmail.com>",
        "TAGS":"technology",
        "BODY":"advantage lucene"
    },
    "27459":{
        "ID":16311,
        "MESSAGE_ID":"CALvu5fRoxpZhp09=p_jXFmrKNtOME+Gmykjw6zg0do4fL=7T=g@mail.gmail.com",
        "PARENT_ID":16309.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Jawed <jaweda@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"information shared discussion quite informative developer would like go kind discussion group"
    },
    "27462":{
        "ID":16308,
        "MESSAGE_ID":"CAGTwgn4AmMgyFGdheTa-ubDaX6dcZhiXjOP=p-fih=h_5MeFCw@mail.gmail.com",
        "PARENT_ID":16307.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Carl Yeksigian <carl@yeksigian.com>",
        "TAGS":"not-ak",
        "BODY":"discussion topic dev list want continue please move user thanks carl"
    },
    "27463":{
        "ID":16307,
        "MESSAGE_ID":"CACdAd5Zp13y9cBfUdpdrMxh38a1V1t4gzqA1e6at_nA-kqpjmw@mail.gmail.com",
        "PARENT_ID":16304.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Matt Stump <mrevilgnome@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"druid inspiration layer bitmap index top cassandra druid work data set large would need many hundred node pre processed data envisioned ability perform druid style query aggregation without limitation imposed entire dataset memory primarily need query whether user performed event also intend add trigram index like ilike possibly regex style matching aware concise thanks pointer currently evaluating fastbit similar project url"
    },
    "27466":{
        "ID":16304,
        "MESSAGE_ID":"6477A6FF-BD11-40BF-A1E6-23632BEF682A@alumni.brown.edu",
        "PARENT_ID":16303.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Brian O'Neill <bone@alumni.brown.edu>",
        "TAGS":"property, technology",
        "BODY":"compare druid url currently evaluating acunu vertica druid url bitmapped index druid appears potential boast pretty impressive stats especially wrt handling real time update adding new dimension also use compression algorithm concise cut space requirement url looked deep druid code meaning see could backed would game join hunt pursue beast code portion druid brian"
    },
    "27467":{
        "ID":16303,
        "MESSAGE_ID":"CACdAd5ZrgMfM3bdzYsCBTPSqbFT=moTYfaTKWHgROt4HNxdWSQ@mail.gmail.com",
        "PARENT_ID":16298.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"mrevilgnome <mrevilgnome@gmail.com>",
        "TAGS":"property",
        "BODY":"think set manipulation via index cassandra interested answering query give user performed event answer yes make case spending time downside would current prototype would loose performance ability dedicate entire machine caching performing query"
    },
    "27472":{
        "ID":16298,
        "MESSAGE_ID":"CALdd-zhLDe4UYnG1cbCgQmoXjau_DWbQ25QOSWY6b-AMwuJmzQ@mail.gmail.com",
        "PARENT_ID":16290.0,
        "SUBJECT":"Re: Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"mean someone help figure get started updating old patch trunk cleaning avro yes knee deep indexing code recently"
    },
    "27480":{
        "ID":16290,
        "MESSAGE_ID":"CACdAd5Yta3G7+31v2bVkf4WTWmVOOxmKYv28O71WX0cN262DdQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Bitmap indexes - reviving CASSANDRA-1472",
        "SENT_FROM":"mrevilgnome <mrevilgnome@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"currently building distributed cluster top cassandra perform fast set manipulation via bitmap index give ability perform union intersection set subtraction across sub query currently storing index information thousand dimension cassandra row cluster keep information cached distributed replicated order answer query every couple day think really exist given benifits would interest reviving cassandra downside memory intensive even sparse bitmap"
    },
    "27554":{
        "ID":16216,
        "MESSAGE_ID":"CAO0LRM8=2bhKvJBg+sUXdykamewYNhwb6zMexpdVMTFYtpkopw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"configuring number of mappers and reducers",
        "SENT_FROM":"Samaneh Shokuhi <samaneh.shokuhi@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi experiment running wordcount example hadoop cluster node want run wordcount example mapper reducer compare response time another experiment number mapper reducer increased first experiment set number mapper reducer wordcount example source code also set number replication hadoop configuration also maximum number task per node set run sample big data like see map task reduce task running parameter need set like mapper reducer mentioned cluster namenode datanodes number replication related number mapper reducer regard samaneh"
    },
    "28121":{
        "ID":15648,
        "MESSAGE_ID":"CADdVdVH7jhkYKV+1rBtHA-KD4zwTUnkKF9OVjwCJHkGZ8S9BUw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[Vote] Merge branch-trunk-win to trunk",
        "SENT_FROM":"Suresh Srinivas <suresh@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"posted head merging branch trunk win trunk feb th happy announce ready merge brief recap highlight work done command line script hadoop surface area mapping hdfs permission model window abstracted reconciled mismatch around difference path semantics java window native task controller window implementation block placement policy support cloud environment specifically azure implementation hadoop native library window compression codecs native several reliability issue including race condition intermittent test failure resource leak several new unit test case written change please find detail work change branch trunk win txt common change hdfs change yarn mapreduce change work ported branch win branch based trunk detail testing done please see thread url merge patch available hadoop url large undertaking involved developing code testing entire hadoop stack including scale test made possible contribution many many folk community following people contributed work ivan mitic chuan liu ramya sunil bikas saha kanna karanam john gordon brandon li chris nauroth david lao sumadhur reddy bolli arpit agarwal ahmed el baz mike liddell jing zhao thejas nair steve maine ganeshan iyer raja aluri giridharan kesavan ramya bharathi nimmagadda daryn sharp arun murthy tsz wo nicholas sze suresh srinivas sanjay radia many others contributed well providing feedback comment numerous jiras vote run seven day end march pm pst regard suresh"
    },
    "28122":{
        "ID":15647,
        "MESSAGE_ID":"CADY20s7aBNQa1EncwDTJ3LGszS_y9WYPE37DwQivGuSPuFuYTw@mail.gmail.com",
        "PARENT_ID":15645.0,
        "SUBJECT":"Re: VOTE: HDFS-347 merge",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi bikas completely agree principle short circuit read end ceding control data path datanode user application disadvantage mentioned brought jira well particularly qos metric flexibility change data layout disk future etc however performance advantage approach quite stark data set cached buffer cache example using low overhead client like impala executing simple table scan query seen improvement overall response time using short circuit read versus localhost tcp overhead come primarily kernel layer code eg localhost tcp connection still perform packet segmentation enforce multiple buffer copy kernel space incur several syscalls etc better implemented datanode perhaps transfer domain socket might close gap bit based benchmark still slower short circuit look history hdfs actually asked colin implement experiment non short circuit path domain socket assumption may efficient loopback tcp socket result particularly encouraging though may still enabled anyone want experiment optimizing also improvement coming road linux kernel particular tcp friend eliminate tcp stack overhead loopback connection unfortunately several year deploying mainstream distros reference sequential throughput random io performance even drastically effected benchmark posted hdfs show improvement workload data buffer cache ram capacity machine continue increase solid state storage becomes cost effective random read fall category bound hardware rather bound software overhead given think performance benefit short circuit read outweigh disadvantage given entirely implementation optimization api always evaluate future version either someone figure way get non short circuit implementation comparable performance kernel guy catch implement tcp friend feature close gap colin also careful build capability api datanode reject short circuit request causing client seamlessly fall back based version number would allow change underlying format dns something scr friendly without causing incompatibility existing client etc hope explains motivation feature thanks todd"
    },
    "28124":{
        "ID":15645,
        "MESSAGE_ID":"a9dc643bada06711faa0b3eedfb45f3e@mail.gmail.com",
        "PARENT_ID":15532.0,
        "SUBJECT":"RE: VOTE: HDFS-347 merge",
        "SENT_FROM":"Bikas Saha <bikas@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"hi opinion feature short circuit read hdfs hdfs desirable feature hdfs working towards removing feature instead enhancing making popular maybe short circuit read something hbase needed performance point time hdfs performance slow improvement made still unacceptably slow read hdfs good engineering close gap close hdfs user one use short circuit read brings question target audience feature see anyone potentially want use everyone everyone start using short circuit read happens performance problem trying solve performance still better especially important context yarn control apps run shared grid problem trying solve want better hdfs performance qos service want give much control disk hdfs rather take away short circuit read leave gaping hole towards end making short circuit read better easier use make hole larger sorry replying late also response might missing historical perspective aware bikas"
    },
    "28134":{
        "ID":15635,
        "MESSAGE_ID":"CAKeBE3Ls3kCmr0hJWS0cbj3WLvd0cEiX-hHoq_X99+eOh32KMw@mail.gmail.com",
        "PARENT_ID":15630.0,
        "SUBJECT":"Re: ANNOUNCEMENT: Project Rhino: Enhanced Data Protection for the Apache Hadoop Ecosystem",
        "SENT_FROM":"Avik Dey <aviks.email@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks appreciate announcement cross posted outreach thanks co see work currently believe work jiras individual project similar jiras posted url get point future work need home outside individual project happy incubate work apache avik"
    },
    "28139":{
        "ID":15630,
        "MESSAGE_ID":"20130226001824.GK17164@linspire.com",
        "PARENT_ID":15627.0,
        "SUBJECT":"Re: ANNOUNCEMENT: Project Rhino: Enhanced Data Protection for the\tApache Hadoop Ecosystem",
        "SENT_FROM":"Konstantin Boudnik <cos@apache.org>",
        "TAGS":"not-ak",
        "BODY":"yanking away cross post interesting cross component project avik plan incubate apache co"
    },
    "28142":{
        "ID":15627,
        "MESSAGE_ID":"CD5137E5.15610%avik.dey@intel.com",
        "PARENT_ID":null,
        "SUBJECT":"ANNOUNCEMENT: Project Rhino: Enhanced Data Protection for the Apache Hadoop Ecosystem",
        "SENT_FROM":"\"Dey, Avik\" <avik.dey@intel.com>",
        "TAGS":"property",
        "BODY":"project rhino apache hadoop ecosystem extends new market see new use case security compliance challenge benefit processing sensitive legally protected data hadoop must coupled protection private information limit performance impact project rhino open source effort enhance existing data protection capability hadoop ecosystem address challenge contribute code back apache core apache hadoop ecosystem commonly understood core set shared library hdfs hadoop filesystem mapreduce parallel computation framework zookeeper configuration management coordination hbase column oriented database hdfs hive data warehouse hdfs sql like access pig higher level programming language hadoop computation oozie orchestration workflow management mahout library machine learning data mining algorithm flume collection import log event data sqoop import data relational database component separate project therefore cross cutting concern like authn authz consistent security policy framework consistent authorization model audit coverage loosely coordinated security feature expected customer encryption simply missing aim take full stack view work individual project toward consistent concept capability filling gap go initial goal framework support encryption key management currently framework support encryption key management add support hadoop core integrate across ecosystem common authorization framework hadoop ecosystem component currently authorization engine abstract common function reusable authorization framework consistent interface appropriate either modify existing engine work within framework plug common default engine therefore also must normalize security policy expressed applied component core hdfs zookeeper hbase currently support simple access control list acls composed user group see good starting point necessary modify component offer equivalent functionality build support others token based authentication single sign core hdfs zookeeper hbase currently support kerberos authentication rpc layer via sasl however provide valuable attribute group membership classification level organizational identity support user defined attribute hadoop component must interrogate external resource discovering attribute scale problematic also consistent delegation model hdfs simple delegation capability oozie take limited advantage implement common token based authentication framework decouple internal user service authentication external mechanism used support like kerberos extend hbase support acls cell level currently hbase support setting access control table column family level however many use case would benefit additional capability per cell basis fact many user dealing sensitive information ability crucial improve audit logging audit message various hadoop component use unified even consistently formatted format make analysis log verifying compliance taking corrective action difficult build common audit logging facility part common authorization framework work also build set common audit log processing tool transforming different industry standard format supporting compliance verification triggering response policy violation current jiras part ongoing effort contributing work date jiras listed may appreciate goal project rhino cover number different apache project scope work significant likely increase get additional community input also appreciate may others apache community may working interested contributing look forward partnering apache accelerate effort apache community see benefit collective effort sooner also find detailed version announcement project rhino please feel free reach commenting jiras hbase add per keyvalue security hadoop hadoop crypto codec framework crypto codec implementation related sub task mapreduce key distribution management supporting crypto codec map reduce related jiras hbase transparent table cf encryption"
    },
    "28143":{
        "ID":15626,
        "MESSAGE_ID":"CD513333.12CBA%mkjellman@barracuda.com",
        "PARENT_ID":15625.0,
        "SUBJECT":"Re: Notes from committer's meeting: overview",
        "SENT_FROM":"Michael Kjellman <mkjellman@barracuda.com>",
        "TAGS":"not-ak",
        "BODY":"url"
    },
    "28144":{
        "ID":15625,
        "MESSAGE_ID":"CACrcKWQ_Us+dXGrNbAovMFDtd7j=LPoioOm9P4bYM9n7D2jjvQ@mail.gmail.com",
        "PARENT_ID":15624.0,
        "SUBJECT":"Re: Notes from committer's meeting: overview",
        "SENT_FROM":"Anton Prakash <anton.prakash@cloudtalk.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe"
    },
    "28146":{
        "ID":15623,
        "MESSAGE_ID":"CAENxBwz7HK9Ojm2DOKjmD1m_-P22zwCSBZLdfaQr=X7-mHh+BQ@mail.gmail.com",
        "PARENT_ID":15621.0,
        "SUBJECT":"Re: Notes from committer's meeting: overview",
        "SENT_FROM":"Edward Capriolo <edlinuxguru@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"curious mean say fat client work right work fat client app running jvm seems work well"
    },
    "28148":{
        "ID":15621,
        "MESSAGE_ID":"CALdd-zj412v47K9xTn+3Y=qnQMbiDUAx_j8Juzb_znEGo+tmMQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Notes from committer's meeting: overview",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence",
        "BODY":"last thursday datastax put together meeting active cassandra committers san mateo dave brosius unable make west coast brandon eric gary jason pavel sylvain vijay yuki able attend aleksey jake able attend part time google hangout started asking committer outline top priority pretty broad consensus around following big item break separate thread streaming repair counter also lot consensus able ship form trigger gary suggestion focus getting functionality nailed first worry classloader voodoo allow live reloading also general agreement need split jar loading trigger definition allow single trigger applied multiple table le consensus around ca primarily implementation difficulty since read paxos spinnaker posted thought ticket subject discussed single cassandra process scale well beyond physical core research needed understand one possibility gc overhead vijay going test azul zing vm confirm refute server side aggregation function would remove need pull lot data wire client unnecessarily unease around moving beyond relatively simple query traditionally supported think general agreement addressed fencing aggregation single partition unless explicitly allowed otherwise la allow filtering extending cross datacenter forwarding star model case three datacenters instead original coordinator dc sending replica dc would forward would forward thus bandwidth required one dc would constant datacenters added vnode improvement vnode aware replication strategy cluster merging splitting multiple application using single cassandra cluster one get lot traffic others may want split cluster think concrete proposal could work someone else fill write auto paging select query cql put another way transparent cursor native cql driver make storage engine cql aware low hanging fruit includes prefix dictionary composite cell name resurrecting storageproxy api aka fat client even work right really reducing context switch increasing fairness client connection hsha prefers accept new connection servicing existing one overload situation problematic gossip unreliable node missed concrete proposal address url start url part relevant vijay proof concept patch url url url url url url url jonathan elli project chair apache cassandra co founder url spyced"
    },
    "28208":{
        "ID":15561,
        "MESSAGE_ID":"1361401736.24828.YahooMailNeo@web125701.mail.ne1.yahoo.com",
        "PARENT_ID":15559.0,
        "SUBJECT":"Re: VOTE: HDFS-347 merge",
        "SENT_FROM":"Tsz Wo Sze <szetszwo@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"reason keep around hdfs support unix tsz wo todd lipcon hdfs dev hadoop apache org tsz wo sze sent wednesday february pm subject vote hdfs merge"
    },
    "28212":{
        "ID":15557,
        "MESSAGE_ID":"1361401264.85659.YahooMailNeo@web125704.mail.ne1.yahoo.com",
        "PARENT_ID":15552.0,
        "SUBJECT":"Re: VOTE: HDFS-347 merge",
        "SENT_FROM":"Tsz Wo Sze <szetszwo@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"also patch seems removed existing short circuit read feature hdfs incompatible change think patch farther away ready would keep tsz wo tsz wo sze hdfs dev hadoop apache org sent wednesday february subject vote hdfs merge patch seems ready yet posted comment suggestion jira colin also agreed bug fixed sorry tsz wo todd lipcon hdfs dev hadoop apache org sent tuesday february pm subject vote hdfs merge binding code reviewed almost code branch also spent time benchmarking testing various workload also done significant testing cluster cloudera secure insecure verified integration number ecosystem component eg pig hive impala hbase mr etc feature work advertised provide much better performance number workload especially secure environment thanks hard work colin todd"
    },
    "28217":{
        "ID":15552,
        "MESSAGE_ID":"1361390182.5901.YahooMailNeo@web125703.mail.ne1.yahoo.com",
        "PARENT_ID":15545.0,
        "SUBJECT":"Re: VOTE: HDFS-347 merge",
        "SENT_FROM":"Tsz Wo Sze <szetszwo@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"patch seems ready yet posted comment suggestion jira colin also agreed bug fixed sorry tsz wo todd lipcon hdfs dev hadoop apache org sent tuesday february pm subject vote hdfs merge binding code reviewed almost code branch also spent time benchmarking testing various workload also done significant testing cluster cloudera secure insecure verified integration number ecosystem component eg pig hive impala hbase mr etc feature work advertised provide much better performance number workload especially secure environment thanks hard work colin todd"
    },
    "28224":{
        "ID":15545,
        "MESSAGE_ID":"CADY20s7v6BMhu0E2npwSkLntDxi7EP6V7ZKpsZS0yedNggXo-w@mail.gmail.com",
        "PARENT_ID":15532.0,
        "SUBJECT":"Re: VOTE: HDFS-347 merge",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"binding code reviewed almost code branch also spent time benchmarking testing various workload also done significant testing cluster cloudera secure insecure verified integration number ecosystem component eg pig hive impala hbase mr etc feature work advertised provide much better performance number workload especially secure environment thanks hard work colin todd"
    },
    "28229":{
        "ID":15540,
        "MESSAGE_ID":"CALfbg0doN0j=g5OnUidVdS-HKOGeaSCB+Vqa=ymYFZzR=BZboQ@mail.gmail.com",
        "PARENT_ID":15538.0,
        "SUBJECT":"Re: Best place to discuss CQL Binary Protcol spec?",
        "SENT_FROM":"paul cannon <pcannon@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"usefully speak question answer technical question"
    },
    "28231":{
        "ID":15538,
        "MESSAGE_ID":"87zjz1js39.fsf@ironicdesign.com",
        "PARENT_ID":null,
        "SUBJECT":"Best place to discuss CQL Binary Protcol spec?",
        "SENT_FROM":"Michael Alan Dorman <mdorman@ironicdesign.com>",
        "TAGS":"not-ak",
        "BODY":"hey working greenfield perl client cql binary protocol since client progress question actually protocol guessed dev seemed like better list please let know relocate client dev always happens working spec ended quick clarification request involved question would like know best contribute document credential quick clarification bit text body list key value information short followed pair string key value pair string map text using consistent terminology row involved question text describing column content composed composed byte representing value returned jth column ith row word composed byte read thought oh sure need figure width java type different column tedious easily doable noticed option thing like blob varchar would assume variable width one determine many byte read different type guessing actual information much space different value take located somewhere else least seems like mentioned though even ideal seems information called spec updating doc kind brings final question would best way contribute cleanup etc document far could take least lot typo would happy fix also think text could tightened various way think thing could moved around make spec accessible implementors importantly think need format produce hyperlinked document right scroll back forth everything tedious indeed seems improbable native format document someone really toc hand source doc would best actually work edits could contribute converting textile seems already use tree perhaps markdown mike"
    },
    "28237":{
        "ID":15532,
        "MESSAGE_ID":"CA+qbEUO8JkTugwkND9zzTyfB338PW2oJZ9XfLFW98pkjKGXCTg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"VOTE: HDFS-347 merge",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"not-ak",
        "BODY":"hi would like merge hdfs branch back trunk intensive review testing several month branch add lot new unit test pass jenkins tested hdfs random sequential workload short circuit case substantially faster overall performance look good especially encouraging given initial goal work make security compatible short circuit local read rather optimize short circuit code path also stress tested hdfs number cluster iniial vote merge trunk done recent merges consider merging branch code trunk week please cast vote eod sunday best colin mccabe url url"
    },
    "28804":{
        "ID":14965,
        "MESSAGE_ID":"CAF-WD4QghwEQWUvsrfEJHBy3aLX2TmbMT-VqdxfBeUc3DVdToQ@mail.gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Tom White <tom@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"tom"
    },
    "28821":{
        "ID":14948,
        "MESSAGE_ID":"720F73E5-05CD-473B-BE70-63435B0DDDBF@gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Joep Rottinghuis <jrottinghuis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"non binding joep"
    },
    "28830":{
        "ID":14939,
        "MESSAGE_ID":"CAPn_vTto7+KQSuoZe_zYoTAAREv94wUJMZrcSfr9CwhMN3rRLw@mail.gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"existence",
        "BODY":"iiuc platform plan add support easily support today emulation layer like cygwin window seems like making bash script simpler parallel bat file going better approach"
    },
    "28831":{
        "ID":14938,
        "MESSAGE_ID":"CAOcaW6Cx-6uCKohz6z225aqJdG=JfTP6Fp=daW2jzMM5kfRCgg@mail.gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Raja Aluri <raja@cmbasics.com>",
        "TAGS":"not-ak",
        "BODY":"non binding make lot easier make build tool developed easily using maven work across non unix like platform especially window raja"
    },
    "28840":{
        "ID":14929,
        "MESSAGE_ID":"CALdd-zgbcwiQGg4eQRiOz0+eeKhHjOHs7gK00rZShTSxJw+Q6A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"2.0",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think think call next would like spend time paying technical debt replace supercolumns composite cassandra rewrite counter cassandra improve storage engine support wide row better stage management improve latency disruptor lightweight thread custom executor queue improved repair cassandra course planning new feature well trigger cassandra improved query fault tolerance cassandra row size limit cassandra cql integration hadoop cassandra improved caching cassandra jonathan elli project chair apache cassandra co founder url spyced"
    },
    "28845":{
        "ID":14924,
        "MESSAGE_ID":"CALEq1Z8W2OuNjLY-D9M9jqFQVJfMpfKdsR26rvVGKrM5Hje4AQ@mail.gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Doug Cutting <cutting@apache.org>",
        "TAGS":"existence, property",
        "BODY":"run build time scripting limited operation impossible java complex encourage complexity parallel set simple bat file operation seems preferable adding python dependency doug"
    },
    "28849":{
        "ID":14920,
        "MESSAGE_ID":"50B8B753.3010607@filez.com",
        "PARENT_ID":14917.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"not-ak",
        "BODY":"sh script inside maven ant plugin stuff"
    },
    "28853":{
        "ID":14916,
        "MESSAGE_ID":"CABFz-zgp3Q+SU6wPbK3cBnYiein_UBMeLX+RbSTzNpfddXUtrQ@mail.gmail.com",
        "PARENT_ID":14914.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Luke Lu <llu@apache.org>",
        "TAGS":"technology",
        "BODY":"would like change binding vote considering hadoop stack ecosystem whole think best cross platform scripting language adopt jruby following reason hbase already adopted jruby hbase current platform vendor support control version language implementation per release basis introduce new dependency de facto hadoop stack see improving multi platform support think best way thin native script wrapper using env var call cross platform jruby script luke"
    },
    "28855":{
        "ID":14914,
        "MESSAGE_ID":"CABFz-zjt6nz2-qpgzooo9mAn9_F3g_-52BYHAQFtb9wRzEja6w@mail.gmail.com",
        "PARENT_ID":14908.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Luke Lu <llu@vicaya.com>",
        "TAGS":"not-ak",
        "BODY":"thanks voting thread otherwise many committers would missed agree superset code change larger impact typical code change"
    },
    "28859":{
        "ID":14910,
        "MESSAGE_ID":"CCDD74EA.23888%bikas@hortonworks.com",
        "PARENT_ID":14909.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Bikas Saha <bikas@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"non binding promising result porting window would allow remove platform dependency test code agree might nuanced operation require specific environment would lead keeping minimum bikas"
    },
    "28860":{
        "ID":14909,
        "MESSAGE_ID":"2fe5dabd41c6480386675b074fd388d9@BLUPR03MB614.namprd03.prod.outlook.com",
        "PARENT_ID":14908.0,
        "SUBJECT":"RE: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Chuan Liu <chuanliu@microsoft.com>",
        "TAGS":"property, technology",
        "BODY":"agree matt code maintainability think one side script language dependent bash powershell side java script language independent would accept script language fix gap independent scripting language personally also prefer python ruby thanks chuan mfoley hortonworks com behalf matt foley sent thursday november pm common dev hadoop apache org subject vote introduce python build time run time dependency hadoop throughout hadoop stack hello crossed mail kind task envision python script enable point open brave new world point avoid nightmare maintain multiple parallel script thing multiple scripting language know experience never get maintained right huge source bug different language quite difficult determine really thing case like powershell common contributor expert care deeply high quality release linux window cross platform scripting language make much easier maintain quality time without slip two platform requirement python pushed client using question pass python become run time dependency hadoop mean would need installed part hadoop install preparation like hadoop run time dependency main motivation proposal make thing easier window course sufficient simple implementation perspective translate script bat better powershell script fact evident alternative proposal however ask beg community consider software engineering perspective implement something done maintained list well aware year year across multiple generation trying maintain parallel script multiple language necessitated genuine platform specific requirement creating bug generator system personally would trilled see logic script see first item point enable cross platform scripting thing already script going script get env var business entirely unrelated question finally code change sure vote view tool issue affect question go beyond one time choice write write saveversion sh also aaron atm recommended bring list cheer matt"
    },
    "28861":{
        "ID":14908,
        "MESSAGE_ID":"CA+z3+9Eu_xuNHuakqf=+3vo3r7E7fjDyjZMQu50nsFidqdQhFA@mail.gmail.com",
        "PARENT_ID":14905.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Matt Foley <mattf@apache.org>",
        "TAGS":"existence",
        "BODY":"hello crossed mail kind task envision python script enable point open brave new world point avoid nightmare maintain multiple parallel script thing multiple scripting language know experience never get maintained right huge source bug different language quite difficult determine really thing case like powershell common contributor expert care deeply high quality release linux window cross platform scripting language make much easier maintain quality time without slip two platform requirement python pushed client using question pass python become run time dependency hadoop mean would need installed part hadoop install preparation like hadoop run time dependency main motivation proposal make thing easier window course sufficient simple implementation perspective translate script bat better powershell script fact evident alternative proposal however ask beg community consider software engineering perspective implement something done maintained list well aware year year across multiple generation trying maintain parallel script multiple language necessitated genuine platform specific requirement creating bug generator system personally would trilled see logic script see first item point enable cross platform scripting thing already script going script get env var business entirely unrelated question finally code change sure vote view tool issue affect question go beyond one time choice write write saveversion sh also aaron atm recommended bring list cheer matt"
    },
    "28862":{
        "ID":14907,
        "MESSAGE_ID":"8e50194b57ac4c0fba821a9d427fccc1@BLUPR03MB018.namprd03.prod.outlook.com",
        "PARENT_ID":14903.0,
        "SUBJECT":"RE: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Mahadevan Venkatraman <mahadv@microsoft.com>",
        "TAGS":"existence, property, technology",
        "BODY":"non binding supporting comment build time script using platform independent language python maven certain case greatly help reducing build break improve build script maintainability run time script run time script end user visible script needed run admin starting stop hadoop cluster hadoop daemon developer submitting job hadoop cmd seem two type script file script intended cluster admin admin desirable use common set python script work across platform however window enterprise environment admins like run python script start stop cluster powershell interface wrapper accept right parameter pas python script hopefully power layer simple pas thru way python script like java code hidden behind well known api surface admins debug modify easily fine since script like aforementioned requirement admins able easily able view modify underlying code window specific thing supported python natively setting acls starting stopping window service possible factor code appropriately little bit powershell cmd call out would unavoidable script intended developer cluster user script hadoop cmd would behind api surface webhdfs odbc jdbc templeton etc advantage common script across platform outweighs use cmd powershell native window feature also possible provide simple powershell wrapper window environment thanks mahadevan"
    },
    "28863":{
        "ID":14906,
        "MESSAGE_ID":"CA+z3+9FfAwgHvc=xmYntOw_Rha2Mjq7TBL_7HHVDuQXCrSnFKA@mail.gmail.com",
        "PARENT_ID":14902.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Matt Foley <mattf@apache.org>",
        "TAGS":"technology",
        "BODY":"bash script provided hadoop dynamically created ie launcher script python intend mandate use python rather want cross platform option available thing best done platform specific manner done linux powershell window thing best done platform independent way lower long term maintenance cost using different script per platform mean existing script may naturally migrate python overall system ported window hopefully someone porting script well done platform independent way able choose python write single script replace script make unnecessary maintain two script job different language going forward candidate migrated python greatly improved version src doc relnotes py would like submit auto gen release note hotlist right although anticipate script invoked ant may natural candidate developer install manually something community work way decide library jar include upgrade version first let get agreement principle direction want go cheer matt"
    },
    "28864":{
        "ID":14905,
        "MESSAGE_ID":"CAJs-t7N_sFBU29TQ3OSNf6xOpJ6+Q1hjYH=X_mXTJYLpmydN2w@mail.gmail.com",
        "PARENT_ID":14902.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"existence, property, technology",
        "BODY":"matt let repost previous question would appreciate answer help understand full impact would hadoop related project phyton runtime requirement planing migrate bash script provided hadoop dynamically created ie launcher script phyton else current build besides saveversion sh see candidate migrated phyton planning define phyton module used developer install manually kind task envision python script enable possible today requirement python pushed client using hadoop script would affect downstream project use hadoop script one right main motivation proposal make thing easier window need cygwin case considered directly bat script take tomcat example bat script sh script thing work quite nicely personally would trilled see logic script get complex opposite direction going script trimmed set env var voodoo logic build classpath voodoo logic set dirs call java finally code change sure vote thanks"
    },
    "28865":{
        "ID":14904,
        "MESSAGE_ID":"50B7FDD7.4090303@filez.com",
        "PARENT_ID":14902.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"not-ak",
        "BODY":"else current build besides saveversion sh see candidate migrated phyton inline ant script"
    },
    "28866":{
        "ID":14903,
        "MESSAGE_ID":"5210a537c8044e5d97867e76acace967@BLUPR03MB602.namprd03.prod.outlook.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"RE: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Ivan Mitic <ivanmi@microsoft.com>",
        "TAGS":"not-ak",
        "BODY":"comment inline"
    },
    "28867":{
        "ID":14902,
        "MESSAGE_ID":"CAJs-t7NTGVP+m68Neb+jJ1vd+9eOgE1oeKAimN_sadg34ob8-A@mail.gmail.com",
        "PARENT_ID":14901.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"technology",
        "BODY":"matt thanks clarification may missed main point proposal thread personally want continue discussion voting phyton runtime requirement planing migrate bash script provided hadoop dynamically created ie launcher script phyton else current build besides saveversion sh see candidate migrated phyton planning define phyton module used developer install manually cheer"
    },
    "28868":{
        "ID":14901,
        "MESSAGE_ID":"CA+z3+9GOeNdPPT-ZH+u74QJ5EWqLGyZjohLm_V_BHVYngJgeNQ@mail.gmail.com",
        "PARENT_ID":14842.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Matt Foley <mfoley@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"hi alejandro please see line"
    },
    "28881":{
        "ID":14888,
        "MESSAGE_ID":"50B648E4.5040708@nyu.edu",
        "PARENT_ID":14817.0,
        "SUBJECT":"Re: map-reduce-related school project help",
        "SENT_FROM":"rshepherd <rjs471@nyu.edu>",
        "TAGS":"existence",
        "BODY":"hi folk one approach considering implementing simple fuse based file system keep file memory running mapreduce psuedo distributed mode configure mapreduce use memory file system write location intermediate key value pair perhaps technique would supported already feature available regular user anyone point right direction thanks randy"
    },
    "28908":{
        "ID":14861,
        "MESSAGE_ID":"50B4F9CF.9010509@nyu.edu",
        "PARENT_ID":14817.0,
        "SUBJECT":"Re: map-reduce-related school project help",
        "SENT_FROM":"rshepherd <rjs471@nyu.edu>",
        "TAGS":"not-ak",
        "BODY":"hi mahesh thanks much reply fortunately would need complete would simply proof concept opposed full fledged feature hadoop word need demonstrate improvement possible special case next evaluating code base determine improvement possible given time frame thanks help randy"
    },
    "28910":{
        "ID":14859,
        "MESSAGE_ID":"CAHjqPuKNMLHYA-iR3Zar_jU4bpw1VwQQb-zgZLvpZkuUOURh3g@mail.gmail.com",
        "PARENT_ID":14853.0,
        "SUBJECT":"Re: Author a Apache Cassandra for Developers for Packt.",
        "SENT_FROM":"Jason Brown <jasedbrown@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi sumeet would interested talking opportunity quick chat sometime thanks jason brown netflix"
    },
    "28916":{
        "ID":14853,
        "MESSAGE_ID":"50B49DBA.1020103@packtpub.com",
        "PARENT_ID":null,
        "SUBJECT":"Author a Apache Cassandra for Developers for Packt.",
        "SENT_FROM":"Sumeet Sawant <sumeets@packtpub.com>",
        "TAGS":"not-ak",
        "BODY":"hi sumeet sawant author relation executive packt publishing specialize publishing related book book article written expert field new micro book page apache cassandra developer aimed developer data architect interested developing application use apache cassandra knowledge database technology comfortable programming language java python packt offer industry leading royalty pay advance paid time publishing could please let know one would find interesting author book thanks considering proposal let know view regard sumeet sawant author relationship executive packt publishing www packtpub com"
    },
    "28926":{
        "ID":14843,
        "MESSAGE_ID":"50B3EA84.40208@filez.com",
        "PARENT_ID":14842.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"technology",
        "BODY":"part original proposal discussed much language war attractive option want vote like using external language maven plugin build using external language startup script jvm script language jython use websphere choose python external language"
    },
    "28927":{
        "ID":14842,
        "MESSAGE_ID":"CAJs-t7OrJ2_+ZhGa1ncMfHaySthy=hZFxVwjn5kf5SPQQkquDw@mail.gmail.com",
        "PARENT_ID":14839.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"existence",
        "BODY":"matt scope vote seems different discussed proposal thread proposal thread indicated hadoop ant based main reason remove saveversion sh discussed proposal seems vote dragging much stuff originally discussed think suspend vote recap motivation restart vote thing laid moment vote still seems overkill introduce new runtime requirement building replace script think right way simplify build afaik requirement moment come would form would argue leave outside hadoop thanks"
    },
    "28930":{
        "ID":14839,
        "MESSAGE_ID":"CANJr2=E5gXvVSyHnSBHyf8PPHjDdYvfBKsr0uoQUT-UigZmsiQ@mail.gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Giridharan Kesavan <gkesavan@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"giri"
    },
    "28935":{
        "ID":14834,
        "MESSAGE_ID":"CADdVdVGbP1WW1RMZJSh4LxXSfKhideN2ksWr2HoHM=q83+tBog@mail.gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Suresh Srinivas <suresh@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"regard suresh"
    },
    "28937":{
        "ID":14832,
        "MESSAGE_ID":"20121126183033.GG3525@tpx",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Konstantin Boudnik <cos@apache.org>",
        "TAGS":"not-ak",
        "BODY":"thanks"
    },
    "28940":{
        "ID":14829,
        "MESSAGE_ID":"CABCYYb_FyeDHrik90quAu_WUkOC_YoK-Nt9zaN1AX01LUJgwRg@mail.gmail.com",
        "PARENT_ID":14826.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"declaring minimum supported version sound like great idea worked centos distribution dependency python always awkward get later version machine thank chris"
    },
    "28942":{
        "ID":14827,
        "MESSAGE_ID":"CABFz-ziTSHbbpyqrQMDpjX=2_JmbkDrDXfibYB7n0N5-V_A5sQ@mail.gmail.com",
        "PARENT_ID":14826.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Luke Lu <llu@vicaya.com>",
        "TAGS":"property, technology",
        "BODY":"want introduce platform independent scripting language choose python bad track record compatibility version platform use groovy control version groovy jar included distribution luke"
    },
    "28943":{
        "ID":14826,
        "MESSAGE_ID":"CA+qbEUN2TMy2X-g5Y9PiSDP5u3duuWwrxy-DHJ2G4sk5jegsVA@mail.gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Colin McCabe <cmccabe@alumni.cmu.edu>",
        "TAGS":"technology",
        "BODY":"nonbinding also let please clearly define version python support chooes go route something like would reasonable process launching apis particular changed lot early release best colin"
    },
    "28944":{
        "ID":14825,
        "MESSAGE_ID":"759FF672-607C-46A3-BD51-A1EE802F453A@yahoo-inc.com",
        "PARENT_ID":14823.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Adam Berry <amberry@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"non binding also feel like maybe discussion kept open little longer thanksgiving holiday last week meant people may missed cheer adam"
    },
    "28950":{
        "ID":14819,
        "MESSAGE_ID":"CA+VfNpf363M_qnNcc2i_yVvkNnw+ENOvdUE5QddqUTcuZT9N3g@mail.gmail.com",
        "PARENT_ID":14817.0,
        "SUBJECT":"Re: map-reduce-related school project help",
        "SENT_FROM":"Sampan River <sampanriver@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi randy search paper break mapreduce stage barrier first paper author proposed pipeline map reduce model need shuffle phase think similar idea jiang mahesh balija"
    },
    "28952":{
        "ID":14817,
        "MESSAGE_ID":"CANiuQZcUVVBTCSZeTqUxkTyXFtAzZBioXuTF4qCXMg8EFwg0Mw@mail.gmail.com",
        "PARENT_ID":14806.0,
        "SUBJECT":"Re: map-reduce-related school project help",
        "SENT_FROM":"Mahesh Balija <balijamahesh.mca@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi randy alex problem seems interesting understood want provide way hadoop handle small job well please see inline answer"
    },
    "28963":{
        "ID":14806,
        "MESSAGE_ID":"50B2C7F8.5020800@nyu.edu",
        "PARENT_ID":null,
        "SUBJECT":"map-reduce-related school project help",
        "SENT_FROM":"rshepherd <rjs471@nyu.edu>",
        "TAGS":"existence, property",
        "BODY":"hi everybody student nyu evaluating idea final project distributed system class idea roughly follows overhead running map reduce small job high small job would defined something fitting memory single machine hadoop map reduce modified efficient job seems one way begin achieve goal would modify way intermediate key value pair handled handoff map reduce rather writing hdfs either pas directly reducer keep memory data structure using single shared hashmap would alleviate need sort mapper output instead perhaps distribute slot reducer reducer multiple thread hope simplification distributed map reduce relatively straightforward alter code memory approach smaller job would perform well special case hoping someone list could help following question sound like good idea might achievable week intuition achieve goal seem reasonable advice navigate code base pointer package class interest would highly appreciated feedback thanks advance anyone willing able help randy"
    },
    "28972":{
        "ID":14797,
        "MESSAGE_ID":"CABCYYb8fUz5uYaaVgsgxJwRC2VpkFyiKULhSkRkD6zBvBHzXpQ@mail.gmail.com",
        "PARENT_ID":14793.0,
        "SUBJECT":"Re: [VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Chris Nauroth <cnauroth@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"non binding"
    },
    "28973":{
        "ID":14796,
        "MESSAGE_ID":"20121124220323.GV3525@tpx",
        "PARENT_ID":14795.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Konstantin Boudnik <cos@apache.org>",
        "TAGS":"not-ak",
        "BODY":"decide go maven point complicate picture jython time keep offensive yton co"
    },
    "28974":{
        "ID":14795,
        "MESSAGE_ID":"50B13B74.2090404@filez.com",
        "PARENT_ID":14794.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"technology",
        "BODY":"discussed advantage stand alone python jython maven pom url language need installed advantage window"
    },
    "28975":{
        "ID":14794,
        "MESSAGE_ID":"CA+z3+9ECOBvUOJsdt4mBvsEDR49gYCBU_WeJsVrT2R5xTW8p2A@mail.gmail.com",
        "PARENT_ID":14785.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Matt Foley <mfoley@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"please see new vote thread"
    },
    "28976":{
        "ID":14793,
        "MESSAGE_ID":"CA+z3+9Go9cra+nEncx8JApo31yaNAYzUH8j0+v2wowa0k+yRzQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Matt Foley <mattf@apache.org>",
        "TAGS":"technology",
        "BODY":"discussion please see previous thread proposal introduce python build time run time dependency hadoop throughout hadoop stack vote consists three separate item contributor shall allowed use python platform independent scripting language build time task add python build time dependency please vote contributor shall encouraged use maven task combination either plug in groovy script cross platform build time task even ant hadoop please vote contributor shall allowed use python platform independent scripting language run time task add python run time dependency please vote note voting essentially requires contributor use maven plug in groovy mean cross platform build time task simply continue using platform dependent script done today vote close pm pst saturday december personally vote think preferable still many unknown worked want delay moving cross platform script build time task best regard matt"
    },
    "28984":{
        "ID":14785,
        "MESSAGE_ID":"50B00988.1040906@filez.com",
        "PARENT_ID":14751.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"not-ak",
        "BODY":"discussion seems ended let start vote"
    },
    "29002":{
        "ID":14767,
        "MESSAGE_ID":"50AD8674.6020602@filez.com",
        "PARENT_ID":14765.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"technology",
        "BODY":"jruby good run rail application standard java infrastructure way easier maintain obscure ruby application server"
    },
    "29006":{
        "ID":14763,
        "MESSAGE_ID":"50AD6AB1.6030306@filez.com",
        "PARENT_ID":14761.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"technology",
        "BODY":"ignore python time completely different language incompatible syntax semantics support several currently important platform maybe year sane people consider moving best stick compatible subset python mercurial project pretty good experience scheme url currently support required library dropped support year ago due specific shortcoming version know python compatibility worked around used python year wrote loc started irritate every new version incompatibility make maintaining testing way harder compatibility missing library function sometimes even expression evaluated different value new version similar php php migration today version python installed software requirement simple script probably work stick common subset scripting via maven plugin advantage user need install anything couple language available scala groovy jelly jruby maybe jython"
    },
    "29013":{
        "ID":14756,
        "MESSAGE_ID":"50AD3DBE.4060606@filez.com",
        "PARENT_ID":14752.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"technology",
        "BODY":"maven plugins difficult maintain better use inline script something like url"
    },
    "29014":{
        "ID":14755,
        "MESSAGE_ID":"CAJs-t7OVpY10LXuo+=hTMFArFBRvJzZiTSRtr+nw_s+GtXMmnw@mail.gmail.com",
        "PARENT_ID":14753.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"got thanks way branch ant task part build thanks"
    },
    "29016":{
        "ID":14753,
        "MESSAGE_ID":"CA+z3+9G0MphH=NQVYRHy_2PmOiw45ua5FaD94tqYus93aVekng@mail.gmail.com",
        "PARENT_ID":14752.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Matt Foley <mfoley@hortonworks.com>",
        "TAGS":"technology",
        "BODY":"hi alejandro build time issue branch beyond may make sense although concerned obscuring functionality way maven expert able understand particular case saveversion sh would happy see done automatically build tool however build time issue non mavenized branch run time issue world need cross platform scripting remains thanks matt"
    },
    "29017":{
        "ID":14752,
        "MESSAGE_ID":"CAJs-t7PE2PhBCkAO1=JmxJCLsyAF3r6q+zJ3Uu4UNfv1Gaq4gw@mail.gmail.com",
        "PARENT_ID":14751.0,
        "SUBJECT":"Re: [PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"technology",
        "BODY":"hey matt already require java mvn protoc cmake forrest forrest hopefully way move doc apt maven plugin colin already something simplify cmake call build using maven plugin url could protoc thus simplifying pom saveversion sh seems like another prime candidate maven plugin case would require external tool make sense thanks"
    },
    "29018":{
        "ID":14751,
        "MESSAGE_ID":"CA+z3+9EGLAyJb-+mpBSrGOczVGVEU6rtg=D=zJ6sFiMMuwFObw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[PROPOSAL] introduce Python as build-time and run-time dependency for Hadoop and throughout Hadoop stack",
        "SENT_FROM":"Matt Foley <mattf@apache.org>",
        "TAGS":"property, technology",
        "BODY":"discussion started hadoop proposed replace build time utility saveversion sh python script would require python build time dependency background involved branch win port hadoop window without use cygwin faced issue frequent use script throughout system build time eg utility saveversion sh run time config file like hadoop env sh start stop script bin similar usage exist throughout hadoop stack project vast majority script anything platform specific expressed posix conforming way therefore seems make sense start using cross platform scripting language python place purpose rare occasion platform specific functionality really needed python also support quite lot platform specific functionality linux window inadequate one could still conditionally invoke platform specific module written linux nix powershell bat window primary motive moving cross platform scripting language maintainability alternative would maintain two complete suite script one linux one window perhaps others future want avoid need update dual module two different language functionality change especially given many linux developer familiar powershell bat many window developer familiar bash regarding choice python already instance python usage hadoop utility currently broken relnotes py massive usage python example contrib directory python also used bigtop build time python language available free essentially platform apache compatible license supported eclipse similar ides importantly widely accepted reasonably good oo scripting language easily learned anyone already know perl common scripting language tiobe index programming language popularity seek measure relative number software engineer know use language python far exceeds perl ruby well known scripting language php visual basic neither seems prime candidate use build time usage think immediately approve python build time dependency allow people motivated open jiras migrating existing build time script python run time likely lot discussion lot folk including real happy use active script configuration various others including believe bigtop folk issue way start stop script work nevertheless script exist today widely used present impediment porting window without cygwin nothing run time use script changed significantly past three year think hold window port huge discussion issue veer dangerously religious aesthetic domain would fun discussion want decision dependent propose go ahead also approve python run time dependency allow inclusion python script place current based functionality unpleasant alternative spawn bunch powershell script parallel current script negative impact maintainability window port must allowed proceed let discussion put issue separately vote unless miraculously achieve consensus without vote also encourage member hadoop related project carry discussion forum would cool agree whole stack solution scripting problem best regard matt"
    },
    "29020":{
        "ID":14749,
        "MESSAGE_ID":"50ACED3E.80106@filez.com",
        "PARENT_ID":null,
        "SUBJECT":"commit access to hadoop",
        "SENT_FROM":"Radim Kolar <hsn@filez.com>",
        "TAGS":"not-ak",
        "BODY":"take gain commit access hadoop"
    },
    "29364":{
        "ID":14405,
        "MESSAGE_ID":"59E6DFA2-2F24-4B30-84FB-5DD2CCE585E5@hortonworks.com",
        "PARENT_ID":14355.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-3077 (QuorumJournalManager) branch to trunk",
        "SENT_FROM":"sanjay Radia <sanjay@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"suresh still reviewing design patch code along code pulled fairly substrantial design also fairly complex involved would request postpone merge another week give folk time review fully sanjay"
    },
    "29391":{
        "ID":14378,
        "MESSAGE_ID":"83E46E83-5A5E-4FB4-9B18-4DE30E03E14A@cloudera.com",
        "PARENT_ID":14355.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-3077 (QuorumJournalManager) branch to trunk",
        "SENT_FROM":"\"Aaron T. Myers\" <atm@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"merge reviewed much code individual patch tested whole system single multi node configuration also tested system security enabled confirmed work expected done testing without ha enabled aaron"
    },
    "29410":{
        "ID":14359,
        "MESSAGE_ID":"CAPn_vTvYh6TuCV1zvRqKQ-CrwM1WJ+mGg=osqhVW-eOi3vZwdw@mail.gmail.com",
        "PARENT_ID":14355.0,
        "SUBJECT":"Re: [VOTE] Merge HDFS-3077 (QuorumJournalManager) branch to trunk",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"awesome work todd"
    },
    "29414":{
        "ID":14355,
        "MESSAGE_ID":"CADY20s544EPrgFoY8aF15nDHbupSW_rvxt8SWVdRA6KmYogxRg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Merge HDFS-3077 (QuorumJournalManager) branch to trunk",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"dear fellow hdfs developer per email thread last week head merge qjm branch soon url would like propose merging hdfs branch trunk branch active since mid july stabilized significantly last two month passed full test suite findbugs release audit think ready merge point branch fully developed using standard review commit rtc policy design described detail document attached hdfs code contributed aaron eli would remiss also acknowledge contribution design discussion suresh sanjay henry robinson patrick hunt ivan kelly andrew purtell flavio junqueira ben reed nicholas bikas brandon others additionally special thanks andrew purtell stephen chu help cluster testing initial vote merge trunk following pattern automatic failover expect merge branch within week well merge branch clean andrew purtell testing branch derived codebases addition trunk please cast vote eod friday given branch small change last week head last week trust enough time committers cast vote per law need minimum three binding vote committers start voting thanks todd todd lipcon software engineer cloudera"
    },
    "29454":{
        "ID":14315,
        "MESSAGE_ID":"CA+RK=_AxdDJ9_RT8R8Xo==ksMFHOGwFWn6JJPe9y+Q68XmofSg@mail.gmail.com",
        "PARENT_ID":14300.0,
        "SUBJECT":"Re: Heads up: merge for QJM branch soon",
        "SENT_FROM":"Andrew Purtell <apurtell@apache.org>",
        "TAGS":"not-ak",
        "BODY":"backporting todd hdfs branch change top branch testing result small cluster node although certainly test coverage todd describes internal testing add datapoint qjm black box testing function advertised resiliant single jn single nn fault scenario would add caveat support running security enabled added recently experience limited though successful"
    },
    "29456":{
        "ID":14313,
        "MESSAGE_ID":"CADdVdVEkP8OpdiaV-q=GBNTO=2gD2geS5vBh2wOh8ySzTyCgQw@mail.gmail.com",
        "PARENT_ID":14300.0,
        "SUBJECT":"Re: Heads up: merge for QJM branch soon",
        "SENT_FROM":"Suresh Srinivas <suresh@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"need week go design review code change post comment jira directly meanwhile update made design document would help regard suresh"
    },
    "29464":{
        "ID":14305,
        "MESSAGE_ID":"CADY20s7_SFoivM9bo_KBA2oj252u-GgicEn+ZGY33vTfyam5ng@mail.gmail.com",
        "PARENT_ID":14304.0,
        "SUBJECT":"Re: Heads up: merge for QJM branch soon",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hi konstantin would open know plan ship recommended option cdh community feel better suited compile separate module either inside outside hadoop open discussing absolutely correct meant stand alone hdfs package todd"
    },
    "29465":{
        "ID":14304,
        "MESSAGE_ID":"CAKtuutEtq3h-S8f+_TwnSE2sPSH4W5rgzAOffFcn8jSQpycGiA@mail.gmail.com",
        "PARENT_ID":14300.0,
        "SUBJECT":"Re: Heads up: merge for QJM branch soon",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi todd wondering considered make quorumjournal separate project subproject given line code code new well separated separate package implement reliable journaling alternative approach say bookeeper taking account seems work form project alternative merging hdfs umbrella thanks konstantin"
    },
    "29469":{
        "ID":14300,
        "MESSAGE_ID":"CADY20s44TggajeANar1vZMoyDWALGObW7EySZ2Cm5bGQe35mfQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Heads up: merge for QJM branch soon",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"existence",
        "BODY":"hi work progressing steadily last several month hdfs quorumjournalmanager branch branch feature complete believe ready merge soon brief overview salient point qjm configured act shared journal directory much way bkjm support operation jms trunk fulfills stated design goal design document documentation added ha guide explain set qjm shared edits mechanism metric added namenode client side journalnode server side metric sufficient detect potential issue term availability operation latency security fully implemented normal mechanism branch swept findbugs javac warning license header etc good go standard also fully date trunk design doc hdfs updated reflect final state implementation critical part nn metadata storage imagine people interested hear test status well unit functional test coverage pretty high rough measure line test code via sloccount ie counting comment etc line non test code test coverage new package follows coverage client code coverage server code uncovered area mostly assertion sanity check never fail security code tested unit test term state space coverage one randomized stress test injects fault randomly test caught almost every bug design implementation alone cover code since randomized running repeatedly cover area state space written small mr job run parallel hadoop cluster run many slot year actually test case uncovered unrelated jetty bug hitting couple year term actual cluster testing done cluster testing small secure ha cluster using qjm shared edits cover security code covered automated test running qjm based ha setup node test cluster several week new issue quite time cluster run mixed qa workload eg hive benchmark teragen terasort gridmix etc tested failover failback small large cluster term performance collected log mentioned node test cluster looked synctimes reported periodic fseditlog statistic printout active nn cluster configured write two local disk write shared edits quorumjournalmanager qjm configured three journalnodes rack active nn one machine active nn average sync time qjm local disk local disk maximum time seen log qjm local local show quorum behavior achieves goal smoothing latency since proceed even one underlying disk temporarily slow also ran manual test running loop like true sleep kill stop pid jn sleep kill cont pid jn done allows jn run every applied client load nn verified nn operation latency unaffected even though one jns slowly falling behind term risk assessment merge feature entirely optional change existing code branch fairly minimal improvement support pluggable journalmanagers merging change cdh nightly tree performed usual daily qa integration build feel confident introduce new risk even feature enabled shared edits user likely continue log edits locally mounted filejournalmanagers addition shared qjm bug qjm system metadata risk overall taken conservative approach favored durability correctness availability example many extra sanity check assertion check assumption fail abort rather continue risk data loss summary think branch nearly ready merged trunk continue perform stress test point aware deficiency would considered blocker anyone question code design test please feel free chime hdfs relevant subtasks thanks todd todd lipcon software engineer cloudera"
    },
    "29490":{
        "ID":14279,
        "MESSAGE_ID":"86C90FA0A0B44C1BBA3CB831ED0257C1@GloryPC",
        "PARENT_ID":null,
        "SUBJECT":"Make Hadoop run more securely in Public Cloud environment",
        "SENT_FROM":"\"Xianqing Yu\" <yuxian199@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hi hadoop community ph student north carolina state university modifying hadoop code including part hadoop jobtracker tasktracker namenode datanode achieve better security major goal make hadoop running secure cloud environment especially public cloud environment order achieve redesign currently security mechanism achieve following propriety bring byte level access control hadoop hdfs based hdfs access control based user block granularity hdfs delegation token check file accessed certain user block token proof block block accessed make hadoop byte granularity access control access party user task process access byte least needed assume public cloud environment namenode secondary namenode jobtracker trusted large number datanode tasktracker may compromised due may running le secure environment design secure mechanism make damage hacker minimized design block access token solve wildly shared key problem hdfs original block access token design hdfs namenode datanode share one master key generate block access token one datanode compromised hacker hacker get key generate block access token want design hdfs delegation token fine grain access control tasktracker map reduce task process hdfs hadoop tasktrackers use kerberos credential access file mapreduce hdfs privilege jobtracker read write token copy job file etc however one compromised every critical thing mapreduce directory job file delegation token exposed attacker solve problem making jobtracker decide tasktracker access file mapreduce directory hdfs task process get hdfs delegation token access everything belong job user hdfs design access byte needed hdfs improvement security tasktracker know information like blockid block token encrypted way hdfs set secure channel send data option feature hadoop run much securely uncertain environment public cloud already start test prototype want know whether community interesting work value work contribute production hadoop created jira discussion url thanks xianqing"
    },
    "29666":{
        "ID":14103,
        "MESSAGE_ID":"CAL35Oi1PpJvWYJTa5tBrvhRgjE-hSZ7piQOW-skHE8AH8TifWg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Upgrade path for virtual nodes",
        "SENT_FROM":"Eric Evans <eevans@acunu.com>",
        "TAGS":"existence, property",
        "BODY":"hi first ground rule development design discussion general question virtual node pertain discussion please ask another thread user get answered background currently upgrade result change far virtual node concerned upgraded cluster continue operate single token per node originally configured however wish upgrade cluster virtual node setting num token parameter cassandra yaml something greater one recommended restarting node result existing range node split num token part work fine except new range still contiguous ideally need randomly distributed optimal effect enter cassandra creation called shuffle utility exactly redistribute token random location ready start whatever shape take since seems requirement could use shoring thought would raise discussion shuffling range create random distribution contiguous range potential move lot data around basically optimal way would mean never moving range since lot data since presumably expecting normal operation continue meantime would seem optimal shuffle would need maintain state example one machine could serve shuffle coordinator precalculating persisting move starting new transfer existing one finish tracking progress etc talking brandon williams earlier suggested simpler approach treating shuffle per node operation possibly limited subset range would tracking state shuffle failed would either rerun entirety example decided made enough progress satisfy requirement distribution two former benefit optimal around fairly involved bit code something assume used cluster safe assumption latter much simpler implement place onus user get right result either lot needle retransfer data poor redistribution shuffle complete subset range used question pose discussion requirement shuffle operation optimal need fool proof url url eric evans acunu url acunu"
    },
    "29707":{
        "ID":14062,
        "MESSAGE_ID":"CABvJu0ZNPYk4htjnMceS1bemLYZDeGavzju1GkNvms4nj5cNjg@mail.gmail.com",
        "PARENT_ID":14061.0,
        "SUBJECT":"Re: Error while running Cassandra CLI",
        "SENT_FROM":"Gaurav Bhati <gaurav@bloomreach.com>",
        "TAGS":"not-ak",
        "BODY":"saurabh possibility"
    },
    "29708":{
        "ID":14061,
        "MESSAGE_ID":"CABvJu0ZZkY_yJh6qvAoAFvjvHVPWU6Er68OVQtXfXwK0mJXsdA@mail.gmail.com",
        "PARENT_ID":14060.0,
        "SUBJECT":"Re: Error while running Cassandra CLI",
        "SENT_FROM":"Gaurav Bhati <gaurav@bloomreach.com>",
        "TAGS":"not-ak",
        "BODY":"possibility cassandra intermediate directory set var log try running using sudo bin cassandra"
    },
    "29709":{
        "ID":14060,
        "MESSAGE_ID":"5029BB44.50606@mebigfatguy.com",
        "PARENT_ID":14054.0,
        "SUBJECT":"Re: Error while running Cassandra CLI",
        "SENT_FROM":"Dave Brosius <dbrosius@mebigfatguy.com>",
        "TAGS":"not-ak",
        "BODY":"would try instruction url"
    },
    "29715":{
        "ID":14054,
        "MESSAGE_ID":"CALdd-zgprXP6n-weACRsL2Q+XsB4ac2bkRkWeD-jWkvS-TsXWw@mail.gmail.com",
        "PARENT_ID":14021.0,
        "SUBJECT":"Re: Error while running Cassandra CLI",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sound like classpath problem perhaps need add resource directory eclipse project"
    },
    "29748":{
        "ID":14021,
        "MESSAGE_ID":"COL002-W756D4B877D1C94E2D5F895CCCD0@phx.gbl",
        "PARENT_ID":null,
        "SUBJECT":"Error while running Cassandra CLI",
        "SENT_FROM":"Saurabh Lodha <saurabhlodha@outlook.com>",
        "TAGS":"not-ak",
        "BODY":"hi interested contributing cassandra project first step setup development environment based instruction url run debug configuration using following class main class classpath following output console starting cassandra info jvm vendor version java hotspot tm bit server vm info heap size info classpath user saurabhlodha document cassandra trunk build class main user saurabhlodha document cassandra trunk build class thrift user saurabhlodha document cassandra trunk build test class user saurabhlodha document cassandra trunk test conf user saurabhlodha document cassandra trunk lib antlr jar user saurabhlodha document cassandra trunk lib avro fix jar user saurabhlodha document cassandra trunk lib avro source fix jar user saurabhlodha document cassandra trunk lib common cli jar user saurabhlodha document cassandra trunk lib common codec jar user saurabhlodha document cassandra trunk lib common lang jar user saurabhlodha document cassandra trunk lib compress lzf jar user saurabhlodha document cassandra trunk lib concurrentlinkedhashmap lru jar user saurabhlodha document cassandra trunk lib guava jar user saurabhlodha document cassandra trunk lib high scale lib jar user saurabhlodha document cassandra trunk lib jackson core asl jar user saurabhlodha document cassandra trunk lib jackson mapper asl jar user saurabhlodha document cassandra trunk lib jamm jar user saurabhlodha document cassandra trunk lib jline jar user saurabhlodha document cassandra trunk lib json simple jar user saurabhlodha document cassandra trunk lib libthrift jar user saurabhlodha document cassandra trunk lib logj jar user saurabhlodha document cassandra trunk lib metric core jar user saurabhlodha document cassandra trunk lib netty final jar user saurabhlodha document cassandra trunk lib servlet api jar user saurabhlodha document cassandra trunk lib slfj api jar user saurabhlodha document cassandra trunk lib slfj logj jar user saurabhlodha document cassandra trunk lib snakeyaml jar user saurabhlodha document cassandra trunk lib snappy java jar user saurabhlodha document cassandra trunk lib snaptree jar user saurabhlodha document cassandra trunk build lib jar ant jar user saurabhlodha document cassandra trunk build lib jar apache rat jar user saurabhlodha document cassandra trunk build lib jar apache rat core jar user saurabhlodha document cassandra trunk build lib jar apache rat task jar user saurabhlodha document cassandra trunk build lib jar asm jar user saurabhlodha document cassandra trunk build lib jar avro jar user saurabhlodha document cassandra trunk build lib jar common beanutils jar user saurabhlodha document cassandra trunk build lib jar common beanutils core jar user saurabhlodha document cassandra trunk build lib jar common cli jar user saurabhlodha document cassandra trunk build lib jar common codec jar user saurabhlodha document cassandra trunk build lib jar common collection jar user saurabhlodha document cassandra trunk build lib jar common configuration jar user saurabhlodha document cassandra trunk build lib jar common digester jar user saurabhlodha document cassandra trunk build lib jar common el jar user saurabhlodha document cassandra trunk build lib jar common httpclient jar user saurabhlodha document cassandra trunk build lib jar common lang jar user saurabhlodha document cassandra trunk build lib jar common logging jar user saurabhlodha document cassandra trunk build lib jar common math jar user saurabhlodha document cassandra trunk build lib jar common net jar user saurabhlodha document cassandra trunk build lib jar core jar user saurabhlodha document cassandra trunk build lib jar hadoop core jar user saurabhlodha document cassandra trunk build lib jar hsqldb jar user saurabhlodha document cassandra trunk build lib jar jackson core asl jar user saurabhlodha document cassandra trunk build lib jar jackson mapper asl jar user saurabhlodha document cassandra trunk build lib jar jasper compiler jar user saurabhlodha document cassandra trunk build lib jar jasper runtime jar user saurabhlodha document cassandra trunk build lib jar jetst jar user saurabhlodha document cassandra trunk build lib jar jetty jar user saurabhlodha document cassandra trunk build lib jar jetty util jar user saurabhlodha document cassandra trunk build lib jar jna jar user saurabhlodha document cassandra trunk build lib jar jopt simple jar user saurabhlodha document cassandra trunk build lib jar jsp jar user saurabhlodha document cassandra trunk build lib jar jsp api jar user saurabhlodha document cassandra trunk build lib jar junit jar user saurabhlodha document cassandra trunk build lib jar kfs jar user saurabhlodha document cassandra trunk build lib jar oro jar user saurabhlodha document cassandra trunk build lib jar paranamer jar user saurabhlodha document cassandra trunk build lib jar paranamer ant jar user saurabhlodha document cassandra trunk build lib jar paranamer generator jar user saurabhlodha document cassandra trunk build lib jar pig jar user saurabhlodha document cassandra trunk build lib jar qdox jar user saurabhlodha document cassandra trunk build lib jar servlet api jar user saurabhlodha document cassandra trunk build lib jar servlet api jar user saurabhlodha document cassandra trunk build lib jar slfj api jar user saurabhlodha document cassandra trunk build lib jar xmlenc jar info jna link failure one native method unavailable info loading setting file user saurabhlodha document cassandra trunk conf cassandra yaml info diskaccessmode auto determined mmap indexaccessmode mmap info global memtable threshold enabled mb info initializing key cache capacity mb warn memorymeter uninitialized jamm specified java agent keycache size jvm heap calculated accurately usually mean cassandra env sh disabled jamm using buggy jre upgrade sun jre instead info scheduling key cache save second going save key info initializing row cache capacity mb provider classpath info scheduling row cache save second going save key info opening user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia byte info opening user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia byte info opening user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia byte info could detect schema definition local storage info found table data data directory consider using cli define schema info completed pre loading key key cache info replaying user saurabhlodha document cassandra trunk var lib cassandra commitlog commitlog log user saurabhlodha document cassandra trunk var lib cassandra commitlog commitlog log info replaying user saurabhlodha document cassandra trunk var lib cassandra commitlog commitlog log info finished reading user saurabhlodha document cassandra trunk var lib cassandra commitlog commitlog log info replaying user saurabhlodha document cassandra trunk var lib cassandra commitlog commitlog log info finished reading user saurabhlodha document cassandra trunk var lib cassandra commitlog commitlog log info log replay complete replayed mutation info cassandra version unknown info thrift api version info cql supported version beta default info loading persisted ring state info starting server gossip info enqueuing flush memtable local serialized live byte ops info writing memtable local serialized live byte ops info completed flushing user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia data db byte commitlog position replayposition segmentid position info compacting sstablereader path user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia data db sstablereader path user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia data db sstablereader path user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia data db sstablereader path user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia data db info starting messaging service port info using saved token info enqueuing flush memtable local serialized live byte ops info writing memtable local serialized live byte ops info completed flushing user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia data db byte commitlog position replayposition segmentid position info enqueuing flush memtable local serialized live byte ops info writing memtable local serialized live byte ops info completed flushing user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia data db byte commitlog position replayposition segmentid position info node localhost state jump normal info bootstrap replace move completed serving read info compacted user saurabhlodha document cassandra trunk var lib cassandra data system local system local ia data db original byte key mb time info binding thrift service localhost info using tfastframedtransport max frame size byte info using synchronous threadpool thrift server localhost info starting native transport requested use jmx storageservice startnativetransport start info listening thrift client however seeing error trying run cassandra cli cassandra cli connected test cluster welcome cassandra cli version unknown exception thread main java lang assertionerror classpath cliclient java classpath cliclient java classpath cliclient java classpath climain java idea wrong thanks saurabh"
    },
    "30087":{
        "ID":13682,
        "MESSAGE_ID":"CAAhm6bKU60E4C7g_pktUd_S-kEje=G-TR5_cZpjm8caNTAWj9Q@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Suggestion of Research topic in Hadoop for PhD research",
        "SENT_FROM":"Suresh S <sureshhot@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"dear sir madam joined research scholar phd recently interested research cloud computing last month attend one workshop hadoop please give topic problem work thanks advance regard suresh research scholar department computer application national institute technology tiruchirappalli"
    },
    "30209":{
        "ID":13560,
        "MESSAGE_ID":"FFF8B7B6-75A3-4659-90C0-5E54E5BE1FBD@emc.com",
        "PARENT_ID":13555.0,
        "SUBJECT":"Re: Make Hadoop NetworkTopology and data locality more pluggable for other deploying topology like: virtualization.",
        "SENT_FROM":"Milind.Bhandarkar@emc.com",
        "TAGS":"not-ak",
        "BODY":"great junping hoping see trunk hadoop hadoop soon milind"
    },
    "30214":{
        "ID":13555,
        "MESSAGE_ID":"737165622.974621.1338824915160.JavaMail.root@vmware.com",
        "PARENT_ID":null,
        "SUBJECT":"Make Hadoop NetworkTopology and data locality more pluggable for other deploying topology like: virtualization.",
        "SENT_FROM":"Jun Ping Du <jdu@vmware.com>",
        "TAGS":"existence, property",
        "BODY":"hello folk filed umbrella jira today address current networktopology issue binding strictly three tier network motivation make hadoop flexible deploying topology especially cloud virtualization case configurable data locality related policy like replica placement task scheduling choosing block dfsclient reading balancing submit draft proposal umbrella well implementation code code base large code separated sub jira issue seems convenient reviewing however split code based functionality dependency patch way sure best welcome provide comment suggestion doc code look forward work enhance hadoop new situation towards perfect hope good start cheer junping original message junping du jira common issue hadoop apache org sent monday june pm subject jira created hadoop umbrella enhancement support different failure locality topology junping du created hadoop summary umbrella enhancement support different failure locality topology key hadoop url url project hadoop common issue type bug component ha io affect version alpha reporter junping du assignee junping du priority critical current hadoop network topology described previous issue like hadoop work well classic three tier network come however take account failure model change infrastructure affect network bandwidth efficiency like virtualization virtualized platform following gene ignored hadoop topology scheduling task placing replica balancing fetching block reading vms physical host affected hardware failure order match reliability physical deployment replication data across two virtual machine host avoided network vms physical host higher throughput lower latency consume physical switch bandwidth thus propose make hadoop network topology extend able introduce new level hierarchical topology node group level map well onto infrastructure based virtualized environment message automatically generated jira think sent incorrectly please contact jira administrator url information jira see url"
    },
    "30401":{
        "ID":13368,
        "MESSAGE_ID":"2DADF524-2D5B-4EA9-BDEC-5FBF6B86BA67@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"Thoughts on managing big changes to Hadoop project",
        "SENT_FROM":"Eric Baldeschwieler <eric14@hortonworks.com>",
        "TAGS":"process",
        "BODY":"hi folk owen suggested move discussion hadoop list thought would repost comment feedback community process change management mind seeing lot major change going thing like hdfs side user getting something wrong huge open source community manage sort thing rigorous process attempt strip previous proposal something would easy implement chose going hep hadoop enhancement process discussion back focused set core principle would like consider simple fix enhancement easy major platform like hadoop think community process make sure big change good change big change go hadoop want know complete meaning understanding use case need change addressing agreement change make hadoop better work done full design real test executed test plan doc meet api compatibility goal big change would like see focus defining process make sure point discussed everyone agrees work complete feel like bylaw change discussed hadoop focused procedure outcome help proposal hadoop enhancement lightweight process proposal seems complex folk request help filed doc created subversion tree help companion jira often preexisting jira issue raised development take place branch via patch whatever committed help document complete help template appropriate question help document outline need change use case external spec change eg man page java doc examination api compatibility issue vote common dev occurs blessing help doc help designdoc help testplan complete vote common dev blesses code design doc test plan work complete beyond vote common dev guarantee wide acceptance change work happen jira people think thanks"
    },
    "30412":{
        "ID":13357,
        "MESSAGE_ID":"CAF05tLNVC68Wzb_a8iqJOkuLyHPv=cOoTz2D=d69zJr53Nvu_g@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Submission Deadline Extension",
        "SENT_FROM":"VHPC 12 <vhpc.dist@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"apologize receive multiple copy cfp call paper th workshop virtualization high performance cloud computing vhpc part euro par rhodes island greece date august workshop url url submission deadline june full paper submission extended scope virtualization become common abstraction layer modern data center enabling resource owner manage complex infrastructure independently application conjointly virtualization becoming driving technology manifold industry grade service cloud concept includes notion separation resource owner user adding service hosted application framework queueing utilizing infrastructure cloud carry significant potential use high performance scientific computing ability cloud provide request release vast computing resource dynamically close marginal cost providing service unprecedented history scientific commercial computing distributed computing concept leverage federated resource access popular within grid community seen previously desired deployed level far also many scientific data center adopted virtualization cloud concept yet workshop aim bring together industrial provider scientific community order foster discussion collaboration mutual exchange knowledge experience workshop one day length composed min paper presentation followed min discussion section presentation may accompanied interactive demonstration topic topic interest include limited higher level cloud architecture focusing issue language describing highly distributed compute job workload characterization vm based environment optimized communication library protocol cloud cross layer optimization numeric algorithm vm infrastructure system process bytecode vm convergence cloud framework api set checkpointing migration large compute job instrumentation interface language vmm performance auto tuning various load type cloud reliability fault tolerance security software service saas architecture research education use case virtualization cloud cluster grid environment cross layer vm optimization cloud use case including optimization vm based cloud performance modelling performance cost modelling lower level design challenge hypervisors vm aware device hardware accelerator filesystems vm environment especially cloud grid distributed filesystems hardware virtualization storage network accelerator storage network subsystem virtualized environment novel software approach virtualization paravirtualized subsystem modified unmodified guest virtualization aware cluster interconnects direct device assignment numa aware subsystem virtualized environment hardware accelerator virtualization gpus fpgas hardware extension virtualization vmms hypervisors embedded system data center management method including qos service level vm cloud cluster distribution algorithm vm load balancing cloud hypervisor extension tool cluster grid computing fault tolerant vm environment virtual machine monitor platform management deployment monitoring vm based environment cluster provisioning cloud paper submission paper submitted workshop reviewed least two member program committee external reviewer submission include abstract key word mail address corresponding author must exceed page including table figure main font size smaller point submission paper regarded commitment paper accepted least one author register attend conference present work accepted paper published springer lncs series format must according springer lncs style initial submission pdf author accepted paper requested provide source file format guideline url style template ftp ftp springer de pub tex latex llncs latexe llncse zip abstract submission link url important date rolling abstract submission june full paper submission extended june acceptance notification july camera ready version due august workshop date chair michael alexander chair tu wien austria gianluigi zanetti co chair cr italy anastassios nanos co chair ntua greece program committee paolo anedda cr italy giovanni busonera cr italy brad calder microsoft usa roberto canonico university napoli federico ii italy tommaso cucinotta alcatel lucent bell lab ireland werner fischer thomas krenn ag germany william gardner university guelph usa marcus hardt forschungszentrum karlsruhe germany sverre jarp cern switzerland shantenu jha louisiana state university usa xuxian jiang nc state usa nectarios koziris national technical university athens greece simone leo cr italy ignacio llorente universidad complutense de madrid spain naoya maruyama tokyo institute technology japan jean marc menaud ecole de mine de nantes france dimitrios nikolopoulos foundation research technology hellas greece jose renato santos hp lab usa walter schwaiger tu wien austria yoshio turner hp lab usa kurt tutschku university vienna austria lizhe wang indiana university usa chao tung yang tunghai university taiwan duration workshop duration one day general information workshop held part euro par euro par url"
    },
    "30596":{
        "ID":13172,
        "MESSAGE_ID":"CADjM4zu7LyhMi__w8Wc-8JAr5MTg_YhcxTFDmr1R5ftANm1GFw@mail.gmail.com",
        "PARENT_ID":12779.0,
        "SUBJECT":"Re: RFC: Cassandra Virtual Nodes",
        "SENT_FROM":"Sam Overton <sam@acunu.com>",
        "TAGS":"not-ak",
        "BODY":"parent ticket issue jira url comment contribution still welcome cheer sam"
    },
    "30838":{
        "ID":12930,
        "MESSAGE_ID":"CAOcnVr20QyVRsq++B7iCjAsD_YD55tdNFFYro1Ks5+LvcKWA5A@mail.gmail.com",
        "PARENT_ID":12927.0,
        "SUBJECT":"Re: IBM China Big Data team recruitment",
        "SENT_FROM":"Harsh J <harsh@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"please take discussion user developer list also official job list apache project url use instead announcing user developer community list"
    },
    "30841":{
        "ID":12927,
        "MESSAGE_ID":"CAEXHauqDbT-EUmyT0Yyjh0y5C5TxO0COrdaYsE_zn6X0v68mUw@mail.gmail.com",
        "PARENT_ID":12923.0,
        "SUBJECT":"Re: IBM China Big Data team recruitment",
        "SENT_FROM":"tom <zs68j2ee@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"salary position best regard tom lulynn"
    },
    "30845":{
        "ID":12923,
        "MESSAGE_ID":"7a8e245b.9a62.1363e243951.Coremail.lulynn_2008@163.com",
        "PARENT_ID":null,
        "SUBJECT":"IBM China Big Data team recruitment",
        "SENT_FROM":"lulynn_2008 <lulynn_2008@163.com>",
        "TAGS":"not-ak",
        "BODY":"please send resume jiangwt cn ibm com job description big data processing becoming hot industry ibm invest significantly new area gain leadership position marketplace join cdl infosphere big data biginsights team energetic innovative team working svl architect design develop next generation enterprise product big data area new initiative includes hadoop powered distributed parallel data processing system big data analytics management capability business supporting structured semi structured unstructured data designed enterprise class analytics performance looking technical leader developer qas including professional hire campus hire internal transfer bring unique expertise build expand key initiative strong candidate must able independently design code test major feature well work jointly team member deliver complex product component mentor lead design implementation large scale module system job responsibility design implement scalable reliable distributed data processing management infrastructure span multiple technology including hadoop data warehouse analytics storage management indexing extreme volume data movement management optimizing hardware software configuration design implement system module support componentized high performance parallel application including communication infrastructure metadata service administrative user interface client apis enhance ibm hadoop component integration ibm product popular product working engineer architect manager quality assurance design implement innovative solution incorporating functionality performance scalability reliability adherence agile development goal principle work customer propose solution help customer implement responsibility depending emerging customer requirement capability required skill excellent communication skill including presentation verbal written skill english chinese year designing implementing large scalable system technical leader year leading architecture design development enterprise software technicall leader strong java development object oriented programming skill including familiarity jee applet servlet jsp java json python rest ajax understanding distributed system map reduce algorithm hadoop object oriented programming performance optimization technique hadoop hbase development running experience big plus database server development experience plus web application development experience plus data warehouse analytics experience plus nosql experience plus ability work customer understand customer business requirement communicate development organization qualification bachelor degree computer science relevant area"
    },
    "30864":{
        "ID":12904,
        "MESSAGE_ID":"1332457077.11347.YahooMailNeo@web65903.mail.ac4.yahoo.com",
        "PARENT_ID":12868.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Tsz Wo Sze <szetszwo@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"mentioned previous email others complexity hflush hflush append straightforward nicholas"
    },
    "30885":{
        "ID":12883,
        "MESSAGE_ID":"CAKtuutHSMNjS3nOQ=CfiwWH=-ULDcZvCCznLtJFhCr-+JqoeLw@mail.gmail.com",
        "PARENT_ID":12842.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"existence",
        "BODY":"eli went entire discussion topic get problem append know work hadoop flush anything wrong new append hdfs please file bug tested hadoop branch work fine agree people involved implementation new append complexity mainly pipeline recovery consistent client reading writing hflush done append reopening previously closed file adding data complex mentioned agree indeed involved customer base ebay append motivation work stabilizing branch lot use case require append customer mentioned discussion thanks konstantin"
    },
    "30886":{
        "ID":12882,
        "MESSAGE_ID":"CAKtuutG02pwfDZFWfUzQG1MPHHGcfZzkOHxDUO5zBTFTpvse7w@mail.gmail.com",
        "PARENT_ID":12847.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi dave opinion much appreciated thanks konstantin"
    },
    "30888":{
        "ID":12880,
        "MESSAGE_ID":"CALdd-zhHvsb4V=MX86zJLFZ4mj0VPoND-q6awYvj7a+7-xE3Pg@mail.gmail.com",
        "PARENT_ID":12779.0,
        "SUBJECT":"Re: RFC: Cassandra Virtual Nodes",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"friend pointed privately came across pretty harsh thread stand technical concern want acknowledge sam proposal indicates strong grasp principle involved deeper level thought issue think anyone else brought date thanks putting energy sam look forward seeing approach implementation"
    },
    "30903":{
        "ID":12865,
        "MESSAGE_ID":"1332361908.41348.YahooMailNeo@web65905.mail.ac4.yahoo.com",
        "PARENT_ID":12842.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Tsz Wo Sze <szetszwo@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"information email correct let clarify release never append sync sync added append append added append sync mean implementation hadoop also hdfs new append hflush detail version feature sync append sync append append disabled append append branch used facebook merged append real production use reason production use today simply append yet stable release besides mean append useful improved people think get trunk mostly testing bug fixing hsync yet implemented think may mean hflush year original implementation release append hadoop committed july know could year well known append release stable hence probably used case stable release append stable design code complexity real user agree non trivial design code complexity come hflush append hflush append straightforward roughly speaking append work entire append hflush work moreover real user use case mentioned dave milind jira created split flag hflush supported append supported good idea folk need append need hflush still disable append regard nicholas eli collins hdfs dev hadoop apache org sent tuesday march pm subject discus remove append hey gang would like get people thought following proposal think consider removing append hdfs today append added release hadoop subsequently disabled hadoop due quality issue sync designed implemented shipped hdfs knowledge real production use anecdotally people worked branch append told think new trunk code substantially le well tested branch append code least sync append never well tested certainly gotten way le pounding hbase user design however much improved people think get hsync append stabilized trunk mostly testing bug fixing rationale follows append seem important requirement hflush much demand append user downstream project hadoop working append implementation see hdfs branch append work focused sync getting append working enabled default downstream project want support hadoop release year introduce dependency append anyway say demand exist much smaller security sync ha backwards compatbile rpc etc probably explains year original implementation started stable release append append introduces non trivial design code complexity worth cost real user removing append mean property hdfs block finalized immutable significantly simplifies design code significantly simplifies implementation feature like snapshot hdfs level caching dedupe etc vast majority hdfs effort still leveraged append new data durability read consistency behavior key part gfs hdfs design based append atomic record append obviously workable design preclude append however also ape gfs feature set simply exists conversation people worked gfs regret adding record append see also url short unless append real priority user think focus energy elsewhere thanks eli"
    },
    "30904":{
        "ID":12864,
        "MESSAGE_ID":"CB8F8517.2DBBE%Milind.Bhandarkar@emc.com",
        "PARENT_ID":12862.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Milind.Bhandarkar@emc.com",
        "TAGS":"existence",
        "BODY":"would also like point work done plf hdfs url would made much simpler allowing appends checkpointing mpi common use case hamster plf hdfs becomes attractive way section hotcloud paper pdl url discus reason seeking commonality hpc disc file system milind"
    },
    "30906":{
        "ID":12862,
        "MESSAGE_ID":"CB8F7D77.2DB86%Milind.Bhandarkar@emc.com",
        "PARENT_ID":12860.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Milind.Bhandarkar@emc.com",
        "TAGS":"existence",
        "BODY":"eli clarify little bit think hdfs right thing disable appends still enabling hsync branch going forward say appends working correctly definitely add value make hdfs palatable lot workload course vested interest team working project requires append truncate testing thoroughly scale year would okay wait result testing thanks milind milind bhandarkar greenplum lab emc disclaimer opinion expressed email author necessarily represent view organization past present author might affiliated"
    },
    "30908":{
        "ID":12860,
        "MESSAGE_ID":"CB8F798C.2DB64%Milind.Bhandarkar@emc.com",
        "PARENT_ID":12855.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Milind.Bhandarkar@emc.com",
        "TAGS":"not-ak",
        "BODY":"even large hdfs installation average file size block bucketing cause file size drop big user probably enough people write roll code avoid small file problem rest used storage system handling billion file milind milind bhandarkar greenplum lab emc disclaimer opinion expressed email author necessarily represent view organization past present author might affiliated"
    },
    "30912":{
        "ID":12856,
        "MESSAGE_ID":"FCA91A92EE52B041906A0358FC28FCC3919E0EE96D@FRE1EXCH02.hq.exar.com",
        "PARENT_ID":12847.0,
        "SUBJECT":"RE: [DISCUSS] Remove append?",
        "SENT_FROM":"Tim Broberg <Tim.Broberg@exar.com>",
        "TAGS":"not-ak",
        "BODY":"specific advice particular issue general learned hard way stop asking question feature hard support anybody really going use every time asked question get answer want hear every time come back ask feature back later work would planned beginning ymmv always asking marketing guy whereas asking developer ok one piece specific advice go find people tell want hear ask hdfs user whether need feature rather hdfs dev much empathy position make suffer tim"
    },
    "30915":{
        "ID":12853,
        "MESSAGE_ID":"CB8F5FDF.2DA7F%Milind.Bhandarkar@emc.com",
        "PARENT_ID":12851.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Milind.Bhandarkar@emc.com",
        "TAGS":"property",
        "BODY":"answer inline"
    },
    "30917":{
        "ID":12851,
        "MESSAGE_ID":"CAPn_vTt8-71k=R3FfMbkBGkbE2JrV22GFVj1YYrn3-L0ukWQKQ@mail.gmail.com",
        "PARENT_ID":12850.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"thanks feedback milind question inline"
    },
    "30918":{
        "ID":12850,
        "MESSAGE_ID":"CB8F5801.2DA28%Milind.Bhandarkar@emc.com",
        "PARENT_ID":12847.0,
        "SUBJECT":"Re: [DISCUSS] Remove append?",
        "SENT_FROM":"Milind.Bhandarkar@emc.com",
        "TAGS":"existence",
        "BODY":"someone worked hdfs compatible distributed file system support append vouch extensive usage seen simple becomes create tar archive later append file without writing special inefficient code seen used archiving cold data reducing mr task launch overhead without use different input format code used hot cold data addition small file problem hdfs force people write mr code cause rewrite large datasets even small amount data added clearly need afaik fixing please let know need help milind milind bhandarkar greenplum lab emc disclaimer opinion expressed email author necessarily represent view organization past present author might affiliated"
    },
    "30921":{
        "ID":12847,
        "MESSAGE_ID":"E6D9C0B62E31DB40803A31EAD90E8F8A2AE8BCA6@ph-mail01",
        "PARENT_ID":12842.0,
        "SUBJECT":"RE: [DISCUSS] Remove append?",
        "SENT_FROM":"Dave Shine <Dave.Shine@channelintelligence.com>",
        "TAGS":"existence",
        "BODY":"contributor project know much weight opinion carry hoping see append become stable soon constantly dealing small file problem written job periodically roll lot small file small one append would prevent needing use cluster resource performing task therefore thing equal making append work however level complexity bad eli implies understand perhaps worth effort cause much technical debt removing make sense remove believe need thanks dave shine"
    },
    "30926":{
        "ID":12842,
        "MESSAGE_ID":"CAPn_vTsnGK=e=z5OGxLdSiUyOAm==rMBL1j-fp0hm0Et-b7kTA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSS] Remove append?",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"existence, property",
        "BODY":"hey gang would like get people thought following proposal think consider removing append hdfs today append added release hadoop subsequently disabled hadoop due quality issue sync designed implemented shipped hdfs knowledge real production use anecdotally people worked branch append told think new trunk code substantially le well tested branch append code least sync append never well tested certainly gotten way le pounding hbase user design however much improved people think get hsync append stabilized trunk mostly testing bug fixing rationale follows append seem important requirement hflush much demand append user downstream project hadoop working append implementation see hdfs branch append work focused sync getting append working enabled default downstream project want support hadoop release year introduce dependency append anyway say demand exist much smaller security sync ha backwards compatbile rpc etc probably explains year original implementation started stable release append append introduces non trivial design code complexity worth cost real user removing append mean property hdfs block finalized immutable significantly simplifies design code significantly simplifies implementation feature like snapshot hdfs level caching dedupe etc vast majority hdfs effort still leveraged append new data durability read consistency behavior key part gfs hdfs design based append atomic record append obviously workable design preclude append however also ape gfs feature set simply exists conversation people worked gfs regret adding record append see also url short unless append real priority user think focus energy elsewhere thanks eli"
    },
    "30956":{
        "ID":12812,
        "MESSAGE_ID":"CAO5xsd2i-Kd5N-YA7oVykK1tD3KdpvCenQ7kH2QXdrqYeXB95A@mail.gmail.com",
        "PARENT_ID":12805.0,
        "SUBJECT":"Re: RFC: Cassandra Virtual Nodes",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"existence",
        "BODY":"would add limiting distribution factor decrease probability data loss multiple failure within replica set agreed think relates arbitrary change yes yes cassandra would minimum two topology current next topology would imply mapping partition replica set mapping potentially different two read would always served form current topology writes would go union current next topology taking care tie replica together correctly consistency level purpose cassandra cassandra talking topology change treated read write path perspective regardless whether adding node removing node adding entire rack even entire data center added complexity introduced beyond base case one benefit pre partitioning fixed set partition pre calculate mapping remove cpu efficiency trade straw bucket straw bucket would good choice consistent hashing totally doable use consistent hashing node topology without trade offs though granularity weighting want support accurace relates directly number vnodes per child need keep consistent hashing ring taking granularity accuracy target number child account easily lead large amount vnodes least experimentally implemented played simple form consistent hashing past currently good mathematical evidence understanding meant consistent hashing refer read orignal post seem missed something yes agreed also distribution factor limiting also compatible non crush hash chaining primary replica instead row key sure see suggestion dynamo like way essentially random sense converging toward uniformity difference mapping produced deterministically stable fashion scheme limit would implicit number partition combined cluster size yes good property going relatedly mentioned make sure structure data term partition term current cassandra mean cleanup instantaneous operation instead expensive operation truck lot data le leveled compaction common argument limiting rdf strongly skeptical real life scenario one case think one need look beyond pure math one thing huge concern want active balancing extreme availability requirement downtime actively implies significantly increased risk data loss want system constantly teetering edge data loss even safe shut lack data loss dependent system whole fully available working actively moving data around also hinge reality matching theory perfectly well term independent failure truly independent would feel much comfortable system rely super fast replication ensure data safety like said lot people make argument remain unconvinced thus far even looking math claim possibly hold grows sufficiently large point bottleneck network longer benefit form higher rdf probability data loss drop reach df number partition point increased cluster size increase number node data sharing another node peter schuller scode url"
    },
    "30958":{
        "ID":12810,
        "MESSAGE_ID":"CAPVEdFsG010qSksjG53X5A-SKtFcWnodsSyJzCMG6ts6p+46Ew@mail.gmail.com",
        "PARENT_ID":12805.0,
        "SUBJECT":"Re: RFC: Cassandra Virtual Nodes",
        "SENT_FROM":"Rick Branson <rbranson@datastax.com>",
        "TAGS":"existence, process",
        "BODY":"think could go back rebuild cassandra scratch vnodes would likely implemented beginning however concerned implementing could big distraction productive us time introduce major potential stability issue becoming business critical piece infrastructure many people however instead complaining pedantry would like offer feasible alternative consideration given idea supporting single token range node theoretically capable vnodes seems practical would significantly lower impact codebase provides much clearer migration path also seems solve majority complaint regarding operational issue cassandra cluster node would lower upper token would form range would actively distributed via gossip read replication request would routed replica key operation matched replica token range gossip table node would locally store current active token range well target token range moving towards new node undergoes bootstrap bound would gradually expanded allow handle request wider range keyspace move towards target token range idea boil move hard cutovers smoother operation gradually adjusting active token range period time would apply token change operation nodetool move removetoken well failure streaming could recovered bound instead restarting whole process active bound would effectively track progress bootstrap target token change implicitly operation would throttled degree node repair aes could also modified using overall idea provide gradual impact cluster overall similar idea given cassandra spread load cluster operation evenly like vnodes likely issue could worked around performing concurrent throttled bootstrap node repair aes operation allow kind active load balancing clearly flexible useful vnodes using randompartitioner sort randomized key opp right side note vnodes fail provide solution node based limitation seem cause substantial portion operational issue impact node restarts upgrade gc compaction induced latency think progress could made allowing pack independent cassandra node ran single host somewhat nowhere near entirely similar pre fork model used unix based server input rick branson datastax"
    },
    "30963":{
        "ID":12805,
        "MESSAGE_ID":"CADjM4zusga6t_LeiaD_Fhc7ZO=NafptVav2YkSYjeynk=cgc+A@mail.gmail.com",
        "PARENT_ID":12787.0,
        "SUBJECT":"Re: RFC: Cassandra Virtual Nodes",
        "SENT_FROM":"Sam Overton <sam@acunu.com>",
        "TAGS":"existence",
        "BODY":"hi peter great hear others come conclusion think crush like strategy topologically aware replication routing locality great idea think see three mostly orthogonal set functionality concerned virtual node partitioning scheme support heterogeneity management simplicity topology aware replication topology aware routing first think depends affect partitioning replication directly going set aside moment talk former two summarise design mainly make sure understand also refer back hash space partitioned fixed number partition crush algorithm run select disk topology using partition key get assignment partition physical host primary adding removing node requires running crush recalculate partition assignment move data crush algorithm run select rf disk topology using primary host id get assignment primary host rf replica adding removing node requires running crush recalculate replica assignment might different set host thought clarification talking bucket referring concept crush paper one concern using crush exactly described paper seems sub optimal amount data move modifying topology author paper introduce several bucket type uniform list tree straw appear various sub optimal alternative consistent hashing various trade offs use consistent hashing given think might end moving way much data set replica change completely given host let suppose introduce bucket type called ring bucket item ring bucket assigned equal non contiguous portion key hash space determines key assigned item added ring bucket take equal portion hash space every item already bucket vice versa removal easy see ring bucket implement consistent hashing unspecified virtual node scheme addition removal would optimal deltaw key require moving topology change using ring bucket crush topology hash function identity function would give exact distribution property virtual node strategy suggested previously course much better topology awareness make evident partitioning scheme crush like replication scheme orthogonal concern way nt currently us ring provide distribution dc rack level conceptually separating ring distinct logical ring dc crushreplicationstrategy could use ring bucketing function distribute partition topology brings reason choice virtual node scheme choose random token instead dynamo like scheme suggest partition fixed advance dynamo scheme size virtual node partition ever grow data inserted since number partition fixed cluster created partition size unbounded certain advantage limit partition size streaming failure retries resend much data streaming operation staggered smaller chunk minimise impact node involved load balancing operate finer granularity token per node scheme adding node cluster decrease partition size give control much data stored partition average size reduced adding machine cluster concern mentioned also acknowledge calculation lead believe fact shorter rebuild window compensates increased probability multiple failure df probability data loss minimised crush paper also state way mirroring two factor cancel overall data safety two replica increase declustering xin et al declustering meaning increasing df towards regard sam overton acunu url acunu"
    },
    "30980":{
        "ID":12788,
        "MESSAGE_ID":"CAO5xsd1bzM1nh5bwMegvtOX+zqTL2-X9NnsrrEDY6GuvJHJPBA@mail.gmail.com",
        "PARENT_ID":12787.0,
        "SUBJECT":"Re: RFC: Cassandra Virtual Nodes",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"not-ak",
        "BODY":"point clarification use term bucket completely unrelated term bucket used crush paper peter schuller scode url"
    },
    "30981":{
        "ID":12787,
        "MESSAGE_ID":"CAO5xsd0Q3Q3Tspdgfnk-ei27-DGKKm5sqZVh7mA2ez1unN-Z2A@mail.gmail.com",
        "PARENT_ID":12779.0,
        "SUBJECT":"Re: RFC: Cassandra Virtual Nodes",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"existence, property",
        "BODY":"happy see momentum would like go even propose main reason think simply adding vnodes making random assignment best end goal probability data loss increase linearly cluster size take network topology account follows mostly half finished long text sitting month finished posted unfortunately possibility due time constraint go everything detail update current information specifically address already said overlap original post however given mail momentum thread really wanted post something rather would awesome interested party chance read referenced crush paper delta proposed goal address everything already wanted post also addressing probability data loss network topology awareness following text first try paint picture goal mind go actual proposed solution proposition short undetailed plenty discussion detail fill apologize really want post something brought begin un polished text crushing cassandra author peter schuller proposal significant design fundamental cassandra aimed addressing number current issue well anticipating future issue particularly aimed large cluster side effect improve small cluster experience well new terminology distribution factor cassandra cluster today said node data replicated particular replication factor rf placement replica row certain node primary replica located specific set rf node addition hold secondary replica data rf node total share data rf node number node node share data distribution factor case cassandra df rf goal goal suggestion attempt help solve include following goal df tied rf df important reason df determines many node involved constructing lost node failure higher df le performance impact reconstruction remaining node df determines significance node respect read write load node df affect probability multiple failure causing data loss since one loos data rf node within group df node go df tied rf like cassandra problem single node failure significant effect performance characteristic neighboring node term relative normal level load neighbor large data set failed node needing reconstruction significant event increase load neighbor going increase load neighbor stream data adding cache thrashing typically lead desire throttle rate limit reconstruction add reconstruction window addition fact already naturally bottlenecking neighbor extreme tie df data contained one node secondary replica spread entire ring unacceptable choice probabiliy multiple failure increase linearly cluster size word want df tied neither rf rather df chosen trade effect df higher df higher probability data loss case multiple failure higher df faster reconstruct replace lost node higher df le impact seen node failure performance requirement node making determination one must take account larger df make reconstruction replacement significantly faster also decrease time window multiple failure occurr increasing df thus necessarily increasing total probability data loss small value df goal topologically aware redundancy maintain goal topology aware purpose ensuring place replica independent node definition independent operator currently implemented limited fashion dc rack awareness offered networktopologystrategy want go allow close arbitrary topology modeled example may require single data center piece data replicated distinct rack least two must within different cage data center goal topologically aware locality somewhat conflict previous goal also desire keep replica close sufficiently large cluster becomes cost prohibitive pipe inter replica traffic fast backbone network ideally one want balance two example one could arrange replica distributed across different rack cage data center limiting cross replica network bandwidth requirement local switch said cage maintaining independent power supply networking rack redundancy gigabit speed node easy saturate networking infrastructure start hundred node goal topologically aware routing cluster grows sufficiently large even topologically aware locality eventually want avoid everybody talk everybody situtation current cassandra network efficiency reason includes client topologically aware routing would enable selection co ordinator node intelligently consider edge router node cassandra aware application client connect might one per data center part dc provided sufficient site specific integration allow routing traffic co ordinator routed efficiently networking level request could go way client co ordinator router responsible replica back never crossing backbone switch router goal agility want adding removing balancing node trivial operation operator perspective minimal impact performance cluster want enable adding individual host group host entire rack host easily without significant risk mistake need carefully plan co ordinate upgrade due performance reason operator flexibility quickly adding capacity demand change even careful planning minimize must artificial limitation like requiring doubling cluster order avoid painful performance degrading operation operator never position consider trae adding capacity great cost operator effort risk waiting another two week promised delivery server example consider large deployment multiple cluster desirable capacity project cluster individually constantly populated pool server used expansion replacement node adding capacity existing cluters could done even daily basis effort keap average utilization smooth possible varying average utilization contributes one factor contributes need provision node cluster expected double size year example efficient incrementally add capacity rather say add day one half way point nothing else latter would imply node average provisioning year due lack agility expansion top factor goal heterogenous node want realistic minimally impactful node different performance characteristic cluster goal operator simplicity current situation unacceptably complex maintaing multi dc cluster rack awareness requires significant planning care often automation part operator maintain appropriately layed ring without causing rack hotspot issue auditing correct ring layout essentially impossible human box tool currently require site specific scripting nodetool ring close useless without significant mental automated post processing want significantly increase operator simplicity minimizing risk operator error minimize effort required operator proposed solution proposal draw inspiration crush paper url currently unfinished document paper pre requisite reading delta proposed bucket pre calculation key would apply crush algorithm would cassandra row key instead cassandra keyspace partitioned hashing bucket must large enough accomodate future cluster expansion accomodate probabilistic effect applying crush like algorithm achieve balancing main reason use bucket allows pre calculation result crush like algorithm remove cpu balancing trade offs equation crush paper focus go optimally balanced solution bucket tantamount ring segment similarly cassandra already want efficiently able transfer single bucket without traverse entire data set node global index data thus bucket directly relate structuring data disk way non orthogonal unit data moved around topology change help balancing accurace trade see replica selection order cater distrihution factor need use primary replica opposed bucket id key applying crush like algorithm finding secondary replica balancing accuracy rdf unnecessary movement trade limiting replica among rdf node introduce artificial constraint replica placement cause greater imbalance due low number node distributing node replica data otherwise primary df node assuming df huge df smallish number thus balancing limited algorithm get around calculate placement deterministic fashion order resperct bucket id assigning secondary replica proposed replica already quota reject selection keep going achieves balance cost additional data movement every time perform rejection causing placement virtual bucket affected something node placed peter schuller scode url"
    },
    "30989":{
        "ID":12779,
        "MESSAGE_ID":"CADjM4zvCm97jSiPhn59WsA1k5bgR-SOqcKsBo+_ZMpyRC69DOg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"RFC: Cassandra Virtual Nodes",
        "SENT_FROM":"Sam Overton <sam@acunu.com>",
        "TAGS":"existence",
        "BODY":"hello cassandra dev long email concern significant change cassandra deserves thorough introduction summary believe virtual node way forward would like add virtual node cassandra asking comment criticism collaboration cassandra current partitioning scheme sub optimal bootstrap decommission repair balance operation place burden user properly calculate token common mistake recurring pain point virtual node variety benefit one one mapping host key range cassandra currently support among benefit even load balancing growing shrinking cluster virtual node scheme ensures host cluster even portion total data new node bootstrapped cluster assume share data doubling halving cluster ensure even load distribution would longer necessary distributed rebuild sizing cluster one consideration amount time required recover failed node exposure time secondary failure could cause data loss order guarantee upper bound exposure time amount data stored host limited amount time taken recover required replica count acunu found exposure time frequently limiting factor dictate maximum allowed node size customer cluster using virtual node scheme data stored one host replicated rf physical host virtual node replicated rf virtual node may different set physical host replica virtual node stored host mean data one host replicated evenly across entire cluster event failure restoring replica count done fully distributed way host cluster participates rebuild drastically reducing exposure time allowing data stored single host still maintaining acceptable upper bound likelihood secondary failure reduces tco concern greater failure tolerance streaming operation require streaming large range data eg bootstrap decommission repair etc incur heavy cost error eg dropped network connection encountered streaming currently whole range must streamed could constitute large amount data virtual node reduce impact streaming failure since virtual node much smaller range key space streaming whole virtual node much cheaper process evenly distributed impact streaming operation streaming operation bootstrap repair et al would involve every node cluster would distribute load operation across whole cluster could staggered small subset node affected similar staggered repair possibility active load balancing load balancing cassandra currently involves moving token increase reduce amount key space host responsible allows load balancing neighbouring node could involve moving one token redistribute single overloaded node virtual node could allow load balancing much finer granularity heavily loaded portion key space could redistributed lighter loaded host reassigning one virtual node implementing virtual node scheme cassandra insignificant amount work touch large amount codebase related partitioning placement routing gossip believe possible incrementally way easy upgrade path pre virtual node deployment would however touch storage layer virtual node concept solely partitioning placement segregating data storage host key virtual node host would stored sstables proposing adoption scheme used voldemort described dynamo paper feel scheme different cassandra current distribution model viable target incremental development scheme also fix number virtual node lifetime cluster prove ceiling scaling cluster virtual node grow large proposed design assign host random token partition assigned host token partition defined interval token previous token ring host join ring assigned random token result portion existing partition assigned host host leaf ring relinquishes token result partition becoming part neighbouring partition basic extension cassandra existing distribution model instead token per host many token per host scheme used libketama consistent hashing among memcached instance also original scheme used dynamo described migrated current scheme fixed partition random assignment token may seem unintuitive given currently cassandra random token assigment lead unbalanced cluster many virtual node random token assignment lead load evenly balanced across host cluster high probability number virtual node increased variance load across host decrease demonstrated simulation scheme following property number host total data stored cluster placement metadata size cassandra currently partition size data inserted individual partition become large adding node cluster reduces strategy share following property common cassandra currently token randomly assigned partitioning determined placement vice versa two node may share token node leaf ring token removed exchanging partition node one design concern replica key range stored physical host failure host could cause loss one replica data achieved using placement strategy similar existing networktopologystrategy treat individual host way nt treat rack replica assigned two host rack shortly create ticket jira track discussion design also done simulation scheme observe load balancing property node size distribution cluster resizing attach result simulation jira ticket due course keen get ball rolling look forward input idea recommendation best regard sam overton staggering repair url project voldemort design url dynamo url ketama consistent hashing url consistent hashing url sam overton acunu url acunu"
    },
    "31065":{
        "ID":12703,
        "MESSAGE_ID":"CB7A8B69.51FEF%kuang.hairong@fb.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Datanodes optimizations",
        "SENT_FROM":"Hairong Kuang <hairong@fb.com>",
        "TAGS":"not-ak",
        "BODY":"peter hdfs dev awesome siying impressed amount work done improve hdfs could please revert think useful warehouse use case thanks hairong"
    },
    "31123":{
        "ID":12645,
        "MESSAGE_ID":"CAKkz8Q29iz6ym9rq8WrkGdPqTNRFDvNyZ+G4=+Ww6nmOcPJfwA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Git branches for 1.1",
        "SENT_FROM":"Sylvain Lebresne <sylvain@datastax.com>",
        "TAGS":"process",
        "BODY":"everyone started stuff stacking time create branch created cassandra branch release word merges commit cassandra merge cassandra cassandra trunk patch commit cassandra merge cassandra trunk patch commit cassandra trunk patch commit trunk release remove cassandra branch continue dev cassandra branch date merge trunk cassandra created cassandra since trunk old spot mistake part please tell"
    },
    "31267":{
        "ID":12501,
        "MESSAGE_ID":"33291451.post@talk.nabble.com",
        "PARENT_ID":null,
        "SUBJECT":"Big Data storage price in the cloud",
        "SENT_FROM":"Amir Tuval <amirtu@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"currently looking implementing big data saas system cloud plan use hadoop analyze hundred tb even several pb data looking pricing storage aws roughly cent per gb per month eb amount per month per pb think storage relatively expensive probably much pay computing resource thing hadoop run commodity server relatively cheap storage replicating data handle failure expected pay lot le storage anyone point best practice keep storage cost cloud maybe cloud provider offer service better suited scenario view message context url sent hadoop core dev mailing list archive nabble com"
    },
    "31403":{
        "ID":12365,
        "MESSAGE_ID":"CALgH=-NQ62nDQtvmPnQR7Lh4jqgzhHmT74fJZvncYqgFHRSHWQ@mail.gmail.com",
        "PARENT_ID":12357.0,
        "SUBJECT":"Re: PBS: Better understanding latency vs. (eventual) consistency trade-offs",
        "SENT_FROM":"Peter Bailis <pbailis@cs.berkeley.edu>",
        "TAGS":"existence",
        "BODY":"problem thanks response good starting point get feel added pbstracker indeed good place start class store process latency care pb nodetool simply call get latency method responsehandlers call startoperation log read write response method nothing magical pb analysis code pb analyze pb py pb pb utils py kept separate patch readability could easily rewrite java part nodetool similar different conceptually something like appear cassandra specific tweak made conceptually different patch link patch performs coarser granularity measurement cassandra patch splitting per replica operation time time spent sending message processing replica time spent waiting response important difference two patch determine latter latency coordinator replica store acknowledgement creation time acknowledgement look like patch linked log creation time locally requiring distributed log parsing reconstruct latency reconstruction definitely doable trade space message required timestamp complexity log reconstruction thanks peter"
    },
    "31411":{
        "ID":12357,
        "MESSAGE_ID":"CALdd-zja-WEQFfuuoBCNoAG4AjzDOU6BhfiXB5tgYA+3ow9UXw@mail.gmail.com",
        "PARENT_ID":12318.0,
        "SUBJECT":"Re: PBS: Better understanding latency vs. (eventual) consistency trade-offs",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sorry slow reply crunch time freeze good starting point get feel added pbstracker different conceptually something like url obviously specifically concerned pb related metric"
    },
    "31450":{
        "ID":12318,
        "MESSAGE_ID":"CALgH=-Mv9QwJs=DZ52bAJ-UDNMGav=AUX27GPZUfbUPKBPDZQw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"PBS: Better understanding latency vs. (eventual) consistency trade-offs",
        "SENT_FROM":"Peter Bailis <pbailis@cs.berkeley.edu>",
        "TAGS":"existence",
        "BODY":"recently completed research uc berkeley highly relevant cassandra interested feedback cassandra developer community brief eventually consistent replication often faster strongly consistent replication provides guarantee recency data returned however accurately provide expectation data recency work call probabilistically bounded staleness pb help make prediction using pb optimize trade latency consistency provided partial quorum predicting high accuracy currently cassandra good way predict performance benefit using partial quorum consistency provide however probably well aware cassandra us partial quorum default work particularly relevant many deployment measuring latency messaging using modeling technique developed cassandra better describing probability consistency according time version see interactive demo browser url good write datastax paul cannon blog last week url moreover technique broadly applicable example technical report url analyze cassandra well production deployment voldemort riak linkedin yammer developed patch cassandra performs profiling analysis potentially interested working integrate feature cassandra see code documentation url welcome feedback question might thanks peter bailis uc berkeley info read overview pb project page url also read technical report pb technical detail url daniel abadi recently blogged latency consistency trade url henry robinson cloudera also blogged pb url"
    },
    "31640":{
        "ID":12128,
        "MESSAGE_ID":"71806AE9-0C01-4ED9-AA49-D9341422D899@open-mpi.org",
        "PARENT_ID":null,
        "SUBJECT":"RM & AM for Hadoop",
        "SENT_FROM":"Ralph Castain <rhc@open-mpi.org>",
        "TAGS":"property, technology",
        "BODY":"hi folk familiarizing hadoop code tree found wondering people aware tool commonly used hpc community worked way thru code case community thought might worth brief summary field hpc community long history implementing fielding resource application management tool fault tolerant respect process node failure system readily scale node process size today running thousand cluster around world effort extend capability node process level aggressively pursued expected fielded next two year although system support mpi application nothing exclusively mpi readily execute application including mapreduce operation hdfs support lacking course readily added case point replicating fault tolerant resource application management capability existing system major undertaking may necessary existing system represent hundred man year effort coupled thousand machine year operational experience together provide level confidence hard duplicate hpc world resource manager application manager typically separate entity although many people use come particular rm almost rm system support wide range combination user pick choose pairing best fit need proprietary moab lsf open source slurm gridengine version rms am available differing level fault tolerance wanting deal peculiarity combination abstraction layer available example open mpi mpirun tool transparently interface nearly available rms am executing application manner regardless underlying system ompi provides fault tolerance capability ensure commonality across environment capable restarting rewiring application required addition ompi allows definition fault group failure dependency node protect cascading failure variety software hardware sensor detect deteriorating behavior prior actual node process failure multiple error response strategy available existing system including ompi user selectable time execution range simple termination entire application restarting process current node assuming node restarts shifting process node currently used application shifting process available backup node provide info requested wanted least make aware existing capability quick poll hpc rm provider indicates willingness add hdfs support done date nobody asked tend respond user demand technical barrier immediately apparent hth ralph"
    },
    "31845":{
        "ID":11923,
        "MESSAGE_ID":"CALdd-zjFVc5x5-f8gV6OXOGLSwRDYzePDQrfofKUPRX+FZjk9g@mail.gmail.com",
        "PARENT_ID":11885.0,
        "SUBJECT":"Re: Ticket CASSANDRA-3578 - Multithreaded CommitLog",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence",
        "BODY":"piotr koaczkowski sure looking since commitlog add return void abstractcommitlogexecutorservice add one caller commitlog add outside test code think take look executor implementation kind guarantee trying provide may make clear kind approach want take suspect going lot difficult multithread batch executor instance mean ignore entirely say sorry provide single threaded commitlog batch mode take two different approach one approach would also point rowmutation preserializedbuffers receive rm another node keep byte deserialized need reserialize commitlog would avoid spending ton effort parallelizing serialize since real world usually op jonathan elli project chair apache cassandra co founder datastax source professional cassandra support url"
    },
    "31883":{
        "ID":11885,
        "MESSAGE_ID":"4EE0E980.7080903@ii.pw.edu.pl",
        "PARENT_ID":11883.0,
        "SUBJECT":"Re: Ticket CASSANDRA-3578 - Multithreaded CommitLog",
        "SENT_FROM":"Piotr Ko\u0142aczkowski <pkolaczk@ii.pw.edu.pl>",
        "TAGS":"existence",
        "BODY":"dniu jonathan elli pisze thanks explanation exactly understood ticket also calculating serialized size twice look like waste cpu wrong calculated longer think ticket got question someone tell use pattern commitlog add method mean possible single thread call add many time remembers returned future object wait always like add wait future ready add wait add wait former true would benefit returning future object early possible without performing heavy calculation add method making code parallel output queue using kind thread pool executor changing current commit log executor one worker thread even single thread writes commitlog many rowmutations crc copying would still parallel fast think make sense future architecture could extended supporting many log file separate disk summarize current architecture many thread calc size queue one thread calc size serialize crc allocate copy fsync st proposal many thread calc size serialize crc queue one thread allocate copy fsync nd proposal many thread calc size allocate serialize crc copy queue one thread fsync rd proposal many thread calc size allocate serialize directly buffer crc queue one thread fsync th proposal many thread op queue thread number core calc size allocate serialize crc copy queue one thread fsync one like piotr koaaczkowski instytut informatyki politechnika warszawska nowowiejska warszawa mail pkolaczk ii pw edu pl www url"
    },
    "31885":{
        "ID":11883,
        "MESSAGE_ID":"CALdd-zgrDyRCB_3dR99qrL2pSkesZ4Z701m2s6tpzKCn+S2-8w@mail.gmail.com",
        "PARENT_ID":11882.0,
        "SUBJECT":"Re: Ticket CASSANDRA-3578 - Multithreaded CommitLog",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"piotr koaczkowski think anyone need mb commitlog bandwidth right trying fix single thread copying checksumming bottleneck pattern stay le jonathan elli project chair apache cassandra co founder datastax source professional cassandra support url"
    },
    "31886":{
        "ID":11882,
        "MESSAGE_ID":"4EE0684E.1060004@ii.pw.edu.pl",
        "PARENT_ID":11878.0,
        "SUBJECT":"Re: Ticket CASSANDRA-3578 - Multithreaded CommitLog",
        "SENT_FROM":"Piotr Ko\u0142aczkowski <pkolaczk@ii.pw.edu.pl>",
        "TAGS":"not-ak",
        "BODY":"right would best option ability write multiple log file put multiple disk sure part ticket though maybe split two thing parallel serialization crc parallel writes multiple logfiles another ticket look like major commitlog refactoring including touching logfile segment management logfile recovery code way sure multiple parallel writes memory mapped file would actually slower faster sequential writes think would optimise writes physically would sequential even delay fsync low cached disk buffer performance loss would occur moving data temporary array shared buffer memory would actually faster possibility avoiding temporary array serializing directly shared buffer also promising think benchmark profile first see reality unless someone already done interested find time today evening dniu jeremiah jordan pisze piotr koaaczkowski instytut informatyki politechnika warszawska nowowiejska warszawa mail pkolaczk ii pw edu pl www url"
    },
    "31890":{
        "ID":11878,
        "MESSAGE_ID":"4EDFD347.8060104@morningstar.com",
        "PARENT_ID":11863.0,
        "SUBJECT":"Re: Ticket CASSANDRA-3578 - Multithreaded CommitLog",
        "SENT_FROM":"Jeremiah Jordan <jeremiah.jordan@morningstar.com>",
        "TAGS":"not-ak",
        "BODY":"another option multiple thread reading queue writing commit log file multiple commit log directory task writing keep sequential writes optimization multiple writer one disk make sense using ssd storage wise sequential writes would slow writing"
    },
    "31905":{
        "ID":11863,
        "MESSAGE_ID":"4EDF9AB9.6020801@ii.pw.edu.pl",
        "PARENT_ID":null,
        "SUBJECT":"Ticket CASSANDRA-3578 - Multithreaded CommitLog",
        "SENT_FROM":"Piotr Ko\u0142aczkowski <pkolaczk@ii.pw.edu.pl>",
        "TAGS":"existence",
        "BODY":"hello everyone interview task got make commitlog multithreaded new cassandra project therefore start modifying code make sure understand going correctly feel free correct anything got wrong partially wrong commitlog singleton object responsible receiving rowmutation object add method add method thread safe aimed called many thread adding rowmutations independently invocation commitlog add put new task onto queue task represented logrecordadder callable object responsible actually calling commitlogsegment write method hard work serializing rowmutation object calculating crc writing memory mapped commitlogsegment file buffer add method immediately return future object waited needed block row mutation saved log file optionally synced queued task processed one one sequentially appropriate icommitlogexecutorservice service also control syncing active memory mapped segment two sync strategy available periodic batched periodic simply call sync periodically asynchronously putting appropriate sync task queue inbetween logrecordadder task logrecordadder task done soon written log caller wait sync hand batched strategy batchcommitlogexecutorservice performs task batch batch finished sync operation task marked done sync operation finished deferred task marking achieved thanks cheaterfuturetask class allowing run task without immediately marking futuretask done nice serialized size rowmutation object calculated twice submitting executorservice detect larger segment size taken queue execution check fit active commitlogsegment activate new commitlogsegment look like point needing optimisation could find code caching serialized size avoid twice serialization crc calculation actual commit log writes happening sequentially aim ticket make parallel question happens recovery power go log synced written partially truncated middle rowmutation data incomplete rowmutation writes detected mean crc commitlog around line mechanism commitlog add method allowed heavier computation contract return immediately move code solution consider please comment moving serialized size calculation serialization crc calculation totally executor service queue operation would parallel performed per rowmutation object calculated size data array crc value would appended task put queue copying commit log would proceed sequentially task would contain code log writing safest easiest solution also least performant copying still sequential still might bottleneck logic allocating new commit log segment syncing remains unchanged moving serialized size calculation serialization crc calculation commit log writing executor service queue raise immediately problem question code segment allocation need changed becomes multithreaded done using atomicinteger compareandset rowmutation get non overlapping piece commit log write happens enough free space current active segment allow active segment restrict parallelism writing single active segment like would certain le performant would wait finishing current active segement start new one recovery method ready reading partially written invalid rowmutation last mutation commit log allow writing several row mutation parallel task sent queue wait sync functionality would contain code execute everything would already done everything addition serialization code writes directly target memory mapped buffer temporary byte array would save copying also put le strain gc sorry long mail best regard piotr kolaczkowski piotr koaaczkowski instytut informatyki politechnika warszawska nowowiejska warszawa mail pkolaczk ii pw edu pl www url"
    },
    "32066":{
        "ID":11702,
        "MESSAGE_ID":"1542FA4EE20C5048A5C2A3663BED2A6B516854@szxeml504-mbx.china.huawei.com",
        "PARENT_ID":11692.0,
        "SUBJECT":"RE: Blocks are getting corrupted under very high load",
        "SENT_FROM":"Uma Maheswara Rao G <maheswara@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"thanks todd finally also started suspecting angle planned take file detail reboot reboot analysis confirm whether issue one thing notice difference reboot time last replica finalization hr case since machine rebooted due kernal hung task timeout sec also particular thread might got chance sync data great one hdfs merged bug since improvement issue might come list also found level configs filesystem operation synchronously dirsync directory update within filesystem done synchronously affect following system call creat link unlink symlink mkdir rmdir mknod rename suspected mainly rename operation lost reboot since metafile blockfile rename happen finalizing block bbw current least considered blocksize anyway thanks lot great valuable time checking log run hdfs regard uma todd lipcon todd cloudera com sent thursday november common dev hadoop apache org cc hdfs dev hadoop apache org subject block getting corrupted high load"
    },
    "32083":{
        "ID":11685,
        "MESSAGE_ID":"1542FA4EE20C5048A5C2A3663BED2A6B516424@szxeml504-mbx.china.huawei.com",
        "PARENT_ID":11684.0,
        "SUBJECT":"RE: Blocks are getting corrupted under very high load",
        "SENT_FROM":"Uma Maheswara Rao G <maheswara@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"yes todd block restart small genstamp also lesser complete machine reboot happend board configured like getting cpu cycle sec reboot kernal hung task timeout sec sec due timeout automatically reboot happend dn regard uma todd lipcon todd cloudera com sent wednesday november pm hdfs dev hadoop apache org subject block getting corrupted high load noticed reported block restart also much smaller block reported earlier chance dn restarted actually lost power ie mean dn jvm restarted whole machine crashed restarted"
    },
    "32084":{
        "ID":11684,
        "MESSAGE_ID":"CADY20s7q=nxTcjJHsia1MqqunNOGtqbZZq6=xD1-nw7YmsBOxg@mail.gmail.com",
        "PARENT_ID":11682.0,
        "SUBJECT":"Re: Blocks are getting corrupted under very high load",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"noticed reported block restart also much smaller block reported earlier chance dn restarted actually lost power ie mean dn jvm restarted whole machine crashed restarted"
    },
    "32086":{
        "ID":11682,
        "MESSAGE_ID":"1542FA4EE20C5048A5C2A3663BED2A6B516355@szxeml504-mbx.china.huawei.com",
        "PARENT_ID":11681.0,
        "SUBJECT":"RE: Blocks are getting corrupted under very high load",
        "SENT_FROM":"Uma Maheswara Rao G <maheswara@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"hi todd thanks lot taking look yes also suspect initially analysing log found client trace log dn mean block finalization completed hadoop root datanode xx xx log info datanode clienttrace blockreceiver java run src xx xx dest xx xx byte op hdfs write cliid dfsclient nonmapreduce srvid blockid blk hadoop root datanode xx xx log info datanode datanode blockreceiver java run packetresponder block blk terminating blk recent generationtimestamp also nn log clearly saying addstoredblock called block id log hadoop root hanamenode xx xx log info namenode fsnamesystem fsnamesystem java commitblocksynchronization commitblocksynchronization lastblock blk newgenerationstamp newlength newtargets xx xx closefile false deleteblock false hadoop root hanamenode xx xx log info namenode fsnamesystem fsnamesystem java commitblocksynchronization commitblocksynchronization blk successful hadoop root hanamenode xx xx log warn namenode fsnamesystem fsnamesystem java addstoredblock inconsistent size block blk reported xx xx current size reported size hadoop root hanamenode xx xx log warn hdfs statechange fsnamesystem java addstoredblock block namesystem addstoredblock redundant addstoredblock request received blk xx xx size dn restart hadoop root hanamenode xx xx log info hdfs statechange fsnamesystem java rejectaddstoredblock block namesystem addstoredblock addstoredblock request received blk xx xx size rejected reported block written block closed file regard uma todd lipcon todd cloudera com sent wednesday november common dev hadoop apache org cc hdfs dev hadoop apache org subject block getting corrupted high load look dn question see whether succesfully finalized write finished sound like successful write moved bbw directory current todd"
    },
    "32087":{
        "ID":11681,
        "MESSAGE_ID":"CADY20s48Do=wh+p4qMmD_YwMa5-uNg2Y0Uf+Ruk9J9ap58csMg@mail.gmail.com",
        "PARENT_ID":11675.0,
        "SUBJECT":"Re: Blocks are getting corrupted under very high load",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"look dn question see whether succesfully finalized write finished sound like successful write moved bbw directory current todd"
    },
    "32093":{
        "ID":11675,
        "MESSAGE_ID":"1542FA4EE20C5048A5C2A3663BED2A6B515D7D@szxeml504-mbx.china.huawei.com",
        "PARENT_ID":null,
        "SUBJECT":"Blocks are getting corrupted under very high load",
        "SENT_FROM":"Uma Maheswara Rao G <maheswara@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"hi backported hdfs hadoop version based append branch running load test usual want ensure reliability system heavy load cluster datanodes namenode machine cpu hard disk tb capacity client running along datanodes client upload tar file containing block thread block size mb replication factor everything look fine normal load load increased lot error happening many pipeline failure happening also fine except strange case block block around missing fsck report show tried read file fails saying datanodes block analysing log found block pipeline recovery happened write successful single datanode also datanode reported block namenode blockreceived command time say minute datanode getting restarted bbw blocksbeingwritten report send dn immediately restart finalized block also included showing block blocksbeingwritten folder many case generation timestamp reported bbw report old timestamp namenode rejecting block bbw report saying file already closed also namenode asks datanode invlidate block datanode deleting block also printing path blocksbeingwritten directory also previous generation timestamp look strange mean finalized block file meta file written current folder getting lost dn restart due namenode receive block information block report send datanodes regard uma"
    },
    "32421":{
        "ID":11347,
        "MESSAGE_ID":"CAJs-t7PzhUVkNHTqhYOUtJP0ZROSYiw3SdwipB0qfWULxk6f_w@mail.gmail.com",
        "PARENT_ID":10828.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"following one hadoop tool module already trunk distcp addition could start thanks alejandro"
    },
    "32588":{
        "ID":11180,
        "MESSAGE_ID":"CAGparvUqFYG1EDZ76OryYL3ZCZ7EgnSodckPeHNpioQ=onB_4A@mail.gmail.com",
        "PARENT_ID":11179.0,
        "SUBJECT":"Re: Utilize Hadoop over GPGPUs",
        "SENT_FROM":"He Chen <airbots@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi amindri udugala work hope help feel free update wiki page get interesting result url best wish chen"
    },
    "32589":{
        "ID":11179,
        "MESSAGE_ID":"CACaao=COt+WAX-vxAJDZKxgkyORGiMJR3F9ZhWjn1QvMno1vDA@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Utilize Hadoop over GPGPUs",
        "SENT_FROM":"Amindri Udugala <amindriudugala@gmail.com>",
        "TAGS":"technology",
        "BODY":"hi hadoop devs final year computer science undergraduate newbie hadoop final year suppose carry research project idea utilize hadoop gpgpus better performance research project think idea potential obviously contribute better performance thinking scenario master assigns multiple job single node gpgpu valuable idea mostly welcome also interested topic ability dynamically increase replica data hdfs based access pattern saw reported issue jira url resolution still marked unresolved would like know work currently carried regard amindri udugala university colombo school computing sri lanka"
    },
    "32816":{
        "ID":10952,
        "MESSAGE_ID":"CADE0w=VL9AS8FWr8Q2_1u2MNKQaC8RYFqB7PdPgmrm5T6BGOYg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Research on Hadoop Design",
        "SENT_FROM":"Mehdi Mirakhorli <mirakhorli@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everyone group researcher depaul university investigating use tactic open source high performance fault tolerant software system obviously nearly familiar hadoop developer hoped could help focused particularly arcjitectural tactic listed tactic found attached table think found major occurrence tactic hadoop help insight could provide would helpful many thanks mm jch mc tactic number tactic related class identified explanation package location heartbeat heartbeat piggybacking used hadoop check health status task mapreduce src java org apache hadoop mapred tasktracker java mapreduce src java org apache hadoop mapreduce server tasktracker ttconfig java mapreduce src contrib mumak src java org apache hadoop mapred simulatortasktracker java mapreduce src contrib mumak src java org apache hadoop mapred simulatorengine java mapreduce src java org apache hadoop mapred jobtracker java mapreduce src java org apache hadoop mapred tasktrackermanager java mapreduce src java org apache hadoop mapreduce server jobtracker jtconfig java mapreduce src contrib mumak src java org apache hadoop mapred simulatorjobtracker java mapreduce src java org apache hadoop mapred intertrackerprotocol java mapreduce src java org apache hadoop mapreduce util configutil java resource pooling thread pooling used increase performance mapred package block pooling used save reuse data block hdfs subsystem job pooling increasing performace scheduler actually organizes job pool share resource fairly pool mapreduce src contrib fairscheduler src java org apache hadoop mapred pool java mapreduce src contrib fairscheduler src java org apache hadoop mapred poolmanager java mapreduce src contrib fairscheduler src java org apache hadoop mapred poolschedulable java scheduling three different scheduling service implemented executes task job scheduling strategy fairscheduler dynamic scheduling capacity scheduling mapreduce src contrib dynamic scheduler src java org apache hadoop mapred dynamicpriorityscheduler java mapreduce src contrib dynamic scheduler mapreduce src contrib fairscheduler mapreduce src contrib capacity scheduler audit trail audit log used capture information authorization authentication event success failure mapreduce src java org apache hadoop mapred auditlogger java mapreduce src java org apache hadoop mapred jobtracker java mapreduce src java org apache hadoop mapred jobinprogress java mapreduce src java org apache hadoop mapred aclsmanager java common src test core org apache hadoop ipc minirpcbenchmark java common src java org apache hadoop ipc server java common src java org apache hadoop security authorize serviceauthorizationmanager java authenticate authentication used controling user access common src java org apache hadoop security mapreduce src java org apache hadoop mapred pipe outputhandler java mapreduce src java org apache hadoop mapred pipe upwardprotocol java common src java org apache hadoop ipc client java common src test core org apache hadoop ipc minirpcbenchmark java hdfs src java org apache hadoop hdfs server common jsphelper java hdfs src java org apache hadoop hdfs server datanode securedatanodestarter java hdfs src java org apache hadoop hdfs server namenode canceldelegationtokenservlet java hdfs src java org apache hadoop hdfs server namenode fsnamesystem java common src java org apache hadoop http lib staticuserwebfilter java common src java org apache hadoop ipc connectionheader java mapreduce src java org apache hadoop mapred pipe application java mapreduce src java org apache hadoop mapred jobinprogress java mapreduce src java org apache hadoop mapred jobtracker java mapreduce src java org apache hadoop mapred tasktracker java common src java org apache hadoop ipc server java common src java org apache hadoop ipc metric rpcmetrics java"
    },
    "32922":{
        "ID":10846,
        "MESSAGE_ID":"4E6F4A89.6090409@apache.org",
        "PARENT_ID":10845.0,
        "SUBJECT":"Re: Platform MapReduce - Enterprise Features",
        "SENT_FROM":"Steve Loughran <stevel@apache.org>",
        "TAGS":"not-ak",
        "BODY":"aside ask white paper get pdf exaggerates limit hadoop url mostly focusing critique scheduler mr fix hadoop say designed used department army developer help fix issue en counter believe cloudera hortonworks fee platform organisation effort go hadoop codebase go writing analysis code thing like pig hive help make easier clouderas distribution based open source still unproven large scale enterprise full stack solution many shortcoming open source distribution including workload management capa bilities open source commercial distribution emerging ibm emc entering marketplace however offering based open source code inevitably inherit strength weakness code base architectural design ted point mapr mr engine limited brisk arun view statement past tense doug tom pick word unproven enterprise plan hadoop cluster bigger yahoo facebook furthermore platform put scheduler leaving filesystem alone bit weak critique architecture open source distro way make friend get bug fix indeed promise better scalability therefore meet enterprisea aaclass requirement aabig dataa aa problem already mentioned daft thing platform brings table scheduler work legacy grid workload console see going see tangibly enterprise class existing jt persist outage hdfs underneath new scheduler even remove filesystem spofs way get ha cluster swap premium filesystem thing marketing blurb get wrong claim hadoop work one distributed file system read filesystem file handy one work nfs mount point overall disappointing white paper criticise open source hadoop spread fear developer need maintain limitation hadoop scheduler scheduler differs platform product full os release missed talk local university platform sale rep last month though get offend one author condor team instead pointing grid scheduler contain major assumption storage access time constant across cluster pay something like gpfs get tb gpfs storage adding tb sata drive would cost stuck compute node fully replicated tb fan grid system cost storage networking taken account availablity issue larger filesystems topic another day look forward giving talk forthcoming london hug event try follow talk introducing mr arguing favour os solution turnaround time defect faster steve miron livny facing camera two left sergey melnik camera author dremel url"
    },
    "32926":{
        "ID":10842,
        "MESSAGE_ID":"CAND0qzsz22Y_nj7kRHwv_hJoz8m6Z3Nmdy2WY9YuDT5gbDAiiQ@mail.gmail.com",
        "PARENT_ID":10834.0,
        "SUBJECT":"Re: Platform MapReduce - Enterprise Features",
        "SENT_FROM":"Ted Dunning <tdunning@maprtech.com>",
        "TAGS":"property",
        "BODY":"see mapr com added many enterprise feature onto hadoop including snapshot mirroring nfs access high availability higher performance since mailing list primarily apache hadoop contact line would like information"
    },
    "32929":{
        "ID":10839,
        "MESSAGE_ID":"CA93D438.28EB9%evans@yahoo-inc.com",
        "PARENT_ID":10834.0,
        "SUBJECT":"Re: Platform MapReduce - Enterprise Features",
        "SENT_FROM":"Robert Evans <evans@yahoo-inc.com>",
        "TAGS":"existence",
        "BODY":"chi feature thing hadoop working ha branch progress go trunk relatively soon far batch system integration concerned care scheduling job job run machine write scheduler standard api bobby evans"
    },
    "32934":{
        "ID":10834,
        "MESSAGE_ID":"CAKssKOhF3jm7A810JpzEZB3iyL2MwduAAomPbNy2Qe+ns1uU3A@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Platform MapReduce - Enterprise Features",
        "SENT_FROM":"Chi Chan <chichan2008@gmail.com>",
        "TAGS":"existence, property, technology",
        "BODY":"hadoop implementation planning add enterprise feature platform mapreduce url url url platform said mapreduce implementation totally replaces jobtracker rest hadoop stack unchanged hadoop api would allow external batch system like grid engine open grid scheduler pb condor slurm etc plug hadoop chi"
    },
    "32940":{
        "ID":10828,
        "MESSAGE_ID":"CAMEEY-JjM2ytCigvo0G6yn5ytvaBp9Cg4Q_HF3FWXG4SvzztiQ@mail.gmail.com",
        "PARENT_ID":10768.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"alright think discussed enough everybody seems agree top level hadoop tool module time get action filed hadoop amareshwari track rest implementation related detail question specific answer thanks everyone putting thought vinod"
    },
    "33000":{
        "ID":10768,
        "MESSAGE_ID":"C25CE95B9064B543BAF2058027F5691F95F12E9DA2@DEN-MEXMS-001.corp.ebay.com",
        "PARENT_ID":10743.0,
        "SUBJECT":"RE: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"\"Rottinghuis, Joep\" <jrottinghuis@ebay.com>",
        "TAGS":"existence",
        "BODY":"hadoop tool built part hadoop common none tool allowed dependency hdfs mapreduce conversely also true tool dependency bult part hadoop common circular dependency like probably obvious saying joep amareshwari sri ramadasu amarsri yahoo inc com sent wednesday september pm mapreduce dev hadoop apache org cc common dev hadoop apache org subject hadoop tool layout distcpv good hadoop tool module separately asked need answer question trying answer comment welcome meant hadoop common mailing list used separate mailing list tool agree vinod tie hadoop common jira mailing list jenkins nightly patch build hadoop tool run part hadoop common use hadoop common mailing list also propose every patch build hdfs mapreduce also run tool test make sure nothing broken would ease maintenance hadoop tool module presume tool test take much time thing like minute sure whether mavenization take care thanks amareshwari"
    },
    "33025":{
        "ID":10743,
        "MESSAGE_ID":"CA8E4382.345D2%amarsri@yahoo-inc.com",
        "PARENT_ID":10741.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Amareshwari Sri Ramadasu <amarsri@yahoo-inc.com>",
        "TAGS":"existence",
        "BODY":"good hadoop tool module separately asked need answer question trying answer comment welcome meant hadoop common mailing list used separate mailing list tool agree vinod tie hadoop common jira mailing list jenkins nightly patch build hadoop tool run part hadoop common use hadoop common mailing list also propose every patch build hdfs mapreduce also run tool test make sure nothing broken would ease maintenance hadoop tool module presume tool test take much time thing like minute sure whether mavenization take care thanks amareshwari"
    },
    "33027":{
        "ID":10741,
        "MESSAGE_ID":"C25CE95B9064B543BAF2058027F5691F95F12E9D9F@DEN-MEXMS-001.corp.ebay.com",
        "PARENT_ID":10724.0,
        "SUBJECT":"RE: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"\"Rottinghuis, Joep\" <jrottinghuis@ebay.com>",
        "TAGS":"not-ak",
        "BODY":"separate hadoop tool module imply separate jenkins build well thanks joep alejandro abdelnur tucu cloudera com sent wednesday september mapreduce dev hadoop apache org subject hadoop tool layout distcpv make sense"
    },
    "33044":{
        "ID":10724,
        "MESSAGE_ID":"CAJs-t7N04DYmYC=vdL7DeEFy8UvL--P3ziQVrHTYskMz=115Yg@mail.gmail.com",
        "PARENT_ID":10723.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"make sense"
    },
    "33045":{
        "ID":10723,
        "MESSAGE_ID":"CA8D0639.6149%Milind.Bhandarkar@emc.com",
        "PARENT_ID":10722.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Milind.Bhandarkar@emc.com",
        "TAGS":"not-ak",
        "BODY":"separate hadoop tool module however tool broken release time one come forward fix removed unlike contrib module build test failure tolerated milind"
    },
    "33046":{
        "ID":10722,
        "MESSAGE_ID":"CALF7aMQ_ASbYzCiR-hbGP2VkXFP6iuD+1SRmbYPWxCUKFkuVKQ@mail.gmail.com",
        "PARENT_ID":10720.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Mahadev Konar <mahadev@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"like idea tool seperate module think dumping ground unless choose make one hadoop tool module trunk thanks mahadev"
    },
    "33048":{
        "ID":10720,
        "MESSAGE_ID":"CAJs-t7NOHtP5aHqNxDywZsVb5GRU0PvAZgA-t7sX0nssiejJ5A@mail.gmail.com",
        "PARENT_ID":10719.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"existence",
        "BODY":"agreed dumping ground going would go hadoop tool distcp streaming someone could argue fsshell well effectively hadoop cli utility separate module rather core module common hdfs mapreduce mean secondary thing modularization also help get tool use public interface core module finally clean hadoop client layer tool depend finally fact tool would end trunk hadoop tool prevent packaging hdfs mapreduce bundle different tool hadoop tool binding thanks"
    },
    "33049":{
        "ID":10719,
        "MESSAGE_ID":"CADfbTpFwG4T1oLUWc6kMLvtrp-UinCdq7Auig3wRbTt0mbGDBA@mail.gmail.com",
        "PARENT_ID":10703.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Eric Yang <eric818@gmail.com>",
        "TAGS":"existence",
        "BODY":"mapreduce hdfs distinct function hadoop loosely coupled tool aggregator module clear distinct function hadoop module hence possible tool depend hdfs map reduce something broke tool module unclear subproject responsibility maintain tool function therefore safer send tool incubator apache extra rather deposit utility tool tool subcategory many short lived project attempt associate hadoop maintained would better spin utility project use hadoop dumping ground previous discussion removing contrib people favor contrib owner reluctant remove contrib fewer people participated restore functionality broken contrib project history speaks non binding hadoop tool regard eric"
    },
    "33055":{
        "ID":10713,
        "MESSAGE_ID":"CAMEEY-+xanY-+B9soQs6cbCeH7ei9VHea2YeyfjE+aJ40tFofA@mail.gmail.com",
        "PARENT_ID":10703.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"bunch called tool hadoop mapreduce project src tool distcp hadooparchives rumen etc contrib project src contrib common hdfs mapred source tree sure distinction ever made last time discussion moving contrib project core reach consensus url want revive discucssion want keep status quo imitate source structure present day tool contrib move appropriate maven module discussion separately personally prefer later given length eventual failure previous discussion hadoop related issue src location contribs like gridmix streaming etc talked suppose issue thread ought converge thanks vinod"
    },
    "33065":{
        "ID":10703,
        "MESSAGE_ID":"CAJs-t7N-t7UxNdNz7mVYoKTO10sdryOkB3qZVof54k1kZ0zwTQ@mail.gmail.com",
        "PARENT_ID":10702.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"eric personally fine either way still fail see generic categorized tool increase reduce risk dead code make difficult easier package deployment would please explain thanks alejandro"
    },
    "33066":{
        "ID":10702,
        "MESSAGE_ID":"FD0BCBD5-437B-475F-8D31-44469654FD0F@gmail.com",
        "PARENT_ID":10700.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Eric Yang <eric818@gmail.com>",
        "TAGS":"existence",
        "BODY":"option proposed amareshwari seems like better proposal want repeat history contrib hadoop tool generic module like hadoop tool increase risk accumulate dead code would better categorize hdfs mapreduce specific tool respected subcategories also easier manage package deployment prospective regard eric"
    },
    "33080":{
        "ID":10688,
        "MESSAGE_ID":"CA8BC5E3.341D2%amarsri@yahoo-inc.com",
        "PARENT_ID":10687.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Amareshwari Sri Ramadasu <amarsri@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"copying common dev"
    },
    "33081":{
        "ID":10687,
        "MESSAGE_ID":"1315286928.25007.YahooMailNeo@web44703.mail.sp1.yahoo.com",
        "PARENT_ID":10609.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Mithun Radhakrishnan <mithun.radhakrishnan@yahoo.com>",
        "TAGS":"existence",
        "BODY":"leaning towards creating trunk hadoop tool hadoop distcp etc hoping going acceptable forum way moving separate source tree easier would nice clarity tool dealt would convenient distcp trunk tiny useful"
    },
    "33159":{
        "ID":10609,
        "MESSAGE_ID":"CAMEEY-Lqtm0iqs1+qS4015Powqx9Axrr2aJCBh6o+Tqzohzh3w@mail.gmail.com",
        "PARENT_ID":10605.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Vinod Kumar Vavilapalli <vinodkv@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"long hadoop tool directory depth trunk release hadoop tool tied release core actually two option instead separate source tree url source tool trunk hadoop distcp tool work specific version hadoop core release really separate source tree trunk source either trunk hadoop tool trunk hadoop mapreduce project hadoop mr tool hadoop distcp given release decoupled anyway either work prefereable building mapreduce build tool also vinod"
    },
    "33163":{
        "ID":10605,
        "MESSAGE_ID":"CA8296A4.338F5%amarsri@yahoo-inc.com",
        "PARENT_ID":10594.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Amareshwari Sri Ramadasu <amarsri@yahoo-inc.com>",
        "TAGS":"existence",
        "BODY":"copying common dev summarizing discussion tool layout mavenization option hadoop tool top level trunk hadoop tool hadoop distcp pro cleaner layout future tool could released separately hadoop release con difficult maintain option keep tool aggregator module mapreduce hdfs common depending mapreduce hdfs common respectively ex hadoop mapreduce project hadoop mr tool hadoop distcp pro easy maintain con still tight coupling related project personally fine option looking suggestion reaching consensus thanks amareshwari"
    },
    "33174":{
        "ID":10594,
        "MESSAGE_ID":"B830B404-F05E-475D-929F-A3624E634823@apache.org",
        "PARENT_ID":10579.0,
        "SUBJECT":"Re: Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Allen Wittenauer <aw@apache.org>",
        "TAGS":"not-ak",
        "BODY":"feeling discussion get moved common dev even general question tool basically contrib reborn make different"
    },
    "33189":{
        "ID":10579,
        "MESSAGE_ID":"CA814F09.3373C%amarsri@yahoo-inc.com",
        "PARENT_ID":10553.0,
        "SUBJECT":"Hadoop Tools Layout (was Re: DistCpV2 in 0.23)",
        "SENT_FROM":"Amareshwari Sri Ramadasu <amarsri@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"question making hadoop tool top level trunk patch tool created hadoop common happen tool test automation run part hadoop common test introduce dependency mapreduce common taken care mavenization thanks amareshwari"
    },
    "33212":{
        "ID":10556,
        "MESSAGE_ID":"1314379057.39053.YahooMailNeo@web44705.mail.sp1.yahoo.com",
        "PARENT_ID":10554.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Mithun Radhakrishnan <mithun.radhakrishnan@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"greeting tucu would like much take distcpv build currently mavenized apology neglected mention mail thread could please bother review pom patch stand distcpv need building separately grazie mithun alejandro abdelnur mapreduce dev hadoop apache org sent friday august pm subject distcpv happy review mavenization perspective thxs alejandro"
    },
    "33214":{
        "ID":10554,
        "MESSAGE_ID":"CAJs-t7PxNVLLnUhf7f3gddTY1KNzMnRgtYvawcizE7dO4Oo_wg@mail.gmail.com",
        "PARENT_ID":10553.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"happy review mavenization perspective thxs alejandro"
    },
    "33215":{
        "ID":10553,
        "MESSAGE_ID":"CAJs-t7Nx3PJ=v=BgDFgcrQx_1AMOTd1U2Y6fV5=a=mOo13fhbQ@mail.gmail.com",
        "PARENT_ID":10552.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"please add mavenization work eventually want go back coding given hadoop already mavenized patch mavenized done extra besides mavenizing distcp create hadoop tool module root level within hadoop distcp module hadoop tool pom look pretty much like hadoop common project pom hadoop distcp pom follow hadoop common pom pattern thanks alejandro"
    },
    "33216":{
        "ID":10552,
        "MESSAGE_ID":"CA7DC9AD.33567%amarsri@yahoo-inc.com",
        "PARENT_ID":10548.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Amareshwari Sri Ramadasu <amarsri@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"agree mithun robert distcp tool restructuring separate task since distcp code ready committed need wait tool separation mr hdfs would say go contrib patch tool restructuring happens would svn mv issue proposal commit code tomorrow thanks amareshwari"
    },
    "33220":{
        "ID":10548,
        "MESSAGE_ID":"CA7D14C8.27F5A%evans@yahoo-inc.com",
        "PARENT_ID":10546.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Robert Evans <evans@yahoo-inc.com>",
        "TAGS":"existence",
        "BODY":"agree mithun related go beyond distcpv block distcpv going would nice however get layout settled soon know find something want work also alejandro also prefer keep tool trunk level even though hdfs common mapreduce perhaps soon tool separate module right still tight coupling different piece especially test going reduce coupling treat building testing hadoop single project instead trying keep separate bobby"
    },
    "33222":{
        "ID":10546,
        "MESSAGE_ID":"1314362710.61210.YahooMailNeo@web44714.mail.sp1.yahoo.com",
        "PARENT_ID":10544.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Mithun Radhakrishnan <mithun.radhakrishnan@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"would acceptable retooling tool taken separately sound like might distinct albeit related task mithun giridharan kesavan mapreduce dev hadoop apache org sent friday august pm subject distcpv alejandro prefer keep hadoop tool trunk level giri"
    },
    "33224":{
        "ID":10544,
        "MESSAGE_ID":"CANJr2=Hj77FbXOvRwu0Xb7HiMFwqgLBHqP4gcrBskTcc4R6LbA@mail.gmail.com",
        "PARENT_ID":10541.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Giridharan Kesavan <gkesavan@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"alejandro prefer keep hadoop tool trunk level giri"
    },
    "33225":{
        "ID":10543,
        "MESSAGE_ID":"6CDC81B0BB9347419EB39E5468F3221B@china.huawei.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Build failure in map reduce trunk",
        "SENT_FROM":"Ravi Teja <raviteja@huawei.com>",
        "TAGS":"not-ak",
        "BODY":"hi tharindu think trying compile native code add cbuild argument skip mentioned earlier arun regard ravi teja thanks praveen managed proceed stuck point appreciate tell wrong stacktrace info make maven plugin beta configure make hadoop yarn server nodemanager info checking bsd compatible install usr bin install info checking whether build environment sane yes info checking thread safe mkdir install sh info checking gawk info checking mawk info checking nawk info checking awk awk info checking whether make set make yes info configure line check install cflag command found info configure line hadoop utils setup command found info checking gcc gcc info checking compiler default output file name info checking whether compiler work yes info checking whether cross compiling info checking suffix executables info checking suffix object file info checking whether using gnu compiler yes info checking whether gcc accepts yes info checking gcc option accept iso none needed info checking style include used make gnu info checking dependency style gcc gcc info checking whether gcc cc understand together yes info checking run preprocessor gcc info checking grep handle long line usr bin grep info checking egrep usr bin grep info checking ansi header file yes info checking sys type yes info checking sys stat yes info checking stdlib yes info checking string yes info checking memory yes info checking string yes info checking inttypes yes info checking stdint yes info checking unistd yes info checking unistd cached yes info checking stdbool conforms yes info checking bool yes info checking ansi conforming const yes info checking yes info checking size yes info checking whether strerror declared yes info checking strerror yes info checking whether strerror return char info checking mkdir yes info checking uname yes info configure creating config status info config status creating makefile info config status executing depfiles command info info make maven plugin beta make install install hadoop yarn server nodemanager info depbase echo impl configuration sed deps info gcc dpackage name linux container executor dpackage tarname linux container executor dpackage version dpackage string linux container executor dpackage bugreport yarn dev yahoo inc com gnu source dpackage linux container executor dversion dstdc header dhave sys type dhave sys stat dhave stdlib dhave string dhave memory dhave string dhave inttypes dhave stdint dhave unistd dhave unistd dhave bool dhave stdbool dhave decl strerror dhave strerror dhave mkdir dhave uname impl wall werror dhadoop conf dir mt impl configuration md mp mf depbase tpo impl configuration impl configuration info mv depbase tpo depbase po info cc warning treated error info impl configuration function read config info impl configuration warning implicit declaration function getline info make impl configuration error info info reactor summary info info hadoop yarn api success info hadoop yarn common success info hadoop yarn server common success info hadoop yarn server nodemanager failure info hadoop yarn server resourcemanager skipped info hadoop yarn server test skipped info hadoop yarn server skipped info hadoop yarn skipped info hadoop mapreduce client core skipped info hadoop mapreduce client common skipped info hadoop mapreduce client shuffle skipped info hadoop mapreduce client app skipped info hadoop mapreduce client skipped info hadoop mapreduce client jobclient skipped info hadoop mapreduce client skipped info hadoop mapreduce skipped info info build failure info info total time info finished fri aug ist info final memory info error failed execute goal classpath make maven plugin beta make install install project hadoop yarn server nodemanager make returned exit value aborting build see command output information help error error see full stack trace error run maven switch error run maven using switch enable full debug logging"
    },
    "33226":{
        "ID":10542,
        "MESSAGE_ID":"57DD7501-188B-428B-8249-D69C054F3598@hortonworks.com",
        "PARENT_ID":10539.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Mahadev Konar <mahadev@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"layout thanks mahadev"
    },
    "33227":{
        "ID":10541,
        "MESSAGE_ID":"CAJs-t7P_cXtXMQ7-+n9wrMT_dk8+2MC=pRnJfx2wNf4gW3bE9Q@mail.gmail.com",
        "PARENT_ID":10539.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"existence",
        "BODY":"would suggest putting hadoop tool either trunk level tool aggregator module hdfs common personal would prefer trunk thanks alejandro"
    },
    "33229":{
        "ID":10539,
        "MESSAGE_ID":"CA7D1986.334B6%amarsri@yahoo-inc.com",
        "PARENT_ID":10532.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Amareshwari Sri Ramadasu <amarsri@yahoo-inc.com>",
        "TAGS":"existence",
        "BODY":"agree separate maven module patch put separate maven module top level hadoop tool nice becomes hard maintain patch automation test run test tool currently see many time change hdfs effecting raid test mapreduce fine putting tool hadoop mapreduce propose something like following trunk hadoop mapreduce hadoop mr client hadoop yarn hadoop tool hadoop streaming hadoop archive hadoop distcp thought eli jd replace old legacy distcp really complete rewrite want remove user familiarized new one"
    },
    "33230":{
        "ID":10538,
        "MESSAGE_ID":"CADYHM8ya=064=hk3m9AZ0rVraU2fxjUOK-k=-0vKqC4YwPH6CA@mail.gmail.com",
        "PARENT_ID":10536.0,
        "SUBJECT":"Re: Build failure in map reduce trunk",
        "SENT_FROM":"Praveen Sripati <praveensripati@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thairindu try get information debugging error see full stack trace error run maven switch error run maven using switch enable full debug logging thanks praveen"
    },
    "33232":{
        "ID":10536,
        "MESSAGE_ID":"CAFFf+k-OYLGzE4TLqt01-JyizWoxibGZb1+o5-rEBkPza5cEWg@mail.gmail.com",
        "PARENT_ID":10514.0,
        "SUBJECT":"Re: Build failure in map reduce trunk",
        "SENT_FROM":"Tharindu Mathew <mccloud35@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks praveen managed proceed stuck point appreciate tell wrong stacktrace info make maven plugin beta configure make hadoop yarn server nodemanager info checking bsd compatible install usr bin install info checking whether build environment sane yes info checking thread safe mkdir install sh info checking gawk info checking mawk info checking nawk info checking awk awk info checking whether make set make yes info configure line check install cflag command found info configure line hadoop utils setup command found info checking gcc gcc info checking compiler default output file name info checking whether compiler work yes info checking whether cross compiling info checking suffix executables info checking suffix object file info checking whether using gnu compiler yes info checking whether gcc accepts yes info checking gcc option accept iso none needed info checking style include used make gnu info checking dependency style gcc gcc info checking whether gcc cc understand together yes info checking run preprocessor gcc info checking grep handle long line usr bin grep info checking egrep usr bin grep info checking ansi header file yes info checking sys type yes info checking sys stat yes info checking stdlib yes info checking string yes info checking memory yes info checking string yes info checking inttypes yes info checking stdint yes info checking unistd yes info checking unistd cached yes info checking stdbool conforms yes info checking bool yes info checking ansi conforming const yes info checking yes info checking size yes info checking whether strerror declared yes info checking strerror yes info checking whether strerror return char info checking mkdir yes info checking uname yes info configure creating config status info config status creating makefile info config status executing depfiles command info info make maven plugin beta make install install hadoop yarn server nodemanager info depbase echo impl configuration sed deps info gcc dpackage name linux container executor dpackage tarname linux container executor dpackage version dpackage string linux container executor dpackage bugreport yarn dev yahoo inc com gnu source dpackage linux container executor dversion dstdc header dhave sys type dhave sys stat dhave stdlib dhave string dhave memory dhave string dhave inttypes dhave stdint dhave unistd dhave unistd dhave bool dhave stdbool dhave decl strerror dhave strerror dhave mkdir dhave uname impl wall werror dhadoop conf dir mt impl configuration md mp mf depbase tpo impl configuration impl configuration info mv depbase tpo depbase po info cc warning treated error info impl configuration function read config info impl configuration warning implicit declaration function getline info make impl configuration error info info reactor summary info info hadoop yarn api success info hadoop yarn common success info hadoop yarn server common success info hadoop yarn server nodemanager failure info hadoop yarn server resourcemanager skipped info hadoop yarn server test skipped info hadoop yarn server skipped info hadoop yarn skipped info hadoop mapreduce client core skipped info hadoop mapreduce client common skipped info hadoop mapreduce client shuffle skipped info hadoop mapreduce client app skipped info hadoop mapreduce client skipped info hadoop mapreduce client jobclient skipped info hadoop mapreduce client skipped info hadoop mapreduce skipped info info build failure info info total time info finished fri aug ist info final memory info error failed execute goal classpath make maven plugin beta make install install project hadoop yarn server nodemanager make returned exit value aborting build see command output information help error error see full stack trace error run maven switch error run maven using switch enable full debug logging"
    },
    "33236":{
        "ID":10532,
        "MESSAGE_ID":"CADY20s75nsCFEpNqaT5YcuW9yUp_sKnfiJF1zKk8p2-YUZThfg@mail.gmail.com",
        "PARENT_ID":10530.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"existence",
        "BODY":"maybe separate toplevel hadoop tool stuff like raid could go well ie tool downstream mr hdfs"
    },
    "33238":{
        "ID":10530,
        "MESSAGE_ID":"CALF7aMRxB1R32vkZMk1RYE6kU4Bgz5PtA4o45BQ+b3ZOK5p9bQ@mail.gmail.com",
        "PARENT_ID":10527.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Mahadev Konar <mahadev@hortonworks.com>",
        "TAGS":"existence",
        "BODY":"seperate module hadoop mapreduce project think hadoop mapreduce client might right place might pick new maven module hadoop mapreduce project could host streaming distcp hadoop archive thanks mahadev"
    },
    "33241":{
        "ID":10527,
        "MESSAGE_ID":"CAJs-t7MgSa=1dqHg5wHkRRuevOdSfUbgP3Z+vbTT04sR4mATYw@mail.gmail.com",
        "PARENT_ID":10526.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Alejandro Abdelnur <tucu@cloudera.com>",
        "TAGS":"existence",
        "BODY":"agree separate maven module hadoop mapreduce client right topic go streaming thanks alejandro"
    },
    "33243":{
        "ID":10525,
        "MESSAGE_ID":"CAPn_vTtsBOeU+DR2q3iVqEoGmGcUg0khDrWEOyTMmtBVbMvSCA@mail.gmail.com",
        "PARENT_ID":10507.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"nice work definitely think go agree jd core code contrib going maintained put core code thanks eli"
    },
    "33245":{
        "ID":10523,
        "MESSAGE_ID":"CAGpTDNc1egfKLstHBa=O4oJ9qPENda5K0kNB-R1Y09denH666w@mail.gmail.com",
        "PARENT_ID":10507.0,
        "SUBJECT":"Re: DistCpV2 in 0.23",
        "SENT_FROM":"Jean-Daniel Cryans <jdcryans@apache.org>",
        "TAGS":"not-ak",
        "BODY":"contribs hard follow maintain really rewrite core code way nice see distcp reengineered love new feature listed jira thanks"
    },
    "33254":{
        "ID":10514,
        "MESSAGE_ID":"CADYHM8zm6X-1_fCYZa4VgYkfinmmhyht_D6jj2e00SgQdGzXOA@mail.gmail.com",
        "PARENT_ID":10513.0,
        "SUBJECT":"Re: Build failure in map reduce trunk",
        "SENT_FROM":"Praveen Sripati <praveensripati@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"tharindu look like protoc available run program protoc directory home hadoop trunk hadoop mapreduce hadoop yarn hadoop yarn api error file directory help instruction build protoc see url make sure protbuf library library path set export ld library path usr local lib thanks praveen"
    },
    "33255":{
        "ID":10513,
        "MESSAGE_ID":"CAFFf+k8kGGT_rpR0VCTcfJbNYQDDwN1aJ36MSz0fvic__1G=kQ@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Build failure in map reduce trunk",
        "SENT_FROM":"Tharindu Mathew <mccloud35@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi everyone new bie list hope much dumb question trying build map reduce trunk already build root pom everything built fine map reduce included root pom build fails point given appreciate someone help thanks advance stack trace info info building hadoop yarn api snapshot info info info maven clean plugin clean default clean hadoop yarn api info deleting user mackie source checkout hadoop trunk hadoop mapreduce hadoop yarn hadoop yarn api target info info maven antrun plugin run create protobuf generated source directory hadoop yarn api info executing task main mkdir created dir user mackie source checkout hadoop trunk hadoop mapreduce hadoop yarn hadoop yarn api target generated source proto info executed task info info exec maven plugin exec generate source hadoop yarn api info info reactor summary info info hadoop yarn api failure info hadoop yarn common skipped info hadoop yarn server common skipped info hadoop yarn server nodemanager skipped info hadoop yarn server resourcemanager skipped info hadoop yarn server test skipped info hadoop yarn server skipped info hadoop yarn skipped info hadoop mapreduce client core skipped info hadoop mapreduce client common skipped info hadoop mapreduce client shuffle skipped info hadoop mapreduce client app skipped info hadoop mapreduce client skipped info hadoop mapreduce client jobclient skipped info hadoop mapreduce client skipped info hadoop mapreduce skipped info info build failure info info total time info finished thu aug ist info final memory info error failed execute goal classpath exec maven plugin exec generate source project hadoop yarn api command execution failed run program protoc directory home hadoop trunk hadoop mapreduce hadoop yarn hadoop yarn api error file directory help classpath failed execute goal classpath exec maven plugin exec generate source project hadoop yarn api command execution failed classpath mojoexecutor java classpath mojoexecutor java classpath mojoexecutor java classpath lifecyclemodulebuilder java classpath lifecyclemodulebuilder java classpath lifecyclestarter java classpath lifecyclestarter java classpath defaultmaven java classpath defaultmaven java classpath mavencli java classpath mavencli java classpath mavencli java sun reflect nativemethodaccessorimpl invoke native method sun reflect nativemethodaccessorimpl invoke nativemethodaccessorimpl java sun reflect delegatingmethodaccessorimpl invoke delegatingmethodaccessorimpl java java lang reflect method invoke method java classpath launcher java classpath launcher java classpath launcher java classpath launcher java caused classpath command execution failed classpath execmojo java classpath defaultbuildpluginmanager java classpath mojoexecutor java caused java io ioexception run program protoc directory user mackie source checkout hadoop trunk hadoop mapreduce hadoop yarn hadoop yarn api error file directory java lang processbuilder start processbuilder java java lang runtime exec runtime java classpath javacommandlauncher java classpath defaultexecutor java classpath defaultexecutor java classpath defaultexecutor java classpath execmojo java classpath execmojo java caused java io ioexception error file directory java lang unixprocess forkandexec native method java lang unixprocess unixprocess java java lang processimpl start processimpl java java lang processbuilder start processbuilder java error error run maven using switch enable full debug logging error error information error possible solution please read following article error help url regard tharindu"
    },
    "33261":{
        "ID":10507,
        "MESSAGE_ID":"CA7BD28F.332CE%amarsri@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"DistCpV2 in 0.23",
        "SENT_FROM":"Amareshwari Sri Ramadasu <amarsri@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"hi would seen distcpv url code go new contrib project full unit test coverage proper documentation really liked part patch patch reviewed ready commit would like branch since new code think fine moreover code production yahoo since six month let know issue clearly putting thanks amareshwari"
    },
    "33633":{
        "ID":10135,
        "MESSAGE_ID":"F78F37A8-79EC-46B2-B0A3-80A5104179BD@hortonworks.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release 0.20.204.0-rc0",
        "SENT_FROM":"Owen O'Malley <owen@hortonworks.com>",
        "TAGS":"not-ak",
        "BODY":"created release candidate would like release available url many fix including disk fail place new rpm deb package fail place allows datanode tasktracker continue hard drive fails owen"
    },
    "33730":{
        "ID":10038,
        "MESSAGE_ID":"008a01cc4130$5afe1b60$10fa5220$@com",
        "PARENT_ID":null,
        "SUBJECT":"Looking for File System Engineers for a US Start-Up",
        "SENT_FROM":"\"Thomas Mathew\" <thomas@hurits.com>",
        "TAGS":"not-ak",
        "BODY":"hi looking file system engineer following expertise case interested kindly contact info jd year experience working file system ideally would worked one distributed file system like nfs webdav hdfs etc experience working large amount data ideally would worked different database like mongodb mysql cassandra couchdb etc experience networking application level rpcs proven ability past mentor junior engineer exceptional algorithm data structure design skill degree computer science reputed engineering collegenice experience web service experience virtualization cloud computing experience python tech tech reputed institute thanks regard thomas mathew linkedin url hurits consulting pvt ltd nd cross th block koramangala bangalore ph email thomas hurits com web www hurits com caution disclaimer mail contains privileged confidential information intended solely use addressee intended recipient please notify sender mail delete original message copy disclose distribute mail content person action unlawful mail may contain virus hurits taken every reasonable precaution minimize risk liable damage may sustain result virus mail carry virus check opening mail attachment hurits reserve right monitor review content message sent mail address message sent mail address may stored hurits mail system hurits end disclaimer hurits"
    },
    "33880":{
        "ID":9888,
        "MESSAGE_ID":"62af4d362a7a490677e846e5b88b2b4f@tweb31-2.nm",
        "PARENT_ID":9876.0,
        "SUBJECT":"unsubscribe",
        "SENT_FROM":"\uae40\uc900\uc601<juneng603@naver.com>",
        "TAGS":"not-ak",
        "BODY":"unsubscribe"
    },
    "33891":{
        "ID":9877,
        "MESSAGE_ID":"BANLkTinU2Et0WiHGRrevburUWvjukmZ+AQ@mail.gmail.com",
        "PARENT_ID":9876.0,
        "SUBJECT":"Re: CounterColumn as a double",
        "SENT_FROM":"David Boxenhorn <david@citypath.com>",
        "TAGS":"not-ak",
        "BODY":"bigdoubles bigintegers"
    },
    "33892":{
        "ID":9876,
        "MESSAGE_ID":"BANLkTikZMk=RTASr838HyNYbKtQ=2zODwg@mail.gmail.com",
        "PARENT_ID":9875.0,
        "SUBJECT":"Re: CounterColumn as a double",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence",
        "BODY":"think avoid would suggest making cql double backwards incompatibility required"
    },
    "33893":{
        "ID":9875,
        "MESSAGE_ID":"CF4AA2AF-9198-4684-B75C-43DE618E9C8B@gmail.com",
        "PARENT_ID":9874.0,
        "SUBJECT":"Re: CounterColumn as a double",
        "SENT_FROM":"Jason <jfager@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"sorry clear speaking question avoid modifying thrift interface jason"
    },
    "33894":{
        "ID":9874,
        "MESSAGE_ID":"BANLkTik1vfBgbdxvo72_ckRh0FKtBacBUA@mail.gmail.com",
        "PARENT_ID":9873.0,
        "SUBJECT":"Re: CounterColumn as a double",
        "SENT_FROM":"Joseph Stein <cryptcom@gmail.com>",
        "TAGS":"existence",
        "BODY":"hmmm well jason accurate would thought first increment long whacked think make sense since bit long double would necessarly represent double setting increment come back another increment come back increment value long would provide right shift even hood keep thrift interface long somehow big difference billion think go back original idea proposition one issue create jira get"
    },
    "33895":{
        "ID":9873,
        "MESSAGE_ID":"BANLkTi=W8dffuhaZpQiRPEdyTLMiJodEMQ@mail.gmail.com",
        "PARENT_ID":9872.0,
        "SUBJECT":"Re: CounterColumn as a double",
        "SENT_FROM":"Joseph Stein <cryptcom@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"give shot seems work fantastically thanks keep trolling jira something feel get foot wet contribute"
    },
    "33896":{
        "ID":9872,
        "MESSAGE_ID":"BANLkTi=fHstcjYjxukmG3tC3stFyUrvWSg@mail.gmail.com",
        "PARENT_ID":9871.0,
        "SUBJECT":"Re: CounterColumn as a double",
        "SENT_FROM":"Jason Fager <jfager@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"longs double bit value pretty easily convertible check double doubletolongbits double longbitstodouble jdk also read detail conversion get pointer code post wrote last year url emphasis using double key string cover need"
    },
    "33897":{
        "ID":9871,
        "MESSAGE_ID":"BANLkTikh=2zoqiTcEUKvxqqFAOtPwMzHnw@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"CounterColumn as a double",
        "SENT_FROM":"Joseph Stein <cryptcom@gmail.com>",
        "TAGS":"existence",
        "BODY":"anyone considered using countercolumn summing wanted weekend realized long using thing like duration example would great keep track aggregate duration ad impression possible total cost processing business workflow etc etc thought might little speed first contribution also help functionality since lot real time analytics need double let know think good feature implementing sure would want break thrift interface would suggest would create another interface double value hood thrift interface thinking creating countervalue class setting lvalue dvalue depending thrift function called update thrift add sister function work entire code path long countercolumn value countervalue countercolumn value joe stein url twitter allthingshadoop"
    },
    "34339":{
        "ID":9429,
        "MESSAGE_ID":"BANLkTimFX3swLS8NOzG4LB6+B6YHRi5bxw@mail.gmail.com",
        "PARENT_ID":9327.0,
        "SUBJECT":"[RESULT] [VOTE] Release Apache Cassandra 0.8.0-beta1 artifacts in Maven Central",
        "SENT_FROM":"Stephen Connolly <stephen.alan.connolly@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"vote passed jonathan elli binding eric evans binding brandon williams binding mck non binding stephen connolly non binding promote artifact maven central stephen"
    },
    "34347":{
        "ID":9421,
        "MESSAGE_ID":"BANLkTikFD1MyvuBC=Ptmo90uu++pD_w1uw@mail.gmail.com",
        "PARENT_ID":9412.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"testing federation regularly mapreduce yahoo merge branch trunk missed contrib raid dependency project split crazy sure large change keep top thing working fixing raid contrib"
    },
    "34356":{
        "ID":9412,
        "MESSAGE_ID":"BANLkTimJQZrHfyugR5xjNDcPVc-XagMd+Q@mail.gmail.com",
        "PARENT_ID":9382.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Todd Lipcon <todd@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"apparently merge tested mapreduce trunk mr trunk failing compile several day please see mapreduce attempted fix enough background new federation code raid todd"
    },
    "34369":{
        "ID":9399,
        "MESSAGE_ID":"BANLkTikVsvYsT9gbXQNzDkrQQ-nWs3P4xQ@mail.gmail.com",
        "PARENT_ID":9384.0,
        "SUBJECT":"Re: [VOTE] Release Apache Cassandra 0.8.0-beta1 artifacts in Maven Central",
        "SENT_FROM":"Stephen Connolly <stephen.alan.connolly@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ping still waiting two cassandra committers stephen sent android phone random spelling mistake random nonsense word nonsense direct result using swype type screen"
    },
    "34384":{
        "ID":9384,
        "MESSAGE_ID":"BANLkTinwgeT=Mi5Lq893b_Wi03n=-ik3Wg@mail.gmail.com",
        "PARENT_ID":9379.0,
        "SUBJECT":"Re: [VOTE] Release Apache Cassandra 0.8.0-beta1 artifacts in Maven Central",
        "SENT_FROM":"Stephen Connolly <stephen.alan.connolly@gmail.com>",
        "TAGS":"existence",
        "BODY":"ok cql dropped release need two binding release remains thrift"
    },
    "34386":{
        "ID":9382,
        "MESSAGE_ID":"BANLkTimWqjqXdOpjBeFppaQ7n_05A638Nw@mail.gmail.com",
        "PARENT_ID":9380.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks clarifying owen bylaw somewhere wiki konstantin"
    },
    "34387":{
        "ID":9381,
        "MESSAGE_ID":"BANLkTikL_CJJK0aXrojduqKcqb-srz0z_A@mail.gmail.com",
        "PARENT_ID":9380.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"owen thanks clarification attached patch jira hdfs please use jira cast vote post objection objection please specific address move forward issue regard suresh"
    },
    "34389":{
        "ID":9379,
        "MESSAGE_ID":"BANLkTinQV+_-SpsN5oVHACjocgrDKpjRqg@mail.gmail.com",
        "PARENT_ID":9378.0,
        "SUBJECT":"Re: [VOTE] Release Apache Cassandra 0.8.0-beta1 artifacts in Maven Central",
        "SENT_FROM":"Stephen Connolly <stephen.alan.connolly@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"ok well see deleting staging repo get conditional basis stephen sent android phone random spelling mistake random nonsense word nonsense direct result using swype type screen"
    },
    "34397":{
        "ID":9371,
        "MESSAGE_ID":"BANLkTi==c5yYN_=d2_t2DmKwiuFpJib_uA@mail.gmail.com",
        "PARENT_ID":9363.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"process",
        "BODY":"owen question whether code change requires lazy consensus active committers adoption new codebase need lazy majority pmc member lazy consensus requires binding vote binding veto looking current bylaw tell need vote miss anything konstantin"
    },
    "34399":{
        "ID":9369,
        "MESSAGE_ID":"BANLkTimfqKvVPrSo6FdazVGdtSYg3mMKeQ@mail.gmail.com",
        "PARENT_ID":9366.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks eli merge latest change trunk straight forward get done tonight post new patch mean earlier merge happen tomorrow"
    },
    "34401":{
        "ID":9367,
        "MESSAGE_ID":"BANLkTinXk3UKK80oz1f3GX_qNTOLc0Ofpg@mail.gmail.com",
        "PARENT_ID":9363.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"issue tonight merge branch trunk regard suresh"
    },
    "34402":{
        "ID":9366,
        "MESSAGE_ID":"BANLkTimh1NYboDxWN=9vH0pox89apEWzgw@mail.gmail.com",
        "PARENT_ID":9291.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"hey suresh plan update patch hdfs soon trunk moved little bit since last patch assume vote patch think additional review feedback beyond already done handled code merged know pain keep patch mainline looked far look great way missed design doc check url thanks eli"
    },
    "34417":{
        "ID":9351,
        "MESSAGE_ID":"BANLkTiknNZY5ed5pZbqTuSVyHr+VhoCfTQ@mail.gmail.com",
        "PARENT_ID":9350.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"konstantin could provide link done big feature like say append benchmark info captured planning run dfsio test way regard suresh"
    },
    "34418":{
        "ID":9350,
        "MESSAGE_ID":"BANLkTikanUkVs0uhGR1Y11te9dvYz3PnWQ@mail.gmail.com",
        "PARENT_ID":9346.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"konstantin"
    },
    "34419":{
        "ID":9349,
        "MESSAGE_ID":"BANLkTinZ4gP+GiZza5r6+Fvxjx7eoyyH+w@mail.gmail.com",
        "PARENT_ID":9348.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"upgrade earlier version supported existing configuration run without change"
    },
    "34420":{
        "ID":9348,
        "MESSAGE_ID":"BANLkTi=ykmD5sYPMPALq7WV5tG4a4FbmLg@mail.gmail.com",
        "PARENT_ID":9342.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Konstantin Boudnik <cos@apache.org>",
        "TAGS":"not-ak",
        "BODY":"oops message came garbled meant say assume outlined change prevent earlier version hdfs upgrade federation version right thanks advance co"
    },
    "34421":{
        "ID":9347,
        "MESSAGE_ID":"BANLkTimQXpFwfnqt9R+d7uu1o8Va3H+aag@mail.gmail.com",
        "PARENT_ID":9343.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"dhruba would valuable community share experience performed independent testing federation branch thanks konstantin"
    },
    "34422":{
        "ID":9346,
        "MESSAGE_ID":"BANLkTimghTWbvPEKWrus6rPJ_-Zd-edg-g@mail.gmail.com",
        "PARENT_ID":9344.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Konstantin Shvachko <shv.hadoop@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"suresh sanjay asked benchmark many time course different discussion topic see number attached jira getting response doug got guy would performance worse argument assume merging requires vote sure people know bylaw better correct true miss vote feel like rushing would expect others position done past large project thanks konstantin"
    },
    "34423":{
        "ID":9345,
        "MESSAGE_ID":"859416.13486.qm@web65907.mail.ac4.yahoo.com",
        "PARENT_ID":9343.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"\"Tsz Wo \\(Nicholas\\), Sze\" <s29752-hadoopdev@yahoo.com>",
        "TAGS":"not-ak",
        "BODY":"agree step forward distributed namespace regard nicholas dhruba borthakur hdfs dev hadoop apache org cc sradia yahoo inc com doug cutting sent wed april subject discus merge federation branch hdfs trunk feel making datanode talk multiple namenodes valuable especially plenty storage available single datanode machine think tb tb single namenode enough memory hold file metadata large cluster memory feature dire need could put good use starting yesterday thanks dhruba"
    },
    "34424":{
        "ID":9344,
        "MESSAGE_ID":"4DB79ED9.9020205@apache.org",
        "PARENT_ID":9334.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Doug Cutting <cutting@apache.org>",
        "TAGS":"not-ak",
        "BODY":"suresh sanjay thank much addressing question cheer doug"
    },
    "34425":{
        "ID":9343,
        "MESSAGE_ID":"BANLkTim0zu6X6gNT9XwpB1iYzcT_hGhfGw@mail.gmail.com",
        "PARENT_ID":9342.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Dhruba Borthakur <dhruba@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"feel making datanode talk multiple namenodes valuable especially plenty storage available single datanode machine think tb tb single namenode enough memory hold file metadata large cluster memory feature dire need could put good use starting yesterday thanks dhruba"
    },
    "34426":{
        "ID":9342,
        "MESSAGE_ID":"BANLkTi=2ss0xiwnSQ0HgkiXBwRkC=HUcOw@mail.gmail.com",
        "PARENT_ID":9341.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Konstantin Boudnik <cos@apache.org>",
        "TAGS":"not-ak",
        "BODY":"sanjay assume outlined change earlier version hdfs upgrads federation version right co"
    },
    "34428":{
        "ID":9340,
        "MESSAGE_ID":"BANLkTi=_NF5AwLWs=qUNWSvwwhzL1HaxpA@mail.gmail.com",
        "PARENT_ID":9334.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"doug please reply back planning commit tonight would like avoid unnecessary merge work also avoid redo merge svn organized"
    },
    "34434":{
        "ID":9334,
        "MESSAGE_ID":"BANLkTinjCYXansXfay_jo=MetGScmpkSBQ@mail.gmail.com",
        "PARENT_ID":9316.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"suresh srinivas <srini30005@gmail.com>",
        "TAGS":"existence",
        "BODY":"doug federation complementary symlink approach could choose provide integrated namespace using symlinks however client side mount table seems better approach many reason unlike symbolic link client side mount table choose go right namenode based configuration avoids unnecessary rpcs namenodes discover targer symlink unavailability namenode symbolic link configured affect reaching symlink target symbolic link need configured every namenode cluster future change symlinks need propagated multiple namenodes client side mount table information central configuration deployment still want use symbolic link federation preclude run multile datanode process per storage box several advantage using single datanode large number namenodes say cost running separate datanodes term process resource memory huge disk management storage utilization using single datanode much better complete view storage approach proposing several cluster manage however federation datanodes single cluster single configuration operationally easier manage performance reliability component ecosystem depend true namenode mostly unchanged feature read write pipeline unchanged change mainly datanode storage fsdataset directory disk scanner another level incorporate block pool id hierarchy significant change cause performance stability concern datanodes use separate thread per nn like existing thread communicates nn regard testing passed test hadoop test mostly integration test pure unit test test extensive also testing branch last month qa validation reflects production environment found system stable performing well found blocker branch far hdfs open year also sent email merge around month ago subtasks worked last couple month hdfs given enough time ask question email day planning merge branch trunk seems late regard suresh"
    },
    "34436":{
        "ID":9332,
        "MESSAGE_ID":"4DB6F6F5.1090000@syncsort.com",
        "PARENT_ID":9331.0,
        "SUBJECT":"Re: A pluggable external sort for Hadoop MR",
        "SENT_FROM":"\"Asokan, M\" <masokan@syncsort.com>",
        "TAGS":"existence",
        "BODY":"hi chris overall elapsed time run sort depends many factor sort algorithm follow data flow mr point sorting start map phase point pair available reduction reduce phase cpu io intensive activity happening right passing data external process add cpu cycle however well engineered implementation overall process cut elapsed time experiment prototype implementation able cut elapsed time run huge sort gb modest cluster node besides external sorter provide additional functionality hadoop example map side external sorter process support filtering reformatting aggregation single process performance optimized multicore system current mr framework filtering reformatting happen sorting operation sequential nature"
    },
    "34437":{
        "ID":9331,
        "MESSAGE_ID":"B3F32D36-EEFE-4119-A97D-2982E4D4134B@gmail.com",
        "PARENT_ID":9330.0,
        "SUBJECT":"Re: A pluggable external sort for Hadoop MR",
        "SENT_FROM":"Christopher Smith <cbsmith@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"worried overhead shoving data external sort facility would outweigh benefit algo chris"
    },
    "34438":{
        "ID":9330,
        "MESSAGE_ID":"4DB6E5F1.8030900@syncsort.com",
        "PARENT_ID":null,
        "SUBJECT":"A pluggable external sort for Hadoop MR",
        "SENT_FROM":"\"Asokan, M\" <masokan@syncsort.com>",
        "TAGS":"existence",
        "BODY":"hi submitting notice intent contribute hadoop community behalf syncsort inc www syncsort com interface external sorter although hadoop mr map reduce provides user pluggable inputformat mapper partitioner combiner reducer outputformat provide plug external sorter limited support plug sorter class map phase merge logic reduce phase changed also sorting process tightly coupled framework goal project decouple sorting process contribute defined clean interface allow developer easily plug external sorter interface interface independent syncsorts proprietary software product intended contributed following motivating factor project order significance external sort plug promote innovative implementation developer expertise sort algorithm hadoop developer experiment different sort implementation map reduce phase without modifying framework code external implementation sort well optimized take advantage hardware architecture compared pure java implementation hadoop hadoop implementation sort self tuning user may overwhelmed many parameter specified tune performance sort one top memory consumer mr child jvms sort user advised set reasonably high value mx argument jvm failure result job termination external sorter implemented subprocess adjust memory usage automatically make sure fail besides memory needed mr child jvm reduced meager mb performance hadoop sort may mercy jvm see lucene hadoop jira related performance regression issue external sorter implemented run subprocess suffer type problem etl tool vendor complement hadoop strength namely hdfs job scheduling restartability etc sort technology enable hadoop make inroad shop use traditional etl tool goal project primary goal project allow user seamlessly plug external sorter existing mr application contrast approach taken hce see mapreduce hadoop jira requires user code mr application secondary goal enable user existing etl tool exploit hadoop distributed processing framework confident interest contribution code hadoop community intend provide reference implementation interface defined design reference implementation us gnu sort command sorting text data asokan asokan technology architect data integration syncsort incorporated tice boulevard woodcliff lake nj masokan syncsort com www syncsort com rethink economics data attention information contained message including file transmitted message may contain proprietary trade secret confidential legally privileged information pricing information contained message file transmitted message always confidential shared third party without prior written approval syncsort message intended read individual entity addressed designee reader message intended recipient notice use disclosure copying distribution message form strictly prohibited received message error please immediately notify sender syncsort destroy copy message possession custody control"
    },
    "34441":{
        "ID":9327,
        "MESSAGE_ID":"BANLkTi=Le=weOU8LNqFHTChtku0m56XqVg@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"[VOTE] Release Apache Cassandra 0.8.0-beta1 artifacts in Maven Central",
        "SENT_FROM":"Stephen Connolly <stephenc@apache.org>",
        "TAGS":"process",
        "BODY":"per apache release rule artifact voted released thus missed main release vote tag onto end artifact want release url note tar gz file different main src tar gz includes patch bin tar gz different timestamps javadocs previously reusing eric tar gz hacking patch overwrite think better actual source used generate artifact make staging repo given cql driver jar version number everything else going work beta jar anyway please vote see url go ahead release issue release something think merit spinning release vote open hour unless pmc say finish quicker met binding minimum stephen binding vote cassandra anyway"
    },
    "34468":{
        "ID":9300,
        "MESSAGE_ID":"BANLkTikJ=qaUcO+okAHUkGKkij-He0c70w@mail.gmail.com",
        "PARENT_ID":9291.0,
        "SUBJECT":"Re: [Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Dhruba Borthakur <dhruba@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"given organizing svn tree soon fact design implementation complete let merge trunk dhruba"
    },
    "34477":{
        "ID":9291,
        "MESSAGE_ID":"C9D6FF6E.19BFC%sureshms@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"[Discuss] Merge federation branch HDFS-1052 into trunk",
        "SENT_FROM":"Suresh Srinivas <sureshms@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"week ago sent email progress hdfs federation development hdfs branch happy announce task related feature development complete ready integrated trunk merge patch attached hdfs jira hudson test pas except two test failure fix unit test failure trunk post merge plan completing merge trunk early next week would like soon possible avoid keep patch date time consuming also avoids need merging due svn change proposed nigel scheduled late next week comment welcome regard suresh"
    },
    "34565":{
        "ID":9203,
        "MESSAGE_ID":"BANLkTinQECCs0w0ork-X09qEmPZOaVDMgQ@mail.gmail.com",
        "PARENT_ID":9202.0,
        "SUBJECT":"Re: [ANN] Branched; freeze in effect",
        "SENT_FROM":"Sylvain Lebresne <sylvain@datastax.com>",
        "TAGS":"not-ak",
        "BODY":"done thanks"
    },
    "34567":{
        "ID":9201,
        "MESSAGE_ID":"BANLkTimkWxgx1ey8YHzSOu4=vKwTaE82Zw@mail.gmail.com",
        "PARENT_ID":9199.0,
        "SUBJECT":"Re: [ANN] Branched; freeze in effect",
        "SENT_FROM":"Sylvain Lebresne <sylvain@datastax.com>",
        "TAGS":"process",
        "BODY":"ok know sound like already starting ask favor would possible merge cassandra cassandra committed trunk honestly though freeze would effect later today understand strict freeze work useful patch part going time due sleeping freeze due living different time zone sylvain"
    },
    "34568":{
        "ID":9200,
        "MESSAGE_ID":"BANLkTinWNsjc+43OyF8Xgrsey-h251E4ZA@mail.gmail.com",
        "PARENT_ID":9199.0,
        "SUBJECT":"Re: [ANN] Branched; freeze in effect",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"not-ak",
        "BODY":"think one good candidate even specific url peter schuller"
    },
    "34569":{
        "ID":9199,
        "MESSAGE_ID":"1302498330.3608.48.camel@erebus.lan",
        "PARENT_ID":null,
        "SUBJECT":"[ANN] Branched; freeze in effect",
        "SENT_FROM":"Eric Evans <eevans@rackspace.com>",
        "TAGS":"process",
        "BODY":"lady gent pursuant plan branched freeze effect first foremost mean new feature idea release week know need bug count trend downward difficult enough without feature scope creep also need maintain compatibility believe important set expectation beta user feel certain unarguably release ready last reasonably straightforward upgrade one next including final see serious testing period upshot anything get need wait month trunk still open business go nut would like get going first beta soon possible week would great know issue dealt happens please let know thanks everyone url url common sense consensus prevail course eric evans eevans rackspace com"
    },
    "34615":{
        "ID":9153,
        "MESSAGE_ID":"AANLkTikwFvGGHAjWV9qFWrbPqrL8Ebf0HLvrTN8RgNnU@mail.gmail.com",
        "PARENT_ID":9152.0,
        "SUBJECT":"Re: PHP Cassandra CQL driver",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"really make sense mutation"
    },
    "34616":{
        "ID":9152,
        "MESSAGE_ID":"SNT133-ds7AA2AB054B7AF32D8236A82BD0@phx.gbl",
        "PARENT_ID":9151.0,
        "SUBJECT":"Re: PHP Cassandra CQL driver",
        "SENT_FROM":"Courtney Robinson <sabco@live.co.uk>",
        "TAGS":"not-ak",
        "BODY":"comment inline"
    },
    "34626":{
        "ID":9142,
        "MESSAGE_ID":"556031FB-8E54-4CE6-A837-0679E0BF0569@onesite.com",
        "PARENT_ID":9138.0,
        "SUBJECT":"Re: PHP Cassandra CQL driver",
        "SENT_FROM":"Jake Farrell <JFarrell@onesite.com>",
        "TAGS":"existence, technology",
        "BODY":"pdo would work great easily integrate thrift make talking back cassandra easy also core made shared object php python driver could simple wrapper called thus giving cql php python driver inheriting core would love help project avenue take"
    },
    "34631":{
        "ID":9137,
        "MESSAGE_ID":"SNT133-ds22BCB71DCAA0399EEA0E682BD0@phx.gbl",
        "PARENT_ID":9134.0,
        "SUBJECT":"Re: PHP Cassandra CQL driver",
        "SENT_FROM":"Courtney Robinson <sabco@live.co.uk>",
        "TAGS":"not-ak",
        "BODY":"last post dev list moving client dev agreed reverse eng java driver dave dome class interface based python version he going commit get chance nick telford sent tuesday march pm dev cassandra apache org client dev cassandra apache org cc courtney robinson subject php cassandra cql driver say huge fan reverse engineering interface especially java implementation think would better using driver particular python driver inspiration craft interface fit php regard injection saw someone state red herring client concern may true experience teach pushing responsibility client dangerous due many implementation least possibility injection attack considered suggestion mean heavily mitigating damage attack would permit single query time remove token trusted administrative client application gui console really permit issuing multiple query like client could decompose query separate query issue individually might also helpful rpc interface permit executing batch query list reduce network overhead finally take conversation client dev list rather add noise dev list regard nick telford"
    },
    "34634":{
        "ID":9134,
        "MESSAGE_ID":"AANLkTik6Op=87=DLjQO-X=3_AQ1uL7Akk16OtkySjLcS@mail.gmail.com",
        "PARENT_ID":9133.0,
        "SUBJECT":"Re: PHP Cassandra CQL driver",
        "SENT_FROM":"Nick Telford <nick.telford@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"say huge fan reverse engineering interface especially java implementation think would better using driver particular python driver inspiration craft interface fit php regard injection saw someone state red herring client concern may true experience teach pushing responsibility client dangerous due many implementation least possibility injection attack considered suggestion mean heavily mitigating damage attack would permit single query time remove token trusted administrative client application gui console really permit issuing multiple query like client could decompose query separate query issue individually might also helpful rpc interface permit executing batch query list reduce network overhead finally take conversation client dev list rather add noise dev list regard nick telford"
    },
    "34635":{
        "ID":9133,
        "MESSAGE_ID":"SNT133-ds7B0B8ADDABF4FA9C4593382BD0@phx.gbl",
        "PARENT_ID":null,
        "SUBJECT":"PHP Cassandra CQL driver",
        "SENT_FROM":"Courtney Robinson <sabco@live.co.uk>",
        "TAGS":"existence, process, technology",
        "BODY":"okay dave gardner nick telford met london cassandra meetup keen getting php cql driver done decided use github working mail mainly raise awareness well ask question throw thing came particular order remember firstly already taken consideration cql implicitly mean injection may become problem secondly much problem suggestion going java python version significant lack doc think moment eric evans may one moulding cql together going get many driver done help devs scare potential devs close overly familiar cassandra internals devs interested contributing php cassandra phpcad driver github url also wondered actually making official driver stable state let eric one committers know particularly long winded process followed code github moment reversed engineered version java impl php think agreed jdbc like lot method etc necessary needed dave written class interface python version well changing base code soon get time sure thing possibly important forgotten since meetup come light due time driving force behind moment seems need man power wed like get bit momentum behind kick driver language anyone wishing contrib get ref good link explaining cql syntax posted yesterday believe url"
    },
    "34909":{
        "ID":8859,
        "MESSAGE_ID":"F2D67479-B641-4979-8689-74A31791F63D@gmail.com",
        "PARENT_ID":8807.0,
        "SUBJECT":"Re: SEVERE Data Corruption Problems",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"dan wondered chance try context data jeremy"
    },
    "34961":{
        "ID":8807,
        "MESSAGE_ID":"4d557d3b.8782e50a.247f.250d@mx.google.com",
        "PARENT_ID":8790.0,
        "SUBJECT":"RE: RE: SEVERE Data Corruption Problems",
        "SENT_FROM":"\"Dan Hendry\" <dan.hendry.junk@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"chronology turned current cluster early december starting rc thereabouts ran number problem able get thing le ironed upgrading new version pretty quickly released problem week time using ran frequent compaction never repair really needed workload read repair work fine use expiring column sometime mid january hit first instance sstable corruption able fix thing deleting everything related problematic cf problematic node sstables hint column family saved cache work ran repair failed url possibly due cassandra able delete sstables run cleanup compaction truncate unimportant cf get service operating week two ago created new cf turned problematic term sstable corruption since creating cf via cli node running repair run ring change moving bootstrapping decommissioning unless misunderstand cassandra think related seeing steadily increasing rate cassandra exception multiple cf read failing compaction failing hinted handoff failing inability export sstablesjson etc even understand rc bug hit back day still around given running week ran multiple full compaction without issue regardless could affected new cf seen improvement one node put branch seeing behaviour multiple failed compaction per bug filed url still investigating read exception jonathan suggested completely clean install would lot work given would migrate data application level would willing confidence would help example one sstable node running notice bunch seemingly fine sstables problem reading could determine test rigorous happened overnight either created compacted least given example cassandra cassandra fix get compacted new sstable completely ed info compactionexecutor compactionmanager java line compacting classpath path var lib cassandra data kikmetrics processingbuckets data db classpath le sstablereader path var lib cassandra data kikmetrics processingbuckets data db classpath path var li cassandra data kikmetrics processingbuckets data db classpath ssandra io sstable sstablereader path var lib cassandra data kikmetrics pr ocessingbuckets data db info compactionexecutor compactioniterator java line compacting large row fecfef byte incrementally info compactionexecutor compactionmanager java line compacted var lib cassandra data kikmetrics processingbuckets tmp data db original byte key time sstable appear log unitll info compactionexecutor compactionmanager java line compacting classpath path var lib cassandra data kikmetrics processingbuckets data db classpath le sstablereader path var lib cassandra data kikmetrics processingbuckets data db classpath path var li cassandra data kikmetrics processingbuckets data db classpath ssandra io sstable sstablereader path var lib cassandra data kikmetrics pr ocessingbuckets data db note file output minor change made obviously error compactionexecutor abstractcassandradaemon java line fatal exception thread thread compactionexecutor main java io ioerror java io ioexception file var lib cassandra data kikmetrics processingbuckets data db classpath sstableidenti tyiterator java classpath keyscanningiterator next ssta blescanner java classpath keyscanningiterator next ssta blescanner java classpath sstablescanner java classpath sstablescanner java classpath collatingiter ator java classpath collatingit erator java classpath collatingite rator java classpath reducingiterator jav classpath abstractiterator java classpath abstractiterator java classpath filter iterator java classpath filteriterat java classpath compactionmanager jav classpath call compactionmanager java classpath call compactionmanager java java util concurrent futuretask sync innerrun futuretask java java util concurrent futuretask run futuretask java java util concurrent threadpoolexecutor worker runtask threadpoolexecutor ja va java util concurrent threadpoolexecutor worker run threadpoolexecutor java java lang thread run thread java caused java io ioexception file var lib cassandra data kikmetrics processingbuckets data db caused java io eofexception attempted skip byte skipped classpath indexhelper java classpath sstableidenti tyiterator java info compactionexecutor compactionmanager java line compacting classpath path var lib cassandra data kikmetrics processingbuckets data db classpath le sstablereader path var lib cassandra data kikmetrics processingbuckets data db classpath path var li cassandra data kikmetrics processingbuckets data db classpath ssandra io sstable sstablereader path var lib cassandra data kikmetrics pr ocessingbuckets data db etc trying export processingbuckets data db using sstablejson get following exception thread main java io ioerror java io eofexception classpath columnsortedmap java classpath columnsortedmap java classpath columnsortedmap java java util concurrent concurrentskiplistmap buildfromsorted concurrentskiplis tmap java java util concurrent concurrentskiplistmap concurrentskiplistmap java classpath supercolumn java classpath supercolumn java classpath indexedblockfetche getnextblock indexedslicereader java classpath indexe dslicereader java classpath indexe dslicereader java classpath abstractiterator java classpath abstractiterator java classpath sstables liceiterator java classpath sstableexport java classpath sstableexport java classpath sstableexport java classpath sstableexport java classpath sstableexport java caused java io eofexception java io randomaccessfile readbyte randomaccessfile java classpath bytebufferutil jav classpath bytebufferutil java classpath columnserializer java classpath columnsortedmap java dan aaron morton mailto aaron thelastpickle com sent february dev cassandra apache org subject severe data corruption problem look like bloom filter row corrupted happen read read one row upgrade assuming nightly build run anything like nodetool repair tried asking cassandra irc room see comitters around aaron"
    },
    "34976":{
        "ID":8792,
        "MESSAGE_ID":"AANLkTinsOFsyP4ErnzyPgBsjDh4pLJSfGwP5yJX-N6Wi@mail.gmail.com",
        "PARENT_ID":8789.0,
        "SUBJECT":"Re: SEVERE Data Corruption Problems",
        "SENT_FROM":"Jake Luciani <jakers@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"show sstable listing name data db"
    },
    "34977":{
        "ID":8791,
        "MESSAGE_ID":"AANLkTinAsdSUOOZPV_2Ra-iqn86-6CNzNEdPW7RwYc8G@mail.gmail.com",
        "PARENT_ID":8790.0,
        "SUBJECT":"Re: RE: SEVERE Data Corruption Problems",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"look like either broke upgrading older sstables url unlikely system hosed enough probably need start fresh install"
    },
    "34978":{
        "ID":8790,
        "MESSAGE_ID":"f15025e0-6dd1-693d-f825-f661d07498bc@me.com",
        "PARENT_ID":8789.0,
        "SUBJECT":"Re: RE: SEVERE Data Corruption Problems",
        "SENT_FROM":"Aaron Morton <aaron@thelastpickle.com>",
        "TAGS":"not-ak",
        "BODY":"look like bloom filter row corrupted happen read read one row upgrade assuming nightly build run anything like nodetool repair tried asking cassandra irc room see comitters around aaron"
    },
    "34979":{
        "ID":8789,
        "MESSAGE_ID":"4d548077.d44de50a.0e90.079e@mx.google.com",
        "PARENT_ID":8780.0,
        "SUBJECT":"RE: SEVERE Data Corruption Problems",
        "SENT_FROM":"\"Dan Hendry\" <dan.hendry.junk@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"upgraded one node logging exception like mad thousand per minute like fairly new error readstage abstractcassandradaemon java line fatal exception thread threa readstage main java io ioerror java io eofexception classpath sstablena mesiterator java classpath nam esqueryfilter java classpath queryfil ter java classpath columnfamilysto java classpath columnfamilystore java classpath columnfamilystore java classpath table java classpath slicebynamesreadcomma nd java classpath localreadrunnable runmaythrow stor ageproxy java classpath wrappedrunnable java java util concurrent threadpoolexecutor worker runtask threadpoolexecutor ja va java util concurrent threadpoolexecutor worker run threadpoolexecutor java java lang thread run thread java caused java io eofexception java io datainputstream readint datainputstream java classpath bloomfilterseri alizer java classpath bloomfilterseri alizer java classpath indexhelper java classpath sstablename siterator java classpath sstablena mesiterator java dan"
    },
    "34987":{
        "ID":8781,
        "MESSAGE_ID":"4d533682.d44de50a.1f21.20c7@mx.google.com",
        "PARENT_ID":8780.0,
        "SUBJECT":"RE: SEVERE Data Corruption Problems",
        "SENT_FROM":"\"Dan Hendry\" <dan.hendry.junk@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"put two node really mean cassandra looked bug report patch see related problem performing bootstrap repair since one problematic cf created also looked resolved issue see anything thought could related would love provide test cluster actually one development environment working flawlessly exact cassandra version application code java version difference far lower write load ec instead physical machine one reason believe hitting strange race edge condition somewhere looking user list seems least one person type problem url although seen second error possibly range slice first error look eerily familiar dan"
    },
    "34988":{
        "ID":8780,
        "MESSAGE_ID":"AANLkTikFFHcpHgWhNF2xCTD=s=T8Ly7UzETS8grYAASd@mail.gmail.com",
        "PARENT_ID":8779.0,
        "SUBJECT":"Re: SEVERE Data Corruption Problems",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi dan would useful test branch instead least chasing known fixed bug like cassandra say lot people seeing would also useful provide kind test harness say point cluster within hour"
    },
    "34989":{
        "ID":8779,
        "MESSAGE_ID":"4d5315b5.1d4de50a.7aad.1c88@mx.google.com",
        "PARENT_ID":null,
        "SUBJECT":"SEVERE Data Corruption Problems",
        "SENT_FROM":"\"Dan Hendry\" <dan.hendry.junk@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"occuring node info compactionexecutor compactionmanager java line compacting classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db classpath path var lib cassandra data kikmetrics usereventsbyevent data db lot usual logging many compacting large row incrementally error compactionexecutor abstractcassandradaemon java line fatal exception thread thread compactionexecutor main java lang runtimeexception java io ioexception negative seek offset classpath keyscanningiterator next sstablescanner java classpath keyscanningiterator next sstablescanner java classpath sstablescanner java classpath sstablescanner java classpath collatingiterator java classpath collatingiterator java classpath collatingiterator java classpath reducingiterator java classpath abstractiterator java classpath abstractiterator java classpath filteriterator java classpath filteriterator java classpath compactionmanager java classpath call compactionmanager java java util concurrent futuretask sync innerrun futuretask java java util concurrent futuretask run futuretask java java util concurrent threadpoolexecutor worker runtask threadpoolexecutor java java util concurrent threadpoolexecutor worker run threadpoolexecutor java java lang thread run thread java caused java io ioexception negative seek offset java io randomaccessfile seek native method classpath bufferedrandomaccessfile java classpath bufferedrandomaccessfile java java io randomaccessfile readbyte randomaccessfile java classpath fbutilities java classpath fbutilities java classpath keyscanningiterator next sstablescanner java"
    },
    "35572":{
        "ID":8196,
        "MESSAGE_ID":"m239q3dd1q.fsf@dhcp-01.borud.no",
        "PARENT_ID":null,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Bjorn Borud <bborud@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"gary dusbabek writes think client library within scope project though understand reluctance towards curating official list think least providing guidance might appropriate allowing named user rate comment pro con different library user ought named anonymous upvote downvote conveys next meaningful information bja aarn"
    },
    "35601":{
        "ID":8167,
        "MESSAGE_ID":"c41805c2-2ed1-65d1-d083-ca125382b6a5@me.com",
        "PARENT_ID":8163.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Aaron Morton <aaron@thelastpickle.com>",
        "TAGS":"not-ak",
        "BODY":"agree importance thrift api starting using cassandra found idiomatic api hid true nature cassandra felt like trying learn rdbms work learning something like java hibernate linq work imho cassandra thrift avro api like rdbms sql language thanks aaron"
    },
    "35602":{
        "ID":8166,
        "MESSAGE_ID":"D02B0932-8708-4D38-8271-DF40676B2F65@gmail.com",
        "PARENT_ID":8150.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think great start cleaning wiki especially area beginner coming might nice clean faq common page"
    },
    "35605":{
        "ID":8163,
        "MESSAGE_ID":"AANLkTin+5XQ+jNudMm7FwdTinyHuL=cPh3yTqJQv_=kv@mail.gmail.com",
        "PARENT_ID":8157.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Hannes Schmidt <hannes@eyealike.com>",
        "TAGS":"existence",
        "BODY":"probably chiming little late liked thrift api documentation prominent place canonical reference describes logical level system without information would much harder understand use hector client without information would able pinpoint bug libcassandra language platform independent interface specification worth gold opinion moving client umbrella project would increase danger vetted client source becomes de facto reference would temptingly easy modify server client lock step change wire format without bothering document change also like seeing competition idea client world think take time api mature settle wider variety client architecture need evaluated set vetted client chosen"
    },
    "35611":{
        "ID":8157,
        "MESSAGE_ID":"AANLkTinhKaZT5vqF1x6Vi_oeoMqCQFDz=X+qcEjAYy=e@mail.gmail.com",
        "PARENT_ID":8141.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Simon Reavely <simon.reavely@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"maybe need listing criterion client library includes thing like example considered enough get folk started connection read writes etc addition ran suggested maintainer last release next release support forum number committers number user spring support jpa support etc would also using column well library maintainer satisfy listing criterion get listed need decide criterion understanding date frequently maintained library think full good example essential said actually hierarchical organization form tested verified client library list others keep thing fair question would something get tested verified opensource community expect library developer could take even testing verification part main build way form plugin test suite level thinking shallow cent penny topic cheer simon"
    },
    "35616":{
        "ID":8152,
        "MESSAGE_ID":"AANLkTi=ZHKDrewACbcxS3wPT36N7jG9zPpC9vfCiHmrP@mail.gmail.com",
        "PARENT_ID":8150.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Gary Dusbabek <gdusbabek@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"say go"
    },
    "35617":{
        "ID":8151,
        "MESSAGE_ID":"AANLkTinpsJc2DTUeVZP7jC3znqrf4YcZqUY-1hiSc-cn@mail.gmail.com",
        "PARENT_ID":8150.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think much least uncontroversial go"
    },
    "35618":{
        "ID":8150,
        "MESSAGE_ID":"AANLkTi=Nf5Sd-U+V8ogG+dy5y3a2DjxVr5jqck2zG+n8@mail.gmail.com",
        "PARENT_ID":8125.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"not-ak",
        "BODY":"without weighing remainder discussion regardless happens people think least making minor structural change wiki example putting thrift api section user documentation pretty vocal point sounding repetitious recommending application use higher level client think pretty easy accidentally land thrift documentation browse around would happy try tweak bit stuff like moving thrift ref trying find place wiki link thrift api page consider whether least link etc peter schuller"
    },
    "35624":{
        "ID":8144,
        "MESSAGE_ID":"AANLkTik3RzHUuaUJAHBtqnObZJLHRRHQbasWZmHCY2A9@mail.gmail.com",
        "PARENT_ID":8143.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Tyler Hobbs <tyler@riptano.com>",
        "TAGS":"not-ak",
        "BODY":"daniel find wiki completely unnavigable cleaner clearer documentation client including possible per language page might solve problem tyler"
    },
    "35626":{
        "ID":8142,
        "MESSAGE_ID":"AANLkTimjocZsL2H1dgFU1d2q5Seg=fVJ_xFw4stmwiDm@mail.gmail.com",
        "PARENT_ID":8137.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Daniel Lundin <dln@eintr.org>",
        "TAGS":"not-ak",
        "BODY":"think one issue lack liveness web end project project web site feel like natural focal point ought client confusion might part artifact mongodb wiki work alright without much effort clear structure honesty look like raw moinmoin cassandra web site wiki confluence using common theme would coherent also encourage participation think client confusion think separate page wiki language library would work like mongodb language center best distill obvious place relevant people arrive contribute think project responsible endorsing maintaining client highlighting featuring favored option probably good though especially newcomer"
    },
    "35627":{
        "ID":8141,
        "MESSAGE_ID":"AANLkTi=WgiQnQvnhyQuO_oWrY6O_3W-CZ_h5Sqt0kVU4@mail.gmail.com",
        "PARENT_ID":8138.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Ran Tavory <rantav@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"developer one client library say competition keep library maintainer healthy long run creates value user keep competition fair certainly see jonathan point regarding level confusion newcomer reducing long fair chance client evolve point server provide better interface avro cql think improve overall client development eliminate need client always higher level nicer interface client provide plugins rd party spring solve confusion problem always client long cassandra keep evolving like transparency think present user enough data able decide mind even new comer would correct say generally folk would involved cassandra year better informed newcomer however sometimes hard make objective decision also hard make one size fit decision example client implement feature user make lot sense user need need transparent list feature tradeoff let user decide like paul idea table list library library set column maintainer last release next release support forum number committers number user spring support jpa support etc challenge keeping table date hand library maintainer keep row date signal voting made easily well part table think table would huge probably per language"
    },
    "35628":{
        "ID":8140,
        "MESSAGE_ID":"AANLkTik8b1oWdvzdPQXDHrqJhV6so7pSBmgXxemk=n6t@mail.gmail.com",
        "PARENT_ID":8137.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Tyler Hobbs <tyler@riptano.com>",
        "TAGS":"not-ak",
        "BODY":"actually specifically saying good option agreed"
    },
    "35629":{
        "ID":8139,
        "MESSAGE_ID":"AANLkTikv2sByg=jO3vxTB4JOSqycyyGP-EJBCtQ5BBiQ@mail.gmail.com",
        "PARENT_ID":8137.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"SriSatish Ambati <srisatish.ambati@gmail.com>",
        "TAGS":"existence",
        "BODY":"first last discussion need standard good client access database happened one early leading emergence sql standard fast forward today database data management software distributes server software without necessary client driver software access insert data whether form default client type driver etc one could argue data store incomplete without robust client library manipulate data notice end user still keep kept instance option install chosen client performs better work well support particular usecase well necessarily limit choice ups quality barrier distributing creating new client opposed contributing existing one default one make integration larger stack dead simple today power user writing robust feature ex thread connection pooling proper exception handling necessarily available client fragmented development leading poor overall experience say underlying coupling thrift client software could inadvertently upgrade modify thrift library leading bit chaos fine experimental stage sign matured stack good client limit power apache cassandra end drive user towards non free client software default client library maintained distributed server believe would make faster wider adoption apache cassandra bring lot new user workload goodness come asf thanks sri"
    },
    "35637":{
        "ID":8131,
        "MESSAGE_ID":"AANLkTin_T_iY+oftrag5=pQ2Pmgs0xo3Yw7ge7hKnHQF@mail.gmail.com",
        "PARENT_ID":8125.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Gary Dusbabek <gdusbabek@gmail.com>",
        "TAGS":"existence",
        "BODY":"develop cassandra database believe currently beyond scope project advocate third party client library actively developing client library think take upon advocating project bit arrogant reactive solution client library proliferation make think underlying problem ought fixed charge leveled cassandra api bear work denying first inclined agree work instead improve advocating official third party client library gary"
    },
    "35638":{
        "ID":8130,
        "MESSAGE_ID":"AANLkTi=J5gMLH-kz82TqRHmb3tkhjcLsrhM6X5JY3PMh@mail.gmail.com",
        "PARENT_ID":8129.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Tyler Hobbs <tyler@riptano.com>",
        "TAGS":"not-ak",
        "BODY":"personally like mongo driver page url like clear distinction preferred alternative client without lot clutter release date supported version make distinction though supported riptano section one option even encompass preferred client know enough active user maintainer language could put client democratic vote client maintainer willing voluntarily place client either official list community list perhaps client considered community supported unless selected say cassandra committers quality standard current best client language tyler"
    },
    "35640":{
        "ID":8128,
        "MESSAGE_ID":"AANLkTin9aE7xbq2Vu3d6wiJHtbEtcsmK0ZDDM8L_WtR0@mail.gmail.com",
        "PARENT_ID":8125.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"paul cannon <paul@riptano.com>",
        "TAGS":"not-ak",
        "BODY":"aggressive curation moving client tree"
    },
    "35641":{
        "ID":8127,
        "MESSAGE_ID":"9122E6F2-3F31-468F-BB29-454B83065387@gmail.com",
        "PARENT_ID":8125.0,
        "SUBJECT":"Re: Reducing confusion around client libraries",
        "SENT_FROM":"Jeremy Hanna <jeremy.hanna1234@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"including client dev list thought idea"
    },
    "35643":{
        "ID":8125,
        "MESSAGE_ID":"AANLkTikUvLGsnzVp-kmFGigxKvb6RerHpEzng8Ye67Kr@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Reducing confusion around client libraries",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence",
        "BODY":"status quo working way many question user list irc problem writing thrift code even well maintained client exist language choice user motivated enough ask instead tweeting thrift suck giving think driving people real client primarily problem solve cleanup wiki web site harder problem choice bad user perspective making people evaluate hector pelops fluentcassandra aquiles phpcassa simplecassie writing application time need make decision least amount experience cassandra base evaluation guiding sensible default failing user make click version control history see whether phpcassa actively maintained simplecassie vicious cycle since official client people quicker write instead contributing existing one leading proliferation often half baked client taking space wiki page getting started process take look ended url half abandoned new user would lot spelunking figure moving client tree would solve problem bad enough almost wrote email proposing would really prefer avoid subjecting client pmc voting process ticket tracking system etc instead think aggressively curate clientoptions page pick official client language move rest alternativeclients page would written stone someone wrote twisted client think better telephus discussion whether move new one need default choice take pain getting started cassandra jonathan elli project chair apache cassandra co founder riptano source professional cassandra support url"
    },
    "35917":{
        "ID":7851,
        "MESSAGE_ID":"1288364863.932525621@192.168.2.228",
        "PARENT_ID":7836.0,
        "SUBJECT":"Re: NoSQL, YesCQL?",
        "SENT_FROM":"\"Stu Hood\" <stu.hood@rackspace.com>",
        "TAGS":"property",
        "BODY":"let preface saying fact look like sql bother think would terrible thing focus something contrib sure reasonable language day way define look like dsl giving people text dsl subject injection attack type checked without support client driver anyway brain dead reason client interact sql server programmatically via library easier way interact via string concatenation least way library performing concatenation regarding performance assuming optimized rpc library yet avro thrift getting better serializing string back never performant using pre parsed representation statement side oh add prepared statement poppycock expecting stable library api pre reasonable neither devs user expect stability yet still able guarantee compatibility within major version stated problem backwards compatibility hard provide core complaint changing text based serialization format sexy name order add backwards compatibility severe overreaction problem instead would propose evolving api manner simplifies thanks stu"
    },
    "35923":{
        "ID":7845,
        "MESSAGE_ID":"AANLkTimyoqHybBG0oU0ovRF+ceJfarYkeKjpJ=s_FyDw@mail.gmail.com",
        "PARENT_ID":7843.0,
        "SUBJECT":"Re: NoSQL, YesCQL?",
        "SENT_FROM":"Vladimir Vivien <vladimir.vivien@gmail.com>",
        "TAGS":"existence",
        "BODY":"something simpler approachable query api hide away drudgery thrift avro rpc api"
    },
    "35925":{
        "ID":7843,
        "MESSAGE_ID":"AANLkTi=J_D5UFf9p_3MuvFFxM_Tnk0qXdYJH-cRy9BNa@mail.gmail.com",
        "PARENT_ID":7830.0,
        "SUBJECT":"Re: NoSQL, YesCQL?",
        "SENT_FROM":"Vincent Maher <vincent@vincentmaher.com>",
        "TAGS":"technology",
        "BODY":"hi think great idea take thrift bulk nb installation pain lie add query language php extension think cassandra go mainstream still need write proper blog post team know happily using cassie sort stuff motribe moment work changing life bit bit many people appreciate realise kind regard vincent maher founder motribe url url accident happen people take accident personal insult corleone blog url facebook url twitter url mobile google talk flobby gmail com skype name vincentmaher"
    },
    "35927":{
        "ID":7841,
        "MESSAGE_ID":"C8EF7C2F.10A46%ksankar42@gmail.com",
        "PARENT_ID":7839.0,
        "SUBJECT":"Re: NoSQL, YesCQL?",
        "SENT_FROM":"Krishna Sankar <ksankar42@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"bdql big data ql noql cheer"
    },
    "35934":{
        "ID":7834,
        "MESSAGE_ID":"4CC9EF27.5050908@pobox.com",
        "PARENT_ID":7830.0,
        "SUBJECT":"Re: NoSQL, YesCQL?",
        "SENT_FROM":"Chip Salzenberg <chip@pobox.com>",
        "TAGS":"existence, property",
        "BODY":"short answer yes please still want side channel minimum overhead long answer query language work reliably data binding assistance insert bobby table xkcd however wonderful property evolving aggressively without requiring upgrade driver plumbing course emphatically true anything like current thrift avro interface say yes"
    },
    "35938":{
        "ID":7830,
        "MESSAGE_ID":"1288298407.5962.25.camel@erebus.lan",
        "PARENT_ID":null,
        "SUBJECT":"NoSQL, YesCQL?",
        "SENT_FROM":"Eric Evans <eevans@rackspace.com>",
        "TAGS":"existence, technology",
        "BODY":"know everyone else pretty dissatisfied api situation time used opinion problem thrift answer avro still prefer avro thrift dependency go come conclusion real problem object oriented rpc pattern share common used think necessary burden order expose full power query api client agnostic manner job third party library wrap layer create stable idiomatic interface used think vibrant ecosystem idiomatic library would emerge truth seen quite bit proliferation little critical mass construed criticism levied library maintainer contrary think done amazing job thing considered opinion rpc interface push way many implementation detail client side making brittle unstable result unnecessarily complex library forced move lock step cassandra release never backward compatible consistently broken development cycle think provide client maintainer user better experience one solution implement server side query language simple language driver manage common functionality consistent way statement preparation connection pooling etc library maintainer would build idiomatic interface top imagine remove metric crap ton code process end playing exactly enough simple read writes stubbed driver java python seeking community feedback gauge interest satisfy much needed desire bike would url need sure checking cql branch implemented avro interface need pas flag launching daemon far complete surely quite buggy stage take preview demonstration meant starting point discussion bit documentation syntax see url system test test system test cql py give basic idea assuming avro python module installed able cd driver py python column timestamp name value hello ttl none key chewing brimming idea let dust settle email going thought dear cliff moon apologize right eric evans eevans rackspace com"
    },
    "35973":{
        "ID":7795,
        "MESSAGE_ID":"AANLkTinX-2heN9EJdmGM60be_dZBQ9Xp72=gcT=Z7Npt@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra Connection Pool",
        "SENT_FROM":"Tristan Tarrant <tristan.tarrant@gmail.com>",
        "TAGS":"existence, technology",
        "BODY":"dear first let introduce rather developer infinispan cassandra cachestore url allows persistence infinispan cache cassandra keyspaces developing cachestore needed connection pool managing thrift connection since none existed apart one developed within project hector pelops lucandra decided take filip hanik excellent jdbc pool url port cassandra development connection pool two need solved locally split classpath class hierarchy apache cassandra jar apache cassandra thrift jar standard classpath interface defined package classpath import classpath import classpath public interface cassandrathriftdatasource cassandra client getconnection throw texception void releaseconnection cassandra client connection alternative close method cassandra client interface could overridden return connection pool instead directly closing underlying transport although believe might require change thrift would provide standard method client library obtain release connection via library via jndi etc would patch head well accepted thanks suggestion tristan"
    },
    "36024":{
        "ID":7744,
        "MESSAGE_ID":"AANLkTi=RCiEuvtO9VbP9YmGpJHG0HyT_tBBLGqUHhajk@mail.gmail.com",
        "PARENT_ID":7684.0,
        "SUBJECT":"Re: Distributed Counters Use Cases",
        "SENT_FROM":"Ben Standefer <benstandefer@gmail.com>",
        "TAGS":"existence",
        "BODY":"ryan thanks insight fwiw simplegeo use case similar nd use case ryan mentioned want rollups time geography facet customer record important benefit cassandra brings ability handle large number row detailed rollups secondary ability increment high volume increment buffering ryan mentioned seems highly valuable dirty burrito inc burrito sold mission total meat chicken beef chorizo veggie soma total meat chicken beef chorizo veggie marina total meat chicken beef chorizo veggie would roll many different time period minute hour day geographic boundary neighborhod zip city state metric burrito sold order total delivery time property meat male female order size smart schema think store update data real time make reasonably query able much simpler easier batch processing kind reporting novel special cost produce data become extremely low futz hadoop batch processing broken job etc looked way store increment new column possibly kind high level compaction come clean become unwieldy app level plan messing new future well offering beta test increment buffering ryan mentioned ben standefer"
    },
    "36073":{
        "ID":7695,
        "MESSAGE_ID":"AANLkTimaGnx12-yVJoHuNDroXJaBDALLTv1_up+FuWUv@mail.gmail.com",
        "PARENT_ID":7692.0,
        "SUBJECT":"Re: [DISCUSSION]: Future of Hadoop system testing",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"existence, technology",
        "BODY":"hey co comment relative amount effort option seems like single system testing framework preferable case make sense extend herriot work build instrumentation new standard mode even seems reasonable default ie make easy add simple black box system test pay cost learning curve fi instrumentation needed thanks eli"
    },
    "36076":{
        "ID":7692,
        "MESSAGE_ID":"20101008210605.GE20126@everyelectric.corp.yahoo.com",
        "PARENT_ID":null,
        "SUBJECT":"[DISCUSSION]: Future of Hadoop system testing",
        "SENT_FROM":"Konstantin Boudnik <cos@apache.org>",
        "TAGS":"existence, technology",
        "BODY":"want start discussion future approach perform hadoop system potentially type testing later many know recent development effort number hadoop developer brought existence new system test framework codename herriot never hear please check hadoop url herriot great tool allows much wider powerful inspection intervention remote hadoop daemon aka observability andjcontrollability catch however power come cost build instrumentation hand fairly large number case introspection daemon internals required carried simple communication via hadoop cli name testing acl refreshes basic file ops etc however lack common understanding yet agreement might performed would like start conversation hopefully let work tactic see three possible approach might see adding special mode herriot work non instrumented cluster mode let call standard framework reduced functionality start stop remote daemon change push daemon configuration simple ier interface hdfs via dfsclient simple ier interface work mr list might extended apparently groovy even bash front end system test latter pretty poor opinion unlike groovy unix provide ability work public hadoop java apis directly groovy hand much expressive java highly dynamic provides mop among thing please let start discussion groovy scala creating custom ssh based command executor top clitesthelper reusing rest infrastructure create test similar testcli ultimate goal essentially single uniformed test driver framework junit control type test execution starting tut true unit test end system potentially load test one benefit approach provide facilitate integration type testing ci infrastructure read hudson provide well supported familiar many test development environment lowering learning curve potential contributor might want join hadoop community help make hadoop even better product best regard konstantin boudnik aka co ec fbf ee aa attention stream consciousness disallowed co pubkey url"
    },
    "36084":{
        "ID":7684,
        "MESSAGE_ID":"AANLkTiky2n_dpodcmvFiLvOOKZATUJ9u+8cJSLyzMhxo@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Distributed Counters Use Cases",
        "SENT_FROM":"Ryan King <ryan@twitter.com>",
        "TAGS":"existence, property, technology",
        "BODY":"spirit making sure clear communication work would like outline use case twitter distributed counter expect many using cassandra currently future similar use case first use case pretty simple high scale counter tweet button powered counter could every mention every url come public tweet would expect lot url lot traffic widget many high traffic site though highly cached second bit complex time series data built infrastructure process log real time scribe event convert series key increment buffer data minute increment key log aggregator would increment per thing tracking get increment aggregator event one increment per event plan open source soon hoping soon start replacing ganglion cluster ganglion use case end large number increment every read monitoring data even reasonably sized fleet moderate number metric generate huge amount data imagine machine many measure reasonable estimate based experience metric per machine suppose want measure thing every minute roll value every hour day month time suppose also tracking sum count min max sum square standard deviation also want track metric across group like web host database datacenters etc basic assumption would mean kind traffic increment minute machine group metric time granularity aggregate read traffic employee would negligible compared one use case many metric track want track usage across several facet example build local trend feature could store time series term per city case supercolumns would natural fit set facet unknown open imagine cf data like city hour term term term hour term term city hour term term term hour term term course way model data could collapse subcolumn name column name slice slice anyway fixed width term though city hour term hour term hour term hour hour term hour term city hour term hour term hour term hour hour term hour term doable could rough option separate row facet compound key city term build custom comparator look first part generating token range slice get facet doable pretty ryan url actually would reasonable approach"
    },
    "36099":{
        "ID":7669,
        "MESSAGE_ID":"AANLkTik-cjtvYYQSR8D3r7TU4m7w0_BFWSN0G3HyjFK-@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"ANNOUNCING Tahoe, the Least-Authority File System, v1.8.0",
        "SENT_FROM":"\"Zooko O'Whielacronx\" <zooko@zooko.com>",
        "TAGS":"technology",
        "BODY":"dear hdfs devs may interested tahoe lafs decentralized filesystem strong security property baked data including metadata encrypted erasure coded allows storage grid span trust domain need maintain control storage server make storage grid instead allow storage server located outside facility administered people outside control strong security erasure coding property even remote system administrator screw allow storage server compromised attacker data metadata completely safe course also mean tahoe lafs extremely strong fault tolerance property come handy even attacker around normal bad luck mistake aaron cordova wrote hadoop integration tahoe lafs see slide presentation last year hadoop world url regard zooko announcing tahoe least authority file system tahoe lafs team pleased announce immediate availability version tahoe lafs extremely reliable distributed storage system get url tahoe lafs first distributed storage system offer provider independent security meaning even operator storage server read alter data without consent one page explanation unique security fault tolerance property url previous stable release tahoe lafs released july offer greatly improved performance fault tolerance downloads improved window support see news file detail good tahoe lafs distribute filesystem across multiple server even server fail taken attacker entire filesystem continues work correctly continues preserve privacy security easily share specific file directory people addition core storage system volunteer built project top tahoe lafs integrated tahoe lafs existing system including window javascript iphone android hadoop flume django puppet bzr mercurial perforce duplicity tiddlywiki see related project page wiki believe strong cryptography free open source software erasure coding principled engineering practice make tahoe lafs safer raid removable drive tape line backup cloud storage software developed test driven development known bug security flaw would compromise confidentiality data integrity recommended use important issue currently aware please see known issue txt file compatibility release compatible version series tahoe lafs client release write file directory format used client version back released march client release read file directory produced client version since server release serve client version back client release use server version back eleventh release version series series tahoe lafs actively supported maintained forseeable future future version tahoe lafs retain ability read write file compatible series licence may use package gnu general public license version option later version see file copying gpl term gnu general public license version may use package transitive grace period public licence version option later version transitive grace period public licence requirement similar gpl except allows delay twelve month redistribute derived work releasing source code derived work see file copying tgppl html term transitive grace period public licence version may choose use package term either licence option installation tahoe lafs work linux mac window cygwin solaris bsd probably system start doc quickstart html hacking community please join mailing list patch gratefully accepted roadmap page show next improvement plan make credit list name people contributed project dev page contains resource hacker sponsorship tahoe lafs originally developed allmydata inc provider commercial backup service discontinuing funding tahoe lafs early continued provide server bandwidth small personal gift token appreciation bug report google inc sponsored tahoe lafs development part google summer code awarded four sponsorship student around world hack tahoe lafs summer thank allmydata google generous public spirited support hack tahoe lafs find security flaw tahoe lafs serious enough feel compelled warn user issue fix award customized shirt exploit printed add hack tahoe lafs hall fame acknowledgement fifth release tahoe lafs created solely labor love volunteer thank much team hacker public interest make tahoe lafs possible david sarah hopwood zooko wilcox hearn behalf tahoe lafs team september rainhill merseyside uk boulder colorado usa url url url url url url url url url url url url"
    },
    "36316":{
        "ID":7451,
        "MESSAGE_ID":"AANLkTikcphopQJjpMPVJG9C9BUJ_O37cOWGeq5oj9r9z@mail.gmail.com",
        "PARENT_ID":7450.0,
        "SUBJECT":"Re: Order preserving partitioning strategy",
        "SENT_FROM":"Mohamed Ibrahim <mibrahim@clker.com>",
        "TAGS":"not-ak",
        "BODY":"hi nick understanding token cassandra key inserted node closest token similar clustering mean approach every vector get assigned cluster closest center equivalent min max range approach node assume tight min max range dense key node following node assume longer range le density node end equal number key consider key lying inside range border distributing key using token might closer token node tight region approach equivalent actually yield different result reason use token node might get overloaded take look cited paper rhul paper also look ticket url config overview partitioner thanks reply mohamed ibrahim"
    },
    "36317":{
        "ID":7450,
        "MESSAGE_ID":"1282844972.502517600@192.168.2.228",
        "PARENT_ID":7448.0,
        "SUBJECT":"Re: Order preserving partitioning strategy",
        "SENT_FROM":"\"Nick Bailey\" <nicholas.bailey@rackspace.com>",
        "TAGS":"not-ak",
        "BODY":"token really different threshold token min neighbor token max change min move token change max move neighbor token idea calculating optimal number key similar load balancing idea described url thursday august mohamed ibrahim said"
    },
    "36319":{
        "ID":7448,
        "MESSAGE_ID":"AANLkTinXWKAufVczNg4cfagvtK8Tz0zi6_52bBDLohXi@mail.gmail.com",
        "PARENT_ID":7442.0,
        "SUBJECT":"Re: Order preserving partitioning strategy",
        "SENT_FROM":"Mohamed Ibrahim <mibrahim@clker.com>",
        "TAGS":"existence, property",
        "BODY":"hi might simpler way make opp achieve even close even load small change opp use threshold distribute key instead center every node min max threshold key get inserted node min max set max threshold setup recalculated easily redistribute data evenly actually thinking came two algorithm one call minor redistribution called major redistribution goal redistribution achieve equal number key per node minor redistribution algorithm require full scan recalculate threshold fast approximate major redistribution may require full key scan partial depending implementation able exactly calculate node threshold achieve equal load due full partial key scan requirement major redistribution require longer time process minor redistribution step calculate desired load per node total number key cluster step update max threshold node achieve average load every node snapshot number key node node average density number key node max min moving max threshold back node since overloaded new max min xwrote"
    },
    "36325":{
        "ID":7442,
        "MESSAGE_ID":"AANLkTiki-hHD21ASYi8fUUSy-743UnhSuYTjg27RCjRF@mail.gmail.com",
        "PARENT_ID":7423.0,
        "SUBJECT":"Re: Order preserving partitioning strategy",
        "SENT_FROM":"\"J. Andrew Rogers\" <jar.mailbox@gmail.com>",
        "TAGS":"property, technology",
        "BODY":"hi jonathan never seen paper discus primary topic always context iirc recent discussion seen join algorithm literature somewhere asia mpp analytical database often implement form skew adaptivity standard way design tradeoff context dependent db also non adaptive technique dealing skew simple implement cassandra might provide option little skew adaptivity generally implemented mix data structure along line adaptive quad tree reason see analytical database data skew unlikely change much much concurrent updating distribution radically change time high concurrency create mix resource contention lost selectivity runaway space consumption depending implementation detail optimal mix pain tends compile time option flexible definitely optimal concurrent oltp ish workload alternatively ibm db couple different data organization option essentially define partitionable skew invariant closer real data distribution skew invariant access performance like distributed hash table many data model data distribution skew roughly predicted ahead time application relatively efficient take pretty far db library skew invariant based irregular voronoi tesselation believe recent version sql server something similar think even tool sampling representative data purpose finding good skew invariant much hope help data distribution skew handling partly mitigates data access skew issue temporal data better nothing andrew rogers"
    },
    "36344":{
        "ID":7423,
        "MESSAGE_ID":"AANLkTi=Ca7HTqOWGXe=oFNaKr8jYT0Hag-YgsuDxTVoQ@mail.gmail.com",
        "PARENT_ID":7422.0,
        "SUBJECT":"Re: Order preserving partitioning strategy",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"good paper read background"
    },
    "36349":{
        "ID":7418,
        "MESSAGE_ID":"AANLkTim_0=E=AaEch8Cniy4KwMe-JYx7-Ecg1m2YRQJi@mail.gmail.com",
        "PARENT_ID":7417.0,
        "SUBJECT":"Re: Order preserving partitioning strategy",
        "SENT_FROM":"Nick Telford <nick.telford@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"trade choosing property need order preservation even load distribution reason hybrid partitioner exist one able create one create partitioner allows ordering whilst ensuring even load distribution mean contribute project would love manage feat would suggest calling holygrailpartitioner"
    },
    "36350":{
        "ID":7417,
        "MESSAGE_ID":"AANLkTikSon07UeUv0OaiV4iA15rCu0outJGtKap1K9rY@mail.gmail.com",
        "PARENT_ID":7415.0,
        "SUBJECT":"Re: Order preserving partitioning strategy",
        "SENT_FROM":"Benjamin Black <b@b3k.us>",
        "TAGS":"existence",
        "BODY":"use opp prefix key randomizing element range query required key queried range use prefix"
    },
    "36352":{
        "ID":7415,
        "MESSAGE_ID":"90C9BAECF271EE4399D936115703855BB86B558B94@MBXFOC.vinagame.com.vn",
        "PARENT_ID":null,
        "SUBJECT":"Re: Order preserving partitioning strategy",
        "SENT_FROM":"\"Hien. To Trong\" <hientt@vng.com.vn>",
        "TAGS":"existence",
        "BODY":"hi orderpreservingpartitioner efficient range query cause unevently distributed data anyone idea hybridpartitioner take advantage randompartitioner opp least partitioner trade"
    },
    "36616":{
        "ID":7151,
        "MESSAGE_ID":"AANLkTimf1GH72D3Ny57EsK_8cYmV-tvlQEnlJlc4LYOC@mail.gmail.com",
        "PARENT_ID":7121.0,
        "SUBJECT":"Re: Minimizing the impact of compaction on latency and throughput",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"look relevant url see comment direction code sample"
    },
    "36646":{
        "ID":7121,
        "MESSAGE_ID":"AANLkTimia9_3s2UcF-iKY47x4uumyQKieT5CTZhQT-FN@mail.gmail.com",
        "PARENT_ID":7111.0,
        "SUBJECT":"Re: Minimizing the impact of compaction on latency and throughput",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"existence",
        "BODY":"ok yes mostly agree although imagine circumstance pretty simple rate limiter might help significantly albeit something tweaked specifically situation hardware rather auto tuned time may look posix fadvise begin promising anything thanks input peter schuller"
    },
    "36657":{
        "ID":7110,
        "MESSAGE_ID":"AANLkTinyXVo8rjn5kfRRF19193DzrR1nOcyz3Lo589r3@mail.gmail.com",
        "PARENT_ID":7109.0,
        "SUBJECT":"Re: Minimizing the impact of compaction on latency and throughput",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"property",
        "BODY":"really concerned write performance rather writes affecting read cache eviction due streaming writes obvious effect hit ratio read general large sustained writes tend negatively affect read latency typically bursty fashion idea specifically optimize try make read minimally affected writes sense background compaction eventually resulting writes understood agreed commit log though long write burst within battery backed raid controller keep cache would expect potentially work pretty well without separation setup peter schuller"
    },
    "36658":{
        "ID":7109,
        "MESSAGE_ID":"AANLkTilScDi6jaJgaUn4XmtcFmyEc5sDTCKY4wrs8uf7@mail.gmail.com",
        "PARENT_ID":7107.0,
        "SUBJECT":"Re: Minimizing the impact of compaction on latency and throughput",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"make sense seen read contention cassandra much bigger deal write contention unless separate device commitlog optimizing case one goal"
    },
    "36659":{
        "ID":7108,
        "MESSAGE_ID":"263750.76427.qm@web53006.mail.re2.yahoo.com",
        "PARENT_ID":7107.0,
        "SUBJECT":"Re: Minimizing the impact of compaction on latency and throughput",
        "SENT_FROM":"Rishi Bhardwaj <khichrishi@yahoo.com>",
        "TAGS":"property",
        "BODY":"done bulk write performance test saw background compaction making big detrimental impact write performance also wondering tunable limit frequency compaction sstables adding configuration option would also help controlling performance impact compaction operation rishi peter schuller dev cassandra apache org sent wed july subject minimizing impact compaction latency throughput hello repeatedly seen user report background compaction overly detrimental behavior node respect latency yet deployed cassandra production situation latency closely monitored report really sound surprising given nature compaction unless otherwise stated developer list tend believe real issue ignoring implementation difficulty moment thing could improve situation seem sensible utilizing posix fadvise read writes avoid obliterating operating system caching sstables add ability rate limit disk particular writes add ability perform direct add ability fsync regularly writes force operating system decide flush hundred megabyte data single burst improvement general observation seems useless writes commit log remain cache fsync good candidate posix fadvise none would silver bullet importance appropriate setting would dependent operating system hardware etc ability control suspect allow significantly lessening impact compaction variety circumstance respect cache eviction one area impact probably expected higher rely operating system caching le rely jvm caching done cassandra obvious problem point include posix fadvise direct portability building issue necessitating native code rate limiting indirect due read ahead caching etc particular writes rate limiting would likely almost useless without also fsync direct unless rate limited extremely small amount cluster taking writes typical background flushing done done often enough imply huge amount data thought already considered rejected think compaction fact problem already easier better way accomplish goal peter schuller"
    },
    "36660":{
        "ID":7107,
        "MESSAGE_ID":"AANLkTikrOGH8NUrcaCyl_k8A-vXKQSDUjORiqetzPo22@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Minimizing the impact of compaction on latency and throughput",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"existence, property",
        "BODY":"hello repeatedly seen user report background compaction overly detrimental behavior node respect latency yet deployed cassandra production situation latency closely monitored report really sound surprising given nature compaction unless otherwise stated developer list tend believe real issue ignoring implementation difficulty moment thing could improve situation seem sensible utilizing posix fadvise read writes avoid obliterating operating system caching sstables add ability rate limit disk particular writes add ability perform direct add ability fsync regularly writes force operating system decide flush hundred megabyte data single burst improvement general observation seems useless writes commit log remain cache fsync good candidate posix fadvise none would silver bullet importance appropriate setting would dependent operating system hardware etc ability control suspect allow significantly lessening impact compaction variety circumstance respect cache eviction one area impact probably expected higher rely operating system caching le rely jvm caching done cassandra obvious problem point include posix fadvise direct portability building issue necessitating native code rate limiting indirect due read ahead caching etc particular writes rate limiting would likely almost useless without also fsync direct unless rate limited extremely small amount cluster taking writes typical background flushing done done often enough imply huge amount data thought already considered rejected think compaction fact problem already easier better way accomplish goal peter schuller"
    },
    "36665":{
        "ID":7102,
        "MESSAGE_ID":"AANLkTinfD_kol5bvC6mVG2deDm0jsQwYd5paY8eQH4qF@mail.gmail.com",
        "PARENT_ID":7098.0,
        "SUBJECT":"Re: Cassandra performance and read\/write latency",
        "SENT_FROM":"Peter Schuller <peter.schuller@infidyne.com>",
        "TAGS":"not-ak",
        "BODY":"since garbage collection logged running default setting etc multi second gc discoverable said log testing hypothesis would check first cassandra log gc also turn jvm gc logging xx printgc xx printgcdetails xx printgctimestamps batch write testing see scaled million row gb ocational spike latency due disk writes flushed however probably exacerbated case fact zfs freebsd zfs always humble opinion least freebsd exhibiting behavior flush writes late end blocking application even left bandwidth case eliminated issue purpose test stupid loop simply sync every handful second avoid accumulating much data cache expect le problem setup possible seeing operating system blocking writes commit log example running periodic fsync batch wise fsync peter schuller"
    },
    "36669":{
        "ID":7098,
        "MESSAGE_ID":"20100706152645.GC7261@alcatel-lucent.com",
        "PARENT_ID":null,
        "SUBJECT":"Cassandra performance and read\/write latency",
        "SENT_FROM":"Peter Fales <Peter.Fales@alcatel-lucent.com>",
        "TAGS":"property",
        "BODY":"greeting cassandra developer trying benchmark cassandra performance developed test client written us multiple thread send large number write read request fast server handle one result seeing bit surprising hoping someone help would light topic far tell discuseed mailing list request return reasonable amount time millisecond every server seems stop several second time read writes take several second complete network traffic system drop nearly zero plotted graph appear large spike every minute though without particular pattern often spike occur even though average response time good therefore get reasonable number request sec occasional outlier showstopper potential application experimented number different machine different capability including range physical machine cluster machine amazon ec also used different number node cluster different value replicationfactor qualitatively similar though number vary expected fast machine improve average maximum number max value still order second know cassandra lot configuration parameter tweaked parameter left default value cassandara anyone else seen node hang several second like sure java vm issue garbage collection something specific cassandra application happy share detail experiment either mailing list interested party offline thought would start brief description see consistent experience sort expecting see well course see kind behavior change also interested comparing note anyone else read write throughput benchmark cassandara thanks advance information suggestion may peter fales alcatel lucent member technical staff lucent lane room naperville il email peter fales alcatel lucent com phone"
    },
    "36930":{
        "ID":6837,
        "MESSAGE_ID":"AANLkTikPRrzHiTpUWsCXeGeNtR16N8dQF3IQPKwkNpZs@mail.gmail.com",
        "PARENT_ID":6831.0,
        "SUBJECT":"Re: Contributor Meeting Minutes 05\/28\/2010",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"posted link slide wiki url"
    },
    "36934":{
        "ID":6833,
        "MESSAGE_ID":"AANLkTinTvuQuSwbgzgqXxtEwucypNEksAb8VkBa83yeP@mail.gmail.com",
        "PARENT_ID":6831.0,
        "SUBJECT":"Re: Contributor Meeting Minutes 05\/28\/2010",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"list stripped slide posted note wiki seem allow attachment sure put slide url"
    },
    "36935":{
        "ID":6832,
        "MESSAGE_ID":"AANLkTik9pAdcn3AAGL7HrKDjWlt4RRw-Hg8kM5vV2xln@mail.gmail.com",
        "PARENT_ID":6830.0,
        "SUBJECT":"Re: Contributor Meeting Minutes 05\/28\/2010",
        "SENT_FROM":"Deepak Sharma <deepakmca05@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi india involved hadoop last month planning start hadoop tutorial india would need help please let know really good tutorial hadoop also suggest included course content becomes job oriented course looking forward reply thanks deepak"
    },
    "36936":{
        "ID":6831,
        "MESSAGE_ID":"AANLkTinbgBYlWwaedkPTwfk8qpvnUgczFojTnoQJr0i0@mail.gmail.com",
        "PARENT_ID":6830.0,
        "SUBJECT":"Re: Contributor Meeting Minutes 05\/28\/2010",
        "SENT_FROM":"Eli Collins <eli@cloudera.com>",
        "TAGS":"not-ak",
        "BODY":"slide attached thanks taking note chris"
    },
    "36937":{
        "ID":6830,
        "MESSAGE_ID":"AANLkTimeqo7RDWvCIWDqiUM4M7XKoeeXlCDPw8TY1xix@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Contributor Meeting Minutes 05\/28\/2010",
        "SENT_FROM":"Chris Douglas <cdouglas@apache.org>",
        "TAGS":"process",
        "BODY":"month mapreduce hdfs contributor meeting held cloudera headquarters announcement contributor meeting url minute follow decision made meeting following issue discussed may presage future discussion decision list eli think slide would mind sending release update continuing close blocker ping people update suggestion open blocker many mapreduce documentation may pushed speak missing anything substantive common hdfs visibility annotation close consensus mapreduce annotation committed trunk branch hep proposal follows sketch presented meeting full proposal concrete detail circulated list based similar pep python enhancement proposal process audience hdfs mapreduce necessarily adopted subprojects address perception friction innovation experimentation stability small enhancement feature bug fix slow typical development impede casual contribution hadoop primary mechanism new feature collecting input documenting design decision jira good detail deciding wide shift direction purpose author build consensus gather dissenting opinion may comment editor review incoming hep material editor determine whether hep complete whether believe sound idea editor appointed pmc mechanism appointing editor term service tbd apache board appoints shepherd project somewhat randomly project similar mechanism could work incoming heps proposal may come code necessarily drafting baking hep occurs public list dedicated particular proposal editor certify hep complete sent general wider discussion discussion phase begin general mailing list exists ensure hep complete enough present community discussion difference posting general posting hep list completeness course subjective editor author disagree whether proposal affect aspect framework enough merit special consideration entirely clear resolve disagreement general role editor community driven process hadoop entirely clear may possible optimize discussion end hep passed fails pas vote pmc mechanic undefined python result committed repository similar practice would make sense hadoop issue require heps discussion ranged append backup namenode edit log rewrite et al example feature substantial enough merit hep pure java crc example enhancement would whether explicit process must place determine whether issue requires hep clear viewing heps way soliciting consensus approach might accurate going hep process always improve chance successful proposal evaluation proposal may rejected redundant existing functionality technically unsound insufficiently motivated backwards compatibility story etc implementation necessary lightly discouraged feedback le welcome code hand purpose clear acceptance criterion issue concern proposal may scale may harm performance dissenting opinion must recorded accurately quoting would safe practice author encourage hep reviewer block product proposal testing burden completion strategy may ambiguous whether proposal affect scalability may testable implementer completing proposal address use case may require considerably work author willing motivated invest hep discussion general explore whether objection merited reasonable example particularly obscure esoteric use case could included condition acceptance dissenter willing invest resource test validate process flexible regard infinitely flexible backwards compatibility performance regression availability consideration need called every hep traditional concern need documented acceptance criterion ideally automated reproducible different organization branching patch branch isomorphic policy perspective course functionally distinct branch easier collaborate generally longer lived patch special policy need derived account difference concern production code review acceptance developer find branch easier review large patch easier merge given toolchain support subversion currently difficult adapt model could done hep hep basis condition acceptance eclipse lab branded version google code functionality eclipse brand official eclipse project associated eclipse apache hadoop may consider similar strategy distinct apache lab one need committer follow rule release etc contrib module fuse dfs actively maintained main repository would benefit release schedule decoupled rest hadoop exception contrib module smaller often discrete group maintainer may worth exploring whether project could live elsewhere"
    },
    "36959":{
        "ID":6808,
        "MESSAGE_ID":"AANLkTikowTDfCNKQ74IaaWDMLsIoJPi1kCCq3V4vg2-1@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Meebo - Data Engineer (Perm position in Mountain View, CA)",
        "SENT_FROM":"Kiko Griffin <kiko@meebo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"hello meebo seeking empirically minded groundbreaker join rank love instrumentation testing take delight uncovering unexpected seeking next team member build world class product oriented data system serve compass nearly strategic company decision individual deep desire work large data set guide product decision strengthen end user voice within meebo role responsibility include design deploy meebos core product data analysis framework includes testing real time log processing segmentation capability surfacing moving metric relevant team create tool web interface visualization allow product team partner access real time usage statistic instrument javascript codebase collect usage behavior data proactively recommend metric understanding product health user satisfaction collaborate operation team design deploy meebos next generation distributed data system effective computer science emphasis information analytics data mining machine learning information retrieval artificial intelligence related field expertise mapreduce programming model hadoop parallel computing implementation processing generating large data set scripting skill including html cs javascript python sql product business savvy mindset pinpoint metric matter communication skill convey thought others measured ability work diverse team cultivate idea foster user centric thinking positively influence product direction listen deeply team product business issue make data research suggestion best inform strategic thinking build world class stats infrastructure accessible company wide serve groundwork future stats project meebo interested know someone might interested please reply directly kiko meebo inc com thanks kiko kiko meebo inc com"
    },
    "37032":{
        "ID":6735,
        "MESSAGE_ID":"AANLkTikTwWtew5LdjsglwRzBmdBP8ayVBi-Rahw6vApM@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Data Engineer (Analytics) @ Meebo (Perm in Mountain View, CA.)",
        "SENT_FROM":"Kiko Griffin <kiko@meebo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"hello meebo seeking empirically minded groundbreaker join rank love instrumentation testing take delight uncovering unexpected seeking next team member build world class product oriented data system serve compass nearly strategic company decision individual deep desire work large data set guide product decision strengthen end user voice within meebo role responsibility include design deploy meebos core product data analysis framework includes testing real time log processing segmentation capability surfacing moving metric relevant team create tool web interface visualization allow product team partner access real time usage statistic instrument javascript codebase collect usage behavior data proactively recommend metric understanding product health user satisfaction collaborate operation team design deploy meebos next generation distributed data system effective computer science emphasis information analytics data mining machine learning information retrieval artificial intelligence related field expertise mapreduce programming model hadoop parallel computing implementation processing generating large data set scripting skill including html cs javascript python sql product business savvy mindset pinpoint metric matter communication skill convey thought others measured ability work diverse team cultivate idea foster user centric thinking positively influence product direction listen deeply team product business issue make data research suggestion best inform strategic thinking build world class stats infrastructure accessible company wide serve groundwork future stats project meebo interested know someone might interested please reply directly kiko meebo inc com thanks kiko kiko meebo inc com"
    },
    "37380":{
        "ID":6387,
        "MESSAGE_ID":"s2o1c6fcff1004070751n9de3c515u62d0e986eaf2af3f@mail.gmail.com",
        "PARENT_ID":6383.0,
        "SUBJECT":"Re: Keyspace Keyspace1 doesnot exist",
        "SENT_FROM":"Gary Dusbabek <gdusbabek@gmail.com>",
        "TAGS":"existence",
        "BODY":"wed apr shirish wrote exists jmx method storageservicembean used load schema xml brand new node process documenting thing wiki url gary"
    },
    "37381":{
        "ID":6386,
        "MESSAGE_ID":"h2yeb7566181004070545xbff5880cwcbaa7c9302d26e25@mail.gmail.com",
        "PARENT_ID":6385.0,
        "SUBJECT":"Re: Keyspace Keyspace1 doesnot exist",
        "SENT_FROM":"shirish <shirishreddy89@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks jonathan cleaning mess downloading development release rc"
    },
    "37382":{
        "ID":6385,
        "MESSAGE_ID":"l2se06563881004070515w41f1e5e7ocbb0188ed776cc23@mail.gmail.com",
        "PARENT_ID":6382.0,
        "SUBJECT":"Re: Keyspace Keyspace1 doesnot exist",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"url probably running trunk"
    },
    "37384":{
        "ID":6383,
        "MESSAGE_ID":"m2heb7566181004070341z9c78fc46vc29c85fc84df59a4@mail.gmail.com",
        "PARENT_ID":6382.0,
        "SUBJECT":"Re: Keyspace Keyspace1 doesnot exist",
        "SENT_FROM":"shirish <shirishreddy89@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hello one thing startup message node say could detect schema definition local storage hope got plan"
    },
    "37385":{
        "ID":6382,
        "MESSAGE_ID":"i2veb7566181004070339l90a844a7i9805332fd4b10fb9@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Keyspace Keyspace1 doesnot exist",
        "SENT_FROM":"shirish <shirishreddy89@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"test cluster false classpath classpath classpath partitioner ipartitioner may used including long classpath box cassandra provides classpath classpath classpath collatingopp colates according en rule naive byte ordering use example need locale aware collation range query require using order preservin"
    },
    "37402":{
        "ID":6365,
        "MESSAGE_ID":"4BBB1431.5070408@shic.co.uk",
        "PARENT_ID":null,
        "SUBJECT":"A question of 'referential integrity'...",
        "SENT_FROM":"Steve <sjh_cassandra@shic.co.uk>",
        "TAGS":"not-ak",
        "BODY":"first apologise sending dev mailing list could find one cassandra user also basic nature question trying get head around possibility using cassandra back end project respect cassandra look absolutely ideal finding difficult ascertain appropriate strategy ensure consistency would come free traditional transactional back end sufficient abstraction storage requirement imagine two application oriented universe sha hash src dst practice tagged application data need support remote api manage one many mapping src dst consistent efficiently addressable one one mapping dst src need envisage million client ten billion mapping billion update lookup daily newassoc src dst listassoc src list delassoc dst lookupassoc dst src using bdb would two map first src key dst value second dst src key value update map transaction sql land would need table bit like create table assoc src binary dst binary unique primary key src dst implementation api call would trivial insert delete select operation consistency primary key implicit unique constraint index would arise consequence transaction realise cassandra need different approach since notion transaction rely case given desire scalability relying upon fine grained transaction would definitely prove bottleneck said uniqueness dst value systemically critical even anticipate duplicate hash practice need uniqueness verified second src value asking associate existing dst value fail without violating one one mapping dst src failure notified soon possible strike plausible design might one writes log insert delete pair hash background process eventually index big batch clearing transaction log cassandra way surprised found example looking wrong place log insert delete operation something would implement using ad hoc technique explicit support cassandra need develop process scratch merge update disk data neat way get cassandra another issue considering map src list dst low level representation cassandra map individually potential problem one src value map arbitrarily many dst value level rpc api address returning object resembling scrollable cursor instead static list guess would need concerned resource limitation memory etc disk representation presume significant advantage storing one many map explicitly locality reference example well minimising size encoded data guessing prefix compression key key compression would likely lead opposite architectural decision resource use perspective would eliminate concern map single src value large number dst value hint tip comment pointer relevant documentation etc would much appreciated guessing many others tackled problem similar"
    },
    "37517":{
        "ID":6248,
        "MESSAGE_ID":"6051e9371003261131y22e8d36eo3c464c883fedbe29@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Gsoc2010 proposal (please try this)",
        "SENT_FROM":"Priyanka Sharma <sharmapriyanka5@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi priyanka sharma master student vrije university amsterdam major parallel distributed system system interested participate gsoc cassandra would like implement demo application cassandra pasted proposal fully final email tried send proposal attachment problem may filtering attachment find proposal organized easy read also url cv url would like comment proposal make better kindly give feedback proposal cassandra gsoc demo application cassandra name email address priyanka sharma psa vu nl sharmapriyanka gmail com chat id network psharma irc freenode net bio resume strongly believe learning experimentation conscious responsibility contribute effectively endeavor relish working team confident system level programming skill always keen contribute open source project interest towards research open source project led work security enhanced linux selinux role based access control extended selinux framework project led two international ieee publication link see resume currenty pursuing master parallel distributed system explored area distributed system database quite well involved worked many distributed system like plan system developed inria like telex give internal idea real issue occur like consistency scalability fault tolerance writing position paper also casandra going compare data storage system like bitable dynamo doubt help project started using cassandra found interesting ease use key value storage many property useful interesting different data storage model increased motivation work cassandra believe deep study real time experience distributed system storage system make ideal candidate project participated gsoc also plan bell lab group completed successfully please find complete resume attachment email url project title description many large scale real time application running cassandra like facebook twitter digg show storing data using cassandra need small simple application easily demonstrate feature cassandra explains different distributed storage system also explains reason migrating every application cassandra today example cassandra us quorum technique provide consistency actually make fast write operation cassandra also us eventual comsistency make data consistent also amazon dynamo wiki kind application deal bulk data enclyclopedia managing bulk changing data requires lot effort storage level maintaining index different key like category author date id etc add complexity challenging system require distributed database efficient search indexing facility use cassandra provides good performance indexing searching approach implement simple clean demo application implement simple application wiki would sensible application provide main text editing feature login additional feature like finding system information user preference see recent change etc user edit page exception modified authentic user logged give solid example may use python php implement application use thrift api storing data cassandra require api help application talk cassandra use stable popular thrift api interect cassandra store data cassandra find best way store data cassandra mean read write data effciently define column super column column family keyspace make proper structure kewords way retrival data would effective good performance implement read write indexing perfroms well add showcase feature application add feature application showcase cassandra add search feature wiki application cassandra good perform search think going implement search internally example search supercolumns challenging implement efficient search algorithm internally another feature would add category topic would category addition also define search particular category example would find document changed last week particular category joining two group implement group based query would provide group query result use get slice functionality provided thrift example user want see change log per month basis may per week basis query cassandra system using thrift api like get slice basis key provide result fast feature would provide flexibility user also test demonstration application place important test every feature application working per definition demonstrate benefit system using cassandra internally case study compartive study database required test system performing better system type application testing mulinodes test application cassandra deployed multinodes repeat read write test compare distributed database performance kind application timeline april may community bonding use time understand read possible feature provide application make effective sense cassandra may june implementation begin implement simple wiki application basic feature like edit document create login etc may use php python implementation june june integrate wiki application thrift use cassandra backend june june find implement best way represent data storage july july add showcase feature like search category search application july mid term deliverable working implementation application running cassandra also provide july july implement group based query user profile like last change log implement join query feature user search category plus user based data july aug test application comparetive study database find application look fully featured add feature aug aug test application cassandra deployed multinodes aug final deliverable give full proof application running cassandra thanks regard priyanka sharma"
    },
    "37553":{
        "ID":6210,
        "MESSAGE_ID":"72d74ffb1003231038v1a550907n51189d8e3135e15f@mail.gmail.com",
        "PARENT_ID":6199.0,
        "SUBJECT":"Re: Standardizing Timestamps Across Clients",
        "SENT_FROM":"Noah Silas <noah@mahalo.com>",
        "TAGS":"not-ak",
        "BODY":"updated datamodel page wiki reflect discussion url noah"
    },
    "37564":{
        "ID":6199,
        "MESSAGE_ID":"e1611e01003212146m38eb9ffdk1b3fb4fd7e788a33@mail.gmail.com",
        "PARENT_ID":6194.0,
        "SUBJECT":"Re: Standardizing Timestamps Across Clients",
        "SENT_FROM":"Michael Pearson <mjpearson@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"note php user using microtimes thrift protocol module work bit machine url michael"
    },
    "37569":{
        "ID":6194,
        "MESSAGE_ID":"e06563881003201551i4c7dec51n370fc53f0d9e7d9f@mail.gmail.com",
        "PARENT_ID":6182.0,
        "SUBJECT":"Re: Standardizing Timestamps Across Clients",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence",
        "BODY":"look like consensus microsecond since epoch way go updated cli release beta jonathan"
    },
    "37581":{
        "ID":6182,
        "MESSAGE_ID":"26777281003181337s635fc7ddscad794dd58a996b@mail.gmail.com",
        "PARENT_ID":6167.0,
        "SUBJECT":"Re: Standardizing Timestamps Across Clients",
        "SENT_FROM":"Jeff Hodges <jhodges@twitter.com>",
        "TAGS":"existence",
        "BODY":"one committers cassandra gem microsecond way go specificity nice thinking timestamps suddenly deep abiding need care understate much easier remove specificity put fact jeff"
    },
    "37594":{
        "ID":6169,
        "MESSAGE_ID":"4BA1EFE9.8030805@oskarsson.nu",
        "PARENT_ID":6158.0,
        "SUBJECT":"Re: Binary release artifacts (or What a User Wants)",
        "SENT_FROM":"Johan Oskarsson <johan@oskarsson.nu>",
        "TAGS":"process, technology",
        "BODY":"paul querna wrote would also suggest anything using ivy fetch jar developer think add jar file downloaded ivy binary distribution make easy possible user especially new one hope least one two developer contributor reviewer committer involved patch add new dependency would remember add correct information notice probably add section decide go path url"
    },
    "37596":{
        "ID":6167,
        "MESSAGE_ID":"78a8986f1003180036m1ca6f6acp23f897b68f00cae6@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Standardizing Timestamps Across Clients",
        "SENT_FROM":"Jonathan Hseu <vomjom@vomjom.net>",
        "TAGS":"existence",
        "BODY":"jonathan elli suggested bring issue dev mailing list cassandra recommended default timestamp across client library many user irc difficulty using different client different client using different timestamps insert one client may able modify key later another cassandra website seem mention timestamps much user get confused operation fail certain client different client using cassandra cli millisecond since utc epoch lazyboy second since utc epoch used second since local time epoch changing microsecond since utc epoch driftx client millisecond since utc epoch example app twissandra microsecond since utc epoch pycassa microsecond since utc epoch used second since local time epoch popular cassandra ruby client microsecond since utc epoch default recommended timestamp microsecond since utc epoch allows backwards compatibility people already using microsecond suddenly switched millisecond timestamps would smaller would unable insert remove existing column microsecond timestamps would always greater millisecond timestamps new operation would work exist reason people would want use microsecond millisecond finer granularity think reason one would prefer millisecond microsecond changed pycassa microsecond would hate change jonathan hseu"
    },
    "37608":{
        "ID":6155,
        "MESSAGE_ID":"1268860877.20989.137.camel@erebus.lan",
        "PARENT_ID":null,
        "SUBJECT":"Binary release artifacts (or What a User Wants)",
        "SENT_FROM":"Eric Evans <eevans@rackspace.com>",
        "TAGS":"technology",
        "BODY":"cycle ivy introduced manage dependency possible jar removed svn longer included binary release artifact recently though change called question discussion taking place cassandra release upon consensus rollback change resume practice embedding third party jar strongly feel want see one forced explain background seen steadily increasing list dependency really exploded think causing number problem first foremost le perfect job maintaining licensing attribution exact requirement depend number variable fraught subtlety failure get right creates legal risk asf find unacceptable poorly really option ivy fixed problem side stepping issue entirely shipping simply need maintain documentation many dependency dependency turn sometimes dependency dependency dependency etc share dependency dependency different version sound confusing yes complexity seems grow exponentially number jar pulling ivy fixed problem precisely ivy resolve graph project dependency based specification ivy xml retrieves put simply tedious time consuming error prone task automated away however come without price cost see order importance downloading arbitrary code net without good trust path requiring networking connectivity install time requiring ant present install time one extra step install process invoking ant ivy retrieve know lot people would consider real issue look popular maven ymmv personally think onerous disagree weird require build tool argument one step getting started still one step boil deciding whether cure worse disease thought url eric evans eevans rackspace com"
    },
    "37837":{
        "ID":5926,
        "MESSAGE_ID":"d6d7c4411002111141r1d3fa51dg9b2c25e942057dea@mail.gmail.com",
        "PARENT_ID":5914.0,
        "SUBJECT":"Re: Static state in Configuration and elsewhere",
        "SENT_FROM":"Aaron Kimball <aaron@cloudera.com>",
        "TAGS":"existence",
        "BODY":"enormous number example following line user side code configuration conf new configuration going need still work transparently refactoring new configuration case need populated value appropriate default file maybe instead using singleton configurationfactory configurationfactory getconfigfactory newconfiguration could instead configuration constructor use service locator get configuration populator class configservicelocator static configservicelocator getservicelocator class singleton configservice getconfigservice void setconfigservice configservice class configservice getallthatstuffthatwaspreviouslystaticstate configuration configuration initwith configservicelocator getservicelocator getallthatstuffthatwaspreviouslystaticstate static block initializes configservicelocator default configservice instance everything normal testing though could instantiate new configservice put whatever state want update servicelocator use new instance instead sound like helpful alternative aaron"
    },
    "37847":{
        "ID":5916,
        "MESSAGE_ID":"007001caaa7b$e1b252e0$a516f8a0$@com",
        "PARENT_ID":null,
        "SUBJECT":"Twister: Iterative MapReduce",
        "SENT_FROM":"\"Jaliya Ekanayake\" <jnekanayake@gmail.com>",
        "TAGS":"property",
        "BODY":"hi would like announce first open source release twister framework iterative mapreduce computation mapreduce programming model simplified implementation many data parallel application simplicity programming model quality service provided many implementation mapreduce attract lot enthusiasm among parallel computing community year experience applying mapreduce programming model various scientific application identified set extension programming model improvement architecture expand applicability mapreduce class application twister lightweight mapreduce runtime developed incorporating enhancement published several scientific paper explaining key concept comparing mapreduce implementation hadoop dryadlinq today would like announce first release key feature twister distinction static variable data configurable long running cacheable map reduce task pub sub messaging based communication data transfer combine phase collect reduce output efficient support iterative mapreduce computation data access via local disk lightweight line code tool manage data would like share design decision idea incorporated twister grateful could share thought detail please visit www iterativemapreduce org let know thought experience using twister salsa hpc team thank jaliya ekanayake phone work cell web www indiana edu jekanaya jaliya ekanayake advisor geoffrey fox architecture performance runtime environment data intensive scalable computing doctoral showcase supercomputing jaliya ekanayake atilla soner balkir thilina gunarathne geoffrey fox christophe poulain nelson araujo roger barga dryadlinq scientific analysis fifth ieee international conference science escience oxford uk jaliya ekanayake xiaohong qiu thilina gunarathne scott beason geoffrey fox high performance parallel computing cloud cloud technology technical report august appear book chapter geoffrey fox seung hee bae jaliya ekanayake xiaohong qiu huapeng yuan parallel data mining multicore cloudy grid high performance computing grid workshop extended version paper go book chapter jaliya ekanayake shrideep pallickara geoffrey fox mapreduce data intensive scientific analysis fourth ieee international conference escience pp"
    },
    "37849":{
        "ID":5914,
        "MESSAGE_ID":"4B729401.7000505@apache.org",
        "PARENT_ID":5886.0,
        "SUBJECT":"Re: Static state in Configuration and elsewhere",
        "SENT_FROM":"Steve Loughran <stevel@apache.org>",
        "TAGS":"existence",
        "BODY":"eric sammer wrote looked past would take move config factory concluded would pretty tricky undertaking lot place create new configuration instance said would like got lifecycle patch date would also like thing like datanode tasktracker reread config thing like namenode jt address whenever reconnect master node even complex"
    },
    "37877":{
        "ID":5886,
        "MESSAGE_ID":"4B70D024.50706@lifeless.net",
        "PARENT_ID":null,
        "SUBJECT":"Static state in Configuration and elsewhere",
        "SENT_FROM":"Eric Sammer <eric@lifeless.net>",
        "TAGS":"existence, property",
        "BODY":"notably commiters walking source seems number case static state exists conf configuration good example case static cache see configuration registry well class level state default resource static member make testing scenario difficult think confuse complicate certain issue object lifecycle management end started working patch tease registry behavior default resource similar state behavior simple configurationfactory know manufacture instance configuration factory would act singleton retains public constructor simplifying testing hope easier integration thing like spring road working realized might big departure original design static state thing purpose interesting rest community factor bother disrupt anyone else sort design related change welcome class configuration exhibit mixed lifecycle sort design thought safe place start see way maintaining backward compatibility long necessary although unpleasant sure time entirely trivial given pervasive nature something like configuration want get deep sort thing unwelcome thanks advance comment etc regard eric sammer eric lifeless net url"
    },
    "38199":{
        "ID":5564,
        "MESSAGE_ID":"3e5dcc2b-886a-47fa-8c29-2c177090e53e@r5g2000yqb.googlegroups.com",
        "PARENT_ID":null,
        "SUBJECT":"Matthew McCullough to Speak on Dividing and Conquering Hadoop at GIDS\t2010",
        "SENT_FROM":"Satpal Yadav <satpal12021@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"great indian developer summit gold standard india software developer ecosystem bangalore january moore law finally hit wall cpu speed actually decreased last year industry reacting hardware core software leverage grid distributed computing resource hadoop suite open source apis forefront revolution considered gold standard divide conquer model problem crunching matthew talk great indian developer summit url april learn use well travelled apache hadoop framework leveraged prominent name yahoo amazon adobe aol facebook google hulu matthew mccullough energetic year veteran enterprise software development open source education co founder ambient idea llc denver consultancy matthew currently member jcp reviewer technology publisher including reilly author dzone maven refcard president denver open source user group experience includes successful jee soa web service implementation real estate financial management telecommunication firm several published open source library matthew jump opportunity evangelize educate team benefit open source current focus cloud computing maven iphone distributed version control os tool great indian developer summit great indian developer summit gold standard india software developer ecosystem gaining exposure evaluating new project tool service platform language software standard packed premium knowledge action plan advise done veteran creator visionary edition great indian developer summit feature focused session case study workshop power panel transform force reckon featuring co located conference gids net gids web gids java exclusive day depth tutorial gids workshop april april iisc campus bangalore gids participate hundred session encompassing full range microsoft computing java agile ria rich web open source standard language framework platform practical tutorial deep dive technical skill best practice inspirational keynote presentation expo hall featuring dozen latest project product activity engaging networking event interact best brightest speaker around world information gids please visit summit web url saltmarch medium press release info saltmarch com ph"
    },
    "38251":{
        "ID":5511,
        "MESSAGE_ID":"a5accba30912202009l1c8d6e9t6ffb2a4acc9c5623@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Why I can only run 2 map\/reduce task at a time?",
        "SENT_FROM":"Starry SHI <starrysl@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi currently using hadoop run large data processing noticed job launched two map reduce task running beginning one heartbeat sec another two map reduce task started want ask increase map reduce slot configuration file already set mapred tasktracker map reduce task maximum mapred map reduce task still launched eager hear solution best regard starry tomorrow another day today"
    },
    "38364":{
        "ID":5398,
        "MESSAGE_ID":"fc97bb180912010629y695907b3q39683653bf63b4e9@mail.gmail.com",
        "PARENT_ID":5394.0,
        "SUBJECT":"Re: Bootstrap in rack-aware mode",
        "SENT_FROM":"Jaakko <rosvopaallikko@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"attached draft patch somebody interested look outline leave coordination could work although would surprised code actually work tested improve test tomorrow idea comment would welcome especially subject people think approach best one even needed cheer jaakko"
    },
    "38368":{
        "ID":5394,
        "MESSAGE_ID":"fc97bb180911302001o1a4aaa5i9f979d18ee2eca70@mail.gmail.com",
        "PARENT_ID":5384.0,
        "SUBJECT":"Re: Bootstrap in rack-aware mode",
        "SENT_FROM":"Jaakko <rosvopaallikko@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"think adding node ring bootstrapping safe even multiple operation happening time bootstrapping cause existing range fragmented count pending range based old token metadata worst happen think pending range big get data responsibility bootstrap finish could find scenario pending range cover node eventual range however node booting leaving another node leaving within affected range another issue entirely discussed earlier mail thread see especially nd option description problem case actual range might eventually bigger pending range calculated entirely wrong one node disappears ring problem present regardless replication strategy original cluster primary range replica range bootstrap time leaf actual final situation easy see bootstrap think based token metadata time primary range replica range final situation much larger node assumed think need another control channel gossiping able solve basically need control movement way node leaving must movement leaving bootstrapping within affected range mean node leave must contact node going experience range change get permission node already pending range change either due another bootstrap leave operation node wanting leave must wait node bootstrap must get permission intended bootstrap source leave operation progress bootstrap must wait also discussed automatic load balancing purpose would best limit amount moving node within affected range one basically think need movement control channel make sure one move operation progress certain area ring would course make autobootstrapping big cluster bit slower node queue bootstrapping think big problem would make dark corner case go away would imho best thing prof problem somebody want move group node time something like polish mechanism jaakko"
    },
    "38378":{
        "ID":5384,
        "MESSAGE_ID":"e06563880911301119x5d89a260m418122efa9986232@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Bootstrap in rack-aware mode",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"property",
        "BODY":"problem bootstrapping node aware rack aware replication strategy background bootstrap make assumption simplify thing treating bootstrap multiple node independently trading potential extra copying simplifying process recovery node fails killed bootstrap process couple example illustrate suppose node rack unaware mode replication factor one simplicity range node bootstrap copy bootstrap complete successfully serve transferred unnecessarily either bootstrap fails remaining bootstrap ignore serve entire range transferred rack unaware bootstrapping clear bootstrap isolation fine rack aware recall rack aware mode write first replica first node ring data center remaining replica node say two node different dc replication factor node primary range replica add node dc respectively bootstrap predicts ring node primary range replica predicts node primary range replica really end node primary range replica node superset right data copied note replica final version whereas predicted would part primary range matter long ended right data instead add datacenter node primary range replica node primary range replica node primary range replica node end right data condition playing around mind think tricky peer review welcome"
    },
    "38498":{
        "ID":5264,
        "MESSAGE_ID":"E3137F97B0A0804194F369F4E7C3B7192E1B2D5299@EXCHANGE.persistent.co.in",
        "PARENT_ID":5252.0,
        "SUBJECT":"RE: Issue in data read from a cluster node",
        "SENT_FROM":"Shreya Chakravarty <shreya_chakravarty@persistent.co.in>",
        "TAGS":"not-ak",
        "BODY":"hi changing replication factor worked thanks thanks regard shreya chakravarty jonathan elli mailto jbellis gmail com sent monday november pm cassandra dev incubator apache org subject issue data read cluster node replication factor internal error getting logged"
    },
    "38510":{
        "ID":5252,
        "MESSAGE_ID":"e06563880911160509n1e421e68x793d35d1a4f4f759@mail.gmail.com",
        "PARENT_ID":5251.0,
        "SUBJECT":"Re: Issue in data read from a cluster node",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"replication factor internal error getting logged"
    },
    "38511":{
        "ID":5251,
        "MESSAGE_ID":"E3137F97B0A0804194F369F4E7C3B7192E1A39B044@EXCHANGE.persistent.co.in",
        "PARENT_ID":null,
        "SUBJECT":"Issue in data read from a cluster node",
        "SENT_FROM":"Shreya Chakravarty <shreya_chakravarty@persistent.co.in>",
        "TAGS":"not-ak",
        "BODY":"hi created cassandra cluster node using java program another machine insert read data scenario testing bring node cluster insert data one bring one node try read data ex cluster nodea nodeb nodec inserted data nodea successfully read back node cluster brought nodeb tried read data nodea nodec give following error classpath internal error processing get slice classpath tapplicationexception java classpath client recv get slice cassandra java classpath client get slice cassandra java classpath unknown source classpath testclient java able read data node even bring node inserted data node cluster thanks regard shreya disclaimer mail may contain privileged confidential information property persistent system ltd intended use individual entity addressed intended recipient authorized read retain copy print distribute use message received communication error please notify sender delete copy message persistent system ltd accept liability virus infected mail"
    },
    "38565":{
        "ID":5197,
        "MESSAGE_ID":"764B352CF55C514F816B4B14BD2450D803DBBFA1@bcs-mail04.internal.cacheflow.com",
        "PARENT_ID":5195.0,
        "SUBJECT":"RE: Re: bandwidth limiting Cassandra's replication and access control",
        "SENT_FROM":"\"Coe, Robin\" <robin.coe@bluecoat.com>",
        "TAGS":"not-ak",
        "BODY":"well started saying complete cassandra newbie may understand exposed data may please correct misunderstood secure cassandra unauthorized access attaching thrift listener internal adapter address case unauthorized user knew ip server cassandra running also knew keyspace could create client access data wrong assumption normal take security protect physical server make data store unavailable private network provide access data via application service model work cassandra security concern exposed replication service instance need public port thanks robin"
    },
    "38567":{
        "ID":5195,
        "MESSAGE_ID":"e06563880911111426t737e64f4o2660f4605b7c6b5f@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Re: bandwidth limiting Cassandra's replication and access control",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"main reason support multiple keyspaces allow separation different application within keyspace app manage permission keyspace level cassandra charge"
    },
    "38679":{
        "ID":5083,
        "MESSAGE_ID":"F0C7246DF63C124CA15A38CDC10CCD4A24EC3C4C63@mail1.impetus.co.in",
        "PARENT_ID":null,
        "SUBJECT":"ReducerTask OOM failure",
        "SENT_FROM":"Sanjay Sharma <sanjay.sharma@impetus.co.in>",
        "TAGS":"not-ak",
        "BODY":"hi moving cloudera release upgrade gb machine started facing occasional ooms higher number reducer reducer started copying map output java lang outofmemoryerror java heap space classpath reducecopier mapoutputcopier shuffleinmemory reducetask java classpath reducecopier mapoutputcopier getmapoutput reducetask java classpath reducecopier mapoutputcopier copyoutput reducetask java classpath reducecopier mapoutputcopier run reducetask java error turned problem related java int usein reducertask shufflerammanager reserve method check wait till request fulfilled size requestedsize maxsize check fails size requestedsize exceeds integer max value wrap around negative value thus failing check force subsequent request keep reserving ram finally crash jvm checked related hadoop resolved hadoop look like problem would occur hadoop arun us long size rather current buggy int jira raised fix pre release fix simple long size long requestedsize maxsize would willing create jira patch sanjay follow update www twitter com impetuscalling impetus sponsoring internet summit premier event raleigh nc november visit www impetus com event html detail note message may contain information confidential proprietary privileged otherwise protected law message intended solely named addressee received error please destroy notify sender use email prohibited received error impetus represent warrant guarantee integrity communication maintained communication free error virus interception interference"
    },
    "39153":{
        "ID":4609,
        "MESSAGE_ID":"f5f3a6290908170224i44e2994foa2eb659df3480026@mail.gmail.com",
        "PARENT_ID":4367.0,
        "SUBJECT":"Re: hadoop tasks reading from cassandra",
        "SENT_FROM":"Jeff Hodges <jeff@somethingsimilar.com>",
        "TAGS":"not-ak",
        "BODY":"playing home stupid version hadoop support attached cassandra mention curious please keep discussion ticket thanks url jeff"
    },
    "39345":{
        "ID":4417,
        "MESSAGE_ID":"e06563880907310857g31d5275fm6e9c01afe8c0654f@mail.gmail.com",
        "PARENT_ID":4416.0,
        "SUBJECT":"Re: hadoop tasks reading from cassandra",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"yes get string property information cluster gateway rest thrift api manipulating column forth mix two"
    },
    "39346":{
        "ID":4416,
        "MESSAGE_ID":"OF3B2683EA.4906D4E6-ON88257604.0056F946-88257604.0057246E@us.ibm.com",
        "PARENT_ID":4412.0,
        "SUBJECT":"Re: hadoop tasks reading from cassandra",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"not-ak",
        "BODY":"difference get string property thrift apis exposed client thrift jun"
    },
    "39356":{
        "ID":4406,
        "MESSAGE_ID":"f5f3a6290907282347w744a3a9rd905301d8783ff3f@mail.gmail.com",
        "PARENT_ID":4405.0,
        "SUBJECT":"Re: hadoop tasks reading from cassandra",
        "SENT_FROM":"Jeff Hodges <jeff@somethingsimilar.com>",
        "TAGS":"not-ak",
        "BODY":"er let clear talking data model io done meant familiar enough know well responsibility various object fit together jeff"
    },
    "39357":{
        "ID":4405,
        "MESSAGE_ID":"f5f3a6290907282337t38e7028em82a1d879150fcfbf@mail.gmail.com",
        "PARENT_ID":4371.0,
        "SUBJECT":"Re: hadoop tasks reading from cassandra",
        "SENT_FROM":"Jeff Hodges <jeff@somethingsimilar.com>",
        "TAGS":"existence",
        "BODY":"comment inline"
    },
    "39392":{
        "ID":4370,
        "MESSAGE_ID":"OFF7A9BC4F.A74D4FF4-ON882575FD.0056C4A0-882575FD.0058A694@us.ibm.com",
        "PARENT_ID":4367.0,
        "SUBJECT":"Re: hadoop tasks reading from cassandra",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"existence",
        "BODY":"jeff look like great start comment addition orderpreservingpartitioner would useful support mapreduce randompartitioned cassandra well rough prototype sort work moment difficulty random partitioner bit hard generate split prototype simply map row split ok fat row row includes info user may fine grained case another possibility generate split corresponds set row hash range instead key range requires new apis cassandra better performance future would useful expose exploit data locality cassandra map task executed cassandra node owns data locally related issue url break encapsulation worth thinking google dfs bigtable expose certain locality info better performance jun ibm almaden research center harry road san jose ca junrao almaden ibm com jeff hodges wrote"
    },
    "39395":{
        "ID":4367,
        "MESSAGE_ID":"f5f3a6290907240123y22f065edp1649f7c5c1add491@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"hadoop tasks reading from cassandra",
        "SENT_FROM":"Jeff Hodges <jeff@somethingsimilar.com>",
        "TAGS":"existence, technology",
        "BODY":"hey getting hadoop play nice cassandra desire many folk list probably one purpose email going restrict goal getting hadoop read cassandra stupid way stupid specific meaning stupid mean hadoop mapper see small subset entire desired dataset cassandra entire desired dataset never seen one phase hadoop process every portion desired dataset unique mapper delivered two mapper ever overlap portion desired dataset seen mapper partitioning dataset mapper try efficiently use cassandra node mean attempting keep partition one node solely conspicuously list data locality keeping data passed node given mapper near machine requires investigation outside scope initial project also please remember stupid smart hadoop want done hbase dug around hadoop hbase codebases understanding yet perfect seems general layout problem first subclass inputformat need written class job split dataset hadoop job inputsplits accurately subclass inputsplits inputsplits serialized disk hdfs file named picked one mapper okay actually mapper idea inputsplits inputsplit loaded machine running mapper getrecordreader called subclass inputformat mapper inputsplit passed well various hadoop job information getrecordreader return subclass recordreader allows mapper call next run portion dataset represented inputsplit version hbase codebase inputsplits created gathering start key region conceptually map roughly cassandra node database divvying key approximately evenly across number mapper desired tablesplits hbase subclass inputsplit created information start key region end key region region location name node dataset splitting key work hbase key always stored ordered fashion basically hbase always partition using something akin cassandra orderpreservingpartitioner posted gist method divvying interestingly region location seems encoded allow nice tostring method inputsplit used logging hbase subclass recordreader us instance clientscanner class keep state mapper portion dataset clientscanner query hbase meta server contains information region start key table name gather hbase region talk cache information note done mapper machine note region information encoded tablesplit seem used last point code get really hairy could wrong correction would appreciated important part anyway subclassing inputformat recordreader inputsplit cassandra maybe spoke jonathan cassandra tried see could take hbase method turn something would work cassandra initial assumption cassandra database mapped use orderpreservingpartitioner keep input splitting consistent cassandra node really concept start end key could however get start key given node taking first key returned sstablereader getindexedkeys would gather start key node sort could use key gathered list start key region given addition slice api slice start key next start key end key hbase terminology would need modify slice api provide slice end key given exclusive set returned instead inclusive term actual code written subclass inputformat would gather list start key would serialize start finish key pair subclass inputsplit course subclass recordreader would make finish key exclusive slice call method satisifies property stupid definition point hadoop job accessing entire dataset even key remembering getindexedkeys work correctly satisifies property clearly slicing everything unless misremembering replication work ordered partitioning misremembering start key duplicated return sorted set instead sorted array satisfies property slicing along seam given node back game right first pas suck rule question url jeff"
    },
    "39408":{
        "ID":4354,
        "MESSAGE_ID":"e06563880907211605s27683074qf4cf401c13e8696@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"roadmap and 0.4",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"recap mission see add feature allow people start modeling app correctly cassandra range query delete support file worst rough edge initial code import mission accomplished already obsolete lot way think need follow relatively quick people write much code obsolete api put much data disk format changed issue think remain url think get done couple week problem bootstrap one might problematic willing push look really bad got ticket jonathan"
    },
    "40045":{
        "ID":3717,
        "MESSAGE_ID":"49DF7A3E.1070000@oskarsson.nu",
        "PARENT_ID":3715.0,
        "SUBJECT":"Re: Development process (was: working together)",
        "SENT_FROM":"Johan Oskarsson <johan@oskarsson.nu>",
        "TAGS":"not-ak",
        "BODY":"made minor convenience tweak wiki page contributing patch mark issue patch available making easier committers reviewer find ticket need attention committers create filter give review queue wait one created url johan jun rao wrote"
    },
    "40047":{
        "ID":3715,
        "MESSAGE_ID":"OF1FEF93BF.F5295506-ON88257593.007BDB5A-88257593.007BE3FD@us.ibm.com",
        "PARENT_ID":3711.0,
        "SUBJECT":"Re: Development process (was: working together)",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"not-ak",
        "BODY":"jun ibm almaden research center harry road san jose ca junrao almaden ibm com johan oskarsson johan oskarsson nu johan oskarsson johan oskarsson nu please respond cassandra dev incubator apache org cassandra dev incubator apache org cc subject development process working together thanks sandeep would comfortable adopting process going forward hopefully reducing friction bug problem general assume sandeep far johan sandeep tata wrote johan wiki page great think help iron process contributing committing added pointer formatting convention howtocontribute think anything else add url url url short summary description point make sense patch evolution code attached jira issue least one issue committed stop patch two point would make sure someone disagrees change refactoring etc chance voice opinion steer right direction trunk considered stable must pas unit test non trivial change include unit test branch created prepare release extra effort put qa make sure release stable possible point release would go fix issue found release done release people using production without problem upgraded stable status purpose point encourage vibrant codebase afraid example refactoring improves code readability testability appreciate cassandra complex system change might unwanted side effect hopefully adding test code review reduce final catch release candidate stable release process help end user avoid bug thought wiki page help resolve problem johan sandeep tata wrote thought inline problem seeing elected committer without real community consensus barrier entry unnatural low one hand need non fb committers graduation better reason low entry barrier though think everyone including fb guy agree jonathan working hard help move codebase forward quick revert change broke code fb guy pipeline committed since think much friction come process take torsten missing definition development process considered valid code review much change discussed front roadmap weighted community probably need work simple suggestion fan patch evolution code change come patch change come anywhere else eg committers ide even something simple cleaning comment changing variable name patch get applied least one reviewer one patch pas unit test significant patch come additional unit test course mean work committers sure process essential project grow beyond small group core contributor trunk considered stable missing stable branch required stability separation stable trunk patch really find way trunk stable facebook ok approach everyone cope additional work merging would useful overkill use merge tracking agree matt trunk pas build test trusted production think supposed stable branch avinash prashant thought guy comfortable approach foresee problem basically use release branch production release branch admit stability patch new feature cleanup patch go trunk folk running cassandra production need nervous moving one release next worry much every single patch breaking running system real world testing feedback publicly available feedback change slowly reach community easy project like faster way provide testing feedback iirc yahoo providing testing feedback hadoop even try auto apply patch jira time fb may able provide feedback divert traffic new version system auto applying patch jira sound little ambitious right really code ownership issue working code base year get attached code written everyone really let go ok someone else really rewrite part wrote mean original code bad maybe new code readable understandable especially someone spent past year working code room refactoring tough situation hope everyone see opportunity please let discus openly civilize manner focusing solve point rather looking past please talk work together agree thanks initiating conversation"
    },
    "40050":{
        "ID":3712,
        "MESSAGE_ID":"a073486d0904091037m25821c57o10d46aa2c25d29d2@mail.gmail.com",
        "PARENT_ID":3705.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Sandeep Tata <sandeep.tata@gmail.com>",
        "TAGS":"process",
        "BODY":"probably think automatic refactoring tool tested enough java would probably fine using without unit test however much really useful refactoring code want beyond simple automatic one agreed big fan refactoring simplicity making argument slightly delay big one think fb team limited bandwidth devote criticism observation relatively new apache process learning balance fb commitment suggesting continue make concession first release still figuring process committing change like still early day think many refactoring patch discussing jira perfectly acceptable opinion much needed instance cassandra cassandra otoh refactoring entire set messaging class something get eventually would hate see bug like cassandra would qualify bigger refactoring suggesting put long time basic first release understand purpose merit refactoring code many part code would like clean argument simply attempt solving birthing trouble community technical argument refactoring suggestion altering timing move forward easily"
    },
    "40051":{
        "ID":3711,
        "MESSAGE_ID":"49DE1926.6080605@oskarsson.nu",
        "PARENT_ID":3704.0,
        "SUBJECT":"Development process (was: working together)",
        "SENT_FROM":"Johan Oskarsson <johan@oskarsson.nu>",
        "TAGS":"not-ak",
        "BODY":"thanks sandeep would comfortable adopting process going forward hopefully reducing friction bug problem general assume sandeep far johan sandeep tata wrote"
    },
    "40052":{
        "ID":3710,
        "MESSAGE_ID":"e06563880904090457n3487660dl5a5d80e3b0b83a75@mail.gmail.com",
        "PARENT_ID":3709.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"process",
        "BODY":"know tempting skip end long thread without reading already said right solution production branch stability trunk development new feature jonathan"
    },
    "40053":{
        "ID":3709,
        "MESSAGE_ID":"4e777ed10904082329q1375a3a1yc291468935488795@mail.gmail.com",
        "PARENT_ID":3708.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Zhu Han <schumi.han@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"many mistake without spelling check sorry jonathan understand refactored code lot last month saw working hard improve last month however talent facebook done lot work bring cassandra world deployed production system time type patch could bring instability system critical production environment freeze refactoring code community bring whole bunch unit test case integrate test case committed code base facebook team enough time community contribute project top item todo list test case ready regression bug could detected easily whatever even trivial patch could bring unexpected bug system reviewer would review patch seriously trivial patch show context clearly finally may understand code thoroughly let depend test case fight type bug avinash overall architecture implementation cassandra clear impressive refactoring still necessary would bring code quality higher layer take seriously cautious best regard hanzhu forwarded message zhu han date thu apr pm subject working together cassandra dev incubator apache org jonathan understand refactored code lot last month saw working hard improve last month however talent facebook done lot work bring cassandra world deployed production system time type patch could bring unstability system critical production environment freeze refactoring code community bring whole bunch unit test case integrate test case commited code base facebook team enough time community contribute project top item todo list test case done regression bug could detected easily whatever even trivial patch could bring unexpected bug system reviewer would review patch seriously trivial patch show context clearly finally may understand code thoroughly let depend test case fight type bug avinash overall architecture implementation cassandra clear impressive refactoring still necessary would bring code quality higher layer take seriously cautious best regard hanzhu"
    },
    "40054":{
        "ID":3708,
        "MESSAGE_ID":"4e777ed10904082324g18abf4dfh15892a20e18483a7@mail.gmail.com",
        "PARENT_ID":3705.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Zhu Han <schumi.han@gmail.com>",
        "TAGS":"process",
        "BODY":"jonathan understand refactored code lot last month saw working hard improve last month however talent facebook done lot work bring cassandra world deployed production system time type patch could bring unstability system critical production environment freeze refactoring code community bring whole bunch unit test case integrate test case commited code base facebook team enough time community contribute project top item todo list test case done regression bug could detected easily whatever even trival patch could bring unexpected bug system reviewer would review patch seriously trival patch show context clearly finally may understand code thoroughly let depend test case fight type bug avinash overall architecture implementation cassandra clear impressive refactoring still necessary would bring code quality higher layer take seriously cautious best regard hanzhu"
    },
    "40058":{
        "ID":3704,
        "MESSAGE_ID":"a073486d0904081642q2d09b52apc6688e4de54dc4ff@mail.gmail.com",
        "PARENT_ID":3696.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Sandeep Tata <sandeep.tata@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"johan wiki page great think help iron process contributing committing added pointer formatting convention howtocontribute think anything else add"
    },
    "40059":{
        "ID":3703,
        "MESSAGE_ID":"a073486d0904081626m251e058en86db51f5f1367f58@mail.gmail.com",
        "PARENT_ID":3674.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Sandeep Tata <sandeep.tata@gmail.com>",
        "TAGS":"process",
        "BODY":"refactoring question seems bit thorn think reasonable codebase evolved two year significant opportunity refactoring opened host new developer said large scale refactoring stage hurt two way rich suite unit test even automatic refactoring without unit test make uncomfortable big refactoring make difficult original developer review patch quickly understand avinash resistance big refactoring extent agree think may need significant refactoring codebase move forward simplify keep healthy make contribution easier perhaps hold accepting big refactorings richer suite unit test done initial stable release seems like reasonable restriction refactoring story yes avinash prashant jonathan others seem like good strategy alternative idea"
    },
    "40061":{
        "ID":3701,
        "MESSAGE_ID":"6c59d89a0904081326w6ce87f1fv9755b52bc0027bff@mail.gmail.com",
        "PARENT_ID":3699.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Torsten Curdt <tcurdt@apache.org>",
        "TAGS":"not-ak",
        "BODY":"post commit review work many apache project agree might work cassandra stage yet dvcs approach already big fan usually sound like right path cheer torsten"
    },
    "40062":{
        "ID":3700,
        "MESSAGE_ID":"6c59d89a0904081317s425d64f7m88a83b7f70371e90@mail.gmail.com",
        "PARENT_ID":3697.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Torsten Curdt <tcurdt@apache.org>",
        "TAGS":"not-ak",
        "BODY":"accusing instead expressing feeling expect really planed way well said design case think much ask bring forward like rather able read mind approach invited committers private mailing list already likely expect signed started vote purpose without every somewhat decent kindergarten parent need accompany child first week even month call familiarization sure right english term oh comparison kindergarten purely accidental cheer torsten"
    },
    "40063":{
        "ID":3699,
        "MESSAGE_ID":"87d4bnqdcz.fsf@shaolin.home.digitalvampire.org",
        "PARENT_ID":null,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Roland Dreier <roland@digitalvampire.org>",
        "TAGS":"process",
        "BODY":"see post commit review could work fundamental issue post commit review lack response mean patch stay committed obvious trivial change make sense anything real meat bandwidth people qualified review may limited lack response read acceptance reviewer find issue patch committed top reverting original patch may big hassle pre commit review hand make social aspect review work benefit project someone want get change onto trunk process give incentive make change readable work reviewer make sure change understood build consensus etc said would nice low barrier way people including non committers publish branch work easily obtainable testable even pre merge unfortunately incubator svn make easy perhaps something done short switching dvcs"
    },
    "40064":{
        "ID":3698,
        "MESSAGE_ID":"OFA5F674F9.BAC2FC79-ON88257592.0057CD05-88257592.0058ACFB@us.ibm.com",
        "PARENT_ID":3678.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"not-ak",
        "BODY":"jonathan elli wrote pm code opinion kind refactoring remove duplicate code necessary reduces chance introducing bug make easier adding new feature kind refactoring probably better done sooner later course would great original developer guide process jun ibm almaden research center harry road san jose ca junrao almaden ibm com"
    },
    "40066":{
        "ID":3696,
        "MESSAGE_ID":"49DC6BB4.1030701@oskarsson.nu",
        "PARENT_ID":3669.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Johan Oskarsson <johan@oskarsson.nu>",
        "TAGS":"process",
        "BODY":"sandeeps development process suggestion order address issue brought forward thread adapted following wiki page project various email could serve basis initial process url url url short summary description point make sense patch evolution code attached jira issue least one issue committed stop patch two point would make sure someone disagrees change refactoring etc chance voice opinion steer right direction trunk considered stable must pas unit test non trivial change include unit test branch created prepare release extra effort put qa make sure release stable possible point release would go fix issue found release done release people using production without problem upgraded stable status purpose point encourage vibrant codebase afraid example refactoring improves code readability testability appreciate cassandra complex system change might unwanted side effect hopefully adding test code review reduce final catch release candidate stable release process help end user avoid bug thought wiki page help resolve problem johan sandeep tata wrote"
    },
    "40068":{
        "ID":3694,
        "MESSAGE_ID":"49DC5F1C.4070005@gmail.com",
        "PARENT_ID":3692.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Neophytos Demetriou <neophytos@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"torsten curdt wrote"
    },
    "40072":{
        "ID":3690,
        "MESSAGE_ID":"49DC58B7.1080507@gmail.com",
        "PARENT_ID":3683.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Neophytos Demetriou <neophytos@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"understanding know better necessarily imply rest stupid setting cassandra run complicated design system extremely difficult task obviously important run correctly efficiently aspect need approach strives balance openness towards new participant contribution need control acknowledgment balance might shift time point risky risky code change introduce incompatibility expensive may lead coexisting trunk inside fb also mean might remain unaware existence major problem beyond stage contained corrected like using close enough version code fb appealing understand may feel original author interacting community way grassroot hacker people brought code kind agree avinash relation etiquette first go along come along recent issue meritocracy open source practice facebook developer would happy new people coming help like project filter people believe committed enough task match human attitude required work well others especially disagreement familiar asf process following url suggests pmc comprised developer commiters elected due merit evolution project demonstration commitment said difficult see facebook developer could frustrated recent event mean disrespectful jonathan probably know longer people group think deserves commiter way think avinash prashant project leader way deserve credit respect contribution releasing cassandra open source first place neophytos"
    },
    "40073":{
        "ID":3689,
        "MESSAGE_ID":"6c59d89a0904080044r49e9ce11g2616cb9fd696332c@mail.gmail.com",
        "PARENT_ID":3672.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Torsten Curdt <tcurdt@apache.org>",
        "TAGS":"process",
        "BODY":"think important come point discus dev enough freedom trust post commit maybe beginning going jira ok fear cumbersome scale thanks indeed thanks"
    },
    "40074":{
        "ID":3688,
        "MESSAGE_ID":"6c59d89a0904080040n72c102ffm2100a2fd789322b4@mail.gmail.com",
        "PARENT_ID":3670.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Torsten Curdt <tcurdt@vafer.org>",
        "TAGS":"not-ak",
        "BODY":"indeed see vote gotten suspicious water bridge"
    },
    "40075":{
        "ID":3687,
        "MESSAGE_ID":"6c59d89a0904080038s2a087b59u4b75d5934426588a@mail.gmail.com",
        "PARENT_ID":3668.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Torsten Curdt <tcurdt@apache.org>",
        "TAGS":"not-ak",
        "BODY":"well feel tricked vote right vote come community mentor whether like ok child play together work way meant way forward think"
    },
    "40077":{
        "ID":3685,
        "MESSAGE_ID":"a06de5520904072157g23b5a6a1nf083ba640199e4de@mail.gmail.com",
        "PARENT_ID":3684.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"fact matter hard defend every decision going memory lane apologize came across condescending definitely intent avinash tue apr pm avinash lakshman avinash lakshman gmail com"
    },
    "40078":{
        "ID":3684,
        "MESSAGE_ID":"a06de5520904072151l4882c399j2b7a32c78e31f621@mail.gmail.com",
        "PARENT_ID":3683.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"meant thought made clear said hard recall experience reason everything careful state always put shoe reader avinash"
    },
    "40079":{
        "ID":3683,
        "MESSAGE_ID":"fbdc6a970904072147x4d246c01xca9dd96bed97bc20@mail.gmail.com",
        "PARENT_ID":3674.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Matthieu Riou <matthieu.riou@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"tue apr pm avinash lakshman avinash lakshman gmail com look saying basically know better stupid touch code ask question provide answer anyway hoping way meant email essence came across run open source project saying development list matthieu"
    },
    "40080":{
        "ID":3682,
        "MESSAGE_ID":"a06de5520904072126x5fc3fa39tab66798411e44533@mail.gmail.com",
        "PARENT_ID":3680.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think ever spoke anyone skill ever avinash"
    },
    "40081":{
        "ID":3681,
        "MESSAGE_ID":"fbdc6a970904072125g4d95c814gcdeb7f3d2b7e1b7f@mail.gmail.com",
        "PARENT_ID":3675.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Matthieu Riou <matthieu.riou@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"tue apr pm avinash lakshman avinash lakshman gmail com let explain reasoning behind said hope help clarify motto apache often put forth community code community code might actually accurate le catchy build community around open source project try build strongly possible survive many many year lot folk around actually quite bit experience benefit experience example clear apply illustrates point mythological genius hacker able write half perfect garbage collector night never communicates anybody total nightmare open source project actually good way stop attracting new committer another dangerous tendency applies bit freeze codebase saying good enough without proposing clear roadmap possible enhancement anybody volunteer helping condition would rather unstable code lot anyday getting back come committers would agree general cassandra cassandra hadoop point far would like project survive absolutely personal interest pumped enough time see wasted accepting new committers point vital otherwise project go slow painful death believe learned see spiral early understand like probably come unpleasant jolt also feel like acceptable alternative proposed working branch discussing patch actually providing feedback suggestion going forward matthieu"
    },
    "40082":{
        "ID":3680,
        "MESSAGE_ID":"1AB10227-B5FE-4D1F-8E36-9AEF39E04DFC@Holsman.net",
        "PARENT_ID":3679.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Ian Holsman <ian@holsman.net>",
        "TAGS":"not-ak",
        "BODY":"matt please comment valuable anyone else aware talk someone skill list possible promotion committer preempt conversation happening discourage person participating made committer many time project people name put forth possible committers member feedback yet done public list discouraging"
    },
    "40085":{
        "ID":3677,
        "MESSAGE_ID":"a06de5520904072033m67e741cfu4f0cd03e491dde62@mail.gmail.com",
        "PARENT_ID":3676.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think someone else opened door avinash"
    },
    "40086":{
        "ID":3676,
        "MESSAGE_ID":"681F8D43-62D2-493F-9ADC-27420D46324D@Holsman.net",
        "PARENT_ID":3675.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Ian Holsman <ian@holsman.net>",
        "TAGS":"not-ak",
        "BODY":"guy private list discus pro con people comitter keep personal discussion development list help anyone mentioned several time assumed subscribed asked th january"
    },
    "40087":{
        "ID":3675,
        "MESSAGE_ID":"a06de5520904072026v7ab2d383w898bb82e0a0d0998@mail.gmail.com",
        "PARENT_ID":3674.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"process",
        "BODY":"hit send bit early thanks torsten bringing really appreciate one apart committers think voting people becoming committer assuming committers involved project code perspective regard matt respectfully disagree assessment jonathan becoming committer strongly believe come committers short mean absolutely disrespect jonathan anyone else matt assessment need come guy involved day day basis code perspective aim put forth frustration meant put anyone cheer avinash tue apr pm avinash lakshman avinash lakshman gmail com"
    },
    "40088":{
        "ID":3674,
        "MESSAGE_ID":"a06de5520904072011o21df108aw28100874091fffd0@mail.gmail.com",
        "PARENT_ID":3672.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"process",
        "BODY":"point would love committers outside way happened took surprise granted list one committers would definitely pinged one committters asked whether knew hell going anyway water bridge hate bitter confrontation since take anyone forward leaf bitter taste everyone mouth many personal conversation jonathan via chat nothing personal anyone perhaps everyone definitely nothing jonathan part disconcerting following one becomes committer one expected blitz code base start refactoring everything way need handled organization one go ripping everyone else code rhyme reason offend anybody personally would go ripping someone else code apart become committer respect ought way get done change code person like something particular form going changing person code plain wrong border arrogance way thing done become committer hadoop go start ripping apart every class start making change like coding style premature project apache think need keep original developer loop till everyone degree confidence change made new committers something said many time certain thing way reason example say concurrenthashmap memory hog say seen practice manifest obviously recall since year ago one claim run test way last year half one run simple test say well see problem dumb anyone gone exercise built system like organization realize test intermingled organization infrastructure time rip apart put together test suite point example many instance one operational experience think anyone claim understand behavior system production workload better understanding new committers come start feature implement slowly start looking could going forward come refactor hell system like something specific way beleive fly community something like going entire code base changing stuff like specific way seems ludicrous may experience open source understand etiquette well seem way thing work apache project successful work closely two committers hadoop project flabbergasted refactor change going gripe whole thing cheer avinash"
    },
    "40089":{
        "ID":3673,
        "MESSAGE_ID":"3E694034-6E67-444E-B4D2-4FFB2FC13890@Holsman.net",
        "PARENT_ID":3671.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Ian Holsman <ian@holsman.net>",
        "TAGS":"not-ak",
        "BODY":"mentor people mentioned initial proposal comitters resent original email original people list make sure got"
    },
    "40092":{
        "ID":3670,
        "MESSAGE_ID":"EE341BA8-A00D-44D1-831D-B87CADCE9B3F@Holsman.net",
        "PARENT_ID":3663.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Ian Holsman <ian@holsman.net>",
        "TAGS":"not-ak",
        "BODY":"point invited day actually jan done malice"
    },
    "40093":{
        "ID":3669,
        "MESSAGE_ID":"a073486d0904071712if483154l9462b6d0ec1a8edd@mail.gmail.com",
        "PARENT_ID":3663.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Sandeep Tata <sandeep.tata@gmail.com>",
        "TAGS":"process",
        "BODY":"thought inline think everyone including fb guy agree jonathan working hard help move codebase forward quick revert change broke code fb guy pipeline committed since think much friction come process take torsten probably need work simple suggestion fan patch evolution code change come patch change come anywhere else eg committers ide even something simple cleaning comment changing variable name patch get applied least one reviewer one patch pas unit test significant patch come additional unit test course mean work committers sure process essential project grow beyond small group core contributor agree matt trunk pas build test trusted production think supposed stable branch avinash prashant thought guy comfortable approach foresee problem basically use release branch production release branch admit stability patch new feature cleanup patch go trunk folk running cassandra production need nervous moving one release next worry much every single patch breaking running system time fb may able provide feedback divert traffic new version system auto applying patch jira sound little ambitious right agree thanks initiating conversation"
    },
    "40097":{
        "ID":3665,
        "MESSAGE_ID":"F3415461-B205-4896-AF90-30BAA7D378D0@gmail.com",
        "PARENT_ID":3663.0,
        "SUBJECT":"Re: working together",
        "SENT_FROM":"Matt Revelle <mrevelle@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"please take say grain salt invested project watching since initial open release facebook comment inline"
    },
    "40099":{
        "ID":3663,
        "MESSAGE_ID":"6c59d89a0904071310jba6da9bs59f640fa5e3f552c@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"working together",
        "SENT_FROM":"Torsten Curdt <tcurdt@apache.org>",
        "TAGS":"not-ak",
        "BODY":"hey folk thought back forth whether email go private list cocoon background cocoon land found useful use private list really way community think deserves discussed open hope one offended approach let try explain see history cassandra please correct wrong cassandra mainly developed facebook used production stage got open sourced google code external contributor feel like real community around patch get applied frustration people started least proposed fork code base fork mean community fragmentation project turned apache incubator hoping turn fragmented contributor healthy community january project got accepted paper filed march saw code enter apache subversion repository week later first committer proposed unfortunately one noticed actual author bringing code private list vote held got new committer without consent feedback original author big surprise people brought code feel bit betrayed process deal committer change place code base depend production feeling change untested least tested enough get right production facebook destabilize code base hand new blood new drive project facebook need stability contributor need change meet goal deadline problem seeing elected committer without real community consensus barrier entry unnatural low one hand need non fb committers graduation better reason low entry barrier though missing definition development process considered valid code review much change discussed front roadmap weighted community trunk considered stable missing stable branch required stability separation stable trunk patch really find way trunk stable facebook ok approach everyone cope additional work merging would useful overkill use merge tracking real world testing feedback publicly available feedback change slowly reach community easy project like faster way provide testing feedback iirc yahoo providing testing feedback hadoop even try auto apply patch jira really code ownership issue working code base year get attached code written everyone really let go ok someone else really rewrite part wrote mean original code bad maybe new code readable understandable especially someone spent past year working code room refactoring anything else missing tough situation hope everyone see opportunity please let discus openly civilize manner focusing solve point rather looking past please talk work together cheer torsten"
    },
    "40117":{
        "ID":3645,
        "MESSAGE_ID":"4e777ed10904040047r3110bd83r91f57b716876e85a@mail.gmail.com",
        "PARENT_ID":3599.0,
        "SUBJECT":"Re: handling deletes",
        "SENT_FROM":"Zhu Han <schumi.han@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"yes service sla possibility extreme case controlled sla ok provide mechanism best regard hanzhu thu apr avinash lakshman avinash lakshman gmail com"
    },
    "40118":{
        "ID":3644,
        "MESSAGE_ID":"4e777ed10904040045i3c59a843me4b9b589117f774f@mail.gmail.com",
        "PARENT_ID":3596.0,
        "SUBJECT":"Re: handling deletes",
        "SENT_FROM":"Zhu Han <schumi.han@gmail.com>",
        "TAGS":"existence",
        "BODY":"jun mentioned really good point two assumption say discussing problem suppose failure crash transient even server crashed made alive without loss persistent data disk tha cassandra us write ahead log style database host persistent data local disk hinted handoff good enough problem hinted handoff node crashed forever need mechanism sync replica range pointed possibility small may consider type manual effort elegant simple solution example let application start read repair process sync data different node let node whole checkpoint start synchronization comparing checkpoint want smart solution building hash treeover range synchonization hash tree really good since possibility rare start process console manually shipping log periodically expensive write load node high best regard hanzhu"
    },
    "40163":{
        "ID":3599,
        "MESSAGE_ID":"a06de5520904011237i551221f7h46de3b003b42e653@mail.gmail.com",
        "PARENT_ID":3598.0,
        "SUBJECT":"Re: handling deletes",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"reality year production experience dynamo cassandra extreme seems option either strong consistency hard get right distributed setting get right availability problem tool like read repair etc help achieving eventual consistency guess boil want app avinash"
    },
    "40164":{
        "ID":3598,
        "MESSAGE_ID":"OF97F01406.BCD952F9-ON8825758B.0065A609-8825758B.0067194D@us.ibm.com",
        "PARENT_ID":3597.0,
        "SUBJECT":"Re: handling deletes",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"existence",
        "BODY":"reply inlined jun ibm almaden research center harry road san jose ca junrao almaden ibm com jonathan elli wrote go deletion accumulated challenging suggested sync pp replication definitely add complexity one alternative however also complexity hinted handoff read repair merkle tree added sure one complicated pp replication since initiate write replica need pick live replica writes availability lot quickly failed node detected today write node actually failed yet detected cassandra write also fail overall think eventual consistency fine however eventual consistency probably equated update taking forever show sort guarantee outdated piece data likely useful many application"
    },
    "40166":{
        "ID":3596,
        "MESSAGE_ID":"OF48745B6C.9A8C4E6A-ON8825758B.005CA010-8825758B.0061266D@us.ibm.com",
        "PARENT_ID":3567.0,
        "SUBJECT":"Re: handling deletes",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"existence",
        "BODY":"wondering part bigger issue data consistency following example row replicated node go delete come back contact node hold hinted handoff data intended theory missing deletion propagated point lost however problem hinted handoff node die handoff completes need way sync node possible source unfortunately data accumulated independently therefore syncing bit challenging short run sure really like solution suggested however better solution either long run maybe look peer peer replication technique instead relying hinted handoff pp replication update directed replica try push peer push almost real time peer peer change accumulated pushed update always initiated one replica easier sync replica log shipping benefit approach easier reasoning data synchronization consistency still careful deletes though potentially le overhead since read repair time anybody know much overhead introduces almost availability writes cassandra today jun ibm almaden research center harry road san jose ca junrao almaden ibm com jonathan elli jbellis gmail com jonathan elli jbellis gmail com pm please respond cassandra dev incubator apache org cassandra dev incubator apache org cc subject handling deletes avinash pointed two bug remove code one easy fix tougher easy one code remove tombstone deletion marker columnfamilystore level cassandraserver read repair know tombstone replicated correctly fixed simply moving removedeleted call cassandraserver final return client hard one tombstone problematic gc major compaction sstables use bigtable paper terminology one failure scenario node replicate data go data deleted delete later gc come back copy data read repair stale data sent solution pick number confident node catch hinted handoff longer day default value node may gc tombstone day elapsed also day tombstone longer read repaired prevents node yet gc sending new tombstone copy node already gc implementation detail need add bit time tombstone columnfamily supercolumn column stick byte value since already unambiguous way know column deleted state need bit since time frame sufficiently granular need also use system clock value client timestamp since know source client timestamps admittedly suboptimal compared able gc immediately virtue easily implemented extra component coordination protocol better gcing tombstone easy way ensure correctness thought jonathan"
    },
    "40187":{
        "ID":3575,
        "MESSAGE_ID":"A28A1DF3-40B6-4F0E-81A5-A008CEA48CDE@gmail.com",
        "PARENT_ID":3573.0,
        "SUBJECT":"Re: handling deletes",
        "SENT_FROM":"Jonathan ellis <jbellis@gmail.com>",
        "TAGS":"technology",
        "BODY":"delete column associated key need replace tombstone bigtable actually easier case since consistent tablet level dynamo paper mention deletes remember jonathan"
    },
    "40195":{
        "ID":3567,
        "MESSAGE_ID":"e06563880903301519h922840ds72ef6f9a8d95e07b@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"handling deletes",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence",
        "BODY":"avinash pointed two bug remove code one easy fix tougher easy one code remove tombstone deletion marker columnfamilystore level cassandraserver read repair know tombstone replicated correctly fixed simply moving removedeleted call cassandraserver final return client hard one tombstone problematic gc major compaction sstables use bigtable paper terminology one failure scenario node replicate data go data deleted delete later gc come back copy data read repair stale data sent solution pick number confident node catch hinted handoff longer day default value node may gc tombstone day elapsed also day tombstone longer read repaired prevents node yet gc sending new tombstone copy node already gc implementation detail need add bit time tombstone columnfamily supercolumn column stick byte value since already unambiguous way know column deleted state need bit since time frame sufficiently granular need also use system clock value client timestamp since know source client timestamps admittedly suboptimal compared able gc immediately virtue easily implemented extra component coordination protocol better gcing tombstone easy way ensure correctness thought jonathan"
    },
    "40214":{
        "ID":3548,
        "MESSAGE_ID":"4e777ed10903282035t7f70a156ye749ac85f54befbe@mail.gmail.com",
        "PARENT_ID":3532.0,
        "SUBJECT":"Re: question about the gossip protocol",
        "SENT_FROM":"Zhu Han <schumi.han@gmail.com>",
        "TAGS":"existence",
        "BODY":"avinash understand concern stability observe gossiper report node twice failure detector single round trace log duplication report would make arrival time joggling large scale cluster example real arrival time node seen node node report failure detector twice time saw heart beat node supposing gossip period arrival window stored failure detector would instead accrual fd read paper seems commented gaussian cdf computation use much simpler exponential distribution calculate phi make step value phi crashed node gossip round constant still observe trace log cause failure detection time linear correlation value suspect threshold special advantage another possible bug failure detector first arrival time node make failure detector report node dead reported failure detector first time observe trace log either simple patch index src org apache cassandra gm failuredetector java src org apache cassandra gm failuredetector java revision src org apache cassandra gm failuredetector java working copy arrivalintervals remove double interarrivaltime set proper value initial value prevent failure detector report new joning node dead double interarrivaltime tlast interarrivaltime value tlast best regard hanzhu"
    },
    "40230":{
        "ID":3532,
        "MESSAGE_ID":"a06de5520903272139g33261440r9011cb3b5e2f4c6@mail.gmail.com",
        "PARENT_ID":3531.0,
        "SUBJECT":"Re: question about the gossip protocol",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi zhu thanks take look patch however aspect system well tested even crazy failure simulated network partition scenario would nervous change something layer point answer comment anti entropy portion gossip algorithm actually designed long cassandra conceived designed make gossip disseminate state efficiently quickly gossip protocol principle gossip state someone actually idea work even need gossip significant amount state heartbeat state one thing good thing accrual failure detector designed handle changing anomaly well would suggest read accrual fd case done yet experimented reporting fd found really matter report long distribution evaluated correctly seems le fit exponential distribution closely define point something look looked code sometime maybe stutter start stage perhaps nothing catastrophically wrong look thanks avinash"
    },
    "40231":{
        "ID":3531,
        "MESSAGE_ID":"4e777ed10903272002l38e161e1ha426384ccd843541@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: question about the gossip protocol",
        "SENT_FROM":"Zhu Han <schumi.han@gmail.com>",
        "TAGS":"existence",
        "BODY":"avinash thanks clarification anti entropy process gossip protocol right original idea may need differentiate heartbeat version application state version node disseminate heartbeat version node seen gossipedigest message separately node synchronize heart beat version syn ack instead syn ack ack synchronization application state still need syn ack ack know application state updated frequently heart beat however absolutely right udp packet within mtu lightweight make small optimization bring complexity made patch gossiper java imho solves two problem report new joining end point failure detector gossiper notifies event subsribers otherwise node crash st round syn ack ack nd round failure detetector would observe arrival time record node small probability trigger bug still bug comment report node failure detector receives ack message application state received ack message already observed reported gossiperdigest contained syn message report node failure detector twice one round accuracy estimation arrival time may good please look simple patch way copied prashant mail list comment really appreciate work open source interesting project index src org apache cassandra gm gossiper java src org apache cassandra gm gossiper java revision src org apache cassandra gm gossiper java working copy else new joining end point fd report gdigest endpoint else new joining end point fd report endpoint gossipdigestackmessage gdigestackmessage gossipdigestackmessage serializer deserialize dis map remoteepstatemap gdigestackmessage getendpointstatemap notify failure detector gossiper instance notifyfailuredetector remoteepstatemap comment following line endpoint requested gossiperackmessage reported gossiper notifyfailuredetector list gossiper instance notifyfailuredetector remoteepstatemap gossiper instance applystatelocally remoteepstatemap catch ioexception best regard hanzhu"
    },
    "40244":{
        "ID":3518,
        "MESSAGE_ID":"a073486d0903261815w2f5d002eq50751db975d5f72a@mail.gmail.com",
        "PARENT_ID":3500.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Sandeep Tata <sandeep.tata@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"compaction optimization prashant mentioned likely solve many problem jun brings thinking tackling problem opened ticket jira url avinash prashant guy already working feel free assign otherwise sketch plan send community agrees idea start hacking away sandeep"
    },
    "40261":{
        "ID":3501,
        "MESSAGE_ID":"a06de5520903251109u3a1a2814oa0148d2084e7cd33@mail.gmail.com",
        "PARENT_ID":3500.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"would depend app describing serializability never one design goal locking business help could write replica read another write yet propagated see issue locking help single machine go across machine client app able handle motivation strict guarantee avinash"
    },
    "40262":{
        "ID":3500,
        "MESSAGE_ID":"OFD6C57C73.01CB2173-ON88257584.005EC120-88257584.0062047E@us.ibm.com",
        "PARENT_ID":3492.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"existence",
        "BODY":"comment inlined jun ibm almaden research center harry road san jose ca junrao almaden ibm com avinash lakshman wrote pm change maintaining however mean problem show cassandra today method read column different cf row method would hard enforce reader always see complete update updating multiple cf without sort row lock however scaling large group may fit memory fit commodity disk compaction optimization prashant mentioned definitely make current approach feasible however general bit concerned putting much stuff within row row unit finite capacity user expect put infinite number column within row actually like current assumption cassandra row fit memory since simplifies implementation hand table arbitrary capacity one need provision enough node cluster many row want many cf column function starting cassandra able could locking compaction cf file column us entity stored automatically index hear"
    },
    "40270":{
        "ID":3492,
        "MESSAGE_ID":"a06de5520903242208t34d85276ia6e32e8fc6aa353c@mail.gmail.com",
        "PARENT_ID":3488.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"existence",
        "BODY":"comment inline"
    },
    "40271":{
        "ID":3491,
        "MESSAGE_ID":"a06de5520903242034q7c4f2d92va972313d397ef6c7@mail.gmail.com",
        "PARENT_ID":3490.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"prashant many point whereby need second approach guess referring avinash"
    },
    "40272":{
        "ID":3490,
        "MESSAGE_ID":"OFE5160CEB.AE3AB50F-ON85257584.00113A80-88257584.00124A75@us.ibm.com",
        "PARENT_ID":3480.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"not-ak",
        "BODY":"prashant forgot another point mentioned new approach carving chunk data hash needed node removal addition may efficient worse case make full scan data possible make efficient following strategy guy implemented using random hash function prefixing index key hash value"
    },
    "40273":{
        "ID":3489,
        "MESSAGE_ID":"a06de5520903241945v564bafdaj3a51da3d96d51eac@mail.gmail.com",
        "PARENT_ID":3485.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Avinash Lakshman <avinash.lakshman@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think prashant brought good point response would helpful understand best way avinash"
    },
    "40274":{
        "ID":3488,
        "MESSAGE_ID":"OF34A0ACDE.BC62B4F8-ON85257584.000892E0-88257584.000A5A49@us.ibm.com",
        "PARENT_ID":3480.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"existence",
        "BODY":"prashant thanks comment quite useful let try address point made true current implementation glue change data index one batch update call way data index maintained synchronously however maintaining index server likely efficient since le communication overhead seem agree cassandra currently acquire row lock row access however implication reader may see partial update row example suppose writer update two column different cf possible concurrent reader see update one column one application row level consistency could important probably reason hbase region server acquires row lock every read write current application size entity group large likely fit within capacity single node however application able scale group node could useful storing group within single row prevent scaling group jun ibm almaden research center harry road san jose ca junrao almaden ibm com prashant malik wrote common want group implement name column leave entity today also data easier one rowkey attribute attribute rowkey entity example better removal"
    },
    "40277":{
        "ID":3485,
        "MESSAGE_ID":"OF72712025.CED72A53-ON85257584.0007D2B7-88257584.00088D13@us.ibm.com",
        "PARENT_ID":3479.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"existence",
        "BODY":"jonathan thanks comment agree first point useful plug user defined index analyzer analyzer take row indexed column extract whatever index key like way application choose index different data type query low level api make available application developer general done single query may translated multiple low level api call apps may prefer former efficiency jun ibm almaden research center harry road san jose ca junrao almaden ibm com jonathan elli jbellis gmail com jonathan elli jbellis gmail com please respond cassandra dev incubator apache org cassandra dev incubator apache org cc subject secondary index support cassandra add lot complexity definitely see people wanting easy indexing box principle high level comment first maximum flexibility probably want allow index defined code would define something like columnfamily name foo index generator classpath columnfamily allow index generator loaded runtime nobody else going need specific case hash rowkey attribute attribute rowkey abstract make pluggable whatever weird as requirement people second fan query parsing string whole rdbms world moving away sql towards oo interface last year like thrift api reason little clunky java everything little clunky java much better python ruby etc finally implementation detail cassandra already much memory writing merging sstables make worse jonathan partitioner abstraction layer cassandra allow per node grouping want without weird contortion"
    },
    "40282":{
        "ID":3480,
        "MESSAGE_ID":"4337ab7b0903241134l63d82b18jde0e9f2e758f8019@mail.gmail.com",
        "PARENT_ID":3478.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Prashant Malik <pmalik@gmail.com>",
        "TAGS":"existence",
        "BODY":"question iline"
    },
    "40283":{
        "ID":3479,
        "MESSAGE_ID":"e06563880903241048i6eec196am2d8bbec15502d90c@mail.gmail.com",
        "PARENT_ID":3478.0,
        "SUBJECT":"Re: secondary index support in Cassandra",
        "SENT_FROM":"Jonathan Ellis <jbellis@gmail.com>",
        "TAGS":"existence, technology",
        "BODY":"add lot complexity definitely see people wanting easy indexing box principle high level comment first maximum flexibility probably want allow index defined code would define something like allow index generator loaded runtime nobody else going need specific case hash rowkey attribute attribute rowkey abstract make pluggable whatever weird as requirement people second fan query parsing string whole rdbms world moving away sql towards oo interface last year like thrift api reason little clunky java everything little clunky java much better python ruby etc finally implementation detail cassandra already much memory writing merging sstables make worse jonathan partitioner abstraction layer cassandra allow per node grouping want without weird contortion"
    },
    "40284":{
        "ID":3478,
        "MESSAGE_ID":"OF0CB6A98B.6258744C-ON88257583.0055A1E7-88257583.005F5CD3@us.ibm.com",
        "PARENT_ID":null,
        "SUBJECT":"secondary index support in Cassandra",
        "SENT_FROM":"Jun Rao <junrao@almaden.ibm.com>",
        "TAGS":"existence",
        "BODY":"application group entity group many entity entity bunch attribute value pair common access pattern select number entity within group attribute equal ordered attribute efficiency want build secondary index group collocate group secondary index node current approach map group row cassandra entity column column family cf within row use separate cf ordered name implement secondary index say attribute family column name form entityid extended get slice function get slice column starting given column extended function us column level index locate starting column quickly would happy contribute extension back cassandra people find useful using extended get slice able access entity simulated secondary index see couple problem current approach first application maintain index inefficient could leave index inconsistent failure occurs second mapping entity column may good idea often sort locking row access putting many entity per row limit concurrency today cassandra full row deserialized memory compaction limit number entity put single row also intuitively entity naturally represented row attribute stored column address problem thinking following new implementation entity mapped row cassandra us two part key groupid entityid use groupid hash entity node way entity group collocated node define special cf serve secondary index definition specify entity attribute need indexed order within node special cf index row stored locally every time insert new entity server automatically extract index key based index definition example index key form hash rowkey attribute attribute rowkey add index entry special cf access entity using extended version query language cassandra example issue following query index defined attributex attributey query evaluated using index special cf note appengine support flavor query select attributez row hash hash groupid attributex order attributey desc limit middle prototyping approach would like hear people interested people think better alternative jun ibm almaden research center harry road san jose ca junrao almaden ibm com"
    },
    "40450":{
        "ID":3311,
        "MESSAGE_ID":"2FE21E1B-5196-4307-942C-31EB37B091DC@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop 0.20.0",
        "SENT_FROM":"Nigel Daley <ndaley@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"folk hadoop available file append feature disabled time talk hadoop release hadoop feature freeze date almost month ago last blocker almost fixed next week except hadoop hadoop work needed properly implement file append propose move hadoop release apply disabling file append hadoop put place get released hadoop hadoop call vote blocker fixed cheer nigel"
    },
    "40780":{
        "ID":2980,
        "MESSAGE_ID":"A132F89F9B9DF241B1C3C33E7299BEB90462795B02@SC-MBXC1.TheFacebook.com",
        "PARENT_ID":null,
        "SUBJECT":"how to debug javadoc warning?",
        "SENT_FROM":"Zheng Shao <zshao@facebook.com>",
        "TAGS":"not-ak",
        "BODY":"getting javadoc warning hudson log patch workspace way debug javadoc warning exec javadoc exec mkdir created dir zonestorage hudson home hudson hudson job hadoop patch workspace trunk build doc api exec javadoc generating javadoc exec javadoc javadoc execution exec javadoc loading source file package classpath exec javadoc loading source file package classpath exec javadoc loading source file package classpath exec javadoc loading source file package classpath exec javadoc loading source file package classpath exec javadoc constructing javadoc information exec javadoc javadoc warning multiple source package comment found package classpath exec javadoc javadoc warning multiple source package comment found package classpath exec javadoc standard doclet version exec javadoc building tree package class exec javadoc building index package class exec javadoc building index class exec javadoc generating zonestorage hudson home hudson hudson job hadoop patch workspace trunk build doc api stylesheet cs exec javadoc warning exec exec build successful exec total time minute second exec exec exec appear javadoc warning generated patched build exec zheng"
    },
    "40829":{
        "ID":2931,
        "MESSAGE_ID":"C52622A8.E0D9%chansler@yahoo-inc.com",
        "PARENT_ID":2913.0,
        "SUBJECT":"Re: Hadoop 1.0 Compatibility Discussion.",
        "SENT_FROM":"Robert Chansler <chansler@yahoo-inc.com>",
        "TAGS":"property",
        "BODY":"would endorse konstantin suggestion downgrade supported rollback roll back work regardless version time version rule allowed upgrade upgrade supported upgrade supported also le one year old interoperation version might conspicuously deprecate hftp http access file making strong demand interoperability client application may read write data two version le permit upgrade need support http hftp sufficiently relaxed security regime support http hftp may withdrawn"
    },
    "40832":{
        "ID":2928,
        "MESSAGE_ID":"4aa34eb70810231102g3e04d382l400cee848aaca928@mail.gmail.com",
        "PARENT_ID":2921.0,
        "SUBJECT":"Re: Hadoop 1.0 Compatibility Discussion.",
        "SENT_FROM":"\"Dhruba Borthakur\" <dhruba@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"hi sanjay ok let understand terminology version version major release maybe occur every year version minor release maybe occurs every month version dot release understanding correct disk format change major minor release dot release hadoop code handle required disk format upgrade downgrade transparently issue impact pre existing filesystem apis make sense thanks dhruba"
    },
    "40843":{
        "ID":2917,
        "MESSAGE_ID":"48FE726A.2050301@yahoo-inc.com",
        "PARENT_ID":2914.0,
        "SUBJECT":"Re: Hadoop 1.0 Compatibility Discussion.",
        "SENT_FROM":"Konstantin Shvachko <shv@yahoo-inc.com>",
        "TAGS":"property",
        "BODY":"sanjay radia wrote dhruba borthakur wrote current rule apis deprecated remove think want neither relax stiffen requirement see anything compatibility model going mean provide compatibility mean compatibility provided distcp another way ask question hdfs hdfs different ext ext saying bad want clarified may somehow structure discussion section deprecation rule client server communication compatibility inter version data format compatibility meta data compatibility block data compatibility konstantin"
    },
    "40844":{
        "ID":2916,
        "MESSAGE_ID":"4aa34eb70810211531r57fada4en4791075646759d60@mail.gmail.com",
        "PARENT_ID":2914.0,
        "SUBJECT":"Re: Hadoop 1.0 Compatibility Discussion.",
        "SENT_FROM":"\"Dhruba Borthakur\" <dhruba@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thinking beneficial move client datanode data transfer communication formalized rpc protocol release url thanks dhruba"
    },
    "40846":{
        "ID":2914,
        "MESSAGE_ID":"4aa34eb70810202344vbd52885h109e1130b7b3a7b5@mail.gmail.com",
        "PARENT_ID":2913.0,
        "SUBJECT":"Re: Hadoop 1.0 Compatibility Discussion.",
        "SENT_FROM":"\"Dhruba Borthakur\" <dhruba@gmail.com>",
        "TAGS":"property",
        "BODY":"apis deprecated release removed release old client connect new server old client might get reduced functionality performance client might able connect server hdfs disk format change release transparent user application cluster rolling back revert back old disk format think good requirement useful run multiple cluster especially across data center hadoop use case thanks dhruba"
    },
    "40847":{
        "ID":2913,
        "MESSAGE_ID":"87940A3B-E250-4E41-B9E8-CAA3EA74681D@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop 1.0 Compatibility Discussion.",
        "SENT_FROM":"Sanjay Radia <sradia@yahoo-inc.com>",
        "TAGS":"process, property",
        "BODY":"hadoop wiki section compatibility url since wiki awkward discussion continuing discussion someone update wiki agreement reached current list compatibility requirement hadoop wiki convenience email thread hadoop mean standard release numbering bug fix release new feature release need client recompilation upgrading remove deprecated class method old client connect new server new filesystem client must able call old method talking old server generally done old method continue use old rpc method however legal new implementation old method call new rpcs method long library transparently handle fallback case old server couple additional compatibility requirement hdfs metadata data preserved across release change major minor whenever release upgraded hdfs metadata old release converted automatically needed followed far hadoop documenting requirement list major release transition ie release release user able read data cluster running old version shall generalize motivation data copying across cluster common operation many customer example routinely done yahoo today http hftp provides guaranteed compatible way copying data across version clearly one force customer simultaneously update hadoop cluster new major release document requirement satisfy via http hftp mechanism mechanism question one willing break application operate across cluster ie application access data across cluster cross major release boundary asked operation team yahoo run hadoop cluster currently applicaions access data across cluster part mr job reason hadoop routinely break wire compatibility across release apps would unreliable however copying data across cluster crucial need supported shall add stronger requirement wire compatibility across major version supported class loading game note wait provide happens hadoop provided guarantee would allow customer partition data across cluster without risking apps breaking across major release due wire incompatibility issue"
    },
    "40861":{
        "ID":2899,
        "MESSAGE_ID":"CC863F621FD1C64C8B0BFF36E92FA00C035F1EE1@SERVER-EXCHANGE1.beyondtekit.com",
        "PARENT_ID":null,
        "SUBJECT":"(Job) - Hadoop Engineer - NYC, NY",
        "SENT_FROM":"\"GunaBeyondTekIT\" <Guna@beyondtekit.com>",
        "TAGS":"not-ak",
        "BODY":"direct client opening hadoop engineer nyc ny permanent position salary range relocation assistance provided position responsibility develop support secure flexible large scale data processing infrastructure research development within company core member small deeply talented team responsible across many technical aspect helping deliver result world class platform partner customer qualification bachelor degree engineering computer science related technical field required real world experience building data solution using hadoop strong design admin experience relational database system esp mysql postgresql least year software engineering experience designing developing modern web based consumer facing server solution rapid development cycle expert java python plus development debugging linux platform deep powerful need create useful readable accurate documentation work please fill following skill matrix send back response thanks full name degree major total experience total hadoop experience total software engineering experience total mysql postgresql experience total experience developing modern web based consumer facing server solution total java experience total linux experience required salary current salary day phone evening phone cell phone availability current city state work status qualify position available immediately interested please send resume rate contact information mailto guna beyondtekit com subject hadoop engineer nyc ny please ensure complete copy paste completed matrix response thanks guna beyondtekit placentia ca guna beyondtekit com ph extn fax guna beyondtekit"
    },
    "40877":{
        "ID":2883,
        "MESSAGE_ID":"2E411A23-735C-453D-8A14-19617310AB95@yahoo-inc.com",
        "PARENT_ID":2865.0,
        "SUBJECT":"Re: RPC versioning - oops sorry",
        "SENT_FROM":"Sanjay Radia <sradia@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"filter saving thread jira bucket missed thread asked question hadoop requirement page earlier today addressed addressing thread sorry sanjay"
    },
    "40879":{
        "ID":2881,
        "MESSAGE_ID":"b76e3e240810072305l2b46e8fm669a3377ae8c6599@mail.gmail.com",
        "PARENT_ID":2878.0,
        "SUBJECT":"Re: RPC versioning",
        "SENT_FROM":"\"Alejandro Abdelnur\" <tucu00@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"bring good point submitting managing job could use rest api still protocol compatibility needed accessing hdfs read write data"
    },
    "40882":{
        "ID":2878,
        "MESSAGE_ID":"48EB6482.3030807@apache.org",
        "PARENT_ID":2877.0,
        "SUBJECT":"Re: RPC versioning",
        "SENT_FROM":"Steve Loughran <stevel@apache.org>",
        "TAGS":"technology",
        "BODY":"alejandro abdelnur wrote going make another suggestion long haul high stability apis want offer alongside unstable higher performance ipc protocol ipc could used within cluster something else would run talking cluster outside assumes trust caller requires rigorous authentication le brittle change serialization format designed firewall timeouts mind year back people would said soap soa something us json rest option push file using webdav use resty interface jobtrackers submit work engineering effort would api used thing like ide client application get work done"
    },
    "40883":{
        "ID":2877,
        "MESSAGE_ID":"b76e3e240810070348s366d9349s125e8609f32491cd@mail.gmail.com",
        "PARENT_ID":2865.0,
        "SUBJECT":"Re: RPC versioning",
        "SENT_FROM":"\"Alejandro Abdelnur\" <tucu00@gmail.com>",
        "TAGS":"property",
        "BODY":"yes requirement able upgrade system without downtime hadoop job managed appserver appserver dispatch job different hadoop cluster hadoop upgrade without downtime would redirect job one hadoop cluster course ge necessary input upgrade idle cluster redirect traffic back point server running vn upgraded cluster runing vn later upgrade appserver vn taking instance rotation one time note situation appserver interacting vn vn hadoop cluster could significant period time week month something simplistic client handle single version hadoop one belongs server handle version backwards range vn vn client rpcs always start hadoop version belong server side rpcswitch read version check received rpc within valid version range delegate call corresponding handler vn vn handler adapter vn handler"
    },
    "40894":{
        "ID":2866,
        "MESSAGE_ID":"48E6F9D3.4030504@yahoo-inc.com",
        "PARENT_ID":2865.0,
        "SUBJECT":"Re: RPC versioning",
        "SENT_FROM":"Raghu Angadi <rangadi@yahoo-inc.com>",
        "TAGS":"property",
        "BODY":"version handling required think doug approach work well current rpc extra complexity handling different version object serialization might easily estimated duration year say would think easily object serialization changed last year long innocent protected existing write method need change unless field change fine many time effective serialization change mainly new sub class actual serialization method handle change argument method similarly subclass handled raghu doug cutting wrote"
    },
    "40895":{
        "ID":2865,
        "MESSAGE_ID":"48E64A36.5040205@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"RPC versioning",
        "SENT_FROM":"Doug Cutting <cutting@apache.org>",
        "TAGS":"property",
        "BODY":"proposed discussion defining hadoop extend back compatibility policy url currently attempt promise application code run without change compatible version hadoop one cluster running different yet compatible version one must use different classpath cluster pick appropriate version hadoop client library proposal extend client library one version hadoop operate correctly compatible hadoop version one need alter one classpath contain identical version compatible version question need solve problem soon release order provide release whose compatibility lifetime year instead month release clear someone provide case using classpath talking multiple cluster critical assuming implement requires rpc level support versioning could add switching rpc mechanism built automatic versioning support like thrift etch protocol buffer none drop replacement hadoop rpc probably initially meet performance scalability requirement adoption also require considerable destabilizing change hadoop finally today clear would best candidate move soon might regret choice wish move later answer yes wishing provide rpc back compatibility want hold release alternative switching provide incremental versioning support hadoop existing rpc mechanism suffice clear replacement available suggest simple versioning style hadoop might use permit rpc protocol evolve compatibly rpc system built versioning support selected intended long term solution rather something would permit flexibly evolve hadoop protocol next year style assumes globally increasing hadoop version number example might subversion repository version trunk change first introduced rpc client server handshake exchange version number lower two version number selected version connection let walk example start class contains versioning information single field public class foo implement writable int public void write dataoutput throw ioexception writeint public void readfields datainput throw ioexception readint version add second field public class foo implement writable int float new field public void write dataoutput throw ioexception int version rpc getversion writeint version peer support writefloat send public void readfields datainput throw ioexception int version rpc getversion readint version support readfloat read next version remove first field public class foo implement writable float public void write dataoutput throw ioexception int version rpc getversion version peer want writeint send version writefloat public void readfields datainput throw ioexception int version rpc getversion version peer writes readint ignore version readfloat could something like work would require minor change hadoop rpc mechanism support version handshake beyond could implemented incrementally rpc protocol evolve would require vigilance make sure versioning logic added class change adding automated test prior version would identify lapse may appear add lot version related logic automatic versioning many case version related logic still required simple case one add completely new field default value done automatic versioning handling much work many case existing field changed application must translate old value new vice versa case still require application logic even automatic versioning automatic versioning certainly le intrusive much one might first assume fundamental question soon need address inter version rpc compatibility wish soon think would wise consider solution le invasive force potentially premature decision doug"
    },
    "41009":{
        "ID":2751,
        "MESSAGE_ID":"C4E5A13F.1304C%pwyckoff@facebook.com",
        "PARENT_ID":2747.0,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"Pete Wyckoff <pwyckoff@facebook.com>",
        "TAGS":"existence, technology",
        "BODY":"yes trecordstream fundamtental use case robust file format storing record case thrift ctrl delimited log data self describing mean fixed sized frame skipped case corruption providing transparent checksum compression needed way put serializer deserializer information header course cross platform language java python perl actually fully implemented yet pete"
    },
    "41010":{
        "ID":2750,
        "MESSAGE_ID":"c7d45fc70809041253n6e1b5b04hd2d6c6161f89a438@mail.gmail.com",
        "PARENT_ID":2749.0,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"\"Ted Dunning\" <ted.dunning@gmail.com>",
        "TAGS":"property",
        "BODY":"hadoop way archive got implemented spec beginning say compression goal"
    },
    "41011":{
        "ID":2749,
        "MESSAGE_ID":"c7d45fc70809041245w4f5597b3q729ab2a024cab0e@mail.gmail.com",
        "PARENT_ID":2748.0,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"\"Ted Dunning\" <ted.dunning@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"one remembering thought hadoop filed pig issue last comment make clear closely related url archive file thought archive file come part hadoop dev canceled patch various issue clearly compressed archive file would job fine"
    },
    "41013":{
        "ID":2747,
        "MESSAGE_ID":"c7d45fc70809041149p29f30f32t813b8230ebafc89d@mail.gmail.com",
        "PARENT_ID":2746.0,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"\"Ted Dunning\" <ted.dunning@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"think bit ambiguity said think mean optionally compressed trecordstream compression ask correct"
    },
    "41014":{
        "ID":2746,
        "MESSAGE_ID":"C4E57B09.1300F%pwyckoff@facebook.com",
        "PARENT_ID":2745.0,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"Pete Wyckoff <pwyckoff@facebook.com>",
        "TAGS":"existence",
        "BODY":"give another plug thrift trecordstream fixed sized frame optionally compressed checksummed since frame fixed sized split frame boundary write whatever data want thrift take whatever written writes fd socket whatever issue spill frame like sequence file case pete"
    },
    "41022":{
        "ID":2738,
        "MESSAGE_ID":"c7d45fc70809032230w1ff48562laba382a69275dc0a@mail.gmail.com",
        "PARENT_ID":2737.0,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"\"Ted Dunning\" <ted.dunning@gmail.com>",
        "TAGS":"existence",
        "BODY":"happens want plug alternative format thrift allows switch compact binary json format fly serializers object make hard oddly enough way thrift putting serializer code suggest code write pretty sophisticated result"
    },
    "41023":{
        "ID":2737,
        "MESSAGE_ID":"33b6dc490809032211g375131a1na5dc13e03ad88676@mail.gmail.com",
        "PARENT_ID":2735.0,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"\"Alex Loddengaard\" <alexlod@google.com>",
        "TAGS":"existence",
        "BODY":"tom jay thread sparked interest midst creating new protocol buffer serialization two discussing pro con current synchronization framework would like ask question always let class define serialize seems like simple approach sake personal advancement someone present argument using serialization framework serializationfactory better solution compared system writable implementation defines serialization mechanism done research try get insight question turned anything useful thought may answered question let know missing pro con list pro writable defined serialization framework simple plugin one must implement writable interface intuitive efficient class know data best decide best approach storing data con refactoring danger class change serialization mechanism stored legacy instance lost flexible one want switch protocol buffer thrift writable class would need change mostly sending email expand knowledge good approach newcomer hadoop thanks alex"
    },
    "41024":{
        "ID":2736,
        "MESSAGE_ID":"c7d45fc70809032124l32d56ffao8b2e9a0d4c841de2@mail.gmail.com",
        "PARENT_ID":2735.0,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"\"Ted Dunning\" <ted.dunning@gmail.com>",
        "TAGS":"technology",
        "BODY":"talked ibm guy problem json like format answer care enough compression algorithm around compress away type information splittable compressed format bz work hadoop set except compression cost decompression cost usually compensated advantage"
    },
    "41025":{
        "ID":2735,
        "MESSAGE_ID":"83290b460809031552xd401e3ekface4f9c9e102eda@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: Serialization with additional schema info",
        "SENT_FROM":"\"Jay Kreps\" <jay.kreps@gmail.com>",
        "TAGS":"existence, technology",
        "BODY":"hi tom concern cross dependency make sense state problem generally serializer mapping disk structure memory structure one way maintain mapping pregenerate class mapping using idl like thrift another common way store mapping data approach plus minus usual trade offs code generation reflection believe current interface allows code generation approach remove dependence mapreduce would change serializationfactory method serializationfactory getserialization class serializationfactory getserialization class string use maptask create serializer mapoutputbuffer instead keyserializer serializationfactory getserializer job getmapoutputkeyclass would keyserializer serializationfactory getserializer job getmapoutputkeyclass job get mapred mapper serialization info similarly reducer deserializers parameter would contain additional schema information needed disambiguate class object list map might different serialization depending content might get passed list class list int instruct serializer read list integer map class map int list string indicate map integer list string implementation could chose use string parameter class parameter constructing serialization thanks pointer jaql seems cool believe jaql would problem tried implement kind compact structured storage jaql would return jarray jrecord might variety field would want store data kind field separately thanks jay"
    },
    "41386":{
        "ID":2374,
        "MESSAGE_ID":"48282146.5080404@apache.org",
        "PARENT_ID":2358.0,
        "SUBJECT":"Re: Design Q: logging\/nesting of exceptions",
        "SENT_FROM":"Steve Loughran <stevel@apache.org>",
        "TAGS":"existence, property",
        "BODY":"nigel daley wrote hope one big problem backwards compatibility original junit report save summary attribute root node stream result buffer jvm crash get byte file sure ideal solution would may generate new format alongside old backup format used postmortem jvm crash happens working period time get interesting stuff track status url ability hadoop get state configuration file existing xml file submit work existing cluster poll cluster working condition job tracker live block action state reached bringing namenode data node also adding component hdfs maintenance formatting balancing etc nice far work testing component run test brings cluster parameter jvm replication option try something tear different set good testing interesting value like happens different replication option jvm tuning etc get log back one place necessarily want production one logger one point failure good small test run end month something others play going talk uk hadoop user meeting august also taking note ugly thing change hadoop core would make thing lot better far make easier get configuration information form external factory service namenode datanode etc lifecycle interface base class provides stable thread safe startup ping shutdown make package scoped stuff namenode datanode private maybe protected accessors find exception stringified nesting logging retain raw form change smartfrog specific thing need manage hadoop better inside jvm currently code url subclassed thing apache package get package scoped content url steve"
    },
    "41404":{
        "ID":2356,
        "MESSAGE_ID":"48247E21.7000004@apache.org",
        "PARENT_ID":2355.0,
        "SUBJECT":"Re: Design Q: logging\/nesting of exceptions",
        "SENT_FROM":"Doug Cutting <cutting@apache.org>",
        "TAGS":"not-ak",
        "BODY":"steve loughran wrote yes please feeling ambitious could change bunch wholesale distinct issue doug"
    },
    "41405":{
        "ID":2355,
        "MESSAGE_ID":"48241378.2050609@apache.org",
        "PARENT_ID":2354.0,
        "SUBJECT":"Re: Design Q: logging\/nesting of exceptions",
        "SENT_FROM":"Steve Loughran <stevel@apache.org>",
        "TAGS":"existence",
        "BODY":"owen malley wrote ok mean encounter change somewhere todo list way better junit report including log multiple machine stack trace machine readable form getting exception raw one requirement work url steve"
    },
    "41408":{
        "ID":2352,
        "MESSAGE_ID":"482336A0.3050106@apache.org",
        "PARENT_ID":2348.0,
        "SUBJECT":"Re: Design Q: logging\/nesting of exceptions",
        "SENT_FROM":"Doug Cutting <cutting@apache.org>",
        "TAGS":"not-ak",
        "BODY":"steve loughran wrote would go something closer accidental policy suspicion logging framework print nested exception well owen father stringifyexception may insight doug"
    },
    "41412":{
        "ID":2348,
        "MESSAGE_ID":"4822EE9D.6030106@apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Design Q: logging\/nesting of exceptions",
        "SENT_FROM":"Steve Loughran <stevel@apache.org>",
        "TAGS":"existence",
        "BODY":"design question jira issue asking normal email exception tend stringify nested exception public inconsistentfsstateexception file dir string descr throwable ex dir descr stringutils stringifyexception ex rather retain existing stack trace separate exception public inconsistentfsstateexception file dir string descr throwable ex dir descr stringutils stringifyexception ex initcause ex exception tend get stringified logging instead leaving logging framework handle datanode log error dnregistration dataxceiver stringutils stringifyexception rather log error dnregistration dataxceiver getmessage ask personally like keep many stack trace around machine readable format right xml test report action run risk converting text early deliberate decision accidental policy changed someone prepared go code make change steve"
    },
    "41518":{
        "ID":2242,
        "MESSAGE_ID":"24967656.2780061207623886272.JavaMail.nabble@isper.nabble.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop Job Opportunity- Seeking Web Engineers\/Senior Developers",
        "SENT_FROM":"kadyz@liveoffice.com",
        "TAGS":"not-ak",
        "BODY":"enthusiastic open source technology keep apache org bookmarked even better subscribe feed experienced web crawler spider aggregator bot fetchers whatever like call liveoffice opportunity looking web engineer use resource benefit email user worldwide liveoffice llc leading provider email archiving instant message archiving anti spam antivirus compliance ediscovery solution business company managed messaging service ensure integrity email instant message simplify discovery process help company protect risk expense lost misplaced electronic message liveoffice also help organization comply statutory regulatory legal industry specific mandate founded liveoffice serf premier roster client including fortune company process protects million message day information visit www liveoffice com requirement experience developing customizing implementing super scalable web apps familiarity hadoop nutch specifically highly desired experience large data set web service experience amazon ec experience implementing web application python ruby perl front end skill html cs javascript ajax database database programming desirable experience designing developing web application feature python main implementation language experience hadoop framework experience apache lucene experience production server high traffic website linux system administration ubuntu debian experience database replication postgres slony computer science related discipline interested send resume kadyjobs liveoffice com job title subject line please"
    },
    "41651":{
        "ID":2109,
        "MESSAGE_ID":"47D59E52.3030108@yahoo-inc.com",
        "PARENT_ID":2102.0,
        "SUBJECT":"Re: Namenode cluster and fail over",
        "SENT_FROM":"Konstantin Shvachko <shv@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"mickey hsieh wrote link url yes look simple client point view two server kept synch different way delivarables sorry"
    },
    "41657":{
        "ID":2103,
        "MESSAGE_ID":"C3F6E26A.4202%chansler@yahoo-inc.com",
        "PARENT_ID":2102.0,
        "SUBJECT":"Re: Namenode cluster and fail over",
        "SENT_FROM":"Robert Chansler <chansler@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"may want watch progress hadoop work item closest top list release"
    },
    "41658":{
        "ID":2102,
        "MESSAGE_ID":"8c0d2cda0803071201l2c280f01j614b33ff0f8299cc@mail.gmail.com",
        "PARENT_ID":2101.0,
        "SUBJECT":"Re: Namenode cluster and fail over",
        "SENT_FROM":"\"mickey hsieh\" <mickeyhsieh@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thank elaborate detail plan could point detail tomorrow road map plan client side keep primary backup server automatically fail backup server case primary server fails mickey"
    },
    "41659":{
        "ID":2101,
        "MESSAGE_ID":"47D19B43.1070506@yahoo-inc.com",
        "PARENT_ID":2100.0,
        "SUBJECT":"Re: Namenode cluster and fail over",
        "SENT_FROM":"Konstantin Shvachko <shv@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"manual recovery secondary node last resort everything else failed namenode configured save image change log multiple storage directory usually configure different hard drive machine mounted via nfs even whole machine fails copy image used start name node new machine use secondary node copy copy unavailable automatic recovery secondary node image one primary plan done pretty soon high availability also high priority going done tomorrow use scripting solution outside hadoop like running daemon ping name node shuts restarts cluster something go wrong hope help konstantin"
    },
    "41660":{
        "ID":2100,
        "MESSAGE_ID":"8c0d2cda0803071121rdc9f80cg1d33a2ee0ccc52b4@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Namenode cluster and fail over",
        "SENT_FROM":"\"mickey hsieh\" <mickeyhsieh@gmail.com>",
        "TAGS":"property",
        "BODY":"evaluating plan migrate netapp na tb storage system hadoop file system one crucial requirement high availability reliability storage system reading hadoop architecture design doc case namenode failure need manually recovery secondar namenode still case plan develop full replication namenode secondaynamenode support real time fail seondarynamenode case namenode failure thank comment mickey hsieh"
    },
    "42235":{
        "ID":1525,
        "MESSAGE_ID":"12896971.post@talk.nabble.com",
        "PARENT_ID":null,
        "SUBJECT":"Some questions about    Nucth - InjectMapper- map() function",
        "SENT_FROM":"wilbur_727 <wilbur_727@hotmail.com>",
        "TAGS":"not-ak",
        "BODY":"absolutely newbie nutch learned nutch based hadoop read paper mapreduced algorithm reading source code hadoop got problem reading class injector quite understand architecture code question jobconf happened invoking jobclient runjob class invoke map reduce function injector pas parameter map thanks time reading message sorry poor english view message context url sent hadoop dev mailing list archive nabble com"
    },
    "42240":{
        "ID":1520,
        "MESSAGE_ID":"56C3D1F2-6182-4051-9208-9230EFA0552B@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: HELP: Need a list of Grid systems research projects",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"hi folk couple different context asked list project would like group want participate hadoop think tackling asked research project idea engineering idea new participant area domain expert field might add lot value bringing perspective hadoop discussion include quick first pas made topic would love anyone everyone input please respond aggregate hopefully eventually post wiki modeling block placement replication policy hdfs modeling expected time data loss give hdfs cluster given hadoops replication policy protocol modeling erasure code approach replication might space performance reliability tradeoff hdfs namespace expansion prototyping approach scaling hdfs name space goal keep simple preserve increase meta data operation second large number file billion trillion block hadoop security design end end proposal support authentication client side data encryption decryption large data set stored public hdfs job launched authenticated user map reduce browse data see hadoop xxx hod port various campus work queueing system hod currently support torque previously supported condor would like port whichever system used major campus sge integration virtualization xen hadoop tool one integrate sandboxing arbitrary user code language vm xen hadoop framework interact sge torque condor eric individual machine core cpu make sense partition machine multiple virtual machine give number benefit assigning virtual machine datanode effectively isolate datanode load machine caused process making datanode responsive reliable multiple virtual machine machine lower granularity hod scheduling unit making possible schedule multiple tasktrackers machine improving overall utilization whole cluster virtualization easily snapshot virtual cluster releasing making possible activate cluster future start work snapshot runping qi provisioning long running service via hod work computation model service grid model would include various tool defining client server service least java instantiation abstraction logical definition partition work onto set server generalized shard implementation useful abstraction like lock exclusive rw fairness leader election transaction various communication model group server belonging service broadcast unicast etc tool assuring qos reliability managing pool server service spare etc integration hdfs persistence well access local filesystems integration zookeeper application use namespace hadoop compatible framework discovering network topology identifying diagnosing hardware functioning correctly improved framework debugging performance optimizing hadoop streaming hadoop job suggestion distributed profiler measuring distributed map reduce application would real helpful grid user able provide standard profiler feature number time method executed time execution number time method caused kind failure etc etc maybe accumulated instance task comprised application dhruba borthakur pig feature thought map reduce performance enhancement improve performance standard hadoop performance sort benchmark sort shuffle optimization mr framework example direction memory based shuffling mr framework combining result several map rack node shuffle reduce seek work intermediate storage work load characterization various hadoop site framework capturing workload statistic replaying workload simulation allow assessment framework improvement idea improve framework performance stability benchmark suite data intensive supercomputing scientific computation research software benefited tremendously due availability benchmark suite na parallel benchmark kernel application starting ep embarrassingly parallel sp bt lu reflecting varying degree parallelism communication pattern suite data intensive supercomputing application benchmark would present target hadoop map reduce implementation optimized cool thing na parallel benchmark specification paper pencil rather code spec benchmark led development different code different language different programming paradigm implementing paper pencil specification milind bhandarkar performance evaluation existing locality sensitive hashing scheme research new hashing scheme filesystem namespace partitioning url milind bhandarkar alternate view file collection block propose api sample use case file repository block user add delete block arbitrary part file would allow hole file moving block one file another reconcile sequence byte view file approach may encourage new style application push bit research direction unix file system managed sequence byte usually hadoop case exclusively used sequence record filesystem participates record management like mainframe example get nice semantic performance improvement benjamin reed"
    },
    "43122":{
        "ID":638,
        "MESSAGE_ID":"p06210209c18194e7fe3c@[192.168.50.163]",
        "PARENT_ID":633.0,
        "SUBJECT":"Re: DFS\/RPC problems",
        "SENT_FROM":"Chris Schneider <Schmed@TransPac.com>",
        "TAGS":"not-ak",
        "BODY":"eric thanks excellent suggestion appears indeed causing problem work andrzej come solution limit number file created message queue subsystem best regard chris chris schneider transpac software inc schmed transpac com"
    },
    "43127":{
        "ID":633,
        "MESSAGE_ID":"53C43701-5971-41F2-9076-88464B9F2815@yahoo-inc.com",
        "PARENT_ID":631.0,
        "SUBJECT":"Re: DFS\/RPC problems",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"many file creating hdfs wonder messaging package may simply swamping namenode many many small file really designed deal use case big checkpoint file"
    },
    "43129":{
        "ID":631,
        "MESSAGE_ID":"p06210205c18107b7e6be@[192.168.50.163]",
        "PARENT_ID":null,
        "SUBJECT":"DFS\/RPC problems",
        "SENT_FROM":"Chris Schneider <Schmed@TransPac.com>",
        "TAGS":"not-ak",
        "BODY":"fellow hadoop coder getting tragic dfs rpc problem running nutch atop hadoop seem similar problem others reporting hadoop great hope hadoop patch would resolve may well improved thing somewhat however still unable complete crawl attempting even rolling patch note setup may relevant running crawl proxy server modified nutch skip server delay whenever get hit proxy cache since attempting crawl first part may run fast tax dfs rpc way expose fundamental problem injecting url brand new db trying fetch tuned fetcher thread fetch order avoid fatal memory swapping cluster slave tasktrackers per slave using hadoop job kill stop fetch job notice thing going way want necessarily catastrophic problem wonder whether combination heavy loading applied hadoop may result dfs becoming unusable dfs becomes unusable stop sh start sh reboot system etc nothing give back cluster reliably use even relatively simple thing like hadoop dfs du start sh script take long time execute hadoop eventually come including web server hadoop fsck command unless dy rpc problem also report dfs healthy though thing sick indeed even simple dfs command either execute slowly die rpc problem sockettimeoutexception crawling point may also get started ok though fetch eventually die part modification made nutch message queue subsystem developed andrzej since use nio communication doubt interfering hadoop rpc however fair amount writing dfs many error message log associated request resolve unusable dfs problem forced use local delete dfs content master slave tell namenode format dfs also wonder whether operation may leave thing kind strange state though imagine might problem resorting step yesterday performed another test conducted fairly detailed analysis log file injected url new crawldb generated fetch list without specifying topn started fetching hour fetching noticed wanted little logging nutch side killed fetch job stop sh deployed modified version nutch start sh tried crawl scratch injected url brand new crawldb etc let run fetch job died mined log following information help insight could provide would greatly appreciated best regard chris find anything unusual stdout start sh namenode may trouble removing file immediately first launched probably housekeeping making sure deletes file sometimes left previous run warn dfs statechange dir fsdirectory unprotecteddelete failed remove tmp hadoop mapred system crc exist warn dfs statechange dir fsdirectory unprotecteddelete failed remove tmp hadoop mapred system exist immediately injection first crawl began info crawl injector injector starting significant dfs block issue datanode log warn dfs datanode dataxceiver java io ioexception block blk already started though completed thus created classpath fsdataset java classpath dataxceiver writeblock datanode java classpath dataxceiver run datanode java java lang thread run thread java problem reflected requesting datanode log well apparently result connection namenode getting reset warn dfs datanode failed transfer blk crawlera java net socketexception connection reset java net socketoutputstream socketwrite socketoutputstream java java net socketoutputstream write socketoutputstream java java io bufferedoutputstream flushbuffer bufferedoutputstream java java io bufferedoutputstream write bufferedoutputstream java java io dataoutputstream write dataoutputstream java classpath datatransfer run datanode java java lang thread run thread java three event datanode log injection generation fetching seem correlated message queue subsystem problem mentioned injection first crawl completed info crawl injector injector done couple unimportant message attribute brand new crawldb warn dfs statechange dir fsdirectory unprotecteddelete failed remove user crawler crawl crawldb old crc exist warn dfs statechange dir fsdirectory unprotecteddelete failed remove user crawler crawl crawldb old exist warn dfs statechange dir fsdirectory unprotectedrenameto failed rename user crawler crawl crawldb current user crawler crawl crawldb old source exist warn dfs statechange dir fsdirectory unprotecteddelete failed remove user crawler crawl crawldb old crc exist warn dfs statechange dir fsdirectory unprotecteddelete failed remove user crawler crawl crawldb old exist fetcher job got going info fetcher fetcher fetcher segment user crawler crawl segment andrzej message queue subsystem apparently ton trouble creating various file message getting spit every minute warn dfs statechange dir namesystem startfile failed create file mq alert fetcher crawlera crc dfsclient task client crawlera pendingcreates non null warn dfs statechange dir namesystem startfile failed create file mq alert fetcher crawlera crc dfsclient task client crawlera pendingcreates non null may correlated entry datanode log warn dfs datanode dataxceiver java io ioexception block blk valid written classpath fsdataset java classpath dataxceiver writeblock datanode java classpath dataxceiver run datanode java java lang thread run thread java namenode also noticed redundant addstoredblock request warn dfs statechange block namesystem addstoredblock redundant addstoredblock request received blk crawlera find anything datanode log mentioning block finally perhaps response killing first fetch job see first closedchannelexception namenode log warn ipc server handler output error java nio channel closedchannelexception sun nio ch socketchannelimpl ensurewriteopen socketchannelimpl java sun nio ch socketchannelimpl write socketchannelimpl java classpath socketchanneloutputstream java classpath socketchanneloutputstream java java io bufferedoutputstream flushbuffer bufferedoutputstream java java io bufferedoutputstream flush bufferedoutputstream java java io dataoutputstream flush dataoutputstream java classpath handler run server java associated unknown opcode message datanode log crawlera prod krugle net warn dfs datanode dataxceiver crawlera prod krugle net java io ioexception unknown opcode incoming data stream crawlera prod krugle net classpath dataxceiver run datanode java crawlera prod krugle net java lang thread run thread java stop sh deployed version nutch bit logging start sh jobtracker log show apparently unable connect namenode get launched second time connection error repeat eventually get message web server starting may indicate jobtracker finally able connect namenode warn mapred jobtracker starting tracker java net connectexception connection refused java net plainsocketimpl socketconnect native method java net plainsocketimpl doconnect plainsocketimpl java java net plainsocketimpl connecttoaddress plainsocketimpl java java net plainsocketimpl connect plainsocketimpl java java net sockssocketimpl connect sockssocketimpl java java net socket connect socket java java net socket connect socket java java net socket socket java java net socket socket java classpath connection client java classpath client java classpath client java classpath invoker invoke rpc java classpath proxy getprotocolversion unknown source classpath rpc java classpath dfsclient java classpath distributedfilesystem java classpath filesystem java classpath filesystem java classpath jobtracker java classpath jobtracker java classpath jobtracker java warn mapred jobtracker starting tracker java net connectexception connection refused java net plainsocketimpl socketconnect native method java net plainsocketimpl doconnect plainsocketimpl java java net plainsocketimpl connecttoaddress plainsocketimpl java java net plainsocketimpl connect plainsocketimpl java java net sockssocketimpl connect sockssocketimpl java java net socket connect socket java java net socket connect socket java java net socket socket java java net socket socket java classpath connection client java classpath client java classpath client java classpath invoker invoke rpc java classpath proxy getprotocolversion unknown source classpath rpc java classpath dfsclient java classpath distributedfilesystem java classpath filesystem java classpath filesystem java classpath jobtracker java classpath jobtracker java classpath jobtracker java info util credential checking resource alias info http httpserver version jetty info util container started classpath info util container started webapplicationcontext info util container started httpcontext log log info util container started httpcontext static static info http socketlistener started socketlistener info util container started classpath bef second crawl get started info crawl injector injector starting issue new crawldb message queue redundant block mentioned appear namenode log shown dfs rpc problem finally begin surface jobtracker log bubble tool output several hour second crawl warn dfsclient problem renewing lease dfsclient java net sockettimeoutexception timed waiting rpc response classpath client java classpath invoker invoke rpc java classpath proxy renewlease unknown source classpath leasechecker run dfsclient java java lang thread run thread java nothing special appears timeframe namenode log continuing message queue redundant block error finally indication jobtracker log embedded continuing dfs rpc problem fetch job died garbage collected warn dfsclient problem renewing lease dfsclient java net sockettimeoutexception timed waiting rpc response classpath client java classpath invoker invoke rpc java classpath proxy renewlease unknown source classpath leasechecker run dfsclient java java lang thread run thread java warn mapred jobinprogress error cleaning job java net sockettimeoutexception timed waiting rpc response warn dfsclient problem renewing lease dfsclient java net sockettimeoutexception timed waiting rpc response classpath client java classpath invoker invoke rpc java classpath proxy renewlease unknown source classpath leasechecker run dfsclient java java lang thread run thread java minute later finally see first series broken pipe exception namenode log warn ipc server handler output error java io ioexception broken pipe sun nio ch filedispatcher write native method sun nio ch socketdispatcher write socketdispatcher java sun nio ch ioutil writefromnativebuffer ioutil java sun nio ch ioutil write ioutil java sun nio ch socketchannelimpl write socketchannelimpl java classpath socketchanneloutputstream java classpath socketchanneloutputstream java java io bufferedoutputstream flushbuffer bufferedoutputstream java java io bufferedoutputstream flush bufferedoutputstream java java io dataoutputstream flush dataoutputstream java classpath handler run server java minute later first series closed channel exception appears namenode log along indication namenode may lost connection one datanodes warn ipc server handler output error java nio channel closedchannelexception sun nio ch socketchannelimpl ensurewriteopen socketchannelimpl java sun nio ch socketchannelimpl write socketchannelimpl java classpath socketchanneloutputstream java classpath socketchanneloutputstream java java io bufferedoutputstream flushbuffer bufferedoutputstream java java io bufferedoutputstream flush bufferedoutputstream java java io dataoutputstream flush dataoutputstream java classpath handler run server java warn fsnamesystem replication requested larger cluster size using cluster size namenode process eventually dy though jobtracker survives datanodes tasktrackers slave chris schneider transpac software inc schmed transpac com"
    },
    "43146":{
        "ID":614,
        "MESSAGE_ID":"200611010022.kA10Mcn0001002@lucene.zones.apache.org",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop nightly build failure",
        "SENT_FROM":"hadoop-dev@lucene.apache.org",
        "TAGS":"not-ak",
        "BODY":"init mkdir created dir tmp hadoop nightly build mkdir created dir tmp hadoop nightly build class mkdir created dir tmp hadoop nightly build src mkdir created dir tmp hadoop nightly build webapps task web inf mkdir created dir tmp hadoop nightly build webapps job web inf mkdir created dir tmp hadoop nightly build webapps dfs web inf mkdir created dir tmp hadoop nightly build webapps datanode web inf mkdir created dir tmp hadoop nightly build example mkdir created dir tmp hadoop nightly build minimr mkdir created dir tmp hadoop nightly build test mkdir created dir tmp hadoop nightly build test class mkdir created dir tmp hadoop nightly build test testjar copy copying file tmp hadoop nightly build webapps copy copying file tmp hadoop nightly conf copy copying tmp hadoop nightly conf slave template tmp hadoop nightly conf slave copy copying tmp hadoop nightly conf hadoop site xml template tmp hadoop nightly conf hadoop site xml copy copying tmp hadoop nightly conf mapred default xml template tmp hadoop nightly conf mapred default xml copy copying tmp hadoop nightly conf hadoop env sh template tmp hadoop nightly conf hadoop env sh exec src saveversion sh svn found exec src saveversion sh svn found exec src saveversion sh whoami found record parser compile core javac compiling source file tmp hadoop nightly build class javac note input file use override deprecated api javac note recompile xlint deprecation detail javac note input file use unchecked unsafe operation javac note recompile xlint unchecked detail compile example javac compiling source file tmp hadoop nightly build example javac note input file use unchecked unsafe operation javac note recompile xlint unchecked detail compile core test javac compiling source file tmp hadoop nightly build test class javac note input file use override deprecated api javac note recompile xlint deprecation detail javac note input file use unchecked unsafe operation javac note recompile xlint unchecked detail javac compiling source file tmp hadoop nightly build test testjar jar building jar tmp hadoop nightly build test testjar testjob jar jar building jar tmp hadoop nightly build hadoop nightly test jar mkdir created dir tmp hadoop nightly build test cache copy copying file tmp hadoop nightly build test cache copy copying file tmp hadoop nightly build test cache copy copying file tmp hadoop nightly build test cache test core mkdir created dir tmp hadoop nightly build test data mkdir created dir tmp hadoop nightly build test log junit running classpath junit test run failure error time elapsed sec junit running classpath junit test run failure error time elapsed sec build failed tmp hadoop nightly build xml could delete temporary property file total time minute second"
    },
    "43206":{
        "ID":554,
        "MESSAGE_ID":"ACC721A9-C328-40C5-B761-C80FFB1DB032@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Proposal for replicating namenode state and transaction logs",
        "SENT_FROM":"Milind Bhandarkar <milindb@yahoo-inc.com>",
        "TAGS":"existence",
        "BODY":"please comment following proposal proposal replication dfs namespace image transaction log currently namenode start read namespace image dfs name dir initializes namespace data structure transaction log exists merges transaction log memory namespace writes merged namespace image reinitializes transaction log file namespace modification occur modification logged transaction log file transaction log file never flushed closed namenode shuts normally case error forced shutdown namenode last buffered yet written disk transaction may get lost addition namespace image file corrupted accidentally deleted disk holding image file crash way recover state dfs proposal suggests design replication dfs namespace image well transaction log even case catastrophic failure dfs state almost always recovered suggest two pronged approach first allow multiple copy image transaction log different volume namenode secondly backup read namenodes would allow continuous functioning dfs even case namenode failure propose dfs name dir configuration parameter allowed comma separated list different location within namenode dfs image log would replicated allows disk failure hinder recoverability dfs state time image file updated well time transaction logged written location specified dfs name dir list location dfs name dir could include local disk namenode well nfs mounted drive thus providing remote backup dfs state nfs mounted drive raided provides reliability required currently transaction log file always kept open write mode thus case namenode failure forcibly shuttting namenode cause last transaction buffered memory get lost number transaction lost depend buffer size propose dfs administrator control parameter configuration include parameter dfs namenode edits buffer specify number transaction upon transaction log closed thus flushing buffered transaction disk reopened append mode order determine image log file snapshot latest state file indicate positive byte generation number achieved without even modify image transaction log file format filename contain generation number time namenode restarts generation number image file well transaction log incremented reflect upon startup namenode scan location dfs name dir determine location contains latest image corresponding log according generation number load latest image log possibly different location case size transaction log name match one larger size chosen second proposal addition first multiple volume proposal suggests multiple backup namenodes backup name node started different machine additional command line parameter backup namenode backup namenode function approximately way namenode safe mode read except upon startup connects main namenode specified default name supply current generation image transaction log asks latest fsimage transaction log store disk location dfs name dir accordingly also modifies internal namesystem data structure backup name node listen blockreports heartbeat datanodes sole task keep backup dfs state main namenode fails backup namenodes restarted dfs administrator normal mode dfs continue functioning later backup namenode also allowed entertain read request dfs client thus making dfs performant scalable"
    },
    "43312":{
        "ID":448,
        "MESSAGE_ID":"44B84A82.9010404@yahoo-inc.com",
        "PARENT_ID":440.0,
        "SUBJECT":"Re: Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"Konstantin Shvachko <shv@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"updated dfs requirement wiki page reflect discussion took place url change two new requirement recovery availability clarification item additional task need prioritized people think priority three task thanks konstantin paul sutter wrote"
    },
    "43317":{
        "ID":443,
        "MESSAGE_ID":"407BF40F-11EC-4DCC-AA72-462BFD78B628@yahoo-inc.com",
        "PARENT_ID":442.0,
        "SUBJECT":"Re: Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"think need task list detailing upgrade also process around releasing filesystem change change durable data testing"
    },
    "43318":{
        "ID":442,
        "MESSAGE_ID":"44AEB6B8.9030000@yahoo-inc.com",
        "PARENT_ID":440.0,
        "SUBJECT":"Re: Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"Konstantin Shvachko <shv@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"paul sutter wrote agree simplicity also important good point probably add task define describe manual failover procedure evaluate availability goal reasonably guarantee guess want separate backup original storage hardware level two option mirror data another dfs cluster earlier version opposite cost copy critical data different local whole data set critical might want go separate dfs based application extension dfs critical way related issue want add upgrade procedure task list thanks konstantin"
    },
    "43320":{
        "ID":440,
        "MESSAGE_ID":"e1d10fc00607070851n7e921bcdq9618b250a498b690@mail.gmail.com",
        "PARENT_ID":438.0,
        "SUBJECT":"Re: Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"\"Paul Sutter\" <sutter@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"thanks comment"
    },
    "43322":{
        "ID":438,
        "MESSAGE_ID":"44AE0D76.1020905@yahoo-inc.com",
        "PARENT_ID":437.0,
        "SUBJECT":"Re: Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"Konstantin Shvachko <shv@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"hi paul paul sutter wrote able reconstruct system even checkpoint lost forever nice feature original file name placed crc file related given block offset block sequence number precise part block id followed random number generation required soon start implementing concurrent appends truncates also encoded local file name representing block say yes intention make block literally constant size let datanodes deal incomplete block namenode would treat equally add clarifying idea document good thing wiki editable interesting observation ideally would like save replicate image file soon edits file reach specific size would like make edits file update transactional file system locked update transaction would zero recoverability goal term willing weaken requirement favor performance understood correctly goal related specific installation system rather system software product mean total time spent system self maintenance procedure like backup checkpointing exceed hour day case agree high availability mentioned probably feature requirement section frankly speaking never thought backup pb storage system much space require easier increase replication factor thought true many feature performance task considered reliability task certain point view also seen uneven distribution data led task failure sort higher order balancing different subsystem competing storage resource node"
    },
    "43323":{
        "ID":437,
        "MESSAGE_ID":"e1d10fc00607061356h4818e9c6j2966ec2c6ab02482@mail.gmail.com",
        "PARENT_ID":436.0,
        "SUBJECT":"Re: Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"\"Paul Sutter\" <sutter@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"eric thanks response embedded one suggestion store copy per block metadata datanode updated copy filename original file name block offset would fine since adding truncation feature would want kind truncation generation number would make possible distributed namenode recovery belt suspender valuable even adding checkpointing feature namenode storing metadata important writing recovery program since recovery program could written disaster make necessary suggestion"
    },
    "43325":{
        "ID":435,
        "MESSAGE_ID":"e1d10fc00607061202j7ee2f796o87f667c835509749@mail.gmail.com",
        "PARENT_ID":424.0,
        "SUBJECT":"Re: Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"\"Paul Sutter\" <sutter@gmail.com>",
        "TAGS":"property",
        "BODY":"konstantin reviewed list proposed change look excellent suggestion constant size file block vote keep variable size block especially adding atomic append capability variable length block creates possibility block contain whole record improves recoverability large important file one irrevocably lost block make clean mapper process local data block recoverability availability goal might want consider adding recoverability availability goal recoverability goal might include data lost case namenode failure today year could day hour minute second zero varying cost statistically inclined person project could estimate acceptable block loss probability scale availability goal probably le stringent storage system dare say hour downtime probably ok adding goal document could valuable consensus prioritization backup scheme might want start discussion backup scheme hdfs especially given courageous rewriting feature addition likely occur looked carefully think get back production restoring subset data system likely need effective backup tool rebalancing would suggest keeping disk usage balanced performance feature important success running job large map output large sort common reducer failure running disk space sort caused imbalanced block allocation thanks paul"
    },
    "43334":{
        "ID":426,
        "MESSAGE_ID":"e1d10fc00607011310s2eb59bcdx3de2a5961ac98459@mail.gmail.com",
        "PARENT_ID":424.0,
        "SUBJECT":"Re: Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"\"Paul Sutter\" <sutter@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"page fantastic"
    },
    "43336":{
        "ID":424,
        "MESSAGE_ID":"44A5C920.5050808@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop Distributed File System requirements on Wiki",
        "SENT_FROM":"Konstantin Shvachko <shv@yahoo-inc.com>",
        "TAGS":"property",
        "BODY":"created wiki page summarizes dfs requirement proposed change summary discussion held mailing list additional internal discussion page url see ongoing related discussion hadoop prioritized goal reliability includes recoverability availability scalability functionality performance gave higher priority feature like append functionality happy holiday everybody konstantin shvachko"
    },
    "43384":{
        "ID":376,
        "MESSAGE_ID":"200606061614.55212.dominik@wipe-records.org",
        "PARENT_ID":null,
        "SUBJECT":"Random thoughts",
        "SENT_FROM":"Dominik Friedrich <dominik@wipe-records.org>",
        "TAGS":"existence, technology",
        "BODY":"collection different aspect hadoop nutch implemented part month ago never got far would make sense make code public kind proof concept time finish proof concept summerize mail idea experience implementing far discussion namenode performance scalabilty idea using creating java nio based implmentation came exactly one idea tried implement architecture experimental server one selector thread received message put blocking incomming queue several worker thread read message queue handled one blocking outgoing queue worker thread put outgoing reply message one sender thread pulled message queue sent right target message themself simple serialized java object used externizable interface serialization hadoop one would use writable interface think worker thread creates new message includes target address sender thread know send message every incoming message receiver thread includes source address worker thread know came order deserialize received data correct object put one byte identifier two byte length field ahead every serialized message every message class contained one byte identifier public static id message system understands registered deserializer system startup could also un registered runtime register message message class passed register function deserializer put hashmap id key way protocol system understand collection registered message easily extended even runtime system also extended able send message larger max network packet size implementing failover system namenode one could send package server via multicast namenodes multicast group receive message update filesystem accordingly current master responds heartbeat system namenodes selects current master performance dummy client server system used simple test quite good throughput almost independend number concurrent connection estimation architecture able handle serveral node cluster thread big problem ran tried convert namenode datanode rpc architecture asynchrony introduces worker thread read message queue respond easy implement worker thread sends message wait reply might need kind session worker thread read response data need work response correctly think namenode could put flag namesystem since message update read client side think need implement session memory maybe hashmap sessesion id session data want block worker thread handle concurrency system difficult java util concurrent class introduced java another reason switch using message system like way transfer big data chunk needed would implent simple tcp server stream data one tasktracker need map output another one open tcp port sends message tasktracker send chunk given port way side fly work stream like sorting something else connection loss detected instantly one side close port another big archtectural change tried time using osgi server implement namenode datanode jobtracker tasktracker osgi service basic idea behind improve maintainability using environment good tool support eclipse based osgi kernel includes good tool osgi service development testing nice thing osgi service define dependency versioning supported enable disable update service runtime nice thing like configuration service http service also available hadoop based osgi service would work like deploy basic configuration osgi server machine namenode jobtracker enabled one machine datanode tasktracker enabled machine actual service jar copied every machine time specify url osgi server downloads feature also used distributing new version tasktrackers need certain jar file job since osgi server support versioning cache already downloaded plugins jar file downloaded specify min max version plugin job service plugin jar hosted one distribution server put correct jar one server actual deploying automaticaly done system test idea work would ported namenode datanode jobtracker osgi service deployed much work worked fine porting tasktracker complicated osgi classloader got running le tried split nutch hadoop created time yet smaller service thing became really complicated nutch class different package depend goal put certain basic class like rpc configuration seperate osgi service jobtracker namenode every server would need us one defined interface service could easily replaced think current documentation hadoop nutch quite sparse best souce information currently mailinglist source code article wiki nothing like user guide administrator guide developer guide pdf format make learning curve beginner unecessary steep proposal create guide docbook format docbook create pdfs html page versioned svn building pdf html page included ant script last least everybody use favourite editor would work document would glad write chapter best regard dominik"
    },
    "43391":{
        "ID":369,
        "MESSAGE_ID":"8a8b9f3f0606050101k7af0628fgdff9054386a9ba0b@mail.gmail.com",
        "PARENT_ID":346.0,
        "SUBJECT":"Re: HBase Design Ideas, Part II",
        "SENT_FROM":"\"Michael Cafarella\" <michael.cafarella@gmail.com>",
        "TAGS":"existence, technology",
        "BODY":"hi stefan"
    },
    "43392":{
        "ID":368,
        "MESSAGE_ID":"8a8b9f3f0606050054u783637feld3d6f4ca07fefa7a@mail.gmail.com",
        "PARENT_ID":330.0,
        "SUBJECT":"Re: HBase Design Ideas, Part II",
        "SENT_FROM":"\"Michael Cafarella\" <michael.cafarella@gmail.com>",
        "TAGS":"existence",
        "BODY":"arkady sorry delay responding message think proposal would handle log reporting problem quite well current plan iterators process lot row instead querying updating ask user implement mapreduce like class method method submitted system invoked every tuple pass query criterion imagine user implement interface like class useriterator implement hdataiterator void process string row string col string attr submits using query interface like boolean submititerator hdataiterator hquery query hquery describes row dataiterator process invoked user class store state across invocation making quite easy compute sum average log summary think better way aggregate fancy query language least system requirement better understood way completely different look log processing might take look following quite interesting paper padx querying large scale ad hoc data xquery fernandez fisher mandelbaum submitted plan princeton edu url best mike"
    },
    "43412":{
        "ID":348,
        "MESSAGE_ID":"F0736C9B-BC1D-4F23-90AF-7D8D397E0841@media-style.com",
        "PARENT_ID":311.0,
        "SUBJECT":"Re: HBase Design Ideas, Part I",
        "SENT_FROM":"Stefan Groschupf <sg@media-style.com>",
        "TAGS":"existence",
        "BODY":"hi sorry delay responding got want associate one key value pair let name cell row key mentioned see object rowkey columnname value one rowkey columnkey value hmm sure like idea size based separated file column think many use case people store let say locale video file associated url row key case make sense separated table point view best way would kind column seek mechanism require kind sequence writer reader far remember google system column row one tablet think beeing able one row different tablet tablet different row distribute row also column yes later better point view good idea make sense may local region server request spitted master handle split concern using heart beat announce region master fast enough mean region splitted row need read process master need know two new region remove write lock yes reading file dfs slow ran performance problem often several project example reading lucene index file nutch dfs useless loading copy local hdd fast enough startup general think disk space issue day problem data replicated dfs local hdd"
    },
    "43414":{
        "ID":346,
        "MESSAGE_ID":"F3F3EA58-6A5C-4D97-9133-A3232E24C2DC@media-style.com",
        "PARENT_ID":312.0,
        "SUBJECT":"Re: HBase Design Ideas, Part II",
        "SENT_FROM":"Stefan Groschupf <sg@media-style.com>",
        "TAGS":"existence, property, technology",
        "BODY":"hi michael project need multi row locking need write read fast possible many row column pair atomically little bit worry goal big difficult implement functionality slow general hadoop kind big table implementation really would love start small grow may later release personal like query language especially sql really usefully work admin gui tool want check data point view since year really prefer api based query mechanism hibernate dbo provide example query example easy use powerful query time string code need maintain query separately need scan update code soon change one column name etc api based query mechanism allows develop faster experience keywords mind test driven development refactoring refactoring tool like eclipse etc cent however would love see big table cheer stefan"
    },
    "43430":{
        "ID":330,
        "MESSAGE_ID":"4da785d8662903a7c7a354f2d3feb052@inktomi.com",
        "PARENT_ID":312.0,
        "SUBJECT":"Re: HBase Design Ideas, Part II",
        "SENT_FROM":"\"Arkady Borkovsky\" <arkady@inktomi.com>",
        "TAGS":"existence",
        "BODY":"michael like initiative idea look like design record oriented potential application hbase like functionality batch oriented select large subset record process subset column often small subset either add either new column new version column several application like may running table simultaneously think example query log processing key search query daily stats represented column several column per day plus column data aggregated week month etc well proposal address kind us ab"
    },
    "43448":{
        "ID":312,
        "MESSAGE_ID":"8a8b9f3f0605152154q2f219948ieb997284b69e6854@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"HBase Design Ideas, Part II",
        "SENT_FROM":"\"Michael Cafarella\" <michael.cafarella@gmail.com>",
        "TAGS":"existence, property, technology",
        "BODY":"hi everyone previous mail mentioned bunch design idea mainly lifted jeff dean bigtable talk bigtable seems like useful way large scale row storage decision largely seem like right one however bigtable still leaf thing table item improve include query language multi row locking among thing dean said explicitly talk wanted avoid multirow locking complicated error prone maybe necessary right least first two maybe third multiple row lock useful making change several row atomic want change none change also used traditional database want perform expensive read operation like multiway join want make sure result get modified reading distributed lock acquisition hard bug prone often weird performance ramification difficult get working difficult tune difficult everything idea suck client acquire lock multiple hregionservers simultaneously client would agree acquire lock according global ordering avoid deadlock hregions would allowed migrate new server locked rare circumstance better approach would dedicated lock acquirer client make request help theoretical problem would make debugging awful lot easier case long lasting read operation use versioning guarantee consistency row annotated edit timestamp know sufficient version history available long lasting job run specific version edits continue made database read job ongoing operation performed database time task submitted case multiple row update may able use different edit semantics avoid locking example consider want add single column value pair multiple row want happen atomically row get value neither add need lock row add always succeed even writes intervene traditionally difference among data update require locking get client adjust update semantics slightly locking much relaxed would say add append semantics likely least common edit semantics think family edit semantics would like see offered also useful think general purpose query language would hbase would fairly straightforward implement example poor man version sql different locking update behavior chuck exotic element might compiled piece code executed immediately might transformed long lasting mapreduce job idea language worried getting little far afield interested hadoop mike"
    },
    "43449":{
        "ID":311,
        "MESSAGE_ID":"8a8b9f3f0605152122l47c34c51gcc16cc7dbe9138de@mail.gmail.com",
        "PARENT_ID":307.0,
        "SUBJECT":"Re: HBase Design Ideas, Part I",
        "SENT_FROM":"\"Michael Cafarella\" <michael.cafarella@gmail.com>",
        "TAGS":"existence",
        "BODY":"hi stefan thanks mail comment"
    },
    "43451":{
        "ID":309,
        "MESSAGE_ID":"0BDBD3F3-182D-4415-88B7-A8412BC2DD59@media-style.com",
        "PARENT_ID":305.0,
        "SUBJECT":"Re: HBase Design Ideas, Part I",
        "SENT_FROM":"Stefan Groschupf <sg@media-style.com>",
        "TAGS":"not-ak",
        "BODY":"may define protocol interface first based people implement stefan"
    },
    "43452":{
        "ID":308,
        "MESSAGE_ID":"B5DB6452-18D8-4340-BABF-D6055249C267@media-style.com",
        "PARENT_ID":306.0,
        "SUBJECT":"Re: HBase Design Ideas, Part I",
        "SENT_FROM":"Stefan Groschupf <sg@media-style.com>",
        "TAGS":"existence",
        "BODY":"see possibility described talk get key region form master ask next box key region etc distribute key region table set box case client cache load master hard alternative see chance request update given key get kind forward message returned client find region server host data given row key however since client need start master would lot load combination could interesting agree one memory backed together write cache need consulted search last checkpoint file case write also one log make sure lose data box crash cent stefan"
    },
    "43453":{
        "ID":307,
        "MESSAGE_ID":"1C4AA81B-4C69-42B0-8B40-E1598CCB8E77@media-style.com",
        "PARENT_ID":305.0,
        "SUBJECT":"Re: HBase Design Ideas, Part I",
        "SENT_FROM":"Stefan Groschupf <sg@media-style.com>",
        "TAGS":"existence",
        "BODY":"hi sound pretty much similar thinking used different term description much elegant hand written note comment playing around row run several problem using hadoop io package sequencereader writer optimal would cell writable rowkey cell key value sell blow disk usage alternative row writable one rowkey column key value case row many column scale bad example row key url column key user id value number click want get number click given url user need load value user well already posted mail issue may need writer seek first row key column key general agree sparse structure idea lock hregionserver level idea client take care replication mean write value server replicatins hregions would node send message request split master decide based heart beat message idea simply download data node read time locally write dfs since case write access slower needer fast read access idea case hregionserver may know new location least master informed getting forward message could faster get error try ask target sound great looking forward see working stefan"
    },
    "43454":{
        "ID":306,
        "MESSAGE_ID":"37AB4917-06E2-4781-8316-D6ABDDEA7F9B@yahoo-inc.com",
        "PARENT_ID":305.0,
        "SUBJECT":"Re: HBase Design Ideas, Part I",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"existence",
        "BODY":"seems like exporting lot complexity client find table chunk via dfs read lot data motion sync cache issue ask master block server key could distribute work hregionservers want stress master could kept fresh ram segmented get huge add complexity read design sound like might lot seek find record need scan log see key present best outline performance want look ram disk trade offs ie store everything btrees thrash disk store everything linearly store unmerged entry ram would different cost benefit"
    },
    "43455":{
        "ID":305,
        "MESSAGE_ID":"8a8b9f3f0605141500n6575b73dgca3b7965ca71b22f@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"HBase Design Ideas, Part I",
        "SENT_FROM":"\"Michael Cafarella\" <michael.cafarella@gmail.com>",
        "TAGS":"existence, property",
        "BODY":"hi everyone written design working little bit project call hbase idea hadoop implement something similar spirit bigtable distributed data store place greater emphasis scalability sql compatibility traditional transactional correctness bigtable neither completely described anywhere necessarily exactly want trying clone bigtable going draw lot personal view bigtable great physical layer yet great database system major thing lack good query language another freely admitted google people kind inter row locking going try solve problem would like hbase extendible enough easy add new query language primitive mail describe system pretty similar bigtable send second one describes might want change add please let know think thanks mike table semantics hbase consists one htables htable list row sorted alphabetically row name htable also series column row may may contain value column htable representation sparse row contain value given column storage overhead thus really schema htable every operation even adding column considered row centric operation current version row always available timestamped last modification date system may also store previous version row according htable configured update single row always atomic affect one column ii system layout htables partitionable contiguous row region called hregions machine pool run hregionserver given hregion served client single hregionserver single hregionserver may responsible many hregions hregions single htable scattered across arbitrary hregionservers client want add delete update row value must locate relevant hregionserver contact hregionserver communicates update may step mainly lock oriented one locating relevant hregionservers bare minimum hbase system repartition htable time example many repeated insert single location may cause single hregion grow large hbase would try split multiple hregions hregions may served hregionserver original may served different one hregionserver sends regular heartbeat hbasemaster machine heartbeat hregionserver fails hbasemaster responsible reassigning hregions available hregionservers hregions stored within dfs hregion always available even face machine failure hregionservers dfs datanodes run set machine would like hregionserver always serve data stored locally guaranteed using dfs encourage event insert motivated hregion move new hregionserver always create new dfs file new hregion dfs rule thumb allocate chunk locally hregionserver even machine failure anything similar instead hbasemaster ask dfs hint relevant file block stored possible allocate new hregions server physically contain hregion necessary could add api dfs demand block replication given node would like avoid possible mapping row hregion hence hregionserver stored special htable hbasemaster client allowed write htable special htable may split several hregions however allow hard coded number split level top level hierarchy must easily stored single machine top level table always served hbasemaster iii client behavior let think happens client want add row client must compute hregion responsible key want insert htable must navigate row hregion mapping stored htable client first contact hbasemaster top level table content step downward table set find mapping target row client contact hregionserver responsible target row asks insert hregionserver longer responsible relevant hregion return failure message tell client go back step find new correct hregionserver hregionserver right place go accepts new row client hregionserver guarantee insert atomic intermingle insert competing insert row key row stored hregionserver includes version timestamp information iv hregionserver maintaining data single hregion slightly complicated especially weird given write semantics dfs three important moving part hbackedstore file backed store row value never edited place tree like lookup finding row quickly hbackedstore actually series disk store store tuned certain object size thus small byte value row live within file medium one live separate file etc one hbackedstore single hregion hupdatelog log update hbackedstore backed disk file making read hbackedstore may necessary consult hupdatelog see recent update made may series hupdatelogs single hregion hupdatebuf memory version hupdatelog need consulted whenever performing read one hupdatebuf single hregion incoming edit first made directly hupdatebuf change made hupdatebuf volatile flushed hupdatelog rate flush admin configurable parameter periodically hbackedstore series current hupdatelogs merged form new hbackedstore point old hupdatelog object destroyed compaction process edits made hupdatebuf"
    },
    "43463":{
        "ID":297,
        "MESSAGE_ID":"C27FF99F-80CE-4877-A8AE-8CF38763E3A1@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [jira] Commented: (HADOOP-195) transfer map output transfer with http instead of rpc",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"yes course agree analysis"
    },
    "43492":{
        "ID":268,
        "MESSAGE_ID":"4452C171.7090709@archive.org",
        "PARENT_ID":null,
        "SUBJECT":"CrawlDbReducer and the lone STATUS_SIGNATURE record",
        "SENT_FROM":"\"stack@archive.org\" <stack@archive.org>",
        "TAGS":"not-ak",
        "BODY":"index src java org apache nutch crawl crawldbreducer java src java org apache nutch crawl crawldbreducer java revision src java org apache nutch crawl crawldbreducer java working copy import java util iterator import java io ioexception import java util logging import classpath import classpath import classpath merge new page entry existing entry public class crawldbreducer implement reducer public static final logger log logformatter getlogger classpath private int retrymax private crawldatum result new crawldatum result setnextfetchtime break case crawldatum status signature log warning lone crawldatum status signature key case crawldatum status fetch retry temporary failure old null result setsignature old getsignature use old signature break default throw new runtimeexception unknown status highest getstatus throw new runtimeexception unknown status highest getstatus key result setscore result getscore scoreincrement"
    },
    "43527":{
        "ID":233,
        "MESSAGE_ID":"007901c6676e$c1dbf880$561ea8c0@uk.houxou.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: map\/reduce writing benchmark",
        "SENT_FROM":"\"Monu Ogbe\" <monu.ogbe@richmondinformatics.com>",
        "TAGS":"not-ak",
        "BODY":"thank thank thank job completing fine monu ogbe original message owen malley sent friday april pm subject map reduce writing benchmark"
    },
    "43528":{
        "ID":232,
        "MESSAGE_ID":"1EFE2020-74F8-4495-8DA2-5BC40E3FDF28@yahoo-inc.com",
        "PARENT_ID":231.0,
        "SUBJECT":"Re: Hadoop vs. PVFS?",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"technology",
        "BODY":"pvfs going lot stable performant mature hadoop pretty young growing fast pvfs design point really caching layer permanent file system really mechanism deal kind regular hardware failure aiming handling hadoop using large number inexpensive machine data durability problem pvfs said today hard argue hdfs provide reliable data durability either month think serious advantage regard right think caching layer well one thing point use lot node"
    },
    "43529":{
        "ID":231,
        "MESSAGE_ID":"C06F90ED.2C90%chris.mattmann@jpl.nasa.gov",
        "PARENT_ID":null,
        "SUBJECT":"Hadoop vs. PVFS?",
        "SENT_FROM":"Chris Mattmann <chris.mattmann@jpl.nasa.gov>",
        "TAGS":"not-ak",
        "BODY":"hi folk anyone comparison hadoop pvfs even empirical advice advantage disadvantage one versus would great evaluating hadoop right job think really great easy understand however guy know much distributed file system ft picture also getting lot push job look pvfs since many release version etc idea thanks cheer chris"
    },
    "43532":{
        "ID":228,
        "MESSAGE_ID":"B0D0E99A-2E72-4E4C-AAB5-099F09C3FC09@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [jira] Commented: (HADOOP-141) Disk thrashing \/ task timeouts during map output copy phase",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"property",
        "BODY":"humm client timing getting data maybe long getting data reset timer maybe server fail client busy would let make informed decision"
    },
    "43545":{
        "ID":215,
        "MESSAGE_ID":"443FD2CC.8020704@duboce.net",
        "PARENT_ID":null,
        "SUBJECT":"NPE in FSNamesystem.internalReleaseCreate",
        "SENT_FROM":"Michael Stack <stack@duboce.net>",
        "TAGS":"not-ak",
        "BODY":"anyone else seeing java rmi remoteexception java io ioexception java lang nullpointerexception classpath fsnamesystem java classpath fsnamesystem java classpath namenode java sun reflect nativemethodaccessorimpl invoke native method sun reflect nativemethodaccessorimpl invoke nativemethodaccessorimpl java sun reflect delegatingmethodaccessorimpl invoke delegatingmethodaccessorimpl java java lang reflect method invoke method java classpath server call rpc java classpath handler run server java classpath client java classpath invoker invoke rpc java classpath proxy abandonfileinprogress unknown source classpath dfsoutputstream close dfsclient java java io filteroutputstream close filteroutputstream java java io filteroutputstream close filteroutputstream java java io filteroutputstream close filteroutputstream java classpath summer close fsdataoutputstream java java io filteroutputstream close filteroutputstream java java io filteroutputstream close filteroutputstream java java io filteroutputstream close filteroutputstream java classpath writer close sequencefile java classpath writer close mapfile java classpath close mapfileoutputformat java classpath reducetask java classpath child main tasktracker java"
    },
    "43559":{
        "ID":201,
        "MESSAGE_ID":"CCAAD593-012A-4EDF-B332-233DCFB3004A@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [jira] Commented: (HADOOP-129) FileSystem should not name files with java.io.File",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"change course nutch base upgrade"
    },
    "43578":{
        "ID":182,
        "MESSAGE_ID":"B117CDDF09DCE34A992927EE3581CA4C024A0AB1@hermes.laddersoffice.com",
        "PARENT_ID":null,
        "SUBJECT":"RE: code checker",
        "SENT_FROM":"\"Larry Ogrodnek\" <Lawrence@theladders.com>",
        "TAGS":"not-ak",
        "BODY":"checkstyle url also pretty neat coding style checker static code checker report unused import unnecessary modifier casting cyclomatic complexity etc might worth setting addition either pmd findbugs"
    },
    "43629":{
        "ID":131,
        "MESSAGE_ID":"39209b600603291817u2ba9fc25n@mail.gmail.com",
        "PARENT_ID":null,
        "SUBJECT":"Jobtracker trown IOException in windows cygwin",
        "SENT_FROM":"\"emanihc emanihc\" <emanihc@gmail.com>",
        "TAGS":"not-ak",
        "BODY":"start namenode datanode jobtracker tasktracker run nutch crawl command exception throwns jobtracker java io ioexception file user emanihc url url txt classpath inputformatbase ja va classpath jobinprogress java classpath jobinitthread run jobtracker java java lang thread run thread java server connection port exiting"
    },
    "43640":{
        "ID":120,
        "MESSAGE_ID":"FE497DFE-8349-4DBF-8C47-D4CCF2EB7E3A@yahoo-inc.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: [jira] Commented: (HADOOP-107) Namenode errors \"Failed to complete filename.crc  because dir.getFile()==null and null\"",
        "SENT_FROM":"Eric Baldeschwieler <eric14@yahoo-inc.com>",
        "TAGS":"not-ak",
        "BODY":"one able renew lease one renew lease seems like adding byte block seems brittle something cpu intensive produce output want system timeout potentially throw lot work"
    },
    "43658":{
        "ID":102,
        "MESSAGE_ID":"4417CCAC.5060306@getopt.org",
        "PARENT_ID":null,
        "SUBJECT":"Re: [jira] Commented: (HADOOP-80) binary key",
        "SENT_FROM":"Andrzej Bialecki <ab@getopt.org>",
        "TAGS":"not-ak",
        "BODY":"owen malley jira wrote find fnv hash implementation url apache license computationally similar complexity hashing scheme give much better distribution perhaps worth try best regard andrzej bialecki information retrieval semantic web embedded unix system integration url contact info sigram dot com"
    },
    "43680":{
        "ID":80,
        "MESSAGE_ID":"82029F61-2FFF-4B95-886E-00818CC1F775@media-style.com",
        "PARENT_ID":73.0,
        "SUBJECT":"Re: hidden classes in package mapred and dfs",
        "SENT_FROM":"Marko Bauhardt <mb@media-style.com>",
        "TAGS":"not-ak",
        "BODY":"um schrieb doug cutting work nutch gui would great access class statistic datanodes tasktracker job etc would nice marko"
    },
    "43685":{
        "ID":75,
        "MESSAGE_ID":"79A5C7F5-94B4-4562-8188-5CF9E7CA4212@media-style.com",
        "PARENT_ID":73.0,
        "SUBJECT":"Re: hidden classes in package mapred and dfs",
        "SENT_FROM":"Stefan Groschupf <sg@media-style.com>",
        "TAGS":"not-ak",
        "BODY":"doug um schrieb doug cutting dfs infoserver ala jobtrackerinfo server sound like good reason url stefan"
    },
    "43687":{
        "ID":73,
        "MESSAGE_ID":"440DD459.9030005@apache.org",
        "PARENT_ID":71.0,
        "SUBJECT":"Re: hidden classes in package mapred and dfs",
        "SENT_FROM":"Doug Cutting <cutting@apache.org>",
        "TAGS":"not-ak",
        "BODY":"marko bauhardt wrote implementation class use required outside package need access good reason add public apis support use doug"
    },
    "43689":{
        "ID":71,
        "MESSAGE_ID":"76202F75-7B65-407F-A9B7-5BC92B116A7C@media-style.com",
        "PARENT_ID":null,
        "SUBJECT":"hidden classes in package mapred and dfs",
        "SENT_FROM":"Marko Bauhardt <mb@media-style.com>",
        "TAGS":"not-ak",
        "BODY":"hi noticed class like datanodeinfo dfsclient distributedfilesystem incl method getclient jobinprogress jobprofile jobstatus jobtrackerinfoserver tasktrackerstatus hidden class outside package mapred dfs exists specified reason class hidden marko"
    },
    "43690":{
        "ID":70,
        "MESSAGE_ID":"44075E24.2050702@getopt.org",
        "PARENT_ID":null,
        "SUBJECT":"Re: svn commit: r382511 - in \/lucene\/hadoop\/trunk\/lib: lucene-core-1.9-final.jar lucene-core-1.9.1.jar",
        "SENT_FROM":"Andrzej Bialecki <ab@getopt.org>",
        "TAGS":"existence, technology",
        "BODY":"cutting apache org wrote wonder need lucene hadoop dependency noticed priorityqueue perhaps would easier copy class hadoop best regard andrzej bialecki information retrieval semantic web embedded unix system integration url contact info sigram dot com"
    },
    "43697":{
        "ID":63,
        "MESSAGE_ID":"200602241510343.SM01924@tim",
        "PARENT_ID":null,
        "SUBJECT":"Load Balancing?",
        "SENT_FROM":"\"Tim Patton\" <tpatton@dealcatcher.com>",
        "TAGS":"property",
        "BODY":"sorry post dev list user list seem get traffic going code trying figure hadoop would load balance among machine specifically two type task one high cpu one low cpu make sure machine getting bogged assigned many high cpu task sitting idle could running low cpu task suppose question could asked high low ram usage well looking nutch source code appears fetch process first index could done parallel tim"
    },
    "43717":{
        "ID":43,
        "MESSAGE_ID":"A74E6B0E-2D64-4563-8E9C-571A78F6096D@ehatchersolutions.com",
        "PARENT_ID":null,
        "SUBJECT":"Re: svn commit: r377463 - \/lucene\/hadoop\/trunk\/build.xml",
        "SENT_FROM":"Erik Hatcher <erik@ehatchersolutions.com>",
        "TAGS":"not-ak",
        "BODY":"tidbit ant trivia value exact string assignment however variant work better directory reference using location string value property prop becomes absolute path src java resolved relative base directory ant project top level element specify basedir attribute need different location build xml basedir value relative often seen basedir specify relative path resolved parent directory erik"
    },
    "43743":{
        "ID":17,
        "MESSAGE_ID":"43EBD145.6050502@apache.org",
        "PARENT_ID":13.0,
        "SUBJECT":"Re: svn commit: r376449 - \/lucene\/hadoop\/trunk\/src\/java\/org\/apache\/hadoop\/mapred\/TaskRunner.java",
        "SENT_FROM":"Doug Cutting <cutting@apache.org>",
        "TAGS":"not-ak",
        "BODY":"andrzej bialecki wrote yes make sense trying quickly fix bug task would hang jar contained entry twice would indeed better solution doug"
    }
}